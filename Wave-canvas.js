/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={28:(t,e,n)=>{"use strict";var i=n(645);n.n(i)()((function(t){return t[1]})).push([t.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n}\n",""])},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,i){"string"==typeof t&&(t=[[null,t,""]]);var r={};if(i)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(r[s]=!0)}for(var o=0;o<t.length;o++){var c=[].concat(t[o]);i&&r[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},270:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n\nvoid main() {\n  vec4 texture = texture2D(uTexture, vUv);\n  gl_FragColor = texture;\n}"},343:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform float uTime;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v) {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n  \n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n  \n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n  \n  // Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n           \n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n  \n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  \n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main() {\n  vUv = uv;\n\n  vec3 pos = position;\n  float noiseFreq = 1.5;\n  float noiseAmp = 0.15; \n  vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n  pos.z += snoise(noisePos) * noiseAmp;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);\n}"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return t[i](a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";n(28);const t=100,e=1e3,i=1001,r=1002,a=1003,s=1006,o=1008,c=1012,l=1014,h=1015,u=1016,d=1020,p=1022,f=1023,m=1026,g=1027,v=2300,y=2301,x=2302,_=2400,w=2401,b=2402,M=3e3,S=7680,A=35044,E=35048,T="300 es";function L(){}Object.assign(L.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}});const R=[];for(let t=0;t<256;t++)R[t]=(t<16?"0":"")+t.toString(16);let C=1234567;const P={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(R[255&t]+R[t>>8&255]+R[t>>16&255]+R[t>>24&255]+"-"+R[255&e]+R[e>>8&255]+"-"+R[e>>16&15|64]+R[e>>24&255]+"-"+R[63&n|128]+R[n>>8&255]+"-"+R[n>>16&255]+R[n>>24&255]+R[255&i]+R[i>>8&255]+R[i>>16&255]+R[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return P.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(P.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(C=t%2147483647),C=16807*C%2147483647,(C-1)/2147483646},degToRad:function(t){return t*P.DEG2RAD},radToDeg:function(t){return t*P.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const a=Math.cos,s=Math.sin,o=a(n/2),c=s(n/2),l=a((e+i)/2),h=s((e+i)/2),u=a((e-i)/2),d=s((e-i)/2),p=a((i-e)/2),f=s((i-e)/2);switch(r){case"XYX":t.set(o*h,c*u,c*d,o*l);break;case"YZY":t.set(c*d,o*h,c*u,o*l);break;case"ZXZ":t.set(c*u,c*d,o*h,o*l);break;case"XZX":t.set(o*h,c*f,c*p,o*l);break;case"YXY":t.set(c*p,o*h,c*f,o*l);break;case"ZYZ":t.set(c*f,c*p,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class D{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}D.prototype.isVector2=!0;class I{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=r,l[5]=o,l[6]=n,l[7]=a,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],w=i[5],b=i[8];return r[0]=a*f+s*v+o*_,r[3]=a*m+s*y+o*w,r[6]=a*g+s*x+o*b,r[1]=c*f+l*v+h*_,r[4]=c*m+l*y+h*w,r[7]=c*g+l*x+h*b,r[2]=u*f+d*v+p*_,r[5]=u*m+d*y+p*w,r[8]=u*g+d*x+p*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],c=t[7],l=t[8];return e*a*l-e*s*c-n*r*l+n*s*o+i*r*c-i*a*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=l*a-s*c,u=s*o-l*r,d=c*r-a*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*c-l*n)*f,t[2]=(s*n-i*a)*f,t[3]=u*f,t[4]=(l*e-i*o)*f,t[5]=(i*r-s*e)*f,t[6]=d*f,t[7]=(n*o-c*e)*f,t[8]=(a*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),c=Math.sin(r);return this.set(n*o,n*c,-n*(o*a+c*s)+a+t,-i*c,i*o,-i*(-c*a+o*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],c=i[4],l=i[7];return i[0]=e*r+n*o,i[3]=e*a+n*c,i[6]=e*s+n*l,i[1]=-n*r+e*o,i[4]=-n*a+e*c,i[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let N;I.prototype.isMatrix3=!0;const O={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===N&&(N=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),N.width=t.width,N.height=t.height;const n=N.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=N}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}};let z=0;class B extends L{constructor(t=B.DEFAULT_IMAGE,e=B.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,o=1009,c=1,l=3e3){super(),Object.defineProperty(this,"id",{value:z++}),this.uuid=P.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=o,this.offset=new D(0,0),this.repeat=new D(1,1),this.center=new D(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new I,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=P.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(H(i[t].image)):e.push(H(i[t]))}else e=H(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case e:t.x=t.x-Math.floor(t.x);break;case i:t.x=t.x<0?0:1;break;case r:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case e:t.y=t.y-Math.floor(t.y);break;case i:t.y=t.y<0?0:1;break;case r:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function H(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?O.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}B.DEFAULT_IMAGE=void 0,B.DEFAULT_MAPPING=300,B.prototype.isTexture=!0;class F{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=.01,s=.1,o=t.elements,c=o[0],l=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(l-u)<a&&Math.abs(h-f)<a&&Math.abs(p-m)<a){if(Math.abs(l+u)<s&&Math.abs(h+f)<s&&Math.abs(p+m)<s&&Math.abs(c+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(c+1)/2,o=(d+1)/2,v=(g+1)/2,y=(l+u)/4,x=(h+f)/4,_=(p+m)/4;return t>o&&t>v?t<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=y/n,r=x/n):o>v?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=y/i,r=_/i):v<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=x/r,i=_/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-l)*(u-l));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-l)/v,this.w=Math.acos((c+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}F.prototype.isVector4=!0;class U extends L{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new F(0,0,t,e),this.scissorTest=!1,this.viewport=new F(0,0,t,e),n=n||{},this.texture=new B(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:s,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}U.prototype.isWebGLRenderTarget=!0,class extends U{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}.prototype.isWebGLMultisampleRenderTarget=!0;class G{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s)return t[e+0]=o,t[e+1]=c,t[e+2]=l,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||c!==d||l!==p){let t=1-s;const e=o*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+u*r,c=c*t+d*r,l=l*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(o*o+c*c+l*l+h*h);o*=t,c*=t,l*=t,h*=t}}t[e]=o,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],c=n[i+2],l=n[i+3],h=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return t[e]=s*p+l*h+o*d-c*u,t[e+1]=o*p+l*u+c*h-s*d,t[e+2]=c*p+l*d+s*u-o*h,t[e+3]=l*p-s*h-o*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,c=s(n/2),l=s(i/2),h=s(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],c=e[2],l=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-o)*t,this._y=(r-c)*t,this._z=(a-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(l-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+c)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-c)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+l)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(a-i)/t,this._x=(r+c)/t,this._y=(o+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(P.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,c=e._z,l=e._w;return this._x=n*l+a*s+i*c-r*o,this._y=i*l+a*o+r*s-n*c,this._z=r*l+a*c+n*o-i*s,this._w=a*l-n*s-i*o-r*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(o),l=Math.atan2(c,s),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}G.prototype.isQuaternion=!0;class k{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(W.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(W.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,c=o*e+a*i-s*n,l=o*n+s*e-r*i,h=o*i+r*n-a*e,u=-r*e-a*n-s*i;return this.x=c*o+u*-r+l*-s-h*-a,this.y=l*o+u*-a+h*-r-c*-s,this.z=h*o+u*-s+c*-a-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return V.copy(this).projectOnVector(t),this.sub(V)}reflect(t){return this.sub(V.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(P.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}k.prototype.isVector3=!0;const V=new k,W=new G;class q{constructor(t=new k(1/0,1/0,1/0),e=new k(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,c=t.length;o<c;o+=3){const c=t[o],l=t[o+1],h=t[o+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>a&&(a=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,c=t.count;o<c;o++){const c=t.getX(o),l=t.getY(o),h=t.getZ(o);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>a&&(a=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=X.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new k),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new k),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Z.copy(e.boundingBox),Z.applyMatrix4(t.matrixWorld),this.union(Z));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new k),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,X),X.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(et),nt.subVectors(this.max,et),Y.subVectors(t.a,et),J.subVectors(t.b,et),Q.subVectors(t.c,et),K.subVectors(J,Y),$.subVectors(Q,J),tt.subVectors(Y,Q);let e=[0,-K.z,K.y,0,-$.z,$.y,0,-tt.z,tt.y,K.z,0,-K.x,$.z,0,-$.x,tt.z,0,-tt.x,-K.y,K.x,0,-$.y,$.x,0,-tt.y,tt.x,0];return!!at(e,Y,J,Q,nt)&&(e=[1,0,0,0,1,0,0,0,1],!!at(e,Y,J,Q,nt)&&(it.crossVectors(K,$),e=[it.x,it.y,it.z],at(e,Y,J,Q,nt)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new k),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return X.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(X).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(j[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),j[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),j[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),j[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),j[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),j[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),j[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),j[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(j)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}q.prototype.isBox3=!0;const j=[new k,new k,new k,new k,new k,new k,new k,new k],X=new k,Z=new q,Y=new k,J=new k,Q=new k,K=new k,$=new k,tt=new k,et=new k,nt=new k,it=new k,rt=new k;function at(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){rt.fromArray(t,a);const s=r.x*Math.abs(rt.x)+r.y*Math.abs(rt.y)+r.z*Math.abs(rt.z),o=e.dot(rt),c=n.dot(rt),l=i.dot(rt);if(Math.max(-Math.max(o,c,l),Math.min(o,c,l))>s)return!1}return!0}const st=new q,ot=new k,ct=new k,lt=new k;class ht{constructor(t=new k,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):st.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new k),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new q),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){lt.subVectors(t,this.center);const e=lt.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(lt.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return ct.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(ot.copy(t.center).add(ct)),this.expandByPoint(ot.copy(t.center).sub(ct)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ut=new k,dt=new k,pt=new k,ft=new k,mt=new k,gt=new k,vt=new k;class yt{constructor(t=new k,e=new k(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new k),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ut)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new k),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ut.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ut.copy(this.direction).multiplyScalar(e).add(this.origin),ut.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){dt.copy(t).add(e).multiplyScalar(.5),pt.copy(e).sub(t).normalize(),ft.copy(this.origin).sub(dt);const r=.5*t.distanceTo(e),a=-this.direction.dot(pt),s=ft.dot(this.direction),o=-ft.dot(pt),c=ft.lengthSq(),l=Math.abs(1-a*a);let h,u,d,p;if(l>0)if(h=a*o-s,u=a*s-o,p=r*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;h*=t,u*=t,d=h*(h+a*u+2*s)+u*(a*h+u+2*o)+c}else u=r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+c;else u=-r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+c;else u<=-p?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+c):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+c):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+c);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(pt).multiplyScalar(u).add(dt),d}intersectSphere(t,e){ut.subVectors(t.center,this.origin);const n=ut.dot(this.direction),i=ut.dot(ut)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,s,o;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(r=(t.min.y-u.y)*l,a=(t.max.y-u.y)*l):(r=(t.max.y-u.y)*l,a=(t.min.y-u.y)*l),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,ut)}intersectTriangle(t,e,n,i,r){mt.subVectors(e,t),gt.subVectors(n,t),vt.crossVectors(mt,gt);let a,s=this.direction.dot(vt);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}ft.subVectors(this.origin,t);const o=a*this.direction.dot(gt.crossVectors(ft,gt));if(o<0)return null;const c=a*this.direction.dot(mt.cross(ft));if(c<0)return null;if(o+c>s)return null;const l=-a*ft.dot(vt);return l<0?null:this.at(l/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class xt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new xt).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/_t.setFromMatrixColumn(t,0).length(),r=1/_t.setFromMatrixColumn(t,1).length(),a=1/_t.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*l,n=a*h,i=s*l,r=s*h;e[0]=o*l,e[4]=-o*h,e[8]=c,e[1]=n+i*c,e[5]=t-r*c,e[9]=-s*o,e[2]=r-t*c,e[6]=i+n*c,e[10]=a*o}else if("YXZ"===t.order){const t=o*l,n=o*h,i=c*l,r=c*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*c,e[1]=a*h,e[5]=a*l,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*l,n=o*h,i=c*l,r=c*h;e[0]=t-r*s,e[4]=-a*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*l,e[9]=r-t*s,e[2]=-a*c,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*l,n=a*h,i=s*l,r=s*h;e[0]=o*l,e[4]=i*c-n,e[8]=t*c+r,e[1]=o*h,e[5]=r*c+t,e[9]=n*c-i,e[2]=-c,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*c,i=s*o,r=s*c;e[0]=o*l,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=a*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=a*o,n=a*c,i=s*o,r=s*c;e[0]=o*l,e[4]=-h,e[8]=c*l,e[1]=t*h+r,e[5]=a*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*l,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(bt,t,Mt)}lookAt(t,e,n){const i=this.elements;return Et.subVectors(t,e),0===Et.lengthSq()&&(Et.z=1),Et.normalize(),St.crossVectors(n,Et),0===St.lengthSq()&&(1===Math.abs(n.z)?Et.x+=1e-4:Et.z+=1e-4,Et.normalize(),St.crossVectors(n,Et)),St.normalize(),At.crossVectors(Et,St),i[0]=St.x,i[4]=At.x,i[8]=Et.x,i[1]=St.y,i[5]=At.y,i[9]=Et.y,i[2]=St.z,i[6]=At.z,i[10]=Et.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],w=i[0],b=i[4],M=i[8],S=i[12],A=i[1],E=i[5],T=i[9],L=i[13],R=i[2],C=i[6],P=i[10],D=i[14],I=i[3],N=i[7],O=i[11],z=i[15];return r[0]=a*w+s*A+o*R+c*I,r[4]=a*b+s*E+o*C+c*N,r[8]=a*M+s*T+o*P+c*O,r[12]=a*S+s*L+o*D+c*z,r[1]=l*w+h*A+u*R+d*I,r[5]=l*b+h*E+u*C+d*N,r[9]=l*M+h*T+u*P+d*O,r[13]=l*S+h*L+u*D+d*z,r[2]=p*w+f*A+m*R+g*I,r[6]=p*b+f*E+m*C+g*N,r[10]=p*M+f*T+m*P+g*O,r[14]=p*S+f*L+m*D+g*z,r[3]=v*w+y*A+x*R+_*I,r[7]=v*b+y*E+x*C+_*N,r[11]=v*M+y*T+x*P+_*O,r[15]=v*S+y*L+x*D+_*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*c*h-r*s*u+n*c*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*c*u+r*a*u-i*a*d+i*c*l-r*o*l)+t[11]*(+e*c*h-e*s*d-r*a*h+n*a*d+r*s*l-n*c*l)+t[15]*(-i*s*l-e*o*h+e*s*u+i*a*h-n*a*u+n*o*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*c-f*u*c+f*o*d-s*m*d-h*o*g+s*u*g,y=p*u*c-l*m*c-p*o*d+a*m*d+l*o*g-a*u*g,x=l*f*c-p*h*c+p*s*d-a*f*d-l*s*g+a*h*g,_=p*h*o-l*f*o-p*s*u+a*f*u+l*s*m-a*h*m,w=e*v+n*y+i*x+r*_;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/w;return t[0]=v*b,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*b,t[2]=(s*m*r-f*o*r+f*i*c-n*m*c-s*i*g+n*o*g)*b,t[3]=(h*o*r-s*u*r-h*i*c+n*u*c+s*i*d-n*o*d)*b,t[4]=y*b,t[5]=(l*m*r-p*u*r+p*i*d-e*m*d-l*i*g+e*u*g)*b,t[6]=(p*o*r-a*m*r-p*i*c+e*m*c+a*i*g-e*o*g)*b,t[7]=(a*u*r-l*o*r+l*i*c-e*u*c-a*i*d+e*o*d)*b,t[8]=x*b,t[9]=(p*h*r-l*f*r-p*n*d+e*f*d+l*n*g-e*h*g)*b,t[10]=(a*f*r-p*s*r+p*n*c-e*f*c-a*n*g+e*s*g)*b,t[11]=(l*s*r-a*h*r-l*n*c+e*h*c+a*n*d-e*s*d)*b,t[12]=_*b,t[13]=(l*f*i-p*h*i+p*n*u-e*f*u-l*n*m+e*h*m)*b,t[14]=(p*s*i-a*f*i-p*n*o+e*f*o+a*n*m-e*s*m)*b,t[15]=(a*h*i-l*s*i+l*n*o-e*h*o-a*n*u+e*s*u)*b,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,c=r*a,l=r*s;return this.set(c*a+n,c*s-i*o,c*o+i*s,0,c*s+i*o,l*s+n,l*o-i*a,0,c*o-i*s,l*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,c=r+r,l=a+a,h=s+s,u=r*c,d=r*l,p=r*h,f=a*l,m=a*h,g=s*h,v=o*c,y=o*l,x=o*h,_=n.x,w=n.y,b=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*w,i[5]=(1-(u+g))*w,i[6]=(m+v)*w,i[7]=0,i[8]=(p+y)*b,i[9]=(m-v)*b,i[10]=(1-(u+f))*b,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=_t.set(i[0],i[1],i[2]).length();const a=_t.set(i[4],i[5],i[6]).length(),s=_t.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],wt.copy(this);const o=1/r,c=1/a,l=1/s;return wt.elements[0]*=o,wt.elements[1]*=o,wt.elements[2]*=o,wt.elements[4]*=c,wt.elements[5]*=c,wt.elements[6]*=c,wt.elements[8]*=l,wt.elements[9]*=l,wt.elements[10]*=l,e.setFromRotationMatrix(wt),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*r/(e-t),c=2*r/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(a+r)/(a-r),d=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,a){const s=this.elements,o=1/(e-t),c=1/(n-i),l=1/(a-r),h=(e+t)*o,u=(n+i)*c,d=(a+r)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}xt.prototype.isMatrix4=!0;const _t=new k,wt=new xt,bt=new k(0,0,0),Mt=new k(1,1,1),St=new k,At=new k,Et=new k,Tt=new xt,Lt=new G;class Rt{constructor(t=0,e=0,n=0,i=Rt.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=P.clamp,r=t.elements,a=r[0],s=r[4],o=r[8],c=r[1],l=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,a),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,a));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Tt.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Tt,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Lt.setFromEuler(this),this.setFromQuaternion(Lt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new k(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Rt.prototype.isEuler=!0,Rt.DefaultOrder="XYZ",Rt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ct{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Pt=0;const Dt=new k,It=new G,Nt=new xt,Ot=new k,zt=new k,Bt=new k,Ht=new G,Ft=new k(1,0,0),Ut=new k(0,1,0),Gt=new k(0,0,1),kt={type:"added"},Vt={type:"removed"};function Wt(){Object.defineProperty(this,"id",{value:Pt++}),this.uuid=P.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Wt.DefaultUp.clone();const t=new k,e=new Rt,n=new G,i=new k(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new xt},normalMatrix:{value:new I}}),this.matrix=new xt,this.matrixWorld=new xt,this.matrixAutoUpdate=Wt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Ct,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Wt.DefaultUp=new k(0,1,0),Wt.DefaultMatrixAutoUpdate=!0,Wt.prototype=Object.assign(Object.create(L.prototype),{constructor:Wt,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return It.setFromAxisAngle(t,e),this.quaternion.multiply(It),this},rotateOnWorldAxis:function(t,e){return It.setFromAxisAngle(t,e),this.quaternion.premultiply(It),this},rotateX:function(t){return this.rotateOnAxis(Ft,t)},rotateY:function(t){return this.rotateOnAxis(Ut,t)},rotateZ:function(t){return this.rotateOnAxis(Gt,t)},translateOnAxis:function(t,e){return Dt.copy(t).applyQuaternion(this.quaternion),this.position.add(Dt.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Ft,t)},translateY:function(t){return this.translateOnAxis(Ut,t)},translateZ:function(t){return this.translateOnAxis(Gt,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Nt.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?Ot.copy(t):Ot.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),zt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Nt.lookAt(zt,Ot,this.up):Nt.lookAt(Ot,zt,this.up),this.quaternion.setFromRotationMatrix(Nt),i&&(Nt.extractRotation(i.matrixWorld),It.setFromRotationMatrix(Nt),this.quaternion.premultiply(It.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(kt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Vt)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Vt)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),Nt.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Nt.multiply(t.parent.matrixWorld)),t.applyMatrix4(Nt),this.add(t),t.updateWorldMatrix(!1,!0),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new k),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new G),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zt,t,Bt),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new k),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zt,Ht,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new k),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes),c=a(t.skeletons),l=a(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const qt=new k,jt=new k,Xt=new I;class Zt{constructor(t=new k(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=qt.subVectors(n,e).cross(jt.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new k),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new k);const n=t.delta(qt),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new k),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Xt.getNormalMatrix(t),i=this.coplanarPoint(qt).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Zt.prototype.isPlane=!0;const Yt=new k,Jt=new k,Qt=new k,Kt=new k,$t=new k,te=new k,ee=new k,ne=new k,ie=new k,re=new k;class ae{constructor(t=new k,e=new k,n=new k){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new k),i.subVectors(n,e),Yt.subVectors(t,e),i.cross(Yt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Yt.subVectors(i,e),Jt.subVectors(n,e),Qt.subVectors(t,e);const a=Yt.dot(Yt),s=Yt.dot(Jt),o=Yt.dot(Qt),c=Jt.dot(Jt),l=Jt.dot(Qt),h=a*c-s*s;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new k),0===h)return r.set(-2,-1,-1);const u=1/h,d=(c*o-s*l)*u,p=(a*l-s*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Kt),Kt.x>=0&&Kt.y>=0&&Kt.x+Kt.y<=1}static getUV(t,e,n,i,r,a,s,o){return this.getBarycoord(t,e,n,i,Kt),o.set(0,0),o.addScaledVector(r,Kt.x),o.addScaledVector(a,Kt.y),o.addScaledVector(s,Kt.z),o}static isFrontFacing(t,e,n,i){return Yt.subVectors(n,e),Jt.subVectors(t,e),Yt.cross(Jt).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Yt.subVectors(this.c,this.b),Jt.subVectors(this.a,this.b),.5*Yt.cross(Jt).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new k),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ae.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Zt),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ae.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return ae.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return ae.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ae.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new k);const n=this.a,i=this.b,r=this.c;let a,s;$t.subVectors(i,n),te.subVectors(r,n),ne.subVectors(t,n);const o=$t.dot(ne),c=te.dot(ne);if(o<=0&&c<=0)return e.copy(n);ie.subVectors(t,i);const l=$t.dot(ie),h=te.dot(ie);if(l>=0&&h<=l)return e.copy(i);const u=o*h-l*c;if(u<=0&&o>=0&&l<=0)return a=o/(o-l),e.copy(n).addScaledVector($t,a);re.subVectors(t,r);const d=$t.dot(re),p=te.dot(re);if(p>=0&&d<=p)return e.copy(r);const f=d*c-o*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),e.copy(n).addScaledVector(te,s);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return ee.subVectors(r,i),s=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(ee,s);const g=1/(m+f+u);return a=f*g,s=u*g,e.copy(n).addScaledVector($t,a).addScaledVector(te,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let se=0;function oe(){Object.defineProperty(this,"id",{value:se++}),this.uuid=P.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=t,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=S,this.stencilZFail=S,this.stencilZPass=S,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}oe.prototype=Object.assign(Object.create(L.prototype),{constructor:oe,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(oe.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const ce={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},le={h:0,s:0,l:0},he={h:0,s:0,l:0};function ue(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function de(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function pe(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class fe{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=P.euclideanModulo(t,1),e=P.clamp(e,0,1),n=P.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=ue(r,i,t+1/3),this.g=ue(r,i,t),this.b=ue(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=ce[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=de(t.r),this.g=de(t.g),this.b=de(t.b),this}copyLinearToSRGB(t){return this.r=pe(t.r),this.g=pe(t.g),this.b=pe(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i);let s,o;const c=(a+r)/2;if(a===r)s=0,o=0;else{const t=r-a;switch(o=c<=.5?t/(r+a):t/(2-r-a),r){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=o,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(le),le.h+=t,le.s+=e,le.l+=n,this.setHSL(le.h,le.s,le.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(le),t.getHSL(he);const n=P.lerp(le.h,he.h,e),i=P.lerp(le.s,he.s,e),r=P.lerp(le.l,he.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}fe.NAMES=ce,fe.prototype.isColor=!0,fe.prototype.r=1,fe.prototype.g=1,fe.prototype.b=1;class me extends oe{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}me.prototype.isMeshBasicMaterial=!0;const ge=new k,ve=new D;function ye(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=A,this.updateRange={offset:0,count:-1},this.version=0}function xe(t,e,n){ye.call(this,new Int8Array(t),e,n)}function _e(t,e,n){ye.call(this,new Uint8Array(t),e,n)}function we(t,e,n){ye.call(this,new Uint8ClampedArray(t),e,n)}function be(t,e,n){ye.call(this,new Int16Array(t),e,n)}function Me(t,e,n){ye.call(this,new Uint16Array(t),e,n)}function Se(t,e,n){ye.call(this,new Int32Array(t),e,n)}function Ae(t,e,n){ye.call(this,new Uint32Array(t),e,n)}function Ee(t,e,n){ye.call(this,new Uint16Array(t),e,n)}function Te(t,e,n){ye.call(this,new Float32Array(t),e,n)}function Le(t,e,n){ye.call(this,new Float64Array(t),e,n)}function Re(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty(ye.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ye.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new fe),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new D),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new k),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new F),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)ve.fromBufferAttribute(this,e),ve.applyMatrix3(t),this.setXY(e,ve.x,ve.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ge.fromBufferAttribute(this,e),ge.applyMatrix3(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)ge.x=this.getX(e),ge.y=this.getY(e),ge.z=this.getZ(e),ge.applyMatrix4(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)ge.x=this.getX(e),ge.y=this.getY(e),ge.z=this.getZ(e),ge.applyNormalMatrix(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)ge.x=this.getX(e),ge.y=this.getY(e),ge.z=this.getZ(e),ge.transformDirection(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==A&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}),xe.prototype=Object.create(ye.prototype),xe.prototype.constructor=xe,_e.prototype=Object.create(ye.prototype),_e.prototype.constructor=_e,we.prototype=Object.create(ye.prototype),we.prototype.constructor=we,be.prototype=Object.create(ye.prototype),be.prototype.constructor=be,Me.prototype=Object.create(ye.prototype),Me.prototype.constructor=Me,Se.prototype=Object.create(ye.prototype),Se.prototype.constructor=Se,Ae.prototype=Object.create(ye.prototype),Ae.prototype.constructor=Ae,Ee.prototype=Object.create(ye.prototype),Ee.prototype.constructor=Ee,Ee.prototype.isFloat16BufferAttribute=!0,Te.prototype=Object.create(ye.prototype),Te.prototype.constructor=Te,Le.prototype=Object.create(ye.prototype),Le.prototype.constructor=Le,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let Ce=0;const Pe=new xt,De=new Wt,Ie=new k,Ne=new q,Oe=new q,ze=new k;function Be(){Object.defineProperty(this,"id",{value:Ce++}),this.uuid=P.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Be.prototype=Object.assign(Object.create(L.prototype),{constructor:Be,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(Re(t)>65535?Ae:Me)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new I).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Pe.makeRotationX(t),this.applyMatrix4(Pe),this},rotateY:function(t){return Pe.makeRotationY(t),this.applyMatrix4(Pe),this},rotateZ:function(t){return Pe.makeRotationZ(t),this.applyMatrix4(Pe),this},translate:function(t,e,n){return Pe.makeTranslation(t,e,n),this.applyMatrix4(Pe),this},scale:function(t,e,n){return Pe.makeScale(t,e,n),this.applyMatrix4(Pe),this},lookAt:function(t){return De.lookAt(t),De.updateMatrix(),this.applyMatrix4(De.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ie).negate(),this.translate(Ie.x,Ie.y,Ie.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Te(e,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new q);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new k(-1/0,-1/0,-1/0),new k(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ne.setFromBufferAttribute(n),this.morphTargetsRelative?(ze.addVectors(this.boundingBox.min,Ne.min),this.boundingBox.expandByPoint(ze),ze.addVectors(this.boundingBox.max,Ne.max),this.boundingBox.expandByPoint(ze)):(this.boundingBox.expandByPoint(Ne.min),this.boundingBox.expandByPoint(Ne.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ht);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new k,1/0);if(t){const n=this.boundingSphere.center;if(Ne.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Oe.setFromBufferAttribute(n),this.morphTargetsRelative?(ze.addVectors(Ne.min,Oe.min),Ne.expandByPoint(ze),ze.addVectors(Ne.max,Oe.max),Ne.expandByPoint(ze)):(Ne.expandByPoint(Oe.min),Ne.expandByPoint(Oe.max))}Ne.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)ze.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(ze));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)ze.fromBufferAttribute(a,e),s&&(Ie.fromBufferAttribute(t,e),ze.add(Ie)),i=Math.max(i,n.distanceToSquared(ze))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,r=e.normal.array,a=e.uv.array,s=i.length/3;void 0===e.tangent&&this.setAttribute("tangent",new ye(new Float32Array(4*s),4));const o=e.tangent.array,c=[],l=[];for(let t=0;t<s;t++)c[t]=new k,l[t]=new k;const h=new k,u=new k,d=new k,p=new D,f=new D,m=new D,g=new k,v=new k;function y(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(a,2*t),f.fromArray(a,2*e),m.fromArray(a,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const r=1/(f.x*m.y-m.x*f.y);isFinite(r)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(r),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(r),c[t].add(g),c[e].add(g),c[n].add(g),l[t].add(v),l[e].add(v),l[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)y(n[t+0],n[t+1],n[t+2])}const _=new k,w=new k,b=new k,M=new k;function S(t){b.fromArray(r,3*t),M.copy(b);const e=c[t];_.copy(e),_.sub(b.multiplyScalar(b.dot(e))).normalize(),w.crossVectors(M,e);const n=w.dot(l[t])<0?-1:1;o[4*t]=_.x,o[4*t+1]=_.y,o[4*t+2]=_.z,o[4*t+3]=n}for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new ye(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new k,r=new k,a=new k,s=new k,o=new k,c=new k,l=new k,h=new k;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,f),l.subVectors(a,r),h.subVectors(i,r),l.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(l),o.add(l),c.add(l),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),l.subVectors(a,r),h.subVectors(i,r),l.cross(h),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,a=t.attributes[i],s=a.array,o=a.itemSize*e,c=Math.min(s.length,r.length-o);for(let t=0,e=o;t<c;t++,e++)r[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ze.fromBufferAttribute(t,e),ze.normalize(),t.setXYZ(e,ze.x,ze.y,ze.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let t=0,r=e.length;t<r;t++){s=e[t]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new ye(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Be,n=this.index.array,i=this.attributes;for(const r in i){const a=t(i[r],n);e.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);a.push(i)}e.morphAttributes[i]=a}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,n=a.length;t<n;t++){const n=a[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],a=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];a.push(i.toJSON(t.data))}a.length>0&&(i[e]=a,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new Be).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let t=0,e=a.length;t<e;t++){const e=a[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const He=new xt,Fe=new yt,Ue=new ht,Ge=new k,ke=new k,Ve=new k,We=new k,qe=new k,je=new k,Xe=new k,Ze=new k,Ye=new k,Je=new D,Qe=new D,Ke=new D,$e=new k,tn=new k;function en(t=new Be,e=new me){Wt.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function nn(t,e,n,i,r,a,s,o,c,l,h,u){Ge.fromBufferAttribute(r,l),ke.fromBufferAttribute(r,h),Ve.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(e.morphTargets&&a&&d){Xe.set(0,0,0),Ze.set(0,0,0),Ye.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=d[t],n=a[t];0!==e&&(We.fromBufferAttribute(n,l),qe.fromBufferAttribute(n,h),je.fromBufferAttribute(n,u),s?(Xe.addScaledVector(We,e),Ze.addScaledVector(qe,e),Ye.addScaledVector(je,e)):(Xe.addScaledVector(We.sub(Ge),e),Ze.addScaledVector(qe.sub(ke),e),Ye.addScaledVector(je.sub(Ve),e)))}Ge.add(Xe),ke.add(Ze),Ve.add(Ye)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(l,Ge),t.boneTransform(h,ke),t.boneTransform(u,Ve));const p=function(t,e,n,i,r,a,s,o){let c;if(c=1===e.side?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,2!==e.side,o),null===c)return null;tn.copy(o),tn.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(tn);return l<n.near||l>n.far?null:{distance:l,point:tn.clone(),object:t}}(t,e,n,i,Ge,ke,Ve,$e);if(p){o&&(Je.fromBufferAttribute(o,l),Qe.fromBufferAttribute(o,h),Ke.fromBufferAttribute(o,u),p.uv=ae.getUV($e,Ge,ke,Ve,Je,Qe,Ke,new D)),c&&(Je.fromBufferAttribute(c,l),Qe.fromBufferAttribute(c,h),Ke.fromBufferAttribute(c,u),p.uv2=ae.getUV($e,Ge,ke,Ve,Je,Qe,Ke,new D));const t={a:l,b:h,c:u,normal:new k,materialIndex:0};ae.getNormal(Ge,ke,Ve,t.normal),p.face=t}return p}en.prototype=Object.assign(Object.create(Wt.prototype),{constructor:en,isMesh:!0,copy:function(t){return Wt.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ue.copy(n.boundingSphere),Ue.applyMatrix4(r),!1===t.ray.intersectsSphere(Ue))return;if(He.copy(r).invert(),Fe.copy(t.ray).applyMatrix4(He),null!==n.boundingBox&&!1===Fe.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position,o=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);a=nn(this,f,t,Fe,s,o,c,l,h,i,u,d),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=p.materialIndex,e.push(a))}}else for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);a=nn(this,i,t,Fe,s,o,c,l,h,u,d,p),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else if(void 0!==s)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3)a=nn(this,p,t,Fe,s,o,c,l,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,e.push(a))}else for(let n=Math.max(0,d.start),r=Math.min(s.count,d.start+d.count);n<r;n+=3)a=nn(this,i,t,Fe,s,o,c,l,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class rn extends Be{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],c=[],l=[],h=[];let u=0,d=0;function p(t,e,n,i,r,a,p,f,m,g,v){const y=a/m,x=p/g,_=a/2,w=p/2,b=f/2,M=m+1,S=g+1;let A=0,E=0;const T=new k;for(let a=0;a<S;a++){const s=a*x-w;for(let o=0;o<M;o++){const u=o*y-_;T[t]=u*i,T[e]=s*r,T[n]=b,c.push(T.x,T.y,T.z),T[t]=0,T[e]=0,T[n]=f>0?1:-1,l.push(T.x,T.y,T.z),h.push(o/m),h.push(1-a/g),A+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+M*t,i=u+e+M*(t+1),r=u+(e+1)+M*(t+1),a=u+(e+1)+M*t;o.push(n,i,a),o.push(i,r,a),E+=6}s.addGroup(d,E,v),d+=E,u+=A}p("z","y","x",-1,-1,n,e,t,a,r,0),p("z","y","x",1,-1,n,e,-t,a,r,1),p("x","z","y",1,1,t,n,e,i,a,2),p("x","z","y",1,-1,t,n,-e,i,a,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Te(c,3)),this.setAttribute("normal",new Te(l,3)),this.setAttribute("uv",new Te(h,2))}}function an(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function sn(t){const e={};for(let n=0;n<t.length;n++){const i=an(t[n]);for(const t in i)e[t]=i[t]}return e}const on={clone:an,merge:sn};function cn(t){oe.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function ln(){Wt.call(this),this.type="Camera",this.matrixWorldInverse=new xt,this.projectionMatrix=new xt,this.projectionMatrixInverse=new xt}function hn(t=50,e=1,n=.1,i=2e3){ln.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}cn.prototype=Object.create(oe.prototype),cn.prototype.constructor=cn,cn.prototype.isShaderMaterial=!0,cn.prototype.copy=function(t){return oe.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=an(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},cn.prototype.toJSON=function(t){const e=oe.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},ln.prototype=Object.assign(Object.create(Wt.prototype),{constructor:ln,isCamera:!0,copy:function(t,e){return Wt.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new k),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Wt.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){Wt.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),hn.prototype=Object.assign(Object.create(ln.prototype),{constructor:hn,isPerspectiveCamera:!0,copy:function(t,e){return ln.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*P.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*P.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*P.RAD2DEG*Math.atan(Math.tan(.5*P.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*P.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Wt.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const un=90;class dn extends Wt{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new hn(un,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new k(1,0,0)),this.add(i);const r=new hn(un,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new k(-1,0,0)),this.add(r);const a=new hn(un,1,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new k(0,1,0)),this.add(a);const s=new hn(un,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new k(0,-1,0)),this.add(s);const o=new hn(un,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new k(0,0,1)),this.add(o);const c=new hn(un,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new k(0,0,-1)),this.add(c)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,s,o,c]=this.children,l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l}}class pn extends B{constructor(t,e,n,i,r,a,s,o,c,l){super(t=void 0!==t?t:[],e=void 0!==e?e:301,n,i,r,a,s=void 0!==s?s:p,o,c,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}pn.prototype.isCubeTexture=!0;class fn extends U{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new pn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:s,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=f,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new rn(5,5,5),c=new cn({name:"CubemapFromEquirect",uniforms:an(n),vertexShader:i,fragmentShader:r,side:1,blending:0});c.uniforms.tEquirect.value=e;const l=new en(a,c),h=e.minFilter;return e.minFilter===o&&(e.minFilter=s),new dn(1,10,this).update(t,l),e.minFilter=h,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}fn.prototype.isWebGLCubeRenderTarget=!0;class mn extends B{constructor(t,e,n,i,r,s,o,c,l,h,u,d){super(null,s,o,c,l,h,i,r,u,d),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:a,this.minFilter=void 0!==h?h:a,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}mn.prototype.isDataTexture=!0;const gn=new ht,vn=new k;class yn{constructor(t=new Zt,e=new Zt,n=new Zt,i=new Zt,r=new Zt,a=new Zt){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(s-i,h-o,f-u,y-m).normalize(),e[1].setComponents(s+i,h+o,f+u,y+m).normalize(),e[2].setComponents(s+r,h+c,f+d,y+g).normalize(),e[3].setComponents(s-r,h-c,f-d,y-g).normalize(),e[4].setComponents(s-a,h-l,f-p,y-v).normalize(),e[5].setComponents(s+a,h+l,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),gn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(gn)}intersectsSprite(t){return gn.center.set(0,0,0),gn.radius=.7071067811865476,gn.applyMatrix4(t.matrixWorld),this.intersectsSphere(gn)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(vn.x=i.normal.x>0?t.max.x:t.min.x,vn.y=i.normal.y>0?t.max.y:t.min.y,vn.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(vn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function xn(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function _n(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const a=i.get(e);void 0===a?i.set(e,function(e,i){const r=e.array,a=e.usage,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,r,a),e.onUploadCallback();let o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:r instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):a.version<e.version&&(function(e,i,r){const a=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,a):(n?t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(a.buffer,e,r),a.version=e.version)}}}class wn extends Be{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,s=Math.floor(n),o=Math.floor(i),c=s+1,l=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-a;for(let n=0;n<c;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+c*t,i=e+c*(t+1),r=e+1+c*(t+1),a=e+1+c*t;d.push(n,i,a),d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new Te(p,3)),this.setAttribute("normal",new Te(f,3)),this.setAttribute("uv",new Te(m,2))}}const bn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Mn={common:{diffuse:{value:new fe(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new I},uv2Transform:{value:new I},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new D(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fe(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new I}},sprite:{diffuse:{value:new fe(15658734)},opacity:{value:1},center:{value:new D(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new I}}},Sn={basic:{uniforms:sn([Mn.common,Mn.specularmap,Mn.envmap,Mn.aomap,Mn.lightmap,Mn.fog]),vertexShader:bn.meshbasic_vert,fragmentShader:bn.meshbasic_frag},lambert:{uniforms:sn([Mn.common,Mn.specularmap,Mn.envmap,Mn.aomap,Mn.lightmap,Mn.emissivemap,Mn.fog,Mn.lights,{emissive:{value:new fe(0)}}]),vertexShader:bn.meshlambert_vert,fragmentShader:bn.meshlambert_frag},phong:{uniforms:sn([Mn.common,Mn.specularmap,Mn.envmap,Mn.aomap,Mn.lightmap,Mn.emissivemap,Mn.bumpmap,Mn.normalmap,Mn.displacementmap,Mn.fog,Mn.lights,{emissive:{value:new fe(0)},specular:{value:new fe(1118481)},shininess:{value:30}}]),vertexShader:bn.meshphong_vert,fragmentShader:bn.meshphong_frag},standard:{uniforms:sn([Mn.common,Mn.envmap,Mn.aomap,Mn.lightmap,Mn.emissivemap,Mn.bumpmap,Mn.normalmap,Mn.displacementmap,Mn.roughnessmap,Mn.metalnessmap,Mn.fog,Mn.lights,{emissive:{value:new fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:bn.meshphysical_vert,fragmentShader:bn.meshphysical_frag},toon:{uniforms:sn([Mn.common,Mn.aomap,Mn.lightmap,Mn.emissivemap,Mn.bumpmap,Mn.normalmap,Mn.displacementmap,Mn.gradientmap,Mn.fog,Mn.lights,{emissive:{value:new fe(0)}}]),vertexShader:bn.meshtoon_vert,fragmentShader:bn.meshtoon_frag},matcap:{uniforms:sn([Mn.common,Mn.bumpmap,Mn.normalmap,Mn.displacementmap,Mn.fog,{matcap:{value:null}}]),vertexShader:bn.meshmatcap_vert,fragmentShader:bn.meshmatcap_frag},points:{uniforms:sn([Mn.points,Mn.fog]),vertexShader:bn.points_vert,fragmentShader:bn.points_frag},dashed:{uniforms:sn([Mn.common,Mn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:bn.linedashed_vert,fragmentShader:bn.linedashed_frag},depth:{uniforms:sn([Mn.common,Mn.displacementmap]),vertexShader:bn.depth_vert,fragmentShader:bn.depth_frag},normal:{uniforms:sn([Mn.common,Mn.bumpmap,Mn.normalmap,Mn.displacementmap,{opacity:{value:1}}]),vertexShader:bn.normal_vert,fragmentShader:bn.normal_frag},sprite:{uniforms:sn([Mn.sprite,Mn.fog]),vertexShader:bn.sprite_vert,fragmentShader:bn.sprite_frag},background:{uniforms:{uvTransform:{value:new I},t2D:{value:null}},vertexShader:bn.background_vert,fragmentShader:bn.background_frag},cube:{uniforms:sn([Mn.envmap,{opacity:{value:1}}]),vertexShader:bn.cube_vert,fragmentShader:bn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:bn.equirect_vert,fragmentShader:bn.equirect_frag},distanceRGBA:{uniforms:sn([Mn.common,Mn.displacementmap,{referencePosition:{value:new k},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:bn.distanceRGBA_vert,fragmentShader:bn.distanceRGBA_frag},shadow:{uniforms:sn([Mn.lights,Mn.fog,{color:{value:new fe(0)},opacity:{value:1}}]),vertexShader:bn.shadow_vert,fragmentShader:bn.shadow_frag}};function An(t,e,n,i,r){const a=new fe(0);let s,o,c=0,l=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),c=e,d(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,d(a,c)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?d(a,c):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||306===m.mapping)?(void 0===o&&(o=new en(new rn(1,1,1),new cn({name:"BackgroundCubeMaterial",uniforms:an(Sn.cube.uniforms),vertexShader:Sn.cube.vertexShader,fragmentShader:Sn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=m,o.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,l===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new en(new wn(2,2),new cn({name:"BackgroundMaterial",uniforms:an(Sn.background.uniforms),vertexShader:Sn.background.vertexShader,fragmentShader:Sn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version&&u===t.toneMapping||(s.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function En(t,e,n,i){const r=t.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},c=d(null);let l=c;function h(e){return i.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,r){const a=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==r&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r)}function g(){const e=l.newAttributes,n=l.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function v(e,n,r,a,s,o){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,a,s,o):t.vertexAttribIPointer(e,n,r,s,o)}function y(){x(),l!==c&&(l=c,h(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(r,c,u,y,x){let _=!1;if(s){const e=function(e,n,r){const s=!0===r.wireframe;let c=o[e.id];void 0===c&&(c={},o[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let h=l[s];return void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),l[s]=h),h}(y,u,c);l!==e&&(l=e,h(l.object)),_=function(t,e){const n=l.attributes,i=t.attributes;let r=0;for(const t in i){const e=n[t],a=i[t];if(void 0===e)return!0;if(e.attribute!==a)return!0;if(e.data!==a.data)return!0;r++}return l.attributesNum!==r||l.index!==e}(y,x),_&&function(t,e){const n={},i=t.attributes;let r=0;for(const t in i){const e=i[t],a={};a.attribute=e,e.data&&(a.data=e.data),n[t]=a,r++}l.attributes=n,l.attributesNum=r,l.index=e}(y,x)}else{const t=!0===c.wireframe;l.geometry===y.id&&l.program===u.id&&l.wireframe===t||(l.geometry=y.id,l.program=u.id,l.wireframe=t,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==x&&n.update(x,34963),_&&(function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const c=o.attributes,l=s.getAttributes(),h=a.defaultAttributeValues;for(const e in l){const i=l[e];if(i>=0){const a=c[e];if(void 0!==a){const e=a.normalized,r=a.itemSize,s=n.get(a);if(void 0===s)continue;const c=s.buffer,l=s.type,h=s.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,s=n.stride,u=a.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(34962,c),v(i,r,l,e,s*h,u*h)}else a.isInstancedBufferAttribute?(m(i,a.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)):f(i),t.bindBuffer(34962,c),v(i,r,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(r.instanceMatrix);if(void 0===e)continue;const a=e.buffer,s=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(34962,a),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(r.instanceColor);if(void 0===e)continue;const a=e.buffer,s=e.type;m(i,1),t.bindBuffer(34962,a),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(r,c,u,y),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function Tn(t,e,n,i){const r=i.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,i){t.drawArrays(a,e,i),n.update(i,a,1)},this.renderInstances=function(i,s,o){if(0===o)return;let c,l;if(r)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](a,i,s,o),n.update(s,a,o)}}function Ln(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),v=h>0,y=a||e.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:a?t.getParameter(36183):0}}function Rn(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new Zt,o=new I,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const a=null!==t?t.length:0;let l=null;if(0!==a){if(l=c.value,!0!==r||null===l){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=i;e!==a;++e,n+=4)s.copy(t[e]).applyMatrix4(r,o),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const s=0!==t.length||e||0!==i||r;return r=e,n=h(t,a,0),i=t.length,s},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,l()},this.setState=function(e,s,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!r||null===u||0===u.length||a&&!p)a?h(null):l();else{const t=a?0:i,e=4*t;let r=f.clippingState||null;c.value=r,r=h(u,s,e,o);for(let t=0;t!==e;++t)r[t]=n[t];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Cn(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(303===a||304===a){if(e.has(r))return n(e.get(r).texture,r.mapping);{const a=r.image;if(a&&a.height>0){const s=t.getRenderTarget(),o=new fn(a.height/2);return o.fromEquirectangularTexture(t,r),e.set(r,o),t.setRenderTarget(s),r.addEventListener("dispose",i),n(o.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}function Pn(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Dn(t,e,n,i){const r={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",s),delete r[o.id];const c=a.get(o);c&&(e.remove(c),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(Re(n)>65535?Ae:Me)(n,1);o.version=s;const c=a.get(t);c&&e.remove(c),a.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}function In(t,e,n,i){const r=i.isWebGL2;let a,s,o;this.setMode=function(t){a=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(a,i,s,e*o),n.update(i,a,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](a,c,s,i*o,l),n.update(c,a,l)}}function Nn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function On(t,e){return t[0]-e[0]}function zn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Bn(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(r,a,s,o){const c=r.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[a.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[a.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(zn);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(On);const u=s.morphTargets&&a.morphAttributes.position,d=s.morphNormals&&a.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],r=e[0],s=e[1];r!==Number.MAX_SAFE_INTEGER&&s?(u&&a.getAttribute("morphTarget"+t)!==u[r]&&a.setAttribute("morphTarget"+t,u[r]),d&&a.getAttribute("morphNormal"+t)!==d[r]&&a.setAttribute("morphNormal"+t,d[r]),n[t]=s,p+=s):(u&&!0===a.hasAttribute("morphTarget"+t)&&a.deleteAttribute("morphTarget"+t),d&&!0===a.hasAttribute("morphNormal"+t)&&a.deleteAttribute("morphNormal"+t),n[t]=0)}const f=a.morphTargetsRelative?1:1-p;o.getUniforms().setValue(t,"morphTargetBaseInfluence",f),o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function Hn(t,e,n,i){let r=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=i.render.frame,o=t.geometry,c=e.get(t,o);return r.get(c)!==s&&(e.update(c),r.set(c,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",a)&&t.addEventListener("dispose",a),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),c},dispose:function(){r=new WeakMap}}}Sn.physical={uniforms:sn([Sn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new D(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new fe(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:bn.meshphysical_vert,fragmentShader:bn.meshphysical_frag};class Fn extends B{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=a,this.minFilter=a,this.wrapR=i,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Fn.prototype.isDataTexture2DArray=!0;class Un extends B{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=a,this.minFilter=a,this.wrapR=i,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Un.prototype.isDataTexture3D=!0;const Gn=new B,kn=new Fn,Vn=new Un,Wn=new pn,qn=[],jn=[],Xn=new Float32Array(16),Zn=new Float32Array(9),Yn=new Float32Array(4);function Jn(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=qn[r];if(void 0===a&&(a=new Float32Array(r),qn[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function Qn(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Kn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function $n(t,e){let n=jn[e];void 0===n&&(n=new Int32Array(e),jn[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function ti(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ei(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Qn(n,e))return;t.uniform2fv(this.addr,e),Kn(n,e)}}function ni(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Qn(n,e))return;t.uniform3fv(this.addr,e),Kn(n,e)}}function ii(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Qn(n,e))return;t.uniform4fv(this.addr,e),Kn(n,e)}}function ri(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Qn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Kn(n,e)}else{if(Qn(n,i))return;Yn.set(i),t.uniformMatrix2fv(this.addr,!1,Yn),Kn(n,i)}}function ai(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Qn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Kn(n,e)}else{if(Qn(n,i))return;Zn.set(i),t.uniformMatrix3fv(this.addr,!1,Zn),Kn(n,i)}}function si(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Qn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Kn(n,e)}else{if(Qn(n,i))return;Xn.set(i),t.uniformMatrix4fv(this.addr,!1,Xn),Kn(n,i)}}function oi(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ci(t,e){const n=this.cache;Qn(n,e)||(t.uniform2iv(this.addr,e),Kn(n,e))}function li(t,e){const n=this.cache;Qn(n,e)||(t.uniform3iv(this.addr,e),Kn(n,e))}function hi(t,e){const n=this.cache;Qn(n,e)||(t.uniform4iv(this.addr,e),Kn(n,e))}function ui(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function di(t,e){const n=this.cache;Qn(n,e)||(t.uniform2uiv(this.addr,e),Kn(n,e))}function pi(t,e){const n=this.cache;Qn(n,e)||(t.uniform3uiv(this.addr,e),Kn(n,e))}function fi(t,e){const n=this.cache;Qn(n,e)||(t.uniform4uiv(this.addr,e),Kn(n,e))}function mi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||Gn,r)}function gi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Vn,r)}function vi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||Wn,r)}function yi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||kn,r)}function xi(t,e){t.uniform1fv(this.addr,e)}function _i(t,e){const n=Jn(e,this.size,2);t.uniform2fv(this.addr,n)}function wi(t,e){const n=Jn(e,this.size,3);t.uniform3fv(this.addr,n)}function bi(t,e){const n=Jn(e,this.size,4);t.uniform4fv(this.addr,n)}function Mi(t,e){const n=Jn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Si(t,e){const n=Jn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Ai(t,e){const n=Jn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ei(t,e){t.uniform1iv(this.addr,e)}function Ti(t,e){t.uniform2iv(this.addr,e)}function Li(t,e){t.uniform3iv(this.addr,e)}function Ri(t,e){t.uniform4iv(this.addr,e)}function Ci(t,e){t.uniform1uiv(this.addr,e)}function Pi(t,e){t.uniform2uiv(this.addr,e)}function Di(t,e){t.uniform3uiv(this.addr,e)}function Ii(t,e){t.uniform4uiv(this.addr,e)}function Ni(t,e,n){const i=e.length,r=$n(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||Gn,r[t])}function Oi(t,e,n){const i=e.length,r=$n(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Wn,r[t])}function zi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return ti;case 35664:return ei;case 35665:return ni;case 35666:return ii;case 35674:return ri;case 35675:return ai;case 35676:return si;case 5124:case 35670:return oi;case 35667:case 35671:return ci;case 35668:case 35672:return li;case 35669:case 35673:return hi;case 5125:return ui;case 36294:return di;case 36295:return pi;case 36296:return fi;case 35678:case 36198:case 36298:case 36306:case 35682:return mi;case 35679:case 36299:case 36307:return gi;case 35680:case 36300:case 36308:case 36293:return vi;case 36289:case 36303:case 36311:case 36292:return yi}}(e.type)}function Bi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return xi;case 35664:return _i;case 35665:return wi;case 35666:return bi;case 35674:return Mi;case 35675:return Si;case 35676:return Ai;case 5124:case 35670:return Ei;case 35667:case 35671:return Ti;case 35668:case 35672:return Li;case 35669:case 35673:return Ri;case 5125:return Ci;case 36294:return Pi;case 36295:return Di;case 36296:return Ii;case 35678:case 36198:case 36298:case 36306:case 35682:return Ni;case 35680:case 36300:case 36308:case 36293:return Oi}}(e.type)}function Hi(t){this.id=t,this.seq=[],this.map={}}Bi.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Kn(e,t)},Hi.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}};const Fi=/(\w+)(\])?(\[|\.)?/g;function Ui(t,e){t.seq.push(e),t.map[e.id]=e}function Gi(t,e,n){const i=t.name,r=i.length;for(Fi.lastIndex=0;;){const a=Fi.exec(i),s=Fi.lastIndex;let o=a[1];const c="]"===a[2],l=a[3];if(c&&(o|=0),void 0===l||"["===l&&s+2===r){Ui(n,void 0===l?new zi(o,t,e):new Bi(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Hi(o),Ui(n,t)),n=t}}}function ki(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Gi(n,t.getUniformLocation(e,n.name),this)}}function Vi(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}ki.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},ki.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},ki.upload=function(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}},ki.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let Wi=0;function qi(t){switch(t){case M:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function ji(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return i&&""===r?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Xi(t,e){const n=qi(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Zi(t,e){const n=qi(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Yi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ji(t){return""!==t}function Qi(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ki(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const $i=/^[ \t]*#include +<([\w\d./]+)>/gm;function tr(t){return t.replace($i,er)}function er(t,e){const n=bn[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return tr(n)}const nr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ir=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function rr(t){return t.replace(ir,sr).replace(nr,ar)}function ar(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sr(0,e,n,i)}function sr(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function or(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function cr(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ji).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(a),m=r.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Ji).join("\n"),g.length>0&&(g+="\n"),v=[p,f].filter(Ji).join("\n"),v.length>0&&(v+="\n")):(g=[or(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ji).join("\n"),v=[p,or(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?bn.tonemapping_pars_fragment:"",0!==n.toneMapping?Yi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",bn.encodings_pars_fragment,n.map?Xi("mapTexelToLinear",n.mapEncoding):"",n.matcap?Xi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Xi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Xi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Xi("lightMapTexelToLinear",n.lightMapEncoding):"",Zi("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ji).join("\n")),s=tr(s),s=Qi(s,n),s=Ki(s,n),o=tr(o),o=Qi(o,n),o=Ki(o,n),s=rr(s),o=rr(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===T?"":"out highp vec4 pc_fragColor;",n.glslVersion===T?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+o,_=Vi(r,35633,y+g+s),w=Vi(r,35632,x);if(r.attachShader(m,_),r.attachShader(m,w),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(m).trim(),e=r.getShaderInfoLog(_).trim(),n=r.getShaderInfoLog(w).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(m,35714)){i=!1;const e=ji(r,_,"vertex"),n=ji(r,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}let b,M;return r.deleteShader(_),r.deleteShader(w),this.getUniforms=function(){return void 0===b&&(b=new ki(r,m)),b},this.getAttributes=function(){return void 0===M&&(M=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r).name;n[i]=t.getAttribLocation(e,i)}return n}(r,m)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=Wi++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=w,this}function lr(t,e,n,i,r,a){const s=[],o=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=M,e}return{getParameters:function(r,s,f,g,v){const y=g.fog,x=r.isMeshStandardMaterial?g.environment:null,_=e.get(r.envMap||x),w=p[r.type],b=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;let M,S;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),w){const t=Sn[w];M=t.vertexShader,S=t.fragmentShader}else M=r.vertexShader,S=r.fragmentShader;const A=t.getRenderTarget();return{isWebGL2:o,shaderID:w,shaderName:r.type,vertexShader:M,fragmentShader:S,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:u,outputEncoding:null!==A?m(A.texture):t.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:m(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!y,useFog:r.fog,fogExp2:y&&y.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:c,skinning:r.skinning&&b>0,maxBones:b,useVertexTexture:l,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=Sn[e];n=on.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new cr(t,n,e,r),s.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function hr(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function ur(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function dr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function pr(t){const e=[];let n=0;const i=[],r=[],a={id:-1};function s(i,r,s,o,c,l){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:r,material:s,program:u.program||a,groupOrder:o,renderOrder:i.renderOrder,z:c,group:l},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=s,h.program=u.program||a,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=c,h.group=l),n++,h}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(t,e,n,a,o,c){const l=s(t,e,n,a,o,c);(!0===n.transparent?r:i).push(l)},unshift:function(t,e,n,a,o,c){const l=s(t,e,n,a,o,c);(!0===n.transparent?r:i).unshift(l)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||ur),r.length>1&&r.sort(e||dr)}}}function fr(t){let e=new WeakMap;return{get:function(n,i){let r;return!1===e.has(n)?(r=new pr(t),e.set(n,[r])):i>=e.get(n).length?(r=new pr(t),e.get(n).push(r)):r=e.get(n)[i],r},dispose:function(){e=new WeakMap}}}function mr(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new k,color:new fe};break;case"SpotLight":n={position:new k,direction:new k,color:new fe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new k,color:new fe,distance:0,decay:0};break;case"HemisphereLight":n={direction:new k,skyColor:new fe,groundColor:new fe};break;case"RectAreaLight":n={color:new fe,position:new k,halfWidth:new k,halfHeight:new k}}return t[e.id]=n,n}}}let gr=0;function vr(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function yr(t,e){const n=new mr,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new k);const a=new k,s=new xt,o=new xt;return{setup:function(a){let s=0,o=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let l=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;a.sort(vr);for(let t=0,e=a.length;t<e;t++){const e=a[t],v=e.color,y=e.intensity,x=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=v.r*y,o+=v.g*y,c+=v.b*y;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],y);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[l]=n,r.directionalShadowMap[l]=_,r.directionalShadowMatrix[l]=e.shadow.matrix,f++}r.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(v).multiplyScalar(y),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.spotShadow[u]=n,r.spotShadowMap[u]=_,r.spotShadowMatrix[u]=e.shadow.matrix,g++}r.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(v).multiplyScalar(y),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=_,r.pointShadowMatrix[h]=e.shadow.matrix,m++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(y),t.groundColor.copy(e.groundColor).multiplyScalar(y),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Mn.LTC_FLOAT_1,r.rectAreaLTC2=Mn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Mn.LTC_HALF_1,r.rectAreaLTC2=Mn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=s,r.ambient[1]=o,r.ambient[2]=c;const v=r.hash;v.directionalLength===l&&v.pointLength===h&&v.spotLength===u&&v.rectAreaLength===d&&v.hemiLength===p&&v.numDirectionalShadows===f&&v.numPointShadows===m&&v.numSpotShadows===g||(r.directional.length=l,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=m,r.spotShadowMatrix.length=g,v.directionalLength=l,v.pointLength=h,v.spotLength=u,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=f,v.numPointShadows=m,v.numSpotShadows=g,r.version=gr++)},setupView:function(t,e){let n=0,i=0,c=0,l=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=r.spot[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),c++}else if(d.isRectAreaLight){const t=r.rectArea[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o.identity(),s.copy(d.matrixWorld),s.premultiply(u),o.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),l++}else if(d.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:r}}function xr(t,e){const n=new yr(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function _r(t,e){let n=new WeakMap;return{get:function(i,r=0){let a;return!1===n.has(i)?(a=new xr(t,e),n.set(i,[a])):r>=n.get(i).length?(a=new xr(t,e),n.get(i).push(a)):a=n.get(i)[r],a},dispose:function(){n=new WeakMap}}}class wr extends oe{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}wr.prototype.isMeshDepthMaterial=!0;class br extends oe{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new k,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Mr(t,e,n){let i=new yn;const r=new D,o=new D,c=new F,l=[],h=[],u={},d=n.maxTextureSize,p={0:1,1:0,2:2},m=new cn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new D},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const v=new Be;v.setAttribute("position",new ye(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new en(v,m),x=this;function _(n,i){const r=e.update(y);m.uniforms.shadow_pass.value=n.map.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,m,y,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,g,y,null)}function w(t,e,n){const i=t<<0|e<<1|n<<2;let r=l[i];return void 0===r&&(r=new wr({depthPacking:3201,morphTargets:t,skinning:e}),l[i]=r),r}function b(t,e,n){const i=t<<0|e<<1|n<<2;let r=h[i];return void 0===r&&(r=new br({morphTargets:t,skinning:e}),h[i]=r),r}function M(e,n,i,r,a,s,o){let c=null,l=w,h=e.customDepthMaterial;if(!0===r.isPointLight&&(l=b,h=e.customDistanceMaterial),void 0===h){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),c=l(t,r,!0===e.isInstancedMesh)}else c=h;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=u[t];void 0===n&&(n={},u[t]=n);let r=n[e];void 0===r&&(r=c.clone(),n[e]=r),c=r}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=3===o?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:p[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=a,c.farDistance=s),c}function S(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],h=r[l.materialIndex];if(h&&h.visible){const e=M(n,i,h,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,l)}}}else if(r.visible){const e=M(n,i,r,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)S(c[t],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,l){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),u=t.getActiveCubeFace(),p=t.getActiveMipmapLevel(),m=t.state;m.setBlending(0),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(let h=0,u=e.length;h<u;h++){const u=e[h],p=u.shadow;if(void 0===p){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===p.autoUpdate&&!1===p.needsUpdate)continue;r.copy(p.mapSize);const g=p.getFrameExtents();if(r.multiply(g),o.copy(p.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(o.x=Math.floor(d/g.x),r.x=o.x*g.x,p.mapSize.x=o.x),r.y>d&&(o.y=Math.floor(d/g.y),r.y=o.y*g.y,p.mapSize.y=o.y)),null===p.map&&!p.isPointLightShadow&&3===this.type){const t={minFilter:s,magFilter:s,format:f};p.map=new U(r.x,r.y,t),p.map.texture.name=u.name+".shadowMap",p.mapPass=new U(r.x,r.y,t),p.camera.updateProjectionMatrix()}if(null===p.map){const t={minFilter:a,magFilter:a,format:f};p.map=new U(r.x,r.y,t),p.map.texture.name=u.name+".shadowMap",p.camera.updateProjectionMatrix()}t.setRenderTarget(p.map),t.clear();const v=p.getViewportCount();for(let t=0;t<v;t++){const e=p.getViewport(t);c.set(o.x*e.x,o.y*e.y,o.x*e.z,o.y*e.w),m.viewport(c),p.updateMatrices(u,t),i=p.getFrustum(),S(n,l,p.camera,u,this.type)}p.isPointLightShadow||3!==this.type||_(p,l),p.needsUpdate=!1}x.needsUpdate=!1,t.setRenderTarget(h,u,p)}}function Sr(e,n,i){const r=i.isWebGL2,a=new function(){let t=!1;const n=new F;let i=null;const r=new F(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,s,o){!0===o&&(t*=s,i*=s,a*=s),n.set(t,i,a,s),!1===r.equals(n)&&(e.clearColor(t,i,a,s),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},s=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(t){t?z(2929):B(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},o=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,o=null,c=null,l=null;return{setTest:function(e){t||(e?z(2960):B(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){i===t&&r===n&&a===s||(e.stencilFunc(t,n,s),i=t,r=n,a=s)},setOp:function(t,n,i){s===t&&o===n&&c===i||(e.stencilOp(t,n,i),s=t,o=n,c=i)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,o=null,c=null,l=null}}};let c={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,x=null,_=!1,w=null,b=null,M=null,S=null,A=null;const E=e.getParameter(35661);let T=!1,L=0;const R=e.getParameter(7938);-1!==R.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(R)[1]),T=L>=1):-1!==R.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),T=L>=2);let C=null,P={};const D=new F(0,0,e.canvas.width,e.canvas.height),I=new F(0,0,e.canvas.width,e.canvas.height);function N(t,n,i){const r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,r);return a}const O={};function z(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function B(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}O[3553]=N(3553,3553,1),O[34067]=N(34067,34069,6),a.setClear(0,0,0,1),s.setClear(1),o.setClear(0),z(2929),s.setFunc(3),k(!1),V(1),z(2884),G(0);const H={[t]:32774,101:32778,102:32779};if(r)H[103]=32775,H[104]=32776;else{const t=n.get("EXT_blend_minmax");null!==t&&(H[103]=t.MIN_EXT,H[104]=t.MAX_EXT)}const U={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function G(n,i,r,a,s,o,c,l){if(0!==n){if(!1===d&&(z(3042),d=!0),5===n)s=s||i,o=o||r,c=c||a,i===f&&s===v||(e.blendEquationSeparate(H[i],H[s]),f=i,v=s),r===m&&a===g&&o===y&&c===x||(e.blendFuncSeparate(U[r],U[a],U[o],U[c]),m=r,g=a,y=o,x=c),p=n,_=null;else if(n!==p||l!==_){if(f===t&&v===t||(e.blendEquation(32774),f=t,v=t),l)switch(n){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}else switch(n){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}m=null,g=null,y=null,x=null,p=n,_=l}}else!0===d&&(B(3042),d=!1)}function k(t){w!==t&&(t?e.frontFace(2304):e.frontFace(2305),w=t)}function V(t){0!==t?(z(2884),t!==b&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):B(2884),b=t}function W(t,n,i){t?(z(32823),S===n&&A===i||(e.polygonOffset(n,i),S=n,A=i)):B(32823)}function q(t){void 0===t&&(t=33984+E-1),C!==t&&(e.activeTexture(t),C=t)}return{buffers:{color:a,depth:s,stencil:o},enable:z,disable:B,bindFramebuffer:function(t,n){null===n&&null!==l&&(n=l),h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n)},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:G,setMaterial:function(t,e){2===t.side?B(2884):z(2884);let n=1===t.side;e&&(n=!n),k(n),1===t.blending&&!1===t.transparent?G(0):G(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),a.setMask(t.colorWrite);const i=t.stencilWrite;o.setTest(i),i&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),W(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?z(32926):B(32926)},setFlipSided:k,setCullFace:V,setLineWidth:function(t){t!==M&&(T&&e.lineWidth(t),M=t)},setPolygonOffset:W,setScissorTest:function(t){t?z(3089):B(3089)},activeTexture:q,bindTexture:function(t,n){null===C&&q();let i=P[C];void 0===i&&(i={type:void 0,texture:void 0},P[C]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||O[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=P[C];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===D.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),D.copy(t))},viewport:function(t){!1===I.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),I.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},C=null,P={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,x=null,_=!1,w=null,b=null,M=null,S=null,A=null,D.set(0,0,e.canvas.width,e.canvas.height),I.set(0,0,e.canvas.width,e.canvas.height),a.reset(),s.reset(),o.reset()}}}function Ar(t,n,v,y,x,_,w){const b=x.isWebGL2,M=x.maxTextures,S=x.maxCubemapSize,A=x.maxTextureSize,E=x.maxSamples,T=new WeakMap;let L,R=!1;try{R="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function C(t,e){return R?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function D(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?P.floorPowerOfTwo:Math.floor,a=i(r*t.width),s=i(r*t.height);void 0===L&&(L=C(a,s));const o=n?C(a,s):L;return o.width=a,o.height=s,o.getContext("2d").drawImage(t,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function I(t){return P.isPowerOfTwo(t.width)&&P.isPowerOfTwo(t.height)}function N(t,e){return t.generateMipmaps&&e&&t.minFilter!==a&&t.minFilter!==s}function O(e,n,i,r){t.generateMipmap(e),y.get(n).__maxMipLevel=Math.log2(Math.max(i,r))}function z(e,i,r){if(!1===b)return i;if(null!==e){if(void 0!==t[e])return t[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=i;return 6403===i&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===i&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===i&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||n.get("EXT_color_buffer_float"),a}function B(t){return t===a||1004===t||1005===t?9728:9729}function H(e){const n=e.target;n.removeEventListener("dispose",H),function(e){const n=y.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),y.remove(e))}(n),n.isVideoTexture&&T.delete(n),w.memory.textures--}function F(e){const n=e.target;n.removeEventListener("dispose",F),function(e){const n=e.texture,i=y.get(e),r=y.get(n);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);y.remove(n),y.remove(e)}}(n),w.memory.textures--}let U=0;function G(t,e){const n=y.get(t);if(t.isVideoTexture&&function(t){const e=w.render.frame;T.get(t)!==e&&(T.set(t,e),t.update())}(t),t.version>0&&n.__version!==t.version){const i=t.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void X(n,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}v.activeTexture(33984+e),v.bindTexture(3553,n.__webglTexture)}function k(e,n){const i=y.get(e);e.version>0&&i.__version!==e.version?function(e,n,i){if(6!==n.image.length)return;j(e,n),v.activeTexture(33984+i),v.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const r=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),a=n.image[0]&&n.image[0].isDataTexture,s=[];for(let t=0;t<6;t++)s[t]=r||a?a?n.image[t].image:n.image[t]:D(n.image[t],!1,!0,S);const o=s[0],c=I(o)||b,l=_.convert(n.format),h=_.convert(n.type),u=z(n.internalFormat,l,h);let d;if(q(34067,n,c),r){for(let t=0;t<6;t++){d=s[t].mipmaps;for(let e=0;e<d.length;e++){const i=d[e];n.format!==f&&n.format!==p?null!==l?v.compressedTexImage2D(34069+t,e,u,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v.texImage2D(34069+t,e,u,i.width,i.height,0,l,h,i.data)}}e.__maxMipLevel=d.length-1}else{d=n.mipmaps;for(let t=0;t<6;t++)if(a){v.texImage2D(34069+t,0,u,s[t].width,s[t].height,0,l,h,s[t].data);for(let e=0;e<d.length;e++){const n=d[e].image[t].image;v.texImage2D(34069+t,e+1,u,n.width,n.height,0,l,h,n.data)}}else{v.texImage2D(34069+t,0,u,l,h,s[t]);for(let e=0;e<d.length;e++){const n=d[e];v.texImage2D(34069+t,e+1,u,l,h,n.image[t])}}e.__maxMipLevel=d.length}N(n,c)&&O(34067,n,o.width,o.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(i,e,n):(v.activeTexture(33984+n),v.bindTexture(34067,i.__webglTexture))}const V={[e]:10497,[i]:33071,[r]:33648},W={[a]:9728,1004:9984,1005:9986,[s]:9729,1007:9985,[o]:9987};function q(e,r,o){if(o?(t.texParameteri(e,10242,V[r.wrapS]),t.texParameteri(e,10243,V[r.wrapT]),32879!==e&&35866!==e||t.texParameteri(e,32882,V[r.wrapR]),t.texParameteri(e,10240,W[r.magFilter]),t.texParameteri(e,10241,W[r.minFilter])):(t.texParameteri(e,10242,33071),t.texParameteri(e,10243,33071),32879!==e&&35866!==e||t.texParameteri(e,32882,33071),r.wrapS===i&&r.wrapT===i||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(e,10240,B(r.magFilter)),t.texParameteri(e,10241,B(r.minFilter)),r.minFilter!==a&&r.minFilter!==s&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){const i=n.get("EXT_texture_filter_anisotropic");if(r.type===h&&!1===n.has("OES_texture_float_linear"))return;if(!1===b&&r.type===u&&!1===n.has("OES_texture_half_float_linear"))return;(r.anisotropy>1||y.get(r).__currentAnisotropy)&&(t.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,x.getMaxAnisotropy())),y.get(r).__currentAnisotropy=r.anisotropy)}}function j(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",H),e.__webglTexture=t.createTexture(),w.memory.textures++)}function X(e,n,r){let o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),j(e,n),v.activeTexture(33984+r),v.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const u=function(t){return!b&&(t.wrapS!==i||t.wrapT!==i||t.minFilter!==a&&t.minFilter!==s)}(n)&&!1===I(n.image),y=D(n.image,u,!1,A),x=I(y)||b,w=_.convert(n.format);let M,S=_.convert(n.type),E=z(n.internalFormat,w,S);q(o,n,x);const T=n.mipmaps;if(n.isDepthTexture)E=6402,b?E=n.type===h?36012:n.type===l?33190:n.type===d?35056:33189:n.type===h&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===m&&6402===E&&n.type!==c&&n.type!==l&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=c,S=_.convert(n.type)),n.format===g&&6402===E&&(E=34041,n.type!==d&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=d,S=_.convert(n.type))),v.texImage2D(3553,0,E,y.width,y.height,0,w,S,null);else if(n.isDataTexture)if(T.length>0&&x){for(let t=0,e=T.length;t<e;t++)M=T[t],v.texImage2D(3553,t,E,M.width,M.height,0,w,S,M.data);n.generateMipmaps=!1,e.__maxMipLevel=T.length-1}else v.texImage2D(3553,0,E,y.width,y.height,0,w,S,y.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=T.length;t<e;t++)M=T[t],n.format!==f&&n.format!==p?null!==w?v.compressedTexImage2D(3553,t,E,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):v.texImage2D(3553,t,E,M.width,M.height,0,w,S,M.data);e.__maxMipLevel=T.length-1}else if(n.isDataTexture2DArray)v.texImage3D(35866,0,E,y.width,y.height,y.depth,0,w,S,y.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)v.texImage3D(32879,0,E,y.width,y.height,y.depth,0,w,S,y.data),e.__maxMipLevel=0;else if(T.length>0&&x){for(let t=0,e=T.length;t<e;t++)M=T[t],v.texImage2D(3553,t,E,w,S,M);n.generateMipmaps=!1,e.__maxMipLevel=T.length-1}else v.texImage2D(3553,0,E,w,S,y),e.__maxMipLevel=0;N(n,x)&&O(o,n,y.width,y.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function Z(e,n,i,r){const a=n.texture,s=_.convert(a.format),o=_.convert(a.type),c=z(a.internalFormat,s,o);32879===r||35866===r?v.texImage3D(r,0,c,n.width,n.height,n.depth,0,s,o,null):v.texImage2D(r,0,c,n.width,n.height,0,s,o,null),v.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,i,r,y.get(a).__webglTexture,0),v.bindFramebuffer(36160,null)}function Y(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===h?r=36012:e.type===l&&(r=33190));const i=J(n);t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,r=_.convert(e.format),a=_.convert(e.type),s=z(e.internalFormat,r,a);if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height)}t.bindRenderbuffer(36161,null)}function J(t){return b&&t.isWebGLMultisampleRenderTarget?Math.min(E,t.samples):0}let Q=!1,K=!1;this.allocateTextureUnit=function(){const t=U;return t>=M&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+M),U+=1,t},this.resetTextureUnits=function(){U=0},this.setTexture2D=G,this.setTexture2DArray=function(t,e){const n=y.get(t);t.version>0&&n.__version!==t.version?X(n,t,e):(v.activeTexture(33984+e),v.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){const n=y.get(t);t.version>0&&n.__version!==t.version?X(n,t,e):(v.activeTexture(33984+e),v.bindTexture(32879,n.__webglTexture))},this.setTextureCube=k,this.setupRenderTarget=function(e){const n=e.texture,i=y.get(e),r=y.get(n);e.addEventListener("dispose",F),r.__webglTexture=t.createTexture(),r.__version=n.version,w.memory.textures++;const a=!0===e.isWebGLCubeRenderTarget,s=!0===e.isWebGLMultisampleRenderTarget,o=n.isDataTexture3D||n.isDataTexture2DArray,c=I(e)||b;if(!b||n.format!==p||n.type!==h&&n.type!==u||(n.format=f,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),a){i.__webglFramebuffer=[];for(let e=0;e<6;e++)i.__webglFramebuffer[e]=t.createFramebuffer()}else if(i.__webglFramebuffer=t.createFramebuffer(),s)if(b){i.__webglMultisampledFramebuffer=t.createFramebuffer(),i.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const r=_.convert(n.format),a=_.convert(n.type),s=z(n.internalFormat,r,a),o=J(e);t.renderbufferStorageMultisample(36161,o,s,e.width,e.height),v.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(i.__webglDepthRenderbuffer=t.createRenderbuffer(),Y(i.__webglDepthRenderbuffer,e,!0)),v.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(a){v.bindTexture(34067,r.__webglTexture),q(34067,n,c);for(let t=0;t<6;t++)Z(i.__webglFramebuffer[t],e,36064,34069+t);N(n,c)&&O(34067,n,e.width,e.height),v.bindTexture(34067,null)}else{let t=3553;o&&(b?t=n.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),v.bindTexture(t,r.__webglTexture),q(t,n,c),Z(i.__webglFramebuffer,e,36064,t),N(n,c)&&O(3553,n,e.width,e.height),v.bindTexture(3553,null)}e.depthBuffer&&function(e){const n=y.get(e),i=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(v.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");y.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),G(n.depthTexture,0);const i=y.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===m)t.framebufferTexture2D(36160,36096,3553,i,0);else{if(n.depthTexture.format!==g)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,i,0)}}(n.__webglFramebuffer,e)}else if(i){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)v.bindFramebuffer(36160,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),Y(n.__webglDepthbuffer[i],e,!1)}else v.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),Y(n.__webglDepthbuffer,e,!1);v.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(N(e,I(t)||b)){const n=t.isWebGLCubeRenderTarget?34067:3553,i=y.get(e).__webglTexture;v.bindTexture(n,i),O(n,e,t.width,t.height),v.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(b){const n=y.get(e);v.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),v.bindFramebuffer(36009,n.__webglFramebuffer);const i=e.width,r=e.height;let a=16384;e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024),t.blitFramebuffer(0,0,i,r,0,0,i,r,a,9728),v.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===Q&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),t=t.texture),G(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===K&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),K=!0),t=t.texture),k(t,e)}}function Er(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===c)return 5123;if(1013===t)return 5124;if(t===l)return 5125;if(t===h)return 5126;if(t===u)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===p)return 6407;if(t===f)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===m)return 6402;if(t===g)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===d?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}br.prototype.isMeshDistanceMaterial=!0;class Tr extends hn{constructor(t=[]){super(),this.cameras=t}}Tr.prototype.isArrayCamera=!0;class Lr extends Wt{constructor(){super(),this.type="Group"}}function Rr(){this._targetRay=null,this._grip=null,this._hand=null}function Cr(t,e){const n=this,i=t.state;let r=null,a=1,s=null,o="local-floor",c=null;const l=[],h=new Map,u=new hn;u.layers.enable(1),u.viewport=new F;const d=new hn;d.layers.enable(2),d.viewport=new F;const p=[u,d],f=new Tr;f.layers.enable(1),f.layers.enable(2);let m=null,g=null;function v(t){const e=h.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function y(){h.forEach((function(t,e){t.disconnect(e)})),h.clear(),m=null,g=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(t){const e=r.inputSources;for(let t=0;t<l.length;t++)h.set(e[t],l[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=h.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),h.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=h.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new Rr,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new Rr,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new Rr,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return r},this.setSession=async function(t){if(r=t,null!==r){r.addEventListener("select",v),r.addEventListener("selectstart",v),r.addEventListener("selectend",v),r.addEventListener("squeeze",v),r.addEventListener("squeezestart",v),r.addEventListener("squeezeend",v),r.addEventListener("end",y),r.addEventListener("inputsourceschange",x);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const i={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:a},c=new XRWebGLLayer(r,e,i);r.updateRenderState({baseLayer:c}),s=await r.requestReferenceSpace(o),S.setContext(r),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const _=new k,w=new k;function b(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){f.near=d.near=u.near=t.near,f.far=d.far=u.far=t.far,m===f.near&&g===f.far||(r.updateRenderState({depthNear:f.near,depthFar:f.far}),m=f.near,g=f.far);const e=t.parent,n=f.cameras;b(f,e);for(let t=0;t<n.length;t++)b(n[t],e);t.matrixWorld.copy(f.matrixWorld),t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){_.setFromMatrixPosition(e.matrixWorld),w.setFromMatrixPosition(n.matrixWorld);const i=_.distanceTo(w),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),c=(r[9]+1)/r[5],l=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=o+f,y=d-m,x=p+(i-m),b=c*o/v*g,M=l*o/v*g;t.projectionMatrix.makePerspective(y,x,b,M,g,v)}(f,u,d):f.projectionMatrix.copy(u.projectionMatrix),f};let M=null;const S=new xn;S.setAnimationLoop((function(t,e){if(c=e.getViewerPose(s),null!==c){const t=c.views,e=r.renderState.baseLayer;i.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i],a=e.getViewport(r),s=p[i];s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&f.matrix.copy(s.matrix),!0===n&&f.cameras.push(s)}}const n=r.inputSources;for(let t=0;t<l.length;t++){const i=l[t],r=n[t];i.update(r,e,s)}M&&M(t,e)})),this.setAnimationLoop=function(t){M=t},this.dispose=function(){}}function Pr(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,a;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,a){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){let r;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,a):i.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Dr(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",d=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let p=null,m=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=M,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const y=this;let x=!1,_=0,w=0,b=null,S=-1,A=null;const E=new F,T=new F;let L=null,R=e.width,C=e.height,I=1,N=null,O=null;const z=new F(0,0,R,C),B=new F(0,0,R,C);let H=!1;const U=new yn;let G=!1,V=!1;const W=new xt,q=new k,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===b?I:1}let Z,Y,J,Q,K,$,tt,et,nt,it,rt,at,st,ot,ct,lt,ht,ut,dt,pt,ft,mt,gt=n;function vt(t,n){for(let i=0;i<t.length;i++){const r=t[i],a=e.getContext(r,n);if(null!==a)return a}return null}try{const t={alpha:i,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:d};if(e.addEventListener("webglcontextlost",wt,!1),e.addEventListener("webglcontextrestored",bt,!1),null===gt){const e=["webgl2","webgl","experimental-webgl"];if(!0===y.isWebGL1Renderer&&e.shift(),gt=vt(e,t),null===gt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===gt.getShaderPrecisionFormat&&(gt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function yt(){Z=new Pn(gt),Y=new Ln(gt,Z,t),Z.init(Y),ft=new Er(gt,Z,Y),J=new Sr(gt,Z,Y),Q=new Nn(gt),K=new hr,$=new Ar(gt,Z,J,K,Y,ft,Q),tt=new Cn(y),et=new _n(gt,Y),mt=new En(gt,Z,et,Y),nt=new Dn(gt,et,Q,mt),it=new Hn(gt,nt,et,Q),ut=new Bn(gt),ct=new Rn(K),rt=new lr(y,tt,Z,Y,mt,ct),at=new Pr(K),st=new fr(K),ot=new _r(Z,Y),ht=new An(y,tt,J,it,o),lt=new Mr(y,it,Y),dt=new Tn(gt,Z,Q,Y),pt=new In(gt,Z,Q,Y),Q.programs=rt.programs,y.capabilities=Y,y.extensions=Z,y.properties=K,y.renderLists=st,y.shadowMap=lt,y.state=J,y.info=Q}yt();const _t=new Cr(y,gt);function wt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function bt(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const t=Q.autoReset,e=lt.enabled,n=lt.autoUpdate,i=lt.needsUpdate,r=lt.type;yt(),Q.autoReset=t,lt.enabled=e,lt.autoUpdate=n,lt.needsUpdate=i,lt.type=r}function Mt(t){const e=t.target;e.removeEventListener("dispose",Mt),function(t){(function(t){const e=K.get(t).programs;void 0!==e&&e.forEach((function(t){rt.releaseProgram(t)}))})(t),K.remove(t)}(e)}this.xr=_t,this.getContext=function(){return gt},this.getContextAttributes=function(){return gt.getContextAttributes()},this.forceContextLoss=function(){const t=Z.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Z.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(t){void 0!==t&&(I=t,this.setSize(R,C,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new D),t.set(R,C)},this.setSize=function(t,n,i){_t.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(R=t,C=n,e.width=Math.floor(t*I),e.height=Math.floor(n*I),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new D),t.set(R*I,C*I).floor()},this.setDrawingBufferSize=function(t,n,i){R=t,C=n,I=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new F),t.copy(E)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),J.viewport(E.copy(z).multiplyScalar(I).floor())},this.getScissor=function(t){return t.copy(B)},this.setScissor=function(t,e,n,i){t.isVector4?B.set(t.x,t.y,t.z,t.w):B.set(t,e,n,i),J.scissor(T.copy(B).multiplyScalar(I).floor())},this.getScissorTest=function(){return H},this.setScissorTest=function(t){J.setScissorTest(H=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){O=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new fe),t.copy(ht.getClearColor())},this.setClearColor=function(){ht.setClearColor.apply(ht,arguments)},this.getClearAlpha=function(){return ht.getClearAlpha()},this.setClearAlpha=function(){ht.setClearAlpha.apply(ht,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),gt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",wt,!1),e.removeEventListener("webglcontextrestored",bt,!1),st.dispose(),ot.dispose(),K.dispose(),tt.dispose(),it.dispose(),mt.dispose(),_t.dispose(),_t.removeEventListener("sessionstart",At),_t.removeEventListener("sessionend",Et),Tt.stop()},this.renderBufferImmediate=function(t,e){mt.initAttributes();const n=K.get(t);t.hasPositions&&!n.position&&(n.position=gt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=gt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=gt.createBuffer()),t.hasColors&&!n.color&&(n.color=gt.createBuffer());const i=e.getAttributes();t.hasPositions&&(gt.bindBuffer(34962,n.position),gt.bufferData(34962,t.positionArray,35048),mt.enableAttribute(i.position),gt.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(gt.bindBuffer(34962,n.normal),gt.bufferData(34962,t.normalArray,35048),mt.enableAttribute(i.normal),gt.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(gt.bindBuffer(34962,n.uv),gt.bufferData(34962,t.uvArray,35048),mt.enableAttribute(i.uv),gt.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(gt.bindBuffer(34962,n.color),gt.bufferData(34962,t.colorArray,35048),mt.enableAttribute(i.color),gt.vertexAttribPointer(i.color,3,5126,!1,0,0)),mt.disableUnusedAttributes(),gt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=j);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=It(t,e,i,r);J.setMaterial(i,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let h,u=1;!0===i.wireframe&&(c=nt.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&ut.update(r,n,i,o),mt.setup(r,i,o,n,c);let d=dt;null!==c&&(h=et.get(c),d=pt,d.setIndex(h));const p=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==a?a.start*u:0,v=null!==a?a.count*u:1/0,y=Math.max(f,g),x=Math.min(p,f+m,g+v)-1,_=Math.max(0,x-y+1);if(0!==_){if(r.isMesh)!0===i.wireframe?(J.setLineWidth(i.wireframeLinewidth*X()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),J.setLineWidth(t*X()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(y,_,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,_,t)}else d.render(y,_)}},this.compile=function(t,e){m=ot.get(t),m.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++)Pt(n[i],t,e);else Pt(n,t,e)}))};let St=null;function At(){Tt.stop()}function Et(){Tt.start()}const Tt=new xn;function Lt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||U.intersectsSprite(t)){i&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(W);const e=it.update(t),r=t.material;r.visible&&p.push(t,e,r,n,q.z,null)}}else if(t.isImmediateRenderObject)i&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(W),p.push(t,null,t.material,n,q.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Q.render.frame&&(t.skeleton.update(),t.skeleton.frame=Q.render.frame),!t.frustumCulled||U.intersectsObject(t))){i&&q.setFromMatrixPosition(t.matrixWorld).applyMatrix4(W);const e=it.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&p.push(t,e,o,n,q.z,s)}}else r.visible&&p.push(t,e,r,n,q.z,null)}const r=t.children;for(let t=0,a=r.length;t<a;t++)Lt(r[t],e,n,i)}function Rt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,c=null===i?a.material:i,l=a.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(J.viewport(E.copy(i.viewport)),m.setupLightsView(i),Ct(s,e,i,o,c,l))}}else Ct(s,e,n,o,c,l)}}function Ct(t,e,n,i,r,a){if(t.onBeforeRender(y,e,n,i,r,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=It(n,e,r,t);J.setMaterial(r),mt.reset(),function(t,e){t.render((function(t){y.renderBufferImmediate(t,e)}))}(t,i)}else y.renderBufferDirect(n,e,i,r,t,a);t.onAfterRender(y,e,n,i,r,a)}function Pt(t,e,n){!0!==e.isScene&&(e=j);const i=K.get(t),r=m.state.lights,a=m.state.shadowsArray,s=r.state.version,o=rt.getParameters(t,r.state,a,e,n),c=rt.getProgramCacheKey(o);let l=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=tt.get(t.envMap||i.environment),void 0===l&&(t.addEventListener("dispose",Mt),l=new Map,i.programs=l);let h=l.get(c);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Dt(t,o),h}else o.uniforms=rt.getUniforms(t),t.onBeforeCompile(o,y),h=rt.acquireProgram(o,c),l.set(c,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Dt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const d=h.getUniforms(),p=ki.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Dt(t,e){const n=K.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function It(t,e,n,i){!0!==e.isScene&&(e=j),$.resetTextureUnits();const r=e.fog,a=n.isMeshStandardMaterial?e.environment:null,s=null===b?y.outputEncoding:b.texture.encoding,o=tt.get(n.envMap||a),c=!0===n.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,l=K.get(n),u=m.state.lights;if(!0===G&&(!0===V||t!==A)){const e=t===A&&n.id===S;ct.setState(n,t,e)}let d=!1;n.version===l.__version?l.needsLights&&l.lightsStateVersion!==u.state.version||l.outputEncoding!==s||i.isInstancedMesh&&!1===l.instancing?d=!0:i.isInstancedMesh||!0!==l.instancing?l.envMap!==o||n.fog&&l.fog!==r?d=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===ct.numPlanes&&l.numIntersection===ct.numIntersection?l.vertexAlphas!==c&&(d=!0):d=!0:d=!0:(d=!0,l.__version=n.version);let p=l.currentProgram;!0===d&&(p=Pt(n,e,i));let g=!1,v=!1,x=!1;const _=p.getUniforms(),w=l.uniforms;if(J.useProgram(p.program)&&(g=!0,v=!0,x=!0),n.id!==S&&(S=n.id,v=!0),g||A!==t){if(_.setValue(gt,"projectionMatrix",t.projectionMatrix),Y.logarithmicDepthBuffer&&_.setValue(gt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),A!==t&&(A=t,v=!0,x=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=_.map.cameraPosition;void 0!==e&&e.setValue(gt,q.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&_.setValue(gt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&_.setValue(gt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){_.setOptional(gt,i,"bindMatrix"),_.setOptional(gt,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(Y.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=P.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const r=new mn(i,n,n,f,h);t.boneMatrices=i,t.boneTexture=r,t.boneTextureSize=n}_.setValue(gt,"boneTexture",t.boneTexture,$),_.setValue(gt,"boneTextureSize",t.boneTextureSize)}else _.setOptional(gt,t,"boneMatrices")}}var M,E;return(v||l.receiveShadow!==i.receiveShadow)&&(l.receiveShadow=i.receiveShadow,_.setValue(gt,"receiveShadow",i.receiveShadow)),v&&(_.setValue(gt,"toneMappingExposure",y.toneMappingExposure),l.needsLights&&(E=x,(M=w).ambientLightColor.needsUpdate=E,M.lightProbe.needsUpdate=E,M.directionalLights.needsUpdate=E,M.directionalLightShadows.needsUpdate=E,M.pointLights.needsUpdate=E,M.pointLightShadows.needsUpdate=E,M.spotLights.needsUpdate=E,M.spotLightShadows.needsUpdate=E,M.rectAreaLights.needsUpdate=E,M.hemisphereLights.needsUpdate=E),r&&n.fog&&at.refreshFogUniforms(w,r),at.refreshMaterialUniforms(w,n,I,C),ki.upload(gt,l.uniformsList,w,$)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ki.upload(gt,l.uniformsList,w,$),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&_.setValue(gt,"center",i.center),_.setValue(gt,"modelViewMatrix",i.modelViewMatrix),_.setValue(gt,"normalMatrix",i.normalMatrix),_.setValue(gt,"modelMatrix",i.matrixWorld),p}Tt.setAnimationLoop((function(t){St&&St(t)})),"undefined"!=typeof window&&Tt.setContext(window),this.setAnimationLoop=function(t){St=t,_t.setAnimationLoop(t),null===t?Tt.stop():Tt.start()},_t.addEventListener("sessionstart",At),_t.addEventListener("sessionend",Et),this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===x)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===_t.enabled&&!0===_t.isPresenting&&(e=_t.getCamera(e)),!0===t.isScene&&t.onBeforeRender(y,t,e,n||b),m=ot.get(t,v.length),m.init(),v.push(m),W.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),U.setFromProjectionMatrix(W),V=this.localClippingEnabled,G=ct.init(this.clippingPlanes,V,e),p=st.get(t,g.length),p.init(),g.push(p),Lt(t,e,0,y.sortObjects),p.finish(),!0===y.sortObjects&&p.sort(N,O),!0===G&&ct.beginShadows();const r=m.state.shadowsArray;lt.render(r,t,e),m.setupLights(),m.setupLightsView(e),!0===G&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ht.render(p,t,e,i);const a=p.opaque,s=p.transparent;a.length>0&&Rt(a,t,e),s.length>0&&Rt(s,t,e),null!==b&&($.updateRenderTargetMipmap(b),$.updateMultisampleRenderTarget(b)),!0===t.isScene&&t.onAfterRender(y,t,e),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1),mt.resetDefaultState(),S=-1,A=null,v.pop(),m=v.length>0?v[v.length-1]:null,g.pop(),p=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e=0,n=0){b=t,_=e,w=n,t&&void 0===K.get(t).__webglFramebuffer&&$.setupRenderTarget(t);let i=null,r=!1,a=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const s=K.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=s[e],r=!0):i=t.isWebGLMultisampleRenderTarget?K.get(t).__webglMultisampledFramebuffer:s,E.copy(t.viewport),T.copy(t.scissor),L=t.scissorTest}else E.copy(z).multiplyScalar(I).floor(),T.copy(B).multiplyScalar(I).floor(),L=H;if(J.bindFramebuffer(36160,i),J.viewport(E),J.scissor(T),J.setScissorTest(L),r){const i=K.get(t.texture);gt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(a){const i=K.get(t.texture),r=e||0;gt.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){J.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,c=s.type;if(o!==f&&ft.convert(o)!==gt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===u&&(Z.has("EXT_color_buffer_half_float")||Y.isWebGL2&&Z.has("EXT_color_buffer_float"));if(!(1009===c||ft.convert(c)===gt.getParameter(35738)||c===h&&(Y.isWebGL2||Z.has("OES_texture_float")||Z.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===gt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&gt.readPixels(e,n,i,r,ft.convert(o),ft.convert(c),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==b?K.get(b).__webglFramebuffer:null;J.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i),s=ft.convert(e.format);$.setTexture2D(e,0),gt.copyTexImage2D(3553,n,s,t.x,t.y,r,a,0),J.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,a=e.image.height,s=ft.convert(n.format),o=ft.convert(n.type);$.setTexture2D(n,0),gt.pixelStorei(37440,n.flipY),gt.pixelStorei(37441,n.premultiplyAlpha),gt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?gt.texSubImage2D(3553,i,t.x,t.y,r,a,s,o,e.image.data):e.isCompressedTexture?gt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):gt.texSubImage2D(3553,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&gt.generateMipmap(3553),J.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(y.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:a,height:s,data:o}=n.image,c=ft.convert(i.format),l=ft.convert(i.type);let h;if(i.isDataTexture3D)$.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(i,0),h=35866}gt.pixelStorei(37440,i.flipY),gt.pixelStorei(37441,i.premultiplyAlpha),gt.pixelStorei(3317,i.unpackAlignment);const u=gt.getParameter(3314),d=gt.getParameter(32878),p=gt.getParameter(3316),f=gt.getParameter(3315),m=gt.getParameter(32877);gt.pixelStorei(3314,a),gt.pixelStorei(32878,s),gt.pixelStorei(3316,t.min.x),gt.pixelStorei(3315,t.min.y),gt.pixelStorei(32877,t.min.z),gt.texSubImage3D(h,r,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,l,o),gt.pixelStorei(3314,u),gt.pixelStorei(32878,d),gt.pixelStorei(3316,p),gt.pixelStorei(3315,f),gt.pixelStorei(32877,m),0===r&&i.generateMipmaps&&gt.generateMipmap(h),J.unbindTexture()},this.initTexture=function(t){$.setTexture2D(t,0),J.unbindTexture()},this.resetState=function(){_=0,w=0,b=null,J.reset(),mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Lr.prototype.isGroup=!0,Object.assign(Rr.prototype,{constructor:Rr,getHandSpace:function(){return null===this._hand&&(this._hand=new Lr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Lr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Lr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),c&&t.hand){a=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===c.joints[i.jointName]){const t=new Lr;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[i.jointName]=t,c.add(t)}const r=c.joints[i.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const i=c.joints["index-finger-tip"],r=c.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,l=.005;c.inputState.pinching&&s>o+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&s<=o-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==c&&(c.visible=null!==a),this}}),Object.assign(Cr.prototype,L.prototype),class extends Dr{}.prototype.isWebGL1Renderer=!0;class Ir{constructor(t,e=25e-5){this.name="",this.color=new fe(t),this.density=e}clone(){return new Ir(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ir.prototype.isFogExp2=!0;class Nr{constructor(t,e=1,n=1e3){this.name="",this.color=new fe(t),this.near=e,this.far=n}clone(){return new Nr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Nr.prototype.isFog=!0;class Or extends Wt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function zr(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=A,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=P.generateUUID()}Or.prototype.isScene=!0,Object.defineProperty(zr.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(zr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=P.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new zr(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=P.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Br=new k;function Hr(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}Object.defineProperties(Hr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Hr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)Br.x=this.getX(e),Br.y=this.getY(e),Br.z=this.getZ(e),Br.applyMatrix4(t),this.setXYZ(e,Br.x,Br.y,Br.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Br.x=this.getX(e),Br.y=this.getY(e),Br.z=this.getZ(e),Br.applyNormalMatrix(t),this.setXYZ(e,Br.x,Br.y,Br.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Br.x=this.getX(e),Br.y=this.getY(e),Br.z=this.getZ(e),Br.transformDirection(t),this.setXYZ(e,Br.x,Br.y,Br.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new ye(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Hr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class Fr extends oe{constructor(t){super(),this.type="SpriteMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let Ur;Fr.prototype.isSpriteMaterial=!0;const Gr=new k,kr=new k,Vr=new k,Wr=new D,qr=new D,jr=new xt,Xr=new k,Zr=new k,Yr=new k,Jr=new D,Qr=new D,Kr=new D;function $r(t,e,n,i,r,a){Wr.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(qr.x=a*Wr.x-r*Wr.y,qr.y=r*Wr.x+a*Wr.y):qr.copy(Wr),t.copy(e),t.x+=qr.x,t.y+=qr.y,t.applyMatrix4(jr)}(class extends Wt{constructor(t){if(super(),this.type="Sprite",void 0===Ur){Ur=new Be;const t=new zr(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Ur.setIndex([0,1,2,0,2,3]),Ur.setAttribute("position",new Hr(t,3,0,!1)),Ur.setAttribute("uv",new Hr(t,2,3,!1))}this.geometry=Ur,this.material=void 0!==t?t:new Fr,this.center=new D(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),kr.setFromMatrixScale(this.matrixWorld),jr.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Vr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&kr.multiplyScalar(-Vr.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;$r(Xr.set(-.5,-.5,0),Vr,a,kr,i,r),$r(Zr.set(.5,-.5,0),Vr,a,kr,i,r),$r(Yr.set(.5,.5,0),Vr,a,kr,i,r),Jr.set(0,0),Qr.set(1,0),Kr.set(1,1);let s=t.ray.intersectTriangle(Xr,Zr,Yr,!1,Gr);if(null===s&&($r(Zr.set(-.5,.5,0),Vr,a,kr,i,r),Qr.set(0,1),s=t.ray.intersectTriangle(Xr,Yr,Zr,!1,Gr),null===s))return;const o=t.ray.origin.distanceTo(Gr);o<t.near||o>t.far||e.push({distance:o,point:Gr.clone(),uv:ae.getUV(Gr,Xr,Zr,Yr,Jr,Qr,Kr,new D),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}).prototype.isSprite=!0;const ta=new k,ea=new F,na=new F,ia=new k,ra=new xt;function aa(t,e){en.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new xt,this.bindMatrixInverse=new xt}function sa(){Wt.call(this),this.type="Bone"}aa.prototype=Object.assign(Object.create(en.prototype),{constructor:aa,isSkinnedMesh:!0,copy:function(t){return en.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new F,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){en.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;ea.fromBufferAttribute(i.attributes.skinIndex,t),na.fromBufferAttribute(i.attributes.skinWeight,t),ta.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=na.getComponent(t);if(0!==i){const r=ea.getComponent(t);ra.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(ia.copy(ta).applyMatrix4(ra),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}),sa.prototype=Object.assign(Object.create(Wt.prototype),{constructor:sa,isBone:!0});const oa=new xt,ca=new xt,la=[],ha=new en;function ua(t,e,n){en.call(this,t,e),this.instanceMatrix=new ye(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}ua.prototype=Object.assign(Object.create(en.prototype),{constructor:ua,isInstancedMesh:!0,copy:function(t){return en.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(ha.geometry=this.geometry,ha.material=this.material,void 0!==ha.material)for(let r=0;r<i;r++){this.getMatrixAt(r,oa),ca.multiplyMatrices(n,oa),ha.matrixWorld=ca,ha.raycast(t,la);for(let t=0,n=la.length;t<n;t++){const n=la[t];n.instanceId=r,n.object=this,e.push(n)}la.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new ye(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class da extends oe{constructor(t){super(),this.type="LineBasicMaterial",this.color=new fe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}da.prototype.isLineBasicMaterial=!0;const pa=new k,fa=new k,ma=new xt,ga=new yt,va=new ht;function ya(t=new Be,e=new da){Wt.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}ya.prototype=Object.assign(Object.create(Wt.prototype),{constructor:ya,isLine:!0,copy:function(t){return Wt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)pa.fromBufferAttribute(e,t-1),fa.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=pa.distanceTo(fa);t.setAttribute("lineDistance",new Te(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),va.copy(n.boundingSphere),va.applyMatrix4(i),va.radius+=r,!1===t.ray.intersectsSphere(va))return;ma.copy(i).invert(),ga.copy(t.ray).applyMatrix4(ma);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,c=new k,l=new k,h=new k,u=new k,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i)for(let n=Math.max(0,a.start),s=Math.min(i.count,a.start+a.count)-1;n<s;n+=d){const a=i.getX(n),s=i.getX(n+1);if(c.fromBufferAttribute(r,a),l.fromBufferAttribute(r,s),ga.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(u);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),i=Math.min(r.count,a.start+a.count)-1;n<i;n+=d){if(c.fromBufferAttribute(r,n),l.fromBufferAttribute(r,n+1),ga.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const xa=new k,_a=new k;function wa(t,e){ya.call(this,t,e),this.type="LineSegments"}wa.prototype=Object.assign(Object.create(ya.prototype),{constructor:wa,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)xa.fromBufferAttribute(e,t),_a.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+xa.distanceTo(_a);t.setAttribute("lineDistance",new Te(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});(class extends ya{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class ba extends oe{constructor(t){super(),this.type="PointsMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}ba.prototype.isPointsMaterial=!0;const Ma=new xt,Sa=new yt,Aa=new ht,Ea=new k;function Ta(t=new Be,e=new ba){Wt.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function La(t,e,n,i,r,a,s){const o=Sa.distanceSqToPoint(t);if(o<n){const n=new k;Sa.closestPointToPoint(t,n),n.applyMatrix4(i);const c=r.ray.origin.distanceTo(n);if(c<r.near||c>r.far)return;a.push({distance:c,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:s})}}Ta.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Ta,isPoints:!0,copy:function(t){return Wt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Aa.copy(n.boundingSphere),Aa.applyMatrix4(i),Aa.radius+=r,!1===t.ray.intersectsSphere(Aa))return;Ma.copy(i).invert(),Sa.copy(t.ray).applyMatrix4(Ma);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r)for(let n=Math.max(0,a.start),c=Math.min(r.count,a.start+a.count);n<c;n++){const a=r.getX(n);Ea.fromBufferAttribute(s,a),La(Ea,a,o,i,t,e,this)}else for(let n=Math.max(0,a.start),r=Math.min(s.count,a.start+a.count);n<r;n++)Ea.fromBufferAttribute(s,n),La(Ea,n,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),class extends B{constructor(t,e,n,i,r,a,o,c,l){super(t,e,n,i,r,a,o,c,l),this.format=void 0!==o?o:p,this.minFilter=void 0!==a?a:s,this.magFilter=void 0!==r?r:s,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;class Ra extends B{constructor(t,e,n,i,r,a,s,o,c,l,h,u){super(null,a,s,o,c,l,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Ra.prototype.isCompressedTexture=!0,class extends B{constructor(t,e,n,i,r,a,s,o,c){super(t,e,n,i,r,a,s,o,c),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends B{constructor(t,e,n,i,r,s,o,l,h,u){if((u=void 0!==u?u:m)!==m&&u!==g)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===m&&(n=c),void 0===n&&u===g&&(n=d),super(null,i,r,s,o,l,u,n,h),this.image={width:t,height:e},this.magFilter=void 0!==o?o:a,this.minFilter=void 0!==l?l:a,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0,new k,new k,new k,new ae;function Ca(t,e,n,i,r){let a,s;if(r===function(t,e,n,i){let r=0;for(let a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}(t,e,n,i)>0)for(a=e;a<n;a+=i)s=Qa(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=Qa(a,t[a],t[a+1],s);return s&&qa(s,s.next)&&(Ka(s),s=s.next),s}function Pa(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!qa(i,i.next)&&0!==Wa(i.prev,i,i.next))i=i.next;else{if(Ka(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Da(t,e,n,i,r,a,s){if(!t)return;!s&&a&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=Ua(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,a,s,o,c,l=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<l&&(o++,i=i.nextZ,i);e++);for(c=l;o>0||c>0&&i;)0!==o&&(0===c||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,c--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,l*=2}while(s>1)}(r)}(t,i,r,a);let o,c,l=t;for(;t.prev!==t.next;)if(o=t.prev,c=t.next,a?Na(t,i,r,a):Ia(t))e.push(o.i/n),e.push(t.i/n),e.push(c.i/n),Ka(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?Da(t=Oa(Pa(t),e,n),e,n,i,r,a,2):2===s&&za(t,e,n,i,r,a):Da(Pa(t),e,n,i,r,a,1);break}}function Ia(t){const e=t.prev,n=t,i=t.next;if(Wa(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(ka(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Wa(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Na(t,e,n,i){const r=t.prev,a=t,s=t.next;if(Wa(r,a,s)>=0)return!1;const o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,c=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,l=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,u=Ua(o,c,e,n,i),d=Ua(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&ka(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&Wa(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&ka(r.x,r.y,a.x,a.y,s.x,s.y,f.x,f.y)&&Wa(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&ka(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&Wa(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&ka(r.x,r.y,a.x,a.y,s.x,s.y,f.x,f.y)&&Wa(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Oa(t,e,n){let i=t;do{const r=i.prev,a=i.next.next;!qa(r,a)&&ja(r,i,i.next,a)&&Ya(r,a)&&Ya(a,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(a.i/n),Ka(i),Ka(i.next),i=t=a),i=i.next}while(i!==t);return Pa(i)}function za(t,e,n,i,r,a){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&Va(s,t)){let o=Ja(s,t);return s=Pa(s,s.next),o=Pa(o,o.next),Da(s,e,n,i,r,a),void Da(o,e,n,i,r,a)}t=t.next}s=s.next}while(s!==t)}function Ba(t,e){return t.x-e.x}function Ha(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let a,s=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===s)return a;const o=a,c=a.x,l=a.y;let h,u=1/0;n=a;do{i>=n.x&&n.x>=c&&i!==n.x&&ka(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),Ya(n,t)&&(h<u||h===u&&(n.x>a.x||n.x===a.x&&Fa(a,n)))&&(a=n,u=h)),n=n.next}while(n!==o);return a}(t,e)){const n=Ja(e,t);Pa(e,e.next),Pa(n,n.next)}}function Fa(t,e){return Wa(t.prev,t,e.prev)<0&&Wa(e.next,t,t.next)<0}function Ua(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Ga(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function ka(t,e,n,i,r,a,s,o){return(r-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function Va(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&ja(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Ya(t,e)&&Ya(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Wa(t.prev,t,e.prev)||Wa(t,e.prev,e))||qa(t,e)&&Wa(t.prev,t,t.next)>0&&Wa(e.prev,e,e.next)>0)}function Wa(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function qa(t,e){return t.x===e.x&&t.y===e.y}function ja(t,e,n,i){const r=Za(Wa(t,e,n)),a=Za(Wa(t,e,i)),s=Za(Wa(n,i,t)),o=Za(Wa(n,i,e));return r!==a&&s!==o||!(0!==r||!Xa(t,n,e))||!(0!==a||!Xa(t,i,e))||!(0!==s||!Xa(n,t,i))||!(0!==o||!Xa(n,e,i))}function Xa(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Za(t){return t>0?1:t<0?-1:0}function Ya(t,e){return Wa(t.prev,t,t.next)<0?Wa(t,e,t.next)>=0&&Wa(t,t.prev,e)>=0:Wa(t,e,t.prev)<0||Wa(t,t.next,e)<0}function Ja(t,e){const n=new $a(t.i,t.x,t.y),i=new $a(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function Qa(t,e,n,i){const r=new $a(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Ka(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function $a(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const ts={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n},isClockWise:function(t){return ts.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];es(t),ns(n,t);let a=t.length;e.forEach(es);for(let t=0;t<e.length;t++)i.push(a),a+=e[t].length,ns(n,e[t]);const s=function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let a=Ca(t,0,r,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,c,l,h,u,d,p;if(i&&(a=function(t,e,n,i){const r=[];let a,s,o,c,l;for(a=0,s=e.length;a<s;a++)o=e[a]*i,c=a<s-1?e[a+1]*i:t.length,l=Ca(t,o,c,i,!1),l===l.next&&(l.steiner=!0),r.push(Ga(l));for(r.sort(Ba),a=0;a<r.length;a++)Ha(r[a],n),n=Pa(n,n.next);return n}(t,e,a,n)),t.length>80*n){o=l=t[0],c=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=Math.max(l-o,h-c),p=0!==p?1/p:0}return Da(a,s,n,o,c,p),s}(n,i);for(let t=0;t<s.length;t+=3)r.push(s.slice(t,t+3));return r}};function es(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function ns(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class is extends Be{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++)a(t[e]);function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:rs;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,v,y,x,_,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,l=!1,v=f.computeFrenetFrames(o,!1),y=new k,x=new k,_=new k),l||(p=0,h=0,u=0,d=0);const b=t.extractPoints(s);let M=b.shape;const S=b.holes;if(!ts.isClockWise(M)){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];ts.isClockWise(e)&&(S[t]=e.reverse())}}const A=ts.triangulateShape(M,S),E=M;for(let t=0,e=S.length;t<e;t++){const e=S[t];M=M.concat(e)}function T(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const L=M.length,R=A.length;function C(t,e,n){let i,r,a;const s=t.x-e.x,o=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=s*s+o*o,u=s*l-o*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-o/u,f=e.y+s/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-o*c);i=p+s*m-t.x,r=f+o*m-t.y;const g=i*i+r*r;if(g<=2)return new D(i,r);a=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(l)&&(t=!0),t?(i=-o,r=s,a=Math.sqrt(h)):(i=s,r=o,a=Math.sqrt(h/2))}return new D(i/a,r/a)}const P=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),P[t]=C(E[t],E[n],E[i]);const I=[];let N,O=P.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];N=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),N[t]=C(e[t],e[i],e[r]);I.push(N),O=O.concat(N)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=T(E[t],P[t],i);H(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=I[t];for(let t=0,r=e.length;t<r;t++){const r=T(e[t],N[t],i);H(r.x,r.y,-n)}}}const z=u+d;for(let t=0;t<L;t++){const e=l?T(M[t],O[t],z):M[t];w?(x.copy(v.normals[0]).multiplyScalar(e.x),y.copy(v.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(x).add(y),H(_.x,_.y,_.z)):H(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<L;e++){const n=l?T(M[e],O[e],z):M[e];w?(x.copy(v.normals[t]).multiplyScalar(n.x),y.copy(v.binormals[t]).multiplyScalar(n.y),_.copy(g[t]).add(x).add(y),H(_.x,_.y,_.z)):H(n.x,n.y,c/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=T(E[t],P[t],i);H(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=I[t];for(let t=0,r=e.length;t<r;t++){const r=T(e[t],N[t],i);w?H(r.x,r.y+g[o-1].y,g[o-1].x+n):H(r.x,r.y,c+n)}}}function B(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=L*t,a=L*(t+1);U(e+i+n,e+r+n,e+r+a,e+i+a)}}}function H(t,e,n){a.push(t),a.push(e),a.push(n)}function F(t,e,r){G(t),G(e),G(r);const a=i.length/3,s=m.generateTopUV(n,i,a-3,a-2,a-1);V(s[0]),V(s[1]),V(s[2])}function U(t,e,r,a){G(t),G(e),G(a),G(e),G(r),G(a);const s=i.length/3,o=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);V(o[0]),V(o[1]),V(o[3]),V(o[1]),V(o[2]),V(o[3])}function G(t){i.push(a[3*t+0]),i.push(a[3*t+1]),i.push(a[3*t+2])}function V(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(l){let t=0,e=L*t;for(let t=0;t<R;t++){const n=A[t];F(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=L*t;for(let t=0;t<R;t++){const n=A[t];F(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<R;t++){const e=A[t];F(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=A[t];F(e[0]+L*o,e[1]+L*o,e[2]+L*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;B(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];B(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Te(i,3)),this.setAttribute("uv",new Te(r,2)),this.computeVertexNormals()}toJSON(){const t=Be.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const rs={generateTopUV:function(t,e,n,i,r){const a=e[3*n],s=e[3*n+1],o=e[3*i],c=e[3*i+1],l=e[3*r],h=e[3*r+1];return[new D(a,s),new D(o,c),new D(l,h)]},generateSideWallUV:function(t,e,n,i,r,a){const s=e[3*n],o=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(o-h)<.01?[new D(s,1-c),new D(l,1-u),new D(d,1-f),new D(m,1-v)]:[new D(o,1-c),new D(h,1-u),new D(p,1-f),new D(g,1-v)]}};function as(t,e,n){Be.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],a=[],s=[],o=1e-5,c=new k,l=new k,h=new k,u=new k,d=new k;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let i=0;i<=n;i++){const p=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,p,l),r.push(l.x,l.y,l.z),i-o>=0?(t(i-o,p,h),u.subVectors(l,h)):(t(i+o,p,h),u.subVectors(h,l)),p-o>=0?(t(i,p-o,h),d.subVectors(l,h)):(t(i,p+o,h),d.subVectors(h,l)),c.crossVectors(u,d).normalize(),a.push(c.x,c.y,c.z),s.push(i,p)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*p+n,r=t*p+n+1,a=(t+1)*p+n+1,s=(t+1)*p+n;i.push(e,r,s),i.push(r,a,s)}this.setIndex(i),this.setAttribute("position",new Te(r,3)),this.setAttribute("normal",new Te(a,3)),this.setAttribute("uv",new Te(s,2))}as.prototype=Object.create(Be.prototype),as.prototype.constructor=as;class ss extends Be{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],a=[];let s=0,o=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(s,o,e),s+=o,o=0;function c(t){const s=i.length/3,c=t.extractPoints(e);let l=c.shape;const h=c.holes;!1===ts.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ts.isClockWise(e)&&(h[t]=e.reverse())}const u=ts.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];i.push(e.x,e.y,0),r.push(0,0,1),a.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+s,r=e[1]+s,a=e[2]+s;n.push(i,r,a),o+=3}}this.setIndex(n),this.setAttribute("position",new Te(i,3)),this.setAttribute("normal",new Te(r,3)),this.setAttribute("uv",new Te(a,2))}toJSON(){const t=Be.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}(class extends oe{constructor(t){super(),this.type="ShadowMaterial",this.color=new fe(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;function os(t){oe.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}function cs(t){os.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new D(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=P.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}(class extends cn{constructor(t){super(t),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0,os.prototype=Object.create(oe.prototype),os.prototype.constructor=os,os.prototype.isMeshStandardMaterial=!0,os.prototype.copy=function(t){return oe.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this},cs.prototype=Object.create(os.prototype),cs.prototype.constructor=cs,cs.prototype.isMeshPhysicalMaterial=!0,cs.prototype.copy=function(t){return os.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new fe).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};(class extends oe{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new fe(16777215),this.specular=new fe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshPhongMaterial=!0;(class extends oe{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new fe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class extends oe{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends oe{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class extends oe{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new fe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends da{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const ls={arraySlice:function(t,e,n){return ls.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let a=0,s=0;s!==i;++a){const i=n[a]*e;for(let n=0;n!==e;++n)r[s++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,a=t[0];for(;void 0!==a&&void 0===a[i];)a=t[r++];if(void 0===a)return;let s=a[i];if(void 0!==s)if(Array.isArray(s))do{s=a[i],void 0!==s&&(e.push(a.time),n.push.apply(n,s)),a=t[r++]}while(void 0!==a);else if(void 0!==s.toArray)do{s=a[i],void 0!==s&&(e.push(a.time),s.toArray(n,n.length)),a=t[r++]}while(void 0!==a);else do{s=a[i],void 0!==s&&(e.push(a.time),n.push(s)),a=t[r++]}while(void 0!==a)},subclip:function(t,e,n,i,r=30){const a=t.clone();a.name=e;const s=[];for(let t=0;t<a.tracks.length;++t){const e=a.tracks[t],o=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const a=e.times[t]*r;if(!(a<n||a>=i)){c.push(e.times[t]);for(let n=0;n<o;++n)l.push(e.values[t*o+n])}}0!==c.length&&(e.times=ls.convertArray(c,e.times.constructor),e.values=ls.convertArray(l,e.values.constructor),s.push(e))}a.tracks=s;let o=1/0;for(let t=0;t<a.tracks.length;++t)o>a.tracks[t].times[0]&&(o=a.tracks[t].times[0]);for(let t=0;t<a.tracks.length;++t)a.tracks[t].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,a=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===r}));if(void 0===s)continue;let o=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=c/3);let l=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(a<=i.times[0]){const t=o,e=c-o;d=ls.arraySlice(i.values,t,e)}else if(a>=i.times[u]){const t=u*c+o,e=t+c-o;d=ls.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=o,n=c-o;t.evaluate(a),d=ls.arraySlice(t.resultBuffer,e,n)}"quaternion"===r&&(new G).fromArray(d).normalize().conjugate().toArray(d);const p=s.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===r)G.multiplyQuaternionsFlat(s.values,e,d,0,s.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)s.values[e+n]-=d[n]}}}return t.blendMode=2501,t}};function hs(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function us(t,e,n,i){hs.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function ds(t,e,n,i){hs.call(this,t,e,n,i)}function ps(t,e,n,i){hs.call(this,t,e,n,i)}Object.assign(hs.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let a;n:{i:if(!(t<i)){for(let a=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===a)break;if(r=i,i=e[++n],t<i)break e}a=e.length;break n}if(t>=r)break t;{const s=e[1];t<s&&(n=2,r=s);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break e}a=n,n=0}}for(;n<a;){const i=n+a>>>1;t<e[i]?a=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(hs.prototype,{beforeStart_:hs.prototype.copySampleValue_,afterEnd_:hs.prototype.copySampleValue_}),us.prototype=Object.assign(Object.create(hs.prototype),{constructor:us,DefaultSettings_:{endingStart:_,endingEnd:_},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,a=t+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case w:r=t,s=2*e-n;break;case b:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case w:a=t,o=2*n-e;break;case b:a=1,o=n+i[1]-i[0];break;default:a=t-1,o=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(o-n),this._offsetPrev=r*l,this._offsetNext=a*l},interpolate_:function(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==s;++t)r[t]=g*a[l+t]+v*a[c+t]+y*a[o+t]+x*a[h+t];return r}}),ds.prototype=Object.assign(Object.create(hs.prototype),{constructor:ds,interpolate_:function(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==s;++t)r[t]=a[c+t]*h+a[o+t]*l;return r}}),ps.prototype=Object.assign(Object.create(hs.prototype),{constructor:ps,interpolate_:function(t){return this.copySampleValue_(t-1)}});class fs{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ls.convertArray(e,this.TimeBufferType),this.values=ls.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:ls.convertArray(t.times,Array),values:ls.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new ps(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ds(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new us(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case v:e=this.InterpolantFactoryMethodDiscrete;break;case y:e=this.InterpolantFactoryMethodLinear;break;case x:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return v;case this.InterpolantFactoryMethodLinear:return y;case this.InterpolantFactoryMethodSmooth:return x}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==a&&n[a]>e;)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const t=this.getValueSize();this.times=ls.arraySlice(n,r,a),this.values=ls.arraySlice(this.values,r*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==a&&a>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,a),t=!1;break}a=i}if(void 0!==i&&ls.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=ls.arraySlice(this.times),e=ls.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===x,r=t.length-1;let a=1;for(let s=1;s<r;++s){let r=!1;const o=t[s];if(o!==t[s+1]&&(1!==s||o!==t[0]))if(i)r=!0;else{const t=s*n,i=t-n,a=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[a+s]){r=!0;break}}}if(r){if(s!==a){t[a]=t[s];const i=s*n,r=a*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++a}}if(r>0){t[a]=t[r];for(let t=r*n,i=a*n,s=0;s!==n;++s)e[i+s]=e[t+s];++a}return a!==t.length?(this.times=ls.arraySlice(t,0,a),this.values=ls.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=ls.arraySlice(this.times,0),e=ls.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}fs.prototype.TimeBufferType=Float32Array,fs.prototype.ValueBufferType=Float32Array,fs.prototype.DefaultInterpolation=y;class ms extends fs{}ms.prototype.ValueTypeName="bool",ms.prototype.ValueBufferType=Array,ms.prototype.DefaultInterpolation=v,ms.prototype.InterpolantFactoryMethodLinear=void 0,ms.prototype.InterpolantFactoryMethodSmooth=void 0;class gs extends fs{}gs.prototype.ValueTypeName="color";class vs extends fs{}function ys(t,e,n,i){hs.call(this,t,e,n,i)}vs.prototype.ValueTypeName="number",ys.prototype=Object.assign(Object.create(hs.prototype),{constructor:ys,interpolate_:function(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-e)/(i-e);let c=t*s;for(let t=c+s;c!==t;c+=4)G.slerpFlat(r,0,a,c-s,a,c,o);return r}});class xs extends fs{InterpolantFactoryMethodLinear(t){return new ys(this.times,this.values,this.getValueSize(),t)}}xs.prototype.ValueTypeName="quaternion",xs.prototype.DefaultInterpolation=y,xs.prototype.InterpolantFactoryMethodSmooth=void 0;class _s extends fs{}_s.prototype.ValueTypeName="string",_s.prototype.ValueBufferType=Array,_s.prototype.DefaultInterpolation=v,_s.prototype.InterpolantFactoryMethodLinear=void 0,_s.prototype.InterpolantFactoryMethodSmooth=void 0;class ws extends fs{}ws.prototype.ValueTypeName="vector";class bs{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=P.generateUUID(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(Ms(n[t]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(fs.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,a=[];for(let t=0;t<r;t++){let s=[],o=[];s.push((t+r-1)%r,t,(t+1)%r),o.push(0,1,0);const c=ls.getKeyframeOrder(s);s=ls.sortedArray(s,1,c),o=ls.sortedArray(o,1,c),i||0!==s[0]||(s.push(r),o.push(o[0])),a.push(new vs(".morphTargetInfluences["+e[t].name+"]",s,o).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],a=n.name.match(r);if(a&&a.length>1){const t=a[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const a=[];for(const t in i)a.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const a=[],s=[];ls.flattenJSON(n,a,s,i),0!==a.length&&r.push(new t(e,a,s))}},i=[],r=t.name||"default",a=t.fps||30,s=t.blendMode;let o=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const r=c[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],a=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),a.push(i.morphTarget===n?1:0)}i.push(new vs(".morphTargetInfluence["+n+"]",t,a))}o=t.length*(a||1)}else{const a=".bones["+e[t].name+"]";n(ws,a+".position",r,"pos",i),n(xs,a+".quaternion",r,"rot",i),n(ws,a+".scale",r,"scl",i)}}return 0===i.length?null:new this(r,o,i,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ms(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return vs;case"vector":case"vector2":case"vector3":case"vector4":return ws;case"color":return gs;case"quaternion":return xs;case"bool":case"boolean":return ms;case"string":return _s}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];ls.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Ss={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const As=new function(t,e,n){const i=this;let r,a=!1,s=0,o=0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===a&&void 0!==i.onStart&&i.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}};function Es(t){this.manager=void 0!==t?t:As,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Es.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Ts={};function Ls(t){Es.call(this,t)}function Rs(t){Es.call(this,t)}Ls.prototype=Object.assign(Object.create(Es.prototype),{constructor:Ls,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Ss.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;if(void 0!==Ts[t])return void Ts[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],a=!!s[2];let o=s[3];o=decodeURIComponent(o),a&&(o=atob(o));try{let i;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o.charCodeAt(e);i="blob"===a?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(o,n);break;case"json":i=JSON.parse(o);break;default:i=o}setTimeout((function(){e&&e(i),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{Ts[t]=[],Ts[t].push({onLoad:e,onProgress:n,onError:i}),o=new XMLHttpRequest,o.open("GET",t,!0),o.addEventListener("load",(function(e){const n=this.response,i=Ts[t];if(delete Ts[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ss.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}r.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),o.addEventListener("progress",(function(e){const n=Ts[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),o.addEventListener("error",(function(e){const n=Ts[t];delete Ts[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),o.addEventListener("abort",(function(e){const n=Ts[t];delete Ts[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)o.setRequestHeader(t,this.requestHeader[t]);o.send(null)}return r.manager.itemStart(t),o},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Rs.prototype=Object.assign(Object.create(Es.prototype),{constructor:Rs,load:function(t,e,n,i){const r=this,a=[],o=new Ra,c=new Ls(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let l=0;function h(h){c.load(t[h],(function(t){const n=r.parse(t,!0);a[h]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(o.minFilter=s),o.image=a,o.format=n.format,o.needsUpdate=!0,e&&e(o))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)h(e);else c.load(t,(function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){a[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)a[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),a[e].format=n.format,a[e].width=n.width,a[e].height=n.height}o.image=a}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=s),o.format=n.format,o.needsUpdate=!0,e&&e(o)}),n,i);return o}});class Cs extends Es{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Ss.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),Ss.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}}class Ps extends Es{constructor(t){super(t)}load(t,e,n,i){const r=new pn,a=new Cs(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(n){a.load(t[n],(function(t){r.images[n]=t,s++,6===s&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return r}}function Ds(t){Es.call(this,t)}function Is(t){Es.call(this,t)}function Ns(){this.type="Curve",this.arcLengthDivisions=200}Ds.prototype=Object.assign(Object.create(Es.prototype),{constructor:Ds,load:function(t,e,n,r){const a=this,c=new mn,l=new Ls(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(a.withCredentials),l.load(t,(function(t){const n=a.parse(t);n&&(void 0!==n.image?c.image=n.image:void 0!==n.data&&(c.image.width=n.width,c.image.height=n.height,c.image.data=n.data),c.wrapS=void 0!==n.wrapS?n.wrapS:i,c.wrapT=void 0!==n.wrapT?n.wrapT:i,c.magFilter=void 0!==n.magFilter?n.magFilter:s,c.minFilter=void 0!==n.minFilter?n.minFilter:s,c.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(c.encoding=n.encoding),void 0!==n.flipY&&(c.flipY=n.flipY),void 0!==n.format&&(c.format=n.format),void 0!==n.type&&(c.type=n.type),void 0!==n.mipmaps&&(c.mipmaps=n.mipmaps,c.minFilter=o),1===n.mipmapCount&&(c.minFilter=s),void 0!==n.generateMipmaps&&(c.generateMipmaps=n.generateMipmaps),c.needsUpdate=!0,e&&e(c,n))}),n,r),c}}),Is.prototype=Object.assign(Object.create(Es.prototype),{constructor:Is,load:function(t,e,n,i){const r=new B,a=new Cs(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(n){r.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=i?p:f,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}),Object.assign(Ns.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let a;a=e||t*n[r-1];let s,o=0,c=r-1;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),s=n[i]-a,s<0)o=i+1;else{if(!(s>0)){c=i;break}c=i-1}if(i=c,n[i]===a)return i/(r-1);const l=n[i];return(i+(a-l)/(n[i+1]-l))/(r-1)},getTangent:function(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),s=this.getPoint(r),o=e||(a.isVector2?new D:new k);return o.copy(s).sub(a).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new k,i=[],r=[],a=[],s=new k,o=new xt;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new k),i[e].normalize()}r[0]=new k,a[0]=new k;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(P.clamp(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(o.makeRotationAxis(s,t))}a[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(P.clamp(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});class Os extends Ns{constructor(t=0,e=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new D,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=c-this.aY;o=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(o,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Os.prototype.isEllipseCurve=!0;class zs extends Os{constructor(t,e,n,i,r,a){super(t,e,n,n,i,r,a),this.type="ArcCurve"}}function Bs(){let t=0,e=0,n=0,i=0;function r(r,a,s,o){t=r,e=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(t,e,n,i,a){r(e,n,a*(n-t),a*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,a,s,o){let c=(e-t)/a-(n-t)/(a+s)+(n-e)/s,l=(n-e)/s-(i-e)/(s+o)+(i-n)/o;c*=s,l*=s,r(e,n,c,l)},calc:function(r){const a=r*r;return t+e*r+n*a+i*(a*r)}}}zs.prototype.isArcCurve=!0;const Hs=new k,Fs=new Bs,Us=new Bs,Gs=new Bs;class ks extends Ns{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new k){const n=e,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t;let s,o,c=Math.floor(a),l=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:0===l&&c===r-1&&(c=r-2,l=1),this.closed||c>0?s=i[(c-1)%r]:(Hs.subVectors(i[0],i[1]).add(i[0]),s=Hs);const h=i[c%r],u=i[(c+1)%r];if(this.closed||c+2<r?o=i[(c+2)%r]:(Hs.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=Hs),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Fs.initNonuniformCatmullRom(s.x,h.x,u.x,o.x,e,n,i),Us.initNonuniformCatmullRom(s.y,h.y,u.y,o.y,e,n,i),Gs.initNonuniformCatmullRom(s.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Fs.initCatmullRom(s.x,h.x,u.x,o.x,this.tension),Us.initCatmullRom(s.y,h.y,u.y,o.y,this.tension),Gs.initCatmullRom(s.z,h.z,u.z,o.z,this.tension));return n.set(Fs.calc(l),Us.calc(l),Gs.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new k).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Vs(t,e,n,i,r){const a=.5*(i-e),s=.5*(r-n),o=t*t;return(2*n-2*i+a+s)*(t*o)+(-3*n+3*i-2*a-s)*o+a*t+n}function Ws(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function qs(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}ks.prototype.isCatmullRomCurve3=!0;class js extends Ns{constructor(t=new D,e=new D,n=new D,i=new D){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new D){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(qs(t,i.x,r.x,a.x,s.x),qs(t,i.y,r.y,a.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}js.prototype.isCubicBezierCurve=!0;class Xs extends Ns{constructor(t=new k,e=new k,n=new k,i=new k){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new k){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(qs(t,i.x,r.x,a.x,s.x),qs(t,i.y,r.y,a.y,s.y),qs(t,i.z,r.z,a.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Xs.prototype.isCubicBezierCurve3=!0;class Zs extends Ns{constructor(t=new D,e=new D){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new D){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new D;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Zs.prototype.isLineCurve=!0;class Ys extends Ns{constructor(t=new D,e=new D,n=new D){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new D){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(Ws(t,i.x,r.x,a.x),Ws(t,i.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ys.prototype.isQuadraticBezierCurve=!0;class Js extends Ns{constructor(t=new k,e=new k,n=new k){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new k){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(Ws(t,i.x,r.x,a.x),Ws(t,i.y,r.y,a.y),Ws(t,i.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Js.prototype.isQuadraticBezierCurve3=!0;class Qs extends Ns{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new D){const n=e,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[0===a?a:a-1],c=i[a],l=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(Vs(s,o.x,c.x,l.x,h.x),Vs(s,o.y,c.y,l.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new D).fromArray(n))}return this}}Qs.prototype.isSplineCurve=!0;var Ks=Object.freeze({__proto__:null,ArcCurve:zs,CatmullRomCurve3:ks,CubicBezierCurve:js,CubicBezierCurve3:Xs,EllipseCurve:Os,LineCurve:Zs,LineCurve3:class extends Ns{constructor(t=new k,e=new k){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new k){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:Ys,QuadraticBezierCurve3:Js,SplineCurve:Qs});class $s extends Ns{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Zs(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,r=this.curves[i],a=r.getLength(),s=0===a?0:1-t/a;return r.getPointAt(s)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],s=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Ks[n.type]).fromJSON(n))}return this}}class to extends $s{constructor(t){super(),this.type="Path",this.currentPoint=new D,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Zs(this.currentPoint.clone(),new D(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Ys(this.currentPoint.clone(),new D(t,e),new D(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,a){const s=new js(this.currentPoint.clone(),new D(t,e),new D(n,i),new D(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Qs(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,r,a),this}absarc(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this}ellipse(t,e,n,i,r,a,s,o){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,r,a,s,o),this}absellipse(t,e,n,i,r,a,s,o){const c=new Os(t,e,n,i,r,a,s,o);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class eo extends to{constructor(t){super(t),this.uuid=P.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new to).fromJSON(n))}return this}}class no extends Wt{constructor(t,e=1){super(),this.type="Light",this.color=new fe(t),this.intensity=e}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}no.prototype.isLight=!0;(class extends no{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Wt.DefaultUp),this.updateMatrix(),this.groundColor=new fe(e)}copy(t){return no.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const io=new xt,ro=new k,ao=new k;class so{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new D(512,512),this.map=null,this.mapPass=null,this.matrix=new xt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yn,this._frameExtents=new D(1,1),this._viewportCount=1,this._viewports=[new F(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;ro.setFromMatrixPosition(t.matrixWorld),e.position.copy(ro),ao.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(ao),e.updateMatrixWorld(),io.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(io),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class oo extends so{constructor(){super(new hn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*P.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}oo.prototype.isSpotLightShadow=!0;(class extends no{constructor(t,e,n=0,i=Math.PI/3,r=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(Wt.DefaultUp),this.updateMatrix(),this.target=new Wt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new oo}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isSpotLight=!0;const co=new xt,lo=new k,ho=new k;class uo extends so{constructor(){super(new hn(90,1,.5,500)),this._frameExtents=new D(4,2),this._viewportCount=6,this._viewports=[new F(2,1,1,1),new F(0,1,1,1),new F(3,1,1,1),new F(1,1,1,1),new F(3,0,1,1),new F(1,0,1,1)],this._cubeDirections=[new k(1,0,0),new k(-1,0,0),new k(0,0,1),new k(0,0,-1),new k(0,1,0),new k(0,-1,0)],this._cubeUps=[new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,0,1),new k(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),lo.setFromMatrixPosition(t.matrixWorld),n.position.copy(lo),ho.copy(n.position),ho.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(ho),n.updateMatrixWorld(),i.makeTranslation(-lo.x,-lo.y,-lo.z),co.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(co)}}uo.prototype.isPointLightShadow=!0;(class extends no{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new uo}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class po extends ln{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=Wt.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}po.prototype.isOrthographicCamera=!0;class fo extends so{constructor(){super(new po(-5,5,5,-5,.5,500))}}fo.prototype.isDirectionalLightShadow=!0;(class extends no{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Wt.DefaultUp),this.updateMatrix(),this.target=new Wt,this.shadow=new fo}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isDirectionalLight=!0;(class extends no{constructor(t,e){super(t,e),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends no{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class mo{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new k)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*i),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],n*i*1.092548),e.addScaledVector(a[5],i*r*1.092548),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],n*r*1.092548),e.addScaledVector(a[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*i),e.addScaledVector(a[2],1.023328*r),e.addScaledVector(a[3],1.023328*n),e.addScaledVector(a[4],.858086*n*i),e.addScaledVector(a[5],.858086*i*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],.858086*n*r),e.addScaledVector(a[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}mo.prototype.isSphericalHarmonics3=!0;class go extends no{constructor(t=new mo,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}go.prototype.isLightProbe=!0;function vo(){Be.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function yo(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),ye.call(this,t,e,n),this.meshPerAttribute=i||1}function xo(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Es.call(this,t),this.options={premultiplyAlpha:"none"}}vo.prototype=Object.assign(Object.create(Be.prototype),{constructor:vo,isInstancedBufferGeometry:!0,copy:function(t){return Be.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=Be.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),yo.prototype=Object.assign(Object.create(ye.prototype),{constructor:yo,isInstancedBufferAttribute:!0,copy:function(t){return ye.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=ye.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),xo.prototype=Object.assign(Object.create(Es.prototype),{constructor:xo,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Ss.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(n){Ss.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}});let _o;class wo extends Es{constructor(t){super(t)}load(t,e,n,i){const r=this,a=new Ls(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{const t=n.slice(0);(void 0===_o&&(_o=new(window.AudioContext||window.webkitAudioContext)),_o).decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}}(class extends go{constructor(t,e,n=1){super(void 0,n);const i=(new fe).set(t),r=(new fe).set(e),a=new k(i.r,i.g,i.b),s=new k(r.r,r.g,r.b),o=Math.sqrt(Math.PI),c=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(c)}}).prototype.isHemisphereLightProbe=!0,class extends go{constructor(t,e=1){super(void 0,e);const n=(new fe).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0,new xt,new xt;class bo{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Mo(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Mo();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Mo(){return("undefined"==typeof performance?Date:performance).now()}class So{constructor(t,e,n){let i,r,a;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let a=this.cumulativeWeight;if(0===a){for(let t=0;t!==i;++t)n[r+t]=n[t];a=e}else{a+=e;const t=e/a;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){G.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const a=this._workIndex*r;G.multiplyQuaternionsFlat(t,a,t,e,t,n),G.slerpFlat(t,e,t,e,t,a,i)}_lerp(t,e,n,i,r){const a=1-i;for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]*a+t[n+s]*i}}_lerpAdditive(t,e,n,i,r){for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]+t[n+a]*i}}}const Ao=new RegExp("[\\[\\]\\.:\\/]","g"),Eo="[^\\[\\]\\.:\\/]",To="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Lo=/((?:WC+[\/:])*)/.source.replace("WC",Eo),Ro=/(WCOD+)?/.source.replace("WCOD",To),Co=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Eo),Po=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Eo),Do=new RegExp("^"+Lo+Ro+Co+Po+"$"),Io=["material","materials","bones"];function No(t,e,n){const i=n||Oo.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Oo(t,e,n){this.path=e,this.parsedPath=n||Oo.parseTrackName(e),this.node=Oo.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(No.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Oo,{Composite:No,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Oo.Composite(t,e,n):new Oo(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Ao,"")},parseTrackName:function(t){const e=Do.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Io.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const a=n(r.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(Oo.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Oo.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const a=t[i];if(void 0===a){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Oo.prototype,{_getValue_unbound:Oo.prototype.getValue,_setValue_unbound:Oo.prototype.setValue});class zo{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,a=r.length,s=new Array(a),o={endingStart:_,endingEnd:_};for(let t=0;t!==a;++t){const e=r[t].createInterpolant(null);s[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,a=n/i;t.warp(1,r,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,c=s.sampleValues;return o[0]=r,o[1]=r+n,c[0]=t/a,c[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const a=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(a),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(a),e[n].accumulate(i,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const a=2202===n;if(0===t)return-1===r?i:a&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(a&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=w,i.endingEnd=w):(i.endingStart=t?this.zeroSlopeAtStart?w:_:b,i.endingEnd=e?this.zeroSlopeAtEnd?w:_:b)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=e,s[1]=r+t,o[1]=n,this}}(class extends L{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,a=t._propertyBindings,s=t._interpolants,o=n.uuid,c=this._bindingsByRootAndName;let l=c[o];void 0===l&&(l={},c[o]=l);for(let t=0;t!==r;++t){const r=i[t],c=r.name;let h=l[c];if(void 0!==h)a[t]=h;else{if(h=a[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new So(Oo.create(n,c,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,c),a[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{const e=a.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,c=o[o.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,o[l]=c,o.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[e];void 0===a&&(a={},i[e]=a),a[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=e[e.length-1],c=t._cacheIndex;o._cacheIndex=c,e[c]=o,e.pop(),delete s[r],0===Object.keys(s).length&&delete a[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new ds(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let a="string"==typeof t?bs.findByName(i,t):t;const s=null!==a?a.uuid:t,o=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;c=o.knownActions[0],null===a&&(a=c._clip)}if(null===a)return null;const l=new zo(this,a,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,r),l}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?bs.findByName(n,t):t,a=r?r.uuid:t,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1;for(let s=0;s!==n;++s)e[s]._update(i,t,r,a);const s=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)s[t].apply(a);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,a=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,a._cacheIndex=r,e[r]=a,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Bo{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Bo(void 0===this.value.clone?this.value:this.value.clone())}}function Ho(t,e,n){zr.call(this,t,e),this.meshPerAttribute=n||1}function Fo(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function Uo(t,e,n=0,i=1/0){this.ray=new yt(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Ct,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Go(t,e){return t.distance-e.distance}function ko(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)ko(i[t],e,n,!0)}}Ho.prototype=Object.assign(Object.create(zr.prototype),{constructor:Ho,isInstancedInterleavedBuffer:!0,copy:function(t){return zr.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=zr.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=zr.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Fo.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Fo.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Uo.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e=!1,n=[]){return ko(t,this,n,e),n.sort(Go),n},intersectObjects:function(t,e=!1,n=[]){for(let i=0,r=t.length;i<r;i++)ko(t[i],this,n,e);return n.sort(Go),n}});const Vo=new D;class Wo{constructor(t=new D(1/0,1/0),e=new D(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Vo.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new D),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new D),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new D),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new D),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Vo.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function qo(t){Wt.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Wo.prototype.isBox2=!0,qo.prototype=Object.create(Wt.prototype),qo.prototype.constructor=qo,qo.prototype.isImmediateRenderObject=!0;const jo=new k,Xo=new xt,Zo=new xt;function Yo(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Yo(t.children[n]));return e}const Jo=new Float32Array(1),Qo=(new Int32Array(Jo.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),Ko=5+Qo.length,$o=new me({side:1,depthWrite:!1,depthTest:!1}),{_lodPlanes:tc,_sizeLods:ec,_sigmas:nc}=(new en(new rn,$o),ic());function ic(){const t=[],e=[],n=[];let i=8;for(let r=0;r<Ko;r++){const a=Math.pow(2,i);e.push(a);let s=1/a;r>4?s=Qo[r-8+4-1]:0==r&&(s=0),n.push(s);const o=1/(a-1),c=-o/2,l=1+o/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),v=new Float32Array(f*d*u),y=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),v.set(h,f*d*t);const r=[t,t,t,t,t,t];y.set(r,m*d*t)}const x=new Be;x.setAttribute("position",new ye(g,p)),x.setAttribute("uv",new ye(v,f)),x.setAttribute("faceIndex",new ye(y,m)),t.push(x),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}Math.sqrt(5),Ns.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ns.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},to.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends wa{constructor(t=10,e=10,n=4473924,i=8947848){n=new fe(n),i=new fe(i);const r=e/2,a=t/e,s=t/2,o=[],c=[];for(let t=0,l=0,h=-s;t<=e;t++,h+=a){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);const e=t===r?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new Be;l.setAttribute("position",new Te(o,3)),l.setAttribute("color",new Te(c,3)),super(l,new da({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends wa{constructor(t){const e=Yo(t),n=new Be,i=[],r=[],a=new fe(0,0,1),s=new fe(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new Te(i,3)),n.setAttribute("color",new Te(r,3)),super(n,new da({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Zo.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Xo.multiplyMatrices(Zo,r.matrixWorld),jo.setFromMatrixPosition(Xo),i.setXYZ(n,jo.x,jo.y,jo.z),Xo.multiplyMatrices(Zo,r.parent.matrixWorld),jo.setFromMatrixPosition(Xo),i.setXYZ(n+1,jo.x,jo.y,jo.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Es.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}(t)},Es.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Wo.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Wo.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Wo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Wo.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},q.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},q.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},q.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},q.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},q.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},ht.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},yn.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},P.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},P.nearestPowerOfTwo=function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),P.floorPowerOfTwo(t)},P.nextPowerOfTwo=function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),P.ceilPowerOfTwo(t)},I.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},I.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},I.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},I.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},I.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},I.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},xt.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},xt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},xt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new k).setFromMatrixColumn(this,3)},xt.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},xt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},xt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},xt.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},xt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},xt.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},xt.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},xt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},xt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},xt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},xt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},xt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},xt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},xt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},xt.prototype.makeFrustum=function(t,e,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,a)},xt.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Zt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},G.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},G.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},yt.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},yt.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},yt.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},ae.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},ae.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},ae.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},ae.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},ae.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},ae.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ae.getBarycoord(t,e,n,i,r)},ae.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ae.getNormal(t,e,n,i)},eo.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},eo.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new is(this,t)},eo.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ss(this,t)},D.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},D.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},D.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},k.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},k.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},k.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},k.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},k.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},k.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},k.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},k.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},k.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},F.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},F.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Wt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Wt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Wt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Wt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Wt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Wt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),en.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(en.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),aa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Ns.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),hn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(no.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(ye.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===E},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(E)}}}),ye.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?E:A),this},ye.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ye.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Be.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},Be.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new ye(arguments[1],arguments[2])))},Be.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},Be.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Be.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Be.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},Be.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Be.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(vo.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Uo.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(zr.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===E},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),zr.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?E:A),this},zr.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},is.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},is.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},is.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Or.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Bo.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(oe.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new fe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(cs.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(cn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Dr.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},Dr.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Dr.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Dr.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Dr.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Dr.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Dr.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Dr.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Dr.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Dr.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Dr.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Dr.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Dr.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Dr.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Dr.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Dr.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Dr.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Dr.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Dr.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Dr.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Dr.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Dr.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Dr.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Dr.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Dr.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Dr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:M}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Mr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(U.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),class extends Wt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new wo).load(t,(function(t){e.setBuffer(t)})),this},dn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},dn.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},O.crossOrigin=void 0,O.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Is;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a},O.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Ps;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a},O.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},O.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"127"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="127");var rc=n(343),ac=n.n(rc),sc=n(270),oc=n.n(sc);(new class{constructor(){this.scene=new Or,this.camera=new hn(45,window.innerWidth/window.innerHeight,.1,100),this.camera.zoom=.055,this.camera.position.z=1,this.renderer=new Dr({alpha:!0,antialias:!0}),document.querySelector(".wave-canvas").appendChild(this.renderer.domElement),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(0,0),this.clock=new bo,this.onResize()}init(){this.createMesh()}createMesh(){var t=document.createElement("canvas");t.width=3e3,t.height=4e3;var e=t.getContext("2d"),n=document.createElement("img");n.setAttribute("src","data:image/svg+xml;base64,"+window.btoa(unescape(encodeURIComponent('<svg\nwidth="3000"\nheight="4268"\nclass="wave-svg"\nid="Слой_1"\ndata-name="Слой 1"\nxmlns="http://www.w3.org/2000/svg"\nxmlns:xlink="http://www.w3.org/1999/xlink"\nviewBox="0 0 3000 4268"\n>\n<defs>\n  <style>\n    .cls-1 {\n      opacity: 0.5;\n    }\n    .cls-2 {\n      fill: url(#Безымянный_градиент_125);\n    }\n    .cls-3 {\n      fill: #fff;\n    }\n    .cls-4 {\n      fill: url(#Безымянный_градиент_125-2);\n    }\n    .cls-5 {\n      fill: url(#Безымянный_градиент_125-3);\n    }\n    .cls-6 {\n      fill: url(#Безымянный_градиент_125-4);\n    }\n    .cls-7 {\n      fill: url(#Безымянный_градиент_125-5);\n    }\n    .cls-8 {\n      fill: url(#Безымянный_градиент_125-6);\n    }\n    .cls-9 {\n      fill: url(#Безымянный_градиент_125-7);\n    }\n    .cls-10 {\n      fill: url(#Безымянный_градиент_125-8);\n    }\n    .cls-11 {\n      fill: url(#Безымянный_градиент_125-9);\n    }\n    .cls-12 {\n      fill: url(#Безымянный_градиент_125-10);\n    }\n    .cls-13 {\n      fill: url(#Безымянный_градиент_125-11);\n    }\n    .cls-14 {\n      fill: url(#Безымянный_градиент_125-12);\n    }\n    .cls-15 {\n      fill: url(#Безымянный_градиент_125-13);\n    }\n    .cls-16 {\n      fill: url(#Безымянный_градиент_125-14);\n    }\n    .cls-17 {\n      fill: url(#Безымянный_градиент_125-15);\n    }\n    .cls-18 {\n      fill: url(#Безымянный_градиент_125-16);\n    }\n    .cls-19 {\n      fill: url(#Безымянный_градиент_125-17);\n    }\n    .cls-20 {\n      fill: url(#Безымянный_градиент_125-18);\n    }\n    .cls-21 {\n      fill: url(#Безымянный_градиент_125-19);\n    }\n    .cls-22 {\n      fill: url(#Безымянный_градиент_125-20);\n    }\n    .cls-23 {\n      fill: url(#Безымянный_градиент_125-21);\n    }\n    .cls-24 {\n      fill: url(#Безымянный_градиент_125-22);\n    }\n    .cls-25 {\n      fill: url(#Безымянный_градиент_125-23);\n    }\n    .cls-26 {\n      fill: url(#Безымянный_градиент_125-24);\n    }\n    .cls-27 {\n      fill: url(#Безымянный_градиент_125-25);\n    }\n    .cls-28 {\n      fill: url(#Безымянный_градиент_125-26);\n    }\n    .cls-29 {\n      fill: url(#Безымянный_градиент_125-27);\n    }\n    .cls-30 {\n      fill: url(#Безымянный_градиент_125-28);\n    }\n    .cls-31 {\n      fill: url(#Безымянный_градиент_125-29);\n    }\n    .cls-32 {\n      fill: url(#Безымянный_градиент_125-30);\n    }\n    .cls-33 {\n      fill: url(#Безымянный_градиент_125-31);\n    }\n    .cls-34 {\n      fill: url(#Безымянный_градиент_125-32);\n    }\n    .cls-35 {\n      fill: url(#Безымянный_градиент_125-33);\n    }\n    .cls-36 {\n      fill: url(#Безымянный_градиент_125-34);\n    }\n    .cls-37 {\n      fill: url(#Безымянный_градиент_125-35);\n    }\n    .cls-38 {\n      fill: url(#Безымянный_градиент_125-36);\n    }\n    .cls-39 {\n      fill: url(#Безымянный_градиент_125-37);\n    }\n    .cls-40 {\n      fill: url(#Безымянный_градиент_125-38);\n    }\n    .cls-41 {\n      fill: url(#Безымянный_градиент_125-39);\n    }\n    .cls-42 {\n      fill: url(#Безымянный_градиент_125-40);\n    }\n    .cls-43 {\n      fill: url(#Безымянный_градиент_125-41);\n    }\n    .cls-44 {\n      fill: url(#Безымянный_градиент_125-42);\n    }\n    .cls-45 {\n      fill: url(#Безымянный_градиент_125-43);\n    }\n    .cls-46 {\n      fill: url(#Безымянный_градиент_125-44);\n    }\n    .cls-47 {\n      fill: url(#Безымянный_градиент_125-45);\n    }\n    .cls-48 {\n      fill: url(#Безымянный_градиент_125-46);\n    }\n    .cls-49 {\n      fill: url(#Безымянный_градиент_125-47);\n    }\n    .cls-50 {\n      fill: url(#Безымянный_градиент_125-48);\n    }\n    .cls-51 {\n      fill: url(#Безымянный_градиент_125-49);\n    }\n    .cls-52 {\n      fill: url(#Безымянный_градиент_125-50);\n    }\n    .cls-53 {\n      fill: url(#Безымянный_градиент_125-51);\n    }\n    .cls-54 {\n      fill: url(#Безымянный_градиент_125-52);\n    }\n    .cls-55 {\n      fill: url(#Безымянный_градиент_125-53);\n    }\n    .cls-56 {\n      fill: url(#Безымянный_градиент_125-54);\n    }\n    .cls-57 {\n      fill: url(#Безымянный_градиент_125-55);\n    }\n    .cls-58 {\n      fill: url(#Безымянный_градиент_125-56);\n    }\n    .cls-59 {\n      fill: url(#Безымянный_градиент_125-57);\n    }\n    .cls-60 {\n      fill: url(#Безымянный_градиент_125-58);\n    }\n    .cls-61 {\n      fill: url(#Безымянный_градиент_125-59);\n    }\n    .cls-62 {\n      fill: url(#Безымянный_градиент_125-60);\n    }\n    .cls-63 {\n      fill: url(#Безымянный_градиент_125-61);\n    }\n    .cls-64 {\n      fill: url(#Безымянный_градиент_125-62);\n    }\n    .cls-65 {\n      fill: url(#Безымянный_градиент_125-63);\n    }\n    .cls-66 {\n      fill: url(#Безымянный_градиент_125-64);\n    }\n    .cls-67 {\n      fill: url(#Безымянный_градиент_125-65);\n    }\n    .cls-68 {\n      fill: url(#Безымянный_градиент_125-66);\n    }\n    .cls-69 {\n      fill: url(#Безымянный_градиент_125-67);\n    }\n    .cls-70 {\n      fill: url(#Безымянный_градиент_125-68);\n    }\n    .cls-71 {\n      fill: url(#Безымянный_градиент_125-69);\n    }\n  </style>\n  <linearGradient\n    id="Безымянный_градиент_125"\n    x1="-14.54"\n    y1="103.09"\n    x2="3657.25"\n    y2="2223"\n    gradientUnits="userSpaceOnUse"\n  >\n    <stop offset="0" stop-color="#23b1c0" />\n    <stop offset="0.08" stop-color="#25b2c1" />\n    <stop offset="0.1" stop-color="#2cb4c3" />\n    <stop offset="0.12" stop-color="#38b8c6" />\n    <stop offset="0.14" stop-color="#49becb" />\n    <stop offset="0.15" stop-color="#5fc6d1" />\n    <stop offset="0.17" stop-color="#7ad0d9" />\n    <stop offset="0.18" stop-color="#9bdce2" />\n    <stop offset="0.19" stop-color="#c1e9ed" />\n    <stop offset="0.2" stop-color="#ebf8f9" />\n    <stop offset="0.2" stop-color="#fff" />\n    <stop offset="0.2" stop-color="#eff8f9" />\n    <stop offset="0.21" stop-color="#c0e3e9" />\n    <stop offset="0.22" stop-color="#96d1da" />\n    <stop offset="0.23" stop-color="#72c2cd" />\n    <stop offset="0.24" stop-color="#55b5c3" />\n    <stop offset="0.25" stop-color="#3fabbb" />\n    <stop offset="0.26" stop-color="#2fa4b5" />\n    <stop offset="0.27" stop-color="#26a0b2" />\n    <stop offset="0.29" stop-color="#239fb1" />\n    <stop offset="0.29" stop-color="#3a95b2" />\n    <stop offset="0.3" stop-color="#538bb4" />\n    <stop offset="0.32" stop-color="#6782b5" />\n    <stop offset="0.33" stop-color="#757cb5" />\n    <stop offset="0.35" stop-color="#7d79b6" />\n    <stop offset="0.38" stop-color="#7f78b6" />\n    <stop offset="0.38" stop-color="#8c86bd" />\n    <stop offset="0.39" stop-color="#bdbada" />\n    <stop offset="0.41" stop-color="#e1dfee" />\n    <stop offset="0.42" stop-color="#f7f7fa" />\n    <stop offset="0.43" stop-color="#fff" />\n    <stop offset="0.44" stop-color="#fbe5ec" />\n    <stop offset="0.46" stop-color="#f7c9d8" />\n    <stop offset="0.48" stop-color="#f3b3c7" />\n    <stop offset="0.5" stop-color="#f1a3bc" />\n    <stop offset="0.52" stop-color="#ef9ab5" />\n    <stop offset="0.55" stop-color="#ef97b3" />\n    <stop offset="0.57" stop-color="#ef99b5" />\n    <stop offset="0.58" stop-color="#f1a1ba" />\n    <stop offset="0.58" stop-color="#f3aec4" />\n    <stop offset="0.59" stop-color="#f5c1d2" />\n    <stop offset="0.59" stop-color="#f9d9e3" />\n    <stop offset="0.59" stop-color="#fef6f9" />\n    <stop offset="0.6" stop-color="#fff" />\n    <stop offset="0.6" stop-color="#fceef2" />\n    <stop offset="0.61" stop-color="#f8cfdc" />\n    <stop offset="0.62" stop-color="#f4b6ca" />\n    <stop offset="0.64" stop-color="#f1a3bc" />\n    <stop offset="0.65" stop-color="#ef95b2" />\n    <stop offset="0.67" stop-color="#ed8dac" />\n    <stop offset="0.71" stop-color="#ed8baa" />\n    <stop offset="0.73" stop-color="#ee8fad" />\n    <stop offset="0.75" stop-color="#ef9ab5" />\n    <stop offset="0.76" stop-color="#f2acc2" />\n    <stop offset="0.78" stop-color="#f6c7d6" />\n    <stop offset="0.8" stop-color="#fbe8ee" />\n    <stop offset="0.81" stop-color="#fff" />\n    <stop offset="0.83" stop-color="#fadfe7" />\n    <stop offset="0.85" stop-color="#f4bcce" />\n    <stop offset="0.87" stop-color="#f09fb9" />\n    <stop offset="0.9" stop-color="#ec89a8" />\n    <stop offset="0.93" stop-color="#ea799d" />\n    <stop offset="0.96" stop-color="#e87096" />\n    <stop offset="1" stop-color="#e86d94" />\n  </linearGradient>\n  <linearGradient\n    id="Безымянный_градиент_125-2"\n    x1="-22.77"\n    y1="134.58"\n    x2="3649.03"\n    y2="2254.49"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-3"\n    x1="-30.76"\n    y1="164.98"\n    x2="3641.03"\n    y2="2284.89"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-4"\n    x1="-38.73"\n    y1="194.88"\n    x2="3633.06"\n    y2="2314.79"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-5"\n    x1="-46.96"\n    y1="226.37"\n    x2="3624.84"\n    y2="2346.28"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-6"\n    x1="-54.95"\n    y1="256.77"\n    x2="3616.84"\n    y2="2376.68"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-7"\n    x1="-62.75"\n    y1="286.82"\n    x2="3609.04"\n    y2="2406.73"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-8"\n    x1="-70.98"\n    y1="318.31"\n    x2="3600.82"\n    y2="2438.22"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-9"\n    x1="-78.97"\n    y1="348.71"\n    x2="3592.82"\n    y2="2468.62"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-10"\n    x1="-86.94"\n    y1="378.6"\n    x2="3584.85"\n    y2="2498.51"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-11"\n    x1="-95.17"\n    y1="410.09"\n    x2="3576.63"\n    y2="2530"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-12"\n    x1="-103.16"\n    y1="440.49"\n    x2="3568.63"\n    y2="2560.4"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-13"\n    x1="-109.96"\n    y1="469.78"\n    x2="3561.83"\n    y2="2589.69"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-14"\n    x1="-118.18"\n    y1="501.27"\n    x2="3553.61"\n    y2="2621.18"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-15"\n    x1="-126.18"\n    y1="531.67"\n    x2="3545.61"\n    y2="2651.58"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-16"\n    x1="-134.15"\n    y1="561.56"\n    x2="3537.64"\n    y2="2681.48"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-17"\n    x1="-142.38"\n    y1="593.05"\n    x2="3529.42"\n    y2="2712.97"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-18"\n    x1="-150.37"\n    y1="623.45"\n    x2="3521.42"\n    y2="2743.36"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-19"\n    x1="-158.17"\n    y1="653.5"\n    x2="3513.62"\n    y2="2773.42"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-20"\n    x1="-166.39"\n    y1="684.99"\n    x2="3505.4"\n    y2="2804.91"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-21"\n    x1="-174.39"\n    y1="715.39"\n    x2="3497.4"\n    y2="2835.3"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-22"\n    x1="-182.36"\n    y1="745.29"\n    x2="3489.43"\n    y2="2865.2"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-23"\n    x1="-190.59"\n    y1="776.78"\n    x2="3481.21"\n    y2="2896.69"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-24"\n    x1="-198.58"\n    y1="807.18"\n    x2="3473.21"\n    y2="2927.09"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-25"\n    x1="-205.1"\n    y1="835.78"\n    x2="3466.7"\n    y2="2955.69"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-26"\n    x1="-213.32"\n    y1="867.27"\n    x2="3458.47"\n    y2="2987.18"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-27"\n    x1="-221.31"\n    y1="897.67"\n    x2="3450.48"\n    y2="3017.58"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-28"\n    x1="-229.29"\n    y1="927.56"\n    x2="3442.51"\n    y2="3047.47"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-29"\n    x1="-237.51"\n    y1="959.05"\n    x2="3434.28"\n    y2="3078.96"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-30"\n    x1="-245.51"\n    y1="989.45"\n    x2="3426.29"\n    y2="3109.36"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-31"\n    x1="-253.31"\n    y1="1019.5"\n    x2="3418.49"\n    y2="3139.41"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-32"\n    x1="-261.53"\n    y1="1050.99"\n    x2="3410.26"\n    y2="3170.9"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-33"\n    x1="-269.52"\n    y1="1081.39"\n    x2="3402.27"\n    y2="3201.3"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-34"\n    x1="-277.5"\n    y1="1111.29"\n    x2="3394.3"\n    y2="3231.2"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-35"\n    x1="-285.72"\n    y1="1142.77"\n    x2="3386.07"\n    y2="3262.69"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-36"\n    x1="-293.72"\n    y1="1173.17"\n    x2="3378.08"\n    y2="3293.08"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-37"\n    x1="-300.52"\n    y1="1202.47"\n    x2="3371.28"\n    y2="3322.38"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-38"\n    x1="-308.74"\n    y1="1233.96"\n    x2="3363.06"\n    y2="3353.87"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-39"\n    x1="-316.73"\n    y1="1264.35"\n    x2="3355.06"\n    y2="3384.27"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-40"\n    x1="-324.71"\n    y1="1294.25"\n    x2="3347.09"\n    y2="3414.16"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-41"\n    x1="-332.93"\n    y1="1325.74"\n    x2="3338.86"\n    y2="3445.65"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-42"\n    x1="-340.92"\n    y1="1356.14"\n    x2="3330.87"\n    y2="3476.05"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-43"\n    x1="-348.73"\n    y1="1386.19"\n    x2="3323.07"\n    y2="3506.1"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-44"\n    x1="-356.95"\n    y1="1417.68"\n    x2="3314.85"\n    y2="3537.59"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-45"\n    x1="-364.94"\n    y1="1448.08"\n    x2="3306.85"\n    y2="3567.99"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-46"\n    x1="-372.92"\n    y1="1477.97"\n    x2="3298.88"\n    y2="3597.88"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-47"\n    x1="-381.14"\n    y1="1509.46"\n    x2="3290.65"\n    y2="3629.37"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-48"\n    x1="-389.13"\n    y1="1539.86"\n    x2="3282.66"\n    y2="3659.77"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-49"\n    x1="-396.46"\n    y1="1570"\n    x2="3275.33"\n    y2="3689.92"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-50"\n    x1="-404.69"\n    y1="1601.49"\n    x2="3267.11"\n    y2="3721.41"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-51"\n    x1="-412.68"\n    y1="1631.89"\n    x2="3259.11"\n    y2="3751.8"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-52"\n    x1="-420.65"\n    y1="1661.79"\n    x2="3251.14"\n    y2="3781.7"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-53"\n    x1="-428.88"\n    y1="1693.28"\n    x2="3242.92"\n    y2="3813.19"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-54"\n    x1="-436.87"\n    y1="1723.68"\n    x2="3234.92"\n    y2="3843.59"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-55"\n    x1="-444.67"\n    y1="1753.73"\n    x2="3227.12"\n    y2="3873.64"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-56"\n    x1="-452.9"\n    y1="1785.22"\n    x2="3218.9"\n    y2="3905.13"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-57"\n    x1="-460.89"\n    y1="1815.62"\n    x2="3210.9"\n    y2="3935.53"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-58"\n    x1="-468.87"\n    y1="1845.51"\n    x2="3202.93"\n    y2="3965.42"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-59"\n    x1="-477.09"\n    y1="1877"\n    x2="3194.71"\n    y2="3996.91"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-60"\n    x1="-485.08"\n    y1="1907.4"\n    x2="3186.71"\n    y2="4027.31"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-61"\n    x1="-491.88"\n    y1="1936.69"\n    x2="3179.91"\n    y2="4056.6"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-62"\n    x1="-500.1"\n    y1="1968.18"\n    x2="3171.69"\n    y2="4088.09"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-63"\n    x1="-508.1"\n    y1="1998.58"\n    x2="3163.69"\n    y2="4118.49"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-64"\n    x1="-516.07"\n    y1="2028.48"\n    x2="3155.72"\n    y2="4148.39"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-65"\n    x1="-524.3"\n    y1="2059.97"\n    x2="3147.5"\n    y2="4179.88"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-66"\n    x1="-532.29"\n    y1="2090.36"\n    x2="3139.5"\n    y2="4210.27"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-67"\n    x1="-540.09"\n    y1="2120.42"\n    x2="3131.7"\n    y2="4240.33"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-68"\n    x1="-548.32"\n    y1="2151.91"\n    x2="3123.48"\n    y2="4271.82"\n    xlink:href="#Безымянный_градиент_125"\n  />\n  <linearGradient\n    id="Безымянный_градиент_125-69"\n    x1="-556.31"\n    y1="2182.3"\n    x2="3115.48"\n    y2="4302.21"\n    xlink:href="#Безымянный_градиент_125"\n  />\n</defs>\n<g class="cls-1">\n  <path\n    class="cls-2"\n    d="M41.6,5.85c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38C79.1,8,88.38,9.31,97.63,10.72q27.77,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23A200.41,200.41,0,0,1,335.9,89.18a114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.46,40.46,0,0,1-7.93,11.73c-6.47,6.9-14.15,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.07,4.7-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.35,73.35,0,0,0-8.66,10.85,47.13,47.13,0,0,0-5.8,12.51,39,39,0,0,0-1.27,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a70.76,70.76,0,0,0,1.94,13.73,103.22,103.22,0,0,0,10.42,25.77A178.45,178.45,0,0,0,231.22,351c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36C342.22,450.65,373,472,404.1,492.78s62.72,40.84,94.41,60.77l95.23,59.52C657.2,652.8,720.47,692.92,781.83,735.9c30.65,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35A558.2,558.2,0,0,1,992.17,921a386.15,386.15,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.72,113.72,0,0,1-1.26,14.15,106.48,106.48,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,164.41,164.41,0,0,1-19.46,20.54,214.54,214.54,0,0,1-22.24,17.43,263.16,263.16,0,0,1-49.76,26.53,296.07,296.07,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.09-7.05-.23l-7-.4c-9.38-.56-18.74-1.56-28-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.78-15-49.94-26.33a132.56,132.56,0,0,1-20.83-19.29,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.73a174.37,174.37,0,0,1,25.11-50.6,236.93,236.93,0,0,1,38.31-41.46,355.56,355.56,0,0,1,45.66-33.08,529.33,529.33,0,0,1,49.52-26.84c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.28,54.53,14c18.06,5.12,36,10.69,53.72,16.87a780.56,780.56,0,0,1,103.58,44.2c16.67,8.7,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.89,38.77,41.46A164.13,164.13,0,0,1,2699.1,1022a147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.23,89.47-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.14,437.14,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a693,693,0,0,0,93.07,61.93,862.1,862.1,0,0,0,101.17,47.86,1036.5,1036.5,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a845.62,845.62,0,0,0,105.1-39.07,663.33,663.33,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,420.48,420.48,0,0,1-20.38-52.69,411.42,411.42,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a387.86,387.86,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a775,775,0,0,0-102.77-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.31s-148.6,17.91-222.15,31.57-146.48,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,352.44,352.44,0,0,0-45.23,32.68,233.12,233.12,0,0,0-37.76,40.78,170.77,170.77,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.45-.46,2.25-.95,4.56-1.27,6.77a59.15,59.15,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.22,4.65.19,9.31.11,14,.1,9.31-.22,18.63-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a292.81,292.81,0,0,0,53.51-15.66,260.44,260.44,0,0,0,49.18-26.15,214.29,214.29,0,0,0,21.94-17.17,160.39,160.39,0,0,0,19.13-20.14,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23A382.9,382.9,0,0,0,990,922.66a556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.82-123L497.47,555.2c-31.67-20-63.22-40.13-94.37-60.93S341.22,452,311.67,429c-14.77-11.52-29.21-23.49-43-36.16s-27-26.1-38.59-40.87a179.52,179.52,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.11,71.11,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11,145.57,145.57,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.19-4.52,16.3-9.17,24.13-14.25s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-1.95-9.08-6.5-17.44-12.26-24.72A112.73,112.73,0,0,0,335.29,90,200.16,200.16,0,0,0,311.8,74.77a370.48,370.48,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19S116,14.24,97.53,11.39C88.28,10,79,8.68,69.73,7.6c-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07A6.4,6.4,0,0,0,42.18,6Z"\n  />\n  <polygon\n    class="cls-3"\n    points="936.73 863.54 939.58 862.72 942.71 865.99 939.86 866.78 936.73 863.54"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-4"\n    d="M33.38,37.34c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.17,0,2.35,0,3.52.07,2.34.09,4.68.25,7,.44,4.67.37,9.32.85,14,1.38,9.3,1.07,18.57,2.35,27.83,3.76q27.77,4.24,55.26,10c18.33,3.85,36.56,8.18,54.62,13.13s36,10.53,53.53,17a370.39,370.39,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26A113.75,113.75,0,0,1,348,140.1c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93A40.66,40.66,0,0,1,351.32,191c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.78,72.78,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,38.11,38.11,0,0,0-1.27,6.77c-.07.57-.09,1.14-.13,1.71l0,1.74,0,1.73.06,1.74A69.26,69.26,0,0,0,197,333.62a103.72,103.72,0,0,0,10.41,25.77A179.54,179.54,0,0,0,223,382.53c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52C649,684.29,712.25,724.41,773.61,767.39c30.65,21.52,60.83,43.75,90,67.25S921.09,882.87,947,910A558.2,558.2,0,0,1,984,952.45a386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,105.68,105.68,0,0,1-8,27.23,102.69,102.69,0,0,1-6.64,12.58,114.49,114.49,0,0,1-8.16,11.63,163.76,163.76,0,0,1-19.47,20.54,215.79,215.79,0,0,1-22.23,17.43,263.47,263.47,0,0,1-49.76,26.53A296.3,296.3,0,0,1,873.42,1239c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.09-7-.23l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.13,132.13,0,0,1-20.83-19.29,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.54,236.54,0,0,1,683,1010.16a354.87,354.87,0,0,1,45.66-33.08,529.33,529.33,0,0,1,49.52-26.84c33.89-16.19,69.05-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.43,6.28,54.53,13.95c18,5.12,36,10.69,53.72,16.87a780.56,780.56,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21A405.68,405.68,0,0,0,2293,2016.6a413.3,413.3,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.75,50.85,54.56,80,77.81a693,693,0,0,0,93.07,61.93,861.34,861.34,0,0,0,101.17,47.86,1037.14,1037.14,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224,.54c74.49-6.38,148.56-19.38,220.23-40.86A845.62,845.62,0,0,0,3523,2346a663.84,663.84,0,0,0,98-54.39l.34.5a665.85,665.85,0,0,1-97.84,55,844.64,844.64,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95.05-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.87-5.87-3.78c-15.69-10-31.9-19.27-48.42-27.91a774.32,774.32,0,0,0-102.76-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.81-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.57S955.15,889.74,884,912.76c-35.51,11.62-70.54,24.84-104.25,40.9a525,525,0,0,0-49.2,26.59,353,353,0,0,0-45.22,32.68,233.18,233.18,0,0,0-37.77,40.78,171,171,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.57-1.27,6.78a59.15,59.15,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.59,92.59,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.22,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a293,293,0,0,0,53.51-15.66A260.21,260.21,0,0,0,975.5,1194a212.81,212.81,0,0,0,21.94-17.16,161.11,161.11,0,0,0,19.13-20.14,111.49,111.49,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83.05-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93S333,483.52,303.44,460.49c-14.76-11.52-29.2-23.49-43-36.16s-27-26.1-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36A105.06,105.06,0,0,1,195.56,334a71.85,71.85,0,0,1-1.95-14l-.06-1.78,0-1.77,0-1.77c0-.6.06-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.33,75.33,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-1.95-9.08-6.51-17.44-12.26-24.72a112.79,112.79,0,0,0-20.14-19.27,198.76,198.76,0,0,0-23.48-15.22,370.48,370.48,0,0,0-51.07-23C235,76.72,217.1,71.14,199.07,66.16S162.83,56.83,144.52,53,107.8,45.73,89.31,42.88c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="928.51 895.03 931.36 894.21 934.49 897.48 931.64 898.27 928.51 895.03"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-5"\n    d="M25.38,67.74c.76-.86,1.29-.53,1.91-.7S28.47,67,29.06,67c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.84,3.76q27.75,4.24,55.26,10t54.61,13.13c18.06,5,36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26A113.42,113.42,0,0,1,340,170.5c5.84,7.36,10.5,15.86,12.51,25.14a22.17,22.17,0,0,1,.5,7.13,23.9,23.9,0,0,1-1.78,6.93,40.54,40.54,0,0,1-7.92,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33.05,17.62-49.22,27-8.07,4.7-16,9.6-23.67,15a142.9,142.9,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73A70.09,70.09,0,0,0,189,364a103.37,103.37,0,0,0,10.42,25.77A178.52,178.52,0,0,0,215,412.93c11.54,14.67,24.73,28,38.48,40.64s28.21,24.53,43,36c29.54,22.95,60.3,44.31,91.42,65.07s62.72,40.85,94.41,60.78L577.52,675C641,714.69,704.25,754.81,765.61,797.79c30.66,21.52,60.84,43.75,90,67.25s57.47,48.22,83.4,75.35A558.2,558.2,0,0,1,976,982.85a383.06,383.06,0,0,1,31.5,46.67c9.22,16.38,17.07,33.64,22.12,51.85a152.63,152.63,0,0,1,5.09,27.84,120,120,0,0,1,.4,14.19,113.88,113.88,0,0,1-1.26,14.16,106.08,106.08,0,0,1-8,27.23,102.75,102.75,0,0,1-6.65,12.58A116,116,0,0,1,1011,1189a164.49,164.49,0,0,1-19.47,20.54A217.29,217.29,0,0,1,969.26,1227a263.65,263.65,0,0,1-49.75,26.53,295.58,295.58,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.94,1.28l-7,1.12c-2.33.36-4.67.61-7,.93l-3.49.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.41.1-14.1-.09-2.35-.07-4.71-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a133,133,0,0,1-20.83-19.29,96.23,96.23,0,0,1-15.37-24,67.86,67.86,0,0,1-6-28,60.18,60.18,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74A174.44,174.44,0,0,1,636.65,1082,237,237,0,0,1,675,1040.56a357.31,357.31,0,0,1,45.66-33.09,531.74,531.74,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.19,71.34-23.17,144.43-40.43,218.08-54.21s147.95-24,222.45-31.84,149.27-13.17,224.1-16.56,149.76-4.62,224.67-4.08c37.46.25,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.57,20.67q27.43,6.27,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.37,779.37,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.26-52.33,98.63-24.69,70.39-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21A407.23,407.23,0,0,0,2285,2047a415.49,415.49,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.81,692.81,0,0,0,93.06,61.92,861.32,861.32,0,0,0,101.17,47.87,1039.76,1039.76,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86A845.48,845.48,0,0,0,3515,2376.37a664.86,664.86,0,0,0,98-54.39l.33.49a664,664,0,0,1-97.84,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.24-4.71-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109S2324.9,1704,2345,1672.3s42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.86-36.86-2.57-54.65a141.58,141.58,0,0,0-9.1-25.89,156.92,156.92,0,0,0-13.87-23.76c-10.6-15-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.62-5.35-11.52-7.91l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.16-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.59-37.35-2.09-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.16,31.56S947.16,920.14,876,943.16c-35.51,11.62-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,352.41,352.41,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78,170.9,170.9,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.81,92.81,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.3-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.92l6.89-1.09c2.31-.34,4.58-.85,6.87-1.26a293.14,293.14,0,0,0,53.52-15.66,260.21,260.21,0,0,0,49.18-26.16,212.69,212.69,0,0,0,21.93-17.16,161.07,161.07,0,0,0,19.13-20.14,111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,102.66,102.66,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.22a381,381,0,0,0-31.21-46.37,556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.81-67.27c-61.24-43-124.42-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93S325,513.92,295.45,490.89c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.86a180.53,180.53,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,73.53,73.53,0,0,1,8.84-11,144.88,144.88,0,0,1,21.61-18.05c7.69-5.39,15.69-10.3,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.42-10.6,21.79-17.36a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.76,368.76,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.54-13.2S99.81,76.13,81.31,73.28c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.07-3.49-.06-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="920.51 925.42 923.37 924.61 926.49 927.88 923.64 928.67 920.51 925.42"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-6"\n    d="M17.41,97.63c.75-.86,1.29-.52,1.9-.7s1.19-.07,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.37,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.23,55.27,10c18.32,3.84,36.55,8.17,54.61,13.13s36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23A199.07,199.07,0,0,1,311.71,181a114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.85,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.65,40.65,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91A72.28,72.28,0,0,0,186.24,354a47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.73.06,1.74A71,71,0,0,0,181,393.92a103.3,103.3,0,0,0,10.42,25.76A179.24,179.24,0,0,0,207,442.83c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52C633,744.58,696.28,784.7,757.64,827.69c30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35A558.2,558.2,0,0,1,968,1012.74a385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,116,116,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,218.39,218.39,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.22l-7-.4q-14.07-.86-28.05-2.92A279.57,279.57,0,0,1,690.37,1288c-17.71-6.42-34.79-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.41.84-4.68,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59A236.63,236.63,0,0,1,667,1070.45a356.53,356.53,0,0,1,45.66-33.08,526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.47,147.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.23,437.23,0,0,0,59.82,93.88c23.7,28.74,50.85,54.56,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.85-145.87,35.21-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.86-78.4a442.7,442.7,0,0,1-60.73-94.9,422.44,422.44,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.83-4.63-1.37-9.32-2-14-.36-2.33-.56-4.68-.83-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.63-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.75-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.24-.93-224.43,3.85c-74.75,3.31-149.43,8.59-223.85,16.32s-148.6,17.91-222.15,31.56S939.18,950,868.05,973.05c-35.51,11.62-70.54,24.84-104.24,40.9a527.51,527.51,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69A232.77,232.77,0,0,0,631.62,1114,170.52,170.52,0,0,0,607,1163.54c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.33,64.33,0,0,0,5.72,26.51,92.58,92.58,0,0,0,14.81,23.13,129.44,129.44,0,0,0,20.26,18.8c14.81,11.14,31.58,19.55,49,25.89a277.29,277.29,0,0,0,54.11,13.31c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.18,9.32.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16A160.47,160.47,0,0,0,1000.6,1217a109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123L473.28,647c-31.67-20-63.22-40.13-94.37-60.93S317,543.81,287.48,520.78c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105,105,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.59.06-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11.05,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.19-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.51,22.51,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-1.95-9.08-6.5-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,197.87,197.87,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23C219,137,201.13,131.43,183.1,126.45s-36.24-9.32-54.55-13.19S91.83,106,73.34,103.17c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="912.54 955.32 915.39 954.5 918.52 957.78 915.67 958.56 912.54 955.32"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-7"\n    d="M9.19,129.12c.75-.86,1.29-.52,1.9-.7s1.18-.07,1.77-.07c1.18,0,2.36,0,3.53.06q3.51.15,7,.44c4.67.37,9.32.86,14,1.39,9.3,1.07,18.57,2.35,27.83,3.76q27.77,4.23,55.26,10c18.33,3.84,36.55,8.17,54.62,13.13s36,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,198.14,198.14,0,0,1,23.62,15.25,113.88,113.88,0,0,1,20.35,19.44c5.84,7.35,10.49,15.85,12.5,25.13a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144,144,0,0,0-21.39,17.91A72.35,72.35,0,0,0,178,385.48,47.41,47.41,0,0,0,172.22,398a37.83,37.83,0,0,0-1.27,6.76c-.07.57-.09,1.14-.13,1.72l0,1.73,0,1.73.06,1.74a69.46,69.46,0,0,0,1.94,13.74,103.65,103.65,0,0,0,10.41,25.76,179.31,179.31,0,0,0,15.64,23.15c11.55,14.66,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.72,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,102.56,102.56,0,0,1-6.64,12.57,112.3,112.3,0,0,1-8.16,11.63,163.8,163.8,0,0,1-19.47,20.54,215.88,215.88,0,0,1-22.23,17.44,264,264,0,0,1-49.76,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.22l-7-.4q-14.07-.85-28.05-2.92a279.57,279.57,0,0,1-54.77-13.41c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08A525.68,525.68,0,0,1,754,1042c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.42,6.29,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.76,41.46a164.18,164.18,0,0,1,14.42,24.66,147.47,147.47,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.77,74.51,3.21,111.21a406.91,406.91,0,0,0,12.57,54.29,414,414,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86A1034.72,1034.72,0,0,0,2729,2477.56c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.85-145.86,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,419.34,419.34,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,158.72,158.72,0,0,0-13.87-23.77c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10-31.89-19.27-48.41-27.91a771.7,771.7,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.75-54.24-14c-36.4-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.25-.93-224.43,3.85c-74.76,3.31-149.43,8.59-223.85,16.32S1151,937,1077.45,950.69,931,981.53,859.83,1004.54c-35.51,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78A170.75,170.75,0,0,0,598.74,1195c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.83,92.83,0,0,0,14.8,23.13,129.51,129.51,0,0,0,20.27,18.8c14.8,11.14,31.58,19.55,49,25.89a277.37,277.37,0,0,0,54.1,13.31c9.22,1.34,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.18,9.31.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26A291.47,291.47,0,0,0,902.13,1312a260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.92,161.92,0,0,0,19.13-20.15,109.83,109.83,0,0,0,8-11.33,100.5,100.5,0,0,0,6.48-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.82,382.82,0,0,0-31.2-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.14,105.14,0,0,1-10.53-26.14,72,72,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c.05-.59.07-1.19.14-1.78a39.6,39.6,0,0,1,1.33-7,48.36,48.36,0,0,1,6-12.87,74.89,74.89,0,0,1,8.84-11.05,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.51,39.51,0,0,0,334,270.67a22.82,22.82,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,198.69,198.69,0,0,0-23.48-15.21,370.12,370.12,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="904.32 986.81 907.17 985.99 910.3 989.27 907.45 990.05 904.32 986.81"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-8"\n    d="M1.19,159.52c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.77,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,113.77,113.77,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.22,27-8.07,4.7-16,9.6-23.67,15A144.11,144.11,0,0,0,178.68,405,73.35,73.35,0,0,0,170,415.87a46.79,46.79,0,0,0-5.79,12.51,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74a70,70,0,0,0,1.93,13.73,103.22,103.22,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385,385,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a152.75,152.75,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,163.68,163.68,0,0,1-19.46,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,296.4,296.4,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.34-.08-4.7-.08-7-.23l-7-.4c-9.39-.56-18.75-1.55-28.05-2.91a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.43-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08A527.09,527.09,0,0,1,746,1072.43c33.88-16.2,69-29.51,104.66-41.2C922,1008.06,995.05,990.8,1068.7,977s148-24,222.45-31.83,149.27-13.18,224.1-16.56S1665,924,1739.92,924.54c37.46.26,74.91,1.1,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.43,779.43,0,0,1,103.59,44.21c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.27-52.33,98.63-24.69,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a407.23,407.23,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93,861.26,861.26,0,0,0,101.17,47.86A1034.89,1034.89,0,0,0,2721,2508c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,663,663,0,0,0,98-54.39l.33.5a663.91,663.91,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.14a385.92,385.92,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.56-54.66a141.48,141.48,0,0,0-9.1-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.9a773.75,773.75,0,0,0-102.77-44c-17.61-6.16-35.43-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.09-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.32s-148.59,17.9-222.15,31.56S923,1011.92,851.83,1034.94c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,350.76,350.76,0,0,0-45.22,32.69,233.12,233.12,0,0,0-37.77,40.77,171,171,0,0,0-24.66,49.54c-1.33,4.43-2.52,8.9-3.47,13.44-.45,2.25-.94,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51A92.35,92.35,0,0,0,606,1302.05a129,129,0,0,0,20.26,18.81c14.81,11.14,31.59,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.32.14,4.65.14,7,.23,4.65.18,9.31.1,14,.09,9.3-.21,18.62-.61,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a291.57,291.57,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15A214.07,214.07,0,0,0,965.25,1299a160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,102.59,102.59,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23a381.74,381.74,0,0,0-31.21-46.37,554.16,554.16,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23S770.64,913.07,740,891.54c-61.24-43-124.42-83.22-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.53,180.53,0,0,1-15.74-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.47,48.47,0,0,1,6-12.86,74.18,74.18,0,0,1,8.83-11.05,145.57,145.57,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.44,112.44,0,0,0-20.13-19.28,199.33,199.33,0,0,0-23.49-15.22,371.13,371.13,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="896.32 1017.21 899.17 1016.39 902.3 1019.66 899.45 1020.45 896.32 1017.21"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-9"\n    d="M-6.61,189.57c.75-.86,1.29-.52,1.9-.7s1.19-.07,1.78-.07c1.17,0,2.35,0,3.52.06,2.35.1,4.68.25,7,.44,4.67.37,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.23,55.27,10c18.32,3.84,36.55,8.17,54.61,13.13s36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25A114.16,114.16,0,0,1,308,292.34c5.84,7.35,10.49,15.85,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.65,40.65,0,0,1-7.93,11.74c-6.47,6.89-14.15,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.28,72.28,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.73.06,1.74A71,71,0,0,0,157,485.86a103.3,103.3,0,0,0,10.42,25.76A179.24,179.24,0,0,0,183,534.77c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52C609,836.52,672.26,876.64,733.62,919.63c30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35A558.2,558.2,0,0,1,944,1104.68a385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,116,116,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,217.29,217.29,0,0,1-22.24,17.43,263.69,263.69,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.22l-7-.4q-14.07-.86-28-2.92A279.57,279.57,0,0,1,666.35,1380c-17.71-6.42-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.41.84-4.68,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59A236.63,236.63,0,0,1,643,1162.39a356.53,356.53,0,0,1,45.66-33.08,526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.28,54.53,13.95c18.06,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.9,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.47,147.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,436.89,436.89,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.8a693,693,0,0,0,93.07,61.93,860.5,860.5,0,0,0,101.17,47.86A1034.08,1034.08,0,0,0,2713.24,2538c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86A842.44,842.44,0,0,0,3483,2498.2a662.92,662.92,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.85-145.87,35.21-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.86-78.4a442.7,442.7,0,0,1-60.73-94.9,422.44,422.44,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.83-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a472.93,472.93,0,0,1,1.85-56.45c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a388.49,388.49,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.75-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.24-.93-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32s-148.6,17.91-222.15,31.56S915.16,1042,844,1065c-35.51,11.62-70.54,24.84-104.24,40.9a527.51,527.51,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69A232.77,232.77,0,0,0,607.6,1206a170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77A64.49,64.49,0,0,0,583.4,1309a92.58,92.58,0,0,0,14.81,23.13,130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88a277.29,277.29,0,0,0,54.11,13.31c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.65.18,9.31.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.65C417.59,719,386,698.79,354.89,678S293,635.75,263.46,612.72c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.59.07-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11.05,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.19-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.51,22.51,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.5-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,197.87,197.87,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23C195,229,177.11,223.37,159.08,218.39s-36.24-9.32-54.55-13.19S67.81,198,49.32,195.11c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.4,6.4,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="888.52 1047.26 891.37 1046.44 894.5 1049.72 891.65 1050.5 888.52 1047.26"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-10"\n    d="M-14.83,221.06c.75-.86,1.29-.52,1.9-.7s1.19-.07,1.77-.07c1.18,0,2.36,0,3.53.06q3.51.15,7,.44c4.67.37,9.32.86,14,1.39,9.3,1.07,18.57,2.35,27.83,3.76Q69,230.17,96.46,236c18.33,3.84,36.55,8.17,54.62,13.13s35.95,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.85,12.5,25.13a21.94,21.94,0,0,1,.5,7.14A23.65,23.65,0,0,1,311,363a40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144,144,0,0,0-21.39,17.91A72.35,72.35,0,0,0,154,477.42a47.41,47.41,0,0,0-5.79,12.51,37.83,37.83,0,0,0-1.27,6.76c-.07.57-.09,1.14-.13,1.72l0,1.73,0,1.73.06,1.74a69.46,69.46,0,0,0,1.94,13.74,103.65,103.65,0,0,0,10.41,25.76,180.34,180.34,0,0,0,15.64,23.15c11.55,14.66,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52C600.77,868,664,908.13,725.4,951.12c30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.84a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,102.56,102.56,0,0,1-6.64,12.57,112.3,112.3,0,0,1-8.16,11.63,163.08,163.08,0,0,1-19.47,20.54,215.88,215.88,0,0,1-22.23,17.44,264,264,0,0,1-49.76,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.22l-7-.4q-14.07-.85-28.05-2.92a279.57,279.57,0,0,1-54.77-13.41c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08A525.68,525.68,0,0,1,729.93,1134c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.43,6.29,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.76,41.46a164.18,164.18,0,0,1,14.42,24.66,147.47,147.47,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86A1034.72,1034.72,0,0,0,2705,2569.5c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224,.54c74.49-6.38,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.85-145.86,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,419.34,419.34,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,158.72,158.72,0,0,0-13.87-23.77c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a771.7,771.7,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.75-54.24-14c-36.4-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.93-224.43,3.85c-74.76,3.31-149.43,8.59-223.85,16.32S1127,1029,1053.43,1042.63s-146.49,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78A170.75,170.75,0,0,0,574.72,1287c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.56-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51A92.83,92.83,0,0,0,590,1363.6a129.51,129.51,0,0,0,20.27,18.8c14.81,11.14,31.58,19.55,49,25.89a277.37,277.37,0,0,0,54.1,13.31c9.22,1.34,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.18,9.32.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.19,161.19,0,0,0,19.13-20.15,109.83,109.83,0,0,0,8-11.33,100.5,100.5,0,0,0,6.48-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.82,382.82,0,0,0-31.2-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123L441,770.41c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.14,105.14,0,0,1-10.53-26.14,72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.59.06-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.36,48.36,0,0,1,6-12.87,74.89,74.89,0,0,1,8.84-11.05,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.51,39.51,0,0,0,310,362.61a22.82,22.82,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.26-24.71a112.5,112.5,0,0,0-20.14-19.28A198.69,198.69,0,0,0,255.37,290a370.12,370.12,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.33-54.55-13.19S59.59,229.45,41.1,226.6c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="880.3 1078.75 883.15 1077.93 886.28 1081.21 883.43 1081.99 880.3 1078.75"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-11"\n    d="M-22.83,251.46c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.77,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a370.51,370.51,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.77,113.77,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33,17.62-49.22,27-8.07,4.7-16,9.6-23.67,15A144.11,144.11,0,0,0,154.66,497,73.35,73.35,0,0,0,146,507.81a46.79,46.79,0,0,0-5.79,12.51,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74a70,70,0,0,0,1.93,13.73,103.22,103.22,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.21,24.54,43,36c29.54,23,60.3,44.31,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52C592.77,898.41,656,938.53,717.4,981.52c30.66,21.51,60.83,43.74,90,67.24s57.47,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,383.83,383.83,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a151.9,151.9,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,113.77,113.77,0,0,1-8.15,11.63,164.49,164.49,0,0,1-19.47,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,296.4,296.4,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.34-.08-4.7-.08-7-.23l-7-.4c-9.39-.56-18.75-1.55-28.05-2.91a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.43-34.78-14.95-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,357.23,357.23,0,0,1,45.66-33.08,527.09,527.09,0,0,1,49.53-26.83c33.88-16.2,69-29.51,104.66-41.2C897.94,1100,971,1082.74,1044.68,1069s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.1,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.43,779.43,0,0,1,103.59,44.21c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.27-52.33,98.63-24.69,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a407.23,407.23,0,0,0,12.56,54.29,415.63,415.63,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93,861.26,861.26,0,0,0,101.17,47.86A1034.89,1034.89,0,0,0,2697,2599.9c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,663,663,0,0,0,98-54.39l.33.5a663.91,663.91,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.14a385.92,385.92,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.56-54.66a141.48,141.48,0,0,0-9.1-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.9a773.75,773.75,0,0,0-102.77-44c-17.61-6.16-35.43-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.32S1119,1059.37,1045.43,1073,899,1103.86,827.81,1126.88c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,350.76,350.76,0,0,0-45.22,32.69,233.12,233.12,0,0,0-37.77,40.77,171,171,0,0,0-24.66,49.54c-1.33,4.43-2.52,8.9-3.47,13.44-.45,2.25-.94,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51A92.35,92.35,0,0,0,582,1394a128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.32.14,4.65.14,7,.23,4.65.18,9.31.1,14,.09,9.3-.21,18.62-.61,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a291.57,291.57,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15A214.07,214.07,0,0,0,941.23,1391a160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,102.59,102.59,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23a381.74,381.74,0,0,0-31.21-46.37,554.16,554.16,0,0,0-36.69-42.3c-25.78-27-54-51.71-83-75.23S746.62,1005,716,983.48c-61.24-43-124.42-83.22-187.82-123L433,800.81c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.53,180.53,0,0,1-15.74-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.47,48.47,0,0,1,6-12.86A74.18,74.18,0,0,1,153.68,496a146.08,146.08,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.42-10.6,21.79-17.37A39.56,39.56,0,0,0,302,393a22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.44,112.44,0,0,0-20.13-19.28,199.33,199.33,0,0,0-23.49-15.22,371.13,371.13,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07S106.62,271,88.31,267.09,51.59,259.85,33.1,257c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="872.3 1109.15 875.16 1108.33 878.28 1111.6 875.43 1112.39 872.3 1109.15"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-12"\n    d="M-30.8,281.36c.75-.87,1.29-.53,1.9-.71s1.19-.06,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.25,55.27,10t54.61,13.13c18,5,36,10.53,53.53,17a371.1,371.1,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.13a21.7,21.7,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.71,40.71,0,0,1-7.93,11.74c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.87,143.87,0,0,0-21.39,17.9A73.3,73.3,0,0,0,138,537.71a47.13,47.13,0,0,0-5.8,12.51A38.91,38.91,0,0,0,131,557c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.37,103.37,0,0,0,10.42,25.77,178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.22,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,106.06,106.06,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,165.11,165.11,0,0,1-19.46,20.54,218.39,218.39,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52A294.5,294.5,0,0,1,809.24,1483c-2.31.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.15,1.68-4.71,0-9.41.1-14.11-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.09,96.09,0,0,1-15.38-24,67.77,67.77,0,0,1-6-28,60,60,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.57,236.57,0,0,1,38.31-41.46,354.94,354.94,0,0,1,45.66-33.09A531.58,531.58,0,0,1,714,1194.26c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.42,218.08-54.2s148-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.66q27.43,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.91c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.47a163.14,163.14,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.46-47.36,58.08-96.64,114.46-142.27,173.69-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.18,405.18,0,0,0,12.56,54.28,413.44,413.44,0,0,0,20,52,437.42,437.42,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1038.94,1038.94,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.57a1293.66,1293.66,0,0,0,224.06.55c74.49-6.38,148.55-19.38,220.22-40.87a844,844,0,0,0,105.1-39.06,664.75,664.75,0,0,0,98-54.39l.34.49a663.51,663.51,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.18c-74.69-6.42-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,697.34,697.34,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.86-78.39a442.63,442.63,0,0,1-60.73-94.91,419.69,419.69,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.36-.25-4.71-.27-7.06a471,471,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.09-25.88,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-17-3.83-2.64-7.63-5.34-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.92-224.43,3.86c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56S891,1133.76,819.84,1156.78c-35.51,11.61-70.54,24.84-104.24,40.9a525.09,525.09,0,0,0-49.21,26.58A353.11,353.11,0,0,0,621.17,1257a233.56,233.56,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.25,64.25,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,130,130,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.88a275.86,275.86,0,0,0,54.11,13.31c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26a293,293,0,0,0,53.51-15.66A260.79,260.79,0,0,0,911.32,1438a212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22a383.28,383.28,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.43-65.27c-14.77-11.53-29.21-23.5-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35A105.21,105.21,0,0,1,131.38,578a72,72,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11.05,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.76,20.76,0,0,0-.47-6.8c-1.95-9.08-6.5-17.45-12.26-24.72a112.85,112.85,0,0,0-20.14-19.28,199.13,199.13,0,0,0-23.48-15.21,369.29,369.29,0,0,0-51.07-23c-17.54-6.51-35.41-12.1-53.44-17.08S98.65,300.85,80.34,297s-36.72-7.23-55.21-10.08c-9.25-1.42-18.51-2.71-27.81-3.8-4.64-.53-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.06-.58,0-1.16,0-1.73.06a7.85,7.85,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="864.33 1139.04 867.18 1138.22 870.31 1141.5 867.46 1142.29 864.33 1139.04"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-13"\n    d="M-39,312.85c.75-.87,1.29-.53,1.9-.71s1.18-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39C-1.52,315,7.75,316.31,17,317.72q27.77,4.25,55.26,10t54.61,13.13c18.06,5,36,10.53,53.54,17a371.63,371.63,0,0,1,51.23,23,198.22,198.22,0,0,1,23.62,15.26,113.48,113.48,0,0,1,20.35,19.43c5.84,7.36,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.71,40.71,0,0,1-7.93,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144,144,0,0,0-21.4,17.9,74,74,0,0,0-8.66,10.86A47.41,47.41,0,0,0,124,581.71a38.94,38.94,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74A103.72,103.72,0,0,0,135,634.9,178.52,178.52,0,0,0,150.6,658c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.23,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.74,90,67.25s57.46,48.22,83.4,75.35A556.27,556.27,0,0,1,911.55,1228a384.58,384.58,0,0,1,31.5,46.67c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,107.37,107.37,0,0,1-14.67,39.81,114.49,114.49,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54,216.21,216.21,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52A294.73,294.73,0,0,1,801,1514.49c-2.32.42-4.62.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.42,279.42,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-50-26.32a133,133,0,0,1-20.82-19.3,96.09,96.09,0,0,1-15.38-24,67.94,67.94,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74a174.44,174.44,0,0,1,25.11-50.59,236.19,236.19,0,0,1,38.31-41.46,354.94,354.94,0,0,1,45.66-33.09,530.31,530.31,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.42,218.08-54.2s148-24,222.46-31.84S1400.2,1085.33,1475,1082s149.76-4.62,224.67-4.09c37.45.26,74.9,1.11,112.33,2.27s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.91c3.94,2.57,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163.79,163.79,0,0,1,14.42,24.67,147,147,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.4-68.24,89.46C2445.3,1713.65,2396,1770,2350.4,1829.26c-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.21,111.21a406.76,406.76,0,0,0,12.57,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1039.58,1039.58,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.57a1292.66,1292.66,0,0,0,224.06.54c74.49-6.37,148.56-19.37,220.23-40.86a844,844,0,0,0,105.1-39.06,664.75,664.75,0,0,0,98-54.39l.34.49a664,664,0,0,1-97.84,55A844.69,844.69,0,0,1,3346,2662.21c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,697.34,697.34,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.36-.25-4.71-.27-7.06a471,471,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.09-25.88,158.62,158.62,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22-17-3.84-2.64-7.63-5.34-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10-31.89-19.27-48.41-27.91A773,773,0,0,0,2365,1163c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.4-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.25-.92-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.52,11.61-70.54,24.84-104.25,40.89a526.08,526.08,0,0,0-49.2,26.59A353.11,353.11,0,0,0,613,1288.44a233.18,233.18,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.4,64.4,0,0,0,5.71,26.52,93.28,93.28,0,0,0,14.81,23.12,130.06,130.06,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88a275.94,275.94,0,0,0,54.1,13.31c9.21,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.15,4.65.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26a292.28,292.28,0,0,0,53.51-15.67,260.17,260.17,0,0,0,49.18-26.15A212.81,212.81,0,0,0,925,1452.36a162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22a382,382,0,0,0-31.2-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123L416.84,862.2c-31.66-20-63.22-40.13-94.36-60.93S260.6,759,231,736c-14.76-11.53-29.2-23.5-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.21,105.21,0,0,1-10.53-26.15,72,72,0,0,1-2-14l-.06-1.77,0-1.77,0-1.78c.05-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11.05,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.27-24.71A112.46,112.46,0,0,0,254.66,397a199.25,199.25,0,0,0-23.49-15.21,369.46,369.46,0,0,0-51.07-23c-17.53-6.5-35.4-12.09-53.43-17.07s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.72-27.81-3.8-4.64-.53-9.3-1-13.95-1.4-2.33-.19-4.67-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a7.85,7.85,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="856.11 1170.53 858.96 1169.71 862.09 1172.99 859.24 1173.78 856.11 1170.53"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-14"\n    d="M-47,343.24c.76-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.25,55.27,10t54.61,13.13c18.06,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25A113.82,113.82,0,0,1,267.62,446c5.84,7.35,10.49,15.86,12.51,25.13a22.24,22.24,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93A40.81,40.81,0,0,1,270.93,497c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33,17.61-49.22,27-8.07,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.43,73.43,0,0,0-8.66,10.86A46.79,46.79,0,0,0,116,612.11a37.85,37.85,0,0,0-1.28,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.74,0,1.73a70.86,70.86,0,0,0,1.94,13.74A103.15,103.15,0,0,0,127,665.29a179.57,179.57,0,0,0,15.63,23.15c11.55,14.67,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,22.95,60.29,44.31,91.42,65.07S378.2,871,409.89,891l95.23,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.12,556.12,0,0,1,36.92,42.45,385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.07,33.64,22.11,51.85a153.5,153.5,0,0,1,5.1,27.84,119.92,119.92,0,0,1,.4,14.19,114.05,114.05,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,163.77,163.77,0,0,1-19.46,20.55,217.29,217.29,0,0,1-22.24,17.43A263,263,0,0,1,847.11,1529,295.61,295.61,0,0,1,793,1544.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.45-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.22l-7-.4c-9.39-.57-18.75-1.56-28-2.91a280.23,280.23,0,0,1-54.78-13.42c-17.71-6.42-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,68,68,0,0,1-6-28,60,60,0,0,1,.55-7.21c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.32,174.32,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47A356.53,356.53,0,0,1,648.22,1283a528.15,528.15,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.2,71.33-23.16,144.43-40.43,218.08-54.2s148-24,222.45-31.84,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.36,37.08,5.51,74,12.27,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.88a778.06,778.06,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a395.18,395.18,0,0,1-24.8,50.82c-9.36,16.34-19.55,32.15-30.24,47.6-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.61-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.69,70.39-28.54,107.32c-3.44,37-2.77,74.5,3.22,111.2a406.87,406.87,0,0,0,12.56,54.29,413.49,413.49,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.13,693.13,0,0,0,93.06,61.92A862.17,862.17,0,0,0,2566.65,2656a1036.44,1036.44,0,0,0,106.18,35.68c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a842.3,842.3,0,0,0,105.09-39.07,663.88,663.88,0,0,0,98-54.38l.33.49a663.91,663.91,0,0,1-97.84,55A843.51,843.51,0,0,1,3338,2692.6c-71.71,21.85-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,699.25,699.25,0,0,1-93.84-62.2c-29.4-23.38-56.86-49.39-80.86-78.39a442.58,442.58,0,0,1-60.72-94.91,420.94,420.94,0,0,1-20.38-52.68,411.78,411.78,0,0,1-12.83-55c-.84-4.64-1.37-9.33-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7a473.1,473.1,0,0,1,1.85-56.46c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.75-31,30-47.13a388.49,388.49,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.56-54.66A141.48,141.48,0,0,0,2605,1362a157.27,157.27,0,0,0-13.87-23.76c-10.6-15.06-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.95-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.42-73.17-15.2-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.23-.91-224.43,3.85c-74.75,3.31-149.42,8.6-223.85,16.32s-148.59,17.91-222.15,31.56-146.48,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59A351.55,351.55,0,0,0,605,1318.84a233.5,233.5,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51,92.58,92.58,0,0,0,14.81,23.13,130,130,0,0,0,20.26,18.81c14.81,11.13,31.59,19.54,49,25.88a276,276,0,0,0,54.11,13.31c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.65.19,9.31.1,14,.1,9.3-.22,18.62-.62,27.88-1.64l3.47-.33,3.46-.45c2.31-.3,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.25a292.05,292.05,0,0,0,53.51-15.67,259.56,259.56,0,0,0,49.18-26.15A212.81,212.81,0,0,0,917,1482.76a161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.31,101.31,0,0,0,6.47-12.23,103,103,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.23a383.68,383.68,0,0,0-31.21-46.37,556.24,556.24,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.82-123L408.85,892.6c-31.66-20-63.22-40.14-94.37-60.94s-61.87-42.23-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87A179.85,179.85,0,0,1,125.69,666a105,105,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.53,48.53,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11.05,145.57,145.57,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.28-27,8.18-4.53,16.3-9.17,24.13-14.26s15.42-10.6,21.79-17.37a39.51,39.51,0,0,0,7.73-11.39,22.77,22.77,0,0,0,1.71-6.61,21.12,21.12,0,0,0-.47-6.81c-2-9.08-6.51-17.44-12.27-24.71a112.79,112.79,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,370,370,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19S27.4,351.63,8.91,348.78c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.33-.08-3.49-.07-.58,0-1.17,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="848.11 1200.93 850.97 1200.11 854.09 1203.39 851.24 1204.17 848.11 1200.93"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-15"\n    d="M-53.82,372.54c.76-.87,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.43,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.24,55.27,10t54.61,13.13c18.06,5,36,10.53,53.53,17a371.1,371.1,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.13a22.26,22.26,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.54,40.54,0,0,1-7.92,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33.05,17.62-49.22,27-8.07,4.7-16,9.6-23.68,15A143.87,143.87,0,0,0,123.67,618,74,74,0,0,0,115,628.89a46.79,46.79,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74,0,1.73a70.86,70.86,0,0,0,1.94,13.74,103.37,103.37,0,0,0,10.42,25.77,179.47,179.47,0,0,0,15.63,23.14c11.55,14.67,24.74,28,38.49,40.64s28.21,24.53,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.83,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,383.43,383.43,0,0,1,31.5,46.67c9.22,16.37,17.07,33.64,22.11,51.85a152.64,152.64,0,0,1,5.1,27.84,120,120,0,0,1,.4,14.19,113.88,113.88,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,164.37,164.37,0,0,1-19.46,20.54,217.29,217.29,0,0,1-22.24,17.43,263.65,263.65,0,0,1-49.75,26.53,295.58,295.58,0,0,1-54.09,15.88c-2.31.43-4.61.93-6.94,1.28l-7,1.12c-2.33.35-4.67.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.75,1.45-28.15,1.68-4.7,0-9.41.1-14.11-.09-2.35-.08-4.7-.08-7-.22l-7-.4c-9.39-.56-18.75-1.56-28.05-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a133,133,0,0,1-20.83-19.29,96.55,96.55,0,0,1-15.38-24,68,68,0,0,1-6-28,60,60,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.57,236.57,0,0,1,38.31-41.46,356.6,356.6,0,0,1,45.66-33.09A531.74,531.74,0,0,1,691,1285.44c33.88-16.19,69-29.5,104.66-41.19,71.33-23.17,144.43-40.43,218.08-54.21s148-24,222.45-31.84,149.27-13.17,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.67q27.43,6.27,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.37,779.37,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.81,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.69,70.39-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a407.23,407.23,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.17,692.17,0,0,0,93.06,61.92,861.32,861.32,0,0,0,101.17,47.87A1038.94,1038.94,0,0,0,2666,2721c72,20,146,32.94,220.42,39.57a1293.66,1293.66,0,0,0,224.06.55c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,664.86,664.86,0,0,0,98-54.39l.33.49a664,664,0,0,1-97.84,55,846.68,846.68,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.34,442.34,0,0,1-60.72-94.91,419.74,419.74,0,0,1-20.38-52.68,413.34,413.34,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.76-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.36-.24-4.71-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.56-54.65a141.58,141.58,0,0,0-9.1-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.91l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.31s-148.59,17.91-222.15,31.56S868,1224.94,796.82,1248c-35.51,11.61-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,352.52,352.52,0,0,0-45.23,32.69,233.5,233.5,0,0,0-37.76,40.78,170.65,170.65,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52A92.71,92.71,0,0,0,551,1515.07a129.51,129.51,0,0,0,20.26,18.81c14.81,11.13,31.59,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.3-.22,18.62-.62,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.92l6.89-1.09c2.31-.34,4.58-.85,6.87-1.26a293.14,293.14,0,0,0,53.52-15.66,260.79,260.79,0,0,0,49.18-26.16,212.69,212.69,0,0,0,21.93-17.16,161.07,161.07,0,0,0,19.13-20.14,111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,102.78,102.78,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.22a382.12,382.12,0,0,0-31.21-46.37,554.16,554.16,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.81-67.27c-61.24-43-124.42-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.86a180.53,180.53,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,146.18,146.18,0,0,1,21.62-18.05c7.69-5.38,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.28-27,8.18-4.52,16.3-9.17,24.13-14.26s15.42-10.6,21.79-17.36a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21,21,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.76,368.76,0,0,0-51.07-23c-17.54-6.51-35.41-12.1-53.44-17.07S75.63,392,57.32,388.16,20.6,380.93,2.11,378.08c-9.24-1.42-18.51-2.71-27.8-3.8-4.65-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.49-.06-.58,0-1.16,0-1.74.07a7.06,7.06,0,0,0-1.36.23Z"\n  />\n  <polygon\n    class="cls-3"\n    points="841.31 1230.22 844.16 1229.41 847.29 1232.68 844.44 1233.47 841.31 1230.22"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-16"\n    d="M-62,404c.75-.87,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.25,55.27,10t54.61,13.13c18,5,36,10.53,53.53,17a371.1,371.1,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.13a22,22,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.57,40.57,0,0,1-7.93,11.74c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.87,143.87,0,0,0-21.39,17.9,73.3,73.3,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.91,38.91,0,0,0-1.27,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a70.86,70.86,0,0,0,1.94,13.74A103.37,103.37,0,0,0,112,726.08a178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.53,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.52,60.83,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.22,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,115.83,115.83,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,165.11,165.11,0,0,1-19.46,20.54,218.39,218.39,0,0,1-22.24,17.43,263.74,263.74,0,0,1-49.76,26.53A295.25,295.25,0,0,1,778,1605.67c-2.31.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.15,1.68-4.71,0-9.41.1-14.11-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a133.08,133.08,0,0,1-20.83-19.29,96.27,96.27,0,0,1-15.38-24,67.85,67.85,0,0,1-6-28,60,60,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.57,236.57,0,0,1,38.31-41.46,356.6,356.6,0,0,1,45.66-33.09,531.58,531.58,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.84,149.26-13.17,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.66q27.43,6.29,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.81,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.24,14.45,12.17,27.78,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.23,89.47-47.37,58.07-96.65,114.45-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,412.41,412.41,0,0,0,20,52,437,437,0,0,0,59.82,93.88c23.7,28.74,50.85,54.56,80,77.81a692.91,692.91,0,0,0,93.07,61.92,859.81,859.81,0,0,0,101.17,47.87,1038.94,1038.94,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.57a1293.66,1293.66,0,0,0,224.06.55c74.49-6.38,148.55-19.38,220.22-40.87a844,844,0,0,0,105.1-39.06,664.75,664.75,0,0,0,98-54.39l.34.49a663.51,663.51,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.18c-74.69-6.41-148.9-19.13-221.24-39A1039.55,1039.55,0,0,1,2550,2721a860.88,860.88,0,0,1-101.81-47.92,697.34,697.34,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.86-78.39a442.38,442.38,0,0,1-60.73-94.91,419.69,419.69,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.83-4.64-1.37-9.32-2-14-.36-2.33-.56-4.67-.83-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.36-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.74-58.38,68-89,10.63-15.33,20.74-31,30-47.14a389.16,389.16,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.57-54.65a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.63-5.35-11.52-7.91l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.91-224.43,3.86c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.51,11.61-70.54,24.84-104.24,40.9a525.09,525.09,0,0,0-49.21,26.58,353.11,353.11,0,0,0-45.22,32.69,233.56,233.56,0,0,0-37.77,40.78,170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.71,92.71,0,0,0,14.81,23.12A129.51,129.51,0,0,0,563,1565.37c14.81,11.13,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.63-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.92l6.9-1.09c2.3-.34,4.58-.85,6.87-1.26a293,293,0,0,0,53.51-15.66,260.79,260.79,0,0,0,49.18-26.16A212.81,212.81,0,0,0,902,1543.54a161.07,161.07,0,0,0,19.13-20.14,111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22a382.12,382.12,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93S237.58,850.21,208,827.18c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.06,105.06,0,0,1-10.53-26.15,72,72,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.67,145.67,0,0,1,21.62-18.05c7.69-5.38,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.19-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.76,20.76,0,0,0-.47-6.8c-2-9.08-6.5-17.45-12.26-24.72a113.2,113.2,0,0,0-20.14-19.28A199.13,199.13,0,0,0,208.16,473a369.29,369.29,0,0,0-51.07-23c-17.54-6.51-35.41-12.1-53.44-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.51-2.71-27.81-3.8-4.64-.53-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.06-.58,0-1.16,0-1.73.07a7.21,7.21,0,0,0-1.37.23Z"\n  />\n  <polygon\n    class="cls-3"\n    points="833.09 1261.71 835.94 1260.9 839.07 1264.17 836.22 1264.96 833.09 1261.71"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-17"\n    d="M-70,434.42c.76-.86,1.29-.52,1.91-.7s1.18-.06,1.77-.07c1.18,0,2.35,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.84,3.76q27.76,4.24,55.26,10t54.61,13.13c18.06,5,36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,199.85,199.85,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.35,10.5,15.86,12.51,25.13a22.24,22.24,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33.05,17.62-49.21,27-8.08,4.7-16.05,9.6-23.68,15a143.44,143.44,0,0,0-21.4,17.9,73.43,73.43,0,0,0-8.66,10.86A47.1,47.1,0,0,0,93,703.29a38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74L91.6,717a70.09,70.09,0,0,0,1.93,13.74A104.13,104.13,0,0,0,104,756.48a178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,23,60.3,44.31,91.42,65.07s62.73,40.85,94.41,60.78l95.23,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.74,90,67.25s57.47,48.22,83.4,75.35a558.47,558.47,0,0,1,36.93,42.45,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,120,120,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,107.37,107.37,0,0,1-14.67,39.81,117.76,117.76,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54,217.29,217.29,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52A294.6,294.6,0,0,1,770,1636.07c-2.31.42-4.61.93-6.93,1.28l-7,1.12c-2.33.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.71-.08-7.05-.22l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a132.6,132.6,0,0,1-20.82-19.3,96,96,0,0,1-15.38-24,67.78,67.78,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,237,237,0,0,1,38.31-41.46,356.34,356.34,0,0,1,45.66-33.09,529.41,529.41,0,0,1,49.53-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s148-24,222.45-31.84,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.52,14c18.06,5.11,36,10.68,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.95,3.8,5.87,3.91c3.94,2.57,7.77,5.29,11.64,8,7.71,5.44,15.24,11.15,22.49,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163.73,163.73,0,0,1,14.41,24.67,146.37,146.37,0,0,1,9.51,27c4.65,18.59,5.14,38,2.73,56.88s-7.83,37.22-14.76,54.8a393.24,393.24,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.15-30.24,47.6-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.68-22.81,29.61-44.73,59.89-64.71,91.41s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.5,3.21,111.21a406.76,406.76,0,0,0,12.57,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a694.4,694.4,0,0,0,93.06,61.92,862.31,862.31,0,0,0,101.18,47.87,1036.27,1036.27,0,0,0,106.17,35.68c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.37,148.55-19.38,220.23-40.86a841.71,841.71,0,0,0,105.09-39.07,663.38,663.38,0,0,0,98-54.38l.34.49a664.52,664.52,0,0,1-97.85,55,844,844,0,0,1-105.1,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.24-39A1038.57,1038.57,0,0,1,2542,2751.4a863.35,863.35,0,0,1-101.82-47.92,698.51,698.51,0,0,1-93.83-62.2c-29.41-23.38-56.87-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.05a473.1,473.1,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.12-62.17,65-91.89c45.75-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.06,10.62-15.32,20.74-31,30-47.13a387.19,387.19,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.1-25.88,157.71,157.71,0,0,0-13.86-23.76c-10.61-15.05-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22-17-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-14c-36.39-8.42-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.23-.91-224.42,3.85c-74.76,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.85c-35.51,11.62-70.53,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59A352.15,352.15,0,0,0,581.94,1410a233.18,233.18,0,0,0-37.77,40.78,170.5,170.5,0,0,0-24.65,49.53c-1.34,4.43-2.53,8.91-3.48,13.44-.45,2.26-.94,4.57-1.26,6.78a54.65,54.65,0,0,0-.52,6.77,64.4,64.4,0,0,0,5.71,26.52A93,93,0,0,0,534.78,1577a129.61,129.61,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88A276,276,0,0,0,658.18,1635c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.14,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.57-.85,6.86-1.26a292.15,292.15,0,0,0,53.52-15.67,260.17,260.17,0,0,0,49.18-26.15A213.89,213.89,0,0,0,894,1573.94a162.54,162.54,0,0,0,19.13-20.14,113.67,113.67,0,0,0,8-11.33,100.52,100.52,0,0,0,6.47-12.22,103.19,103.19,0,0,0,7.84-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.52,382.52,0,0,0-31.21-46.37,558.05,558.05,0,0,0-36.68-42.29c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.14-94.36-60.93S229.59,880.61,200,857.58c-14.77-11.53-29.21-23.5-43-36.17s-27-26.09-38.6-40.87a180.75,180.75,0,0,1-15.74-23.35A105.18,105.18,0,0,1,92.15,731a71.21,71.21,0,0,1-2-14l0-1.77,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,74.11,74.11,0,0,1,8.84-11,146.1,146.1,0,0,1,21.61-18c7.69-5.38,15.69-10.29,23.8-15,16.22-9.4,32.89-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.68,39.68,0,0,0,254.81,576a22.69,22.69,0,0,0,1.71-6.61,21.12,21.12,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.27-24.71a112.79,112.79,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,369.46,369.46,0,0,0-51.07-23c-17.53-6.5-35.41-12.09-53.44-17.07s-36.24-9.32-54.54-13.19S4.39,442.82-14.11,440c-9.24-1.43-18.51-2.72-27.8-3.8-4.65-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.82,6.82,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="825.1 1292.11 827.95 1291.29 831.08 1294.57 828.22 1295.36 825.1 1292.11"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-18"\n    d="M-78,464.32c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.77,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93A40.63,40.63,0,0,1,239.94,618c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.22,27-8.07,4.71-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.35,73.35,0,0,0-8.66,10.85A46.79,46.79,0,0,0,85,733.18,38.13,38.13,0,0,0,83.75,740c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a70.76,70.76,0,0,0,1.94,13.73A103.22,103.22,0,0,0,96,786.37a178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08S347.21,992.1,378.9,1012l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.82,30.66,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a153.61,153.61,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,113.39,113.39,0,0,1-8.16,11.63,163.68,163.68,0,0,1-19.46,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52A296.4,296.4,0,0,1,762,1666c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.23l-7.05-.4c-9.38-.56-18.74-1.55-28-2.91A280.2,280.2,0,0,1,595,1654.73c-17.71-6.43-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.41.84-4.69,1.31-7,1-4.63,2.17-9.2,3.53-13.73a174.37,174.37,0,0,1,25.11-50.6,236.93,236.93,0,0,1,38.31-41.46,355.56,355.56,0,0,1,45.66-33.08,525.85,525.85,0,0,1,49.53-26.83c33.88-16.2,69-29.51,104.65-41.2,71.34-23.17,144.44-40.43,218.09-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.61,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.87a781.25,781.25,0,0,1,103.59,44.2c16.66,8.7,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.24,47.6-21.39,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.14,437.14,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93,860.5,860.5,0,0,0,101.17,47.86,1036.5,1036.5,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86A843.89,843.89,0,0,0,3411.64,2773a663.33,663.33,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39A1044.43,1044.43,0,0,1,2534,2781.3a862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,420.48,420.48,0,0,1-20.38-52.69,411.42,411.42,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.33,20.74-31,30-47.14a387.22,387.22,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.37,157.37,0,0,0-13.87-23.77c-10.6-15-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a775,775,0,0,0-102.77-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.25-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.48,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59A351.55,351.55,0,0,0,574,1439.92a232.7,232.7,0,0,0-37.76,40.77,170.77,170.77,0,0,0-24.66,49.53c-1.33,4.44-2.52,8.91-3.47,13.45-.45,2.25-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.76,64.5,64.5,0,0,0,5.72,26.52,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.22,4.65.19,9.31.11,14,.1,9.31-.21,18.63-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a292,292,0,0,0,53.51-15.66A259.56,259.56,0,0,0,864.11,1621a214.29,214.29,0,0,0,21.94-17.17,160.39,160.39,0,0,0,19.13-20.14,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.65c-31.67-20-63.22-40.13-94.37-60.93s-61.87-42.24-91.43-65.27C177.29,876,162.85,864,149,851.31s-27-26.09-38.59-40.87A180.53,180.53,0,0,1,94.7,787.08a105.11,105.11,0,0,1-10.52-26.14,71.31,71.31,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11,145.57,145.57,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.19-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.46-6.8c-2-9.08-6.51-17.44-12.27-24.72a112.73,112.73,0,0,0-20.13-19.27,200.16,200.16,0,0,0-23.49-15.22,370.48,370.48,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07S51.44,483.81,33.13,480s-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17-.05-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="817.12 1322.01 819.97 1321.19 823.1 1324.46 820.25 1325.25 817.12 1322.01"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-19"\n    d="M-86.23,495.81c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.17,0,2.35,0,3.52.07,2.34.09,4.68.25,7,.44,4.67.37,9.32.85,14,1.38,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s35.95,10.53,53.53,17a370.39,370.39,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.66,40.66,0,0,1-7.93,11.73c-6.47,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.71-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.42,73.42,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,39,39,0,0,0-1.27,6.77c-.06.57-.09,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a69.26,69.26,0,0,0,1.94,13.73,103.22,103.22,0,0,0,10.42,25.77A178.45,178.45,0,0,0,103.39,841c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08s62.72,40.85,94.4,60.78L465.91,1103c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,106.06,106.06,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,163.76,163.76,0,0,1-19.47,20.54A214.42,214.42,0,0,1,857.65,1655a263.16,263.16,0,0,1-49.76,26.53,296.07,296.07,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.23l-7-.4c-9.38-.56-18.74-1.56-28-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.79-15-49.94-26.32A132.66,132.66,0,0,1,516,1640.6a96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.73a174.37,174.37,0,0,1,25.11-50.6,236.54,236.54,0,0,1,38.31-41.46A354.87,354.87,0,0,1,609,1435.55a529.33,529.33,0,0,1,49.52-26.84c33.89-16.19,69.05-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.61,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.43,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.87a780.56,780.56,0,0,1,103.58,44.2c16.67,8.7,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.7,28.74,50.85,54.55,80,77.8a693,693,0,0,0,93.07,61.93,861.34,861.34,0,0,0,101.17,47.86,1037.14,1037.14,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,663.84,663.84,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.84-145.87,35.2-220.5,41.93a1295.79,1295.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5A862.53,862.53,0,0,1,2424,2764.86a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.86-78.4a442.31,442.31,0,0,1-60.73-94.9,420.43,420.43,0,0,1-20.37-52.69,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.87-5.87-3.78c-15.69-10-31.9-19.27-48.42-27.91a774.32,774.32,0,0,0-102.76-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.81-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9A525.18,525.18,0,0,0,611,1438.72a352.15,352.15,0,0,0-45.22,32.69A233.14,233.14,0,0,0,528,1512.18a171,171,0,0,0-24.65,49.53c-1.34,4.44-2.52,8.91-3.47,13.45-.46,2.25-1,4.56-1.27,6.77a59.15,59.15,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.59,92.59,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.22,4.66.19,9.32.11,14,.1,9.31-.21,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a293,293,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,214.29,214.29,0,0,0,21.94-17.17A160.39,160.39,0,0,0,897,1615.18a111.49,111.49,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93S213.39,942,183.83,919c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36A105.14,105.14,0,0,1,76,792.43a72.06,72.06,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.06-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-1.95-9.08-6.51-17.44-12.26-24.72A112.79,112.79,0,0,0,207.45,580,200,200,0,0,0,184,564.73a370.48,370.48,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="808.9 1353.5 811.75 1352.68 814.88 1355.95 812.03 1356.74 808.9 1353.5"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-20"\n    d="M-94.23,526.21c.76-.86,1.29-.53,1.91-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.84,3.76q27.76,4.24,55.26,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26A113.42,113.42,0,0,1,220.41,629c5.84,7.36,10.5,15.86,12.51,25.14a22.17,22.17,0,0,1,.5,7.13,24,24,0,0,1-1.78,6.94,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.11,144.11,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.58-.08,1.15-.12,1.72l0,1.74,0,1.73.06,1.73a70.09,70.09,0,0,0,1.93,13.74,103.75,103.75,0,0,0,10.42,25.77A178.52,178.52,0,0,0,95.4,871.4c11.54,14.67,24.73,28,38.48,40.64s28.21,24.53,43,36c29.54,23,60.3,44.31,91.42,65.07S331,1054,362.68,1073.91l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.47,48.22,83.4,75.35a560.56,560.56,0,0,1,36.93,42.46,385.36,385.36,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,122.23,122.23,0,0,1,.41,14.19,115.84,115.84,0,0,1-1.27,14.16,106.08,106.08,0,0,1-8,27.23,102.75,102.75,0,0,1-6.65,12.58,116,116,0,0,1-8.15,11.63A164.49,164.49,0,0,1,871.89,1668a215.91,215.91,0,0,1-22.24,17.43A263.08,263.08,0,0,1,799.9,1712a295.58,295.58,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.94,1.28l-7,1.12c-2.33.36-4.66.62-7,.93l-3.49.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.41.1-14.1-.09-2.35-.07-4.71-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32A133,133,0,0,1,508,1671a96.23,96.23,0,0,1-15.37-24,67.86,67.86,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74A174.44,174.44,0,0,1,517,1540.49,237.31,237.31,0,0,1,555.35,1499,357.31,357.31,0,0,1,601,1465.94a531.74,531.74,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.46.25,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.57,20.67q27.43,6.27,54.53,14c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.44,15.24,11.16,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.33,98.63S2153.47,2303,2149.63,2340c-3.45,37-2.78,74.51,3.21,111.21a407.23,407.23,0,0,0,12.56,54.29,414.9,414.9,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.81,692.81,0,0,0,93.06,61.92A861.32,861.32,0,0,0,2519.44,2839a1039.76,1039.76,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,663.43,663.43,0,0,0,98-54.39l.34.5a665.44,665.44,0,0,1-97.85,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.9-19.13-221.24-39a1040.94,1040.94,0,0,1-106.73-35.49A862.67,862.67,0,0,1,2416,2795.26a697.49,697.49,0,0,1-93.83-62.19c-29.41-23.39-56.87-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.24-4.71-.27-7.06a471.08,471.08,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.45,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.86-36.86-2.57-54.65a141.58,141.58,0,0,0-9.1-25.89,156.92,156.92,0,0,0-13.87-23.76c-10.6-15.05-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.88-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.16-35.43-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.59-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.62-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,354.08,354.08,0,0,0-45.22,32.69A233.18,233.18,0,0,0,520,1542.58a171,171,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78a59.15,59.15,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.81,92.81,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.89-1.1c2.31-.34,4.58-.85,6.87-1.26A293.14,293.14,0,0,0,798.72,1709a260.21,260.21,0,0,0,49.18-26.16,212.69,212.69,0,0,0,21.93-17.16A160.39,160.39,0,0,0,889,1645.58a111,111,0,0,0,8-11.33A101.18,101.18,0,0,0,903.4,1622a103,103,0,0,0,7.84-26.46c2.83-18.28.84-37.1-4.1-55s-12.66-35-21.77-51.22A381,381,0,0,0,854.16,1443a556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.25-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87A181.55,181.55,0,0,1,78.48,849,105,105,0,0,1,68,822.82a71.21,71.21,0,0,1-2-14L66,807l0-1.77,0-1.77c0-.6.07-1.2.13-1.79a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,73.53,73.53,0,0,1,8.84-11,144.88,144.88,0,0,1,21.61-18c7.69-5.39,15.69-10.3,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.42-10.6,21.79-17.37a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28A199.25,199.25,0,0,0,176,595.13a368.23,368.23,0,0,0-51.07-23C107.37,565.59,89.49,560,71.46,555s-36.24-9.33-54.54-13.2S-19.8,534.6-38.3,531.75c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.44-1.17-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="800.9 1383.9 803.76 1383.08 806.88 1386.35 804.03 1387.14 800.9 1383.9"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-21"\n    d="M-102,556.26c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.77,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26A114.1,114.1,0,0,1,212.61,659c5.84,7.36,10.49,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93A40.63,40.63,0,0,1,215.92,710c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.22,27-8.07,4.71-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.35,73.35,0,0,0-8.66,10.85A46.79,46.79,0,0,0,61,825.12a38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a70.76,70.76,0,0,0,1.94,13.73A103.22,103.22,0,0,0,72,878.31a179.47,179.47,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,22.95,60.29,44.31,91.42,65.08S323.19,1084,354.88,1104l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.82,30.66,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46A386.15,386.15,0,0,1,880,1518c9.22,16.38,17.07,33.65,22.11,51.85a153.61,153.61,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,113.39,113.39,0,0,1-8.16,11.63,163.68,163.68,0,0,1-19.46,20.54,214.54,214.54,0,0,1-22.24,17.43A263.08,263.08,0,0,1,792.1,1742,296.4,296.4,0,0,1,738,1757.91c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.23l-7-.4c-9.38-.56-18.74-1.55-28-2.91a280.2,280.2,0,0,1-54.78-13.41c-17.71-6.43-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.37,174.37,0,0,1,25.11-50.6,236.93,236.93,0,0,1,38.31-41.46A356.53,356.53,0,0,1,593.21,1496a525.85,525.85,0,0,1,49.53-26.83c33.88-16.2,69-29.51,104.66-41.2,71.33-23.17,144.43-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.61,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.87a780.69,780.69,0,0,1,103.59,44.2c16.66,8.7,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.24,47.6-21.39,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.69,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a407.23,407.23,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93A860.5,860.5,0,0,0,2511.64,2869a1036.5,1036.5,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,663.94,663.94,0,0,0,98-54.39l.33.5a663.91,663.91,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,420.48,420.48,0,0,1-20.38-52.69,411.42,411.42,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.33,20.74-31,30-47.14a387.22,387.22,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.56-54.66A141.48,141.48,0,0,0,2550,1575a157.37,157.37,0,0,0-13.87-23.77c-10.6-15-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a775,775,0,0,0-102.77-44c-17.61-6.16-35.43-11.72-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.32s-148.59,17.9-222.15,31.56-146.48,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,351.55,351.55,0,0,0-45.23,32.69,233.09,233.09,0,0,0-37.76,40.77,170.77,170.77,0,0,0-24.66,49.53c-1.33,4.44-2.52,8.91-3.47,13.45-.45,2.25-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.76,64.5,64.5,0,0,0,5.72,26.52,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.22,4.65.19,9.31.11,14,.1,9.3-.21,18.62-.62,27.87-1.63l3.48-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a292,292,0,0,0,53.51-15.66,259.56,259.56,0,0,0,49.18-26.15A214.29,214.29,0,0,0,862,1695.77a160.39,160.39,0,0,0,19.13-20.14,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103,103,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.37-60.93S197.6,1002.44,168,979.41c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87A180.53,180.53,0,0,1,70.68,879a105.11,105.11,0,0,1-10.52-26.14,71.31,71.31,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11A145.57,145.57,0,0,1,96.1,782.78c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.28-26.95,8.18-4.53,16.29-9.18,24.13-14.26s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.46-6.8c-2-9.08-6.51-17.44-12.27-24.72a112.73,112.73,0,0,0-20.13-19.27,199.33,199.33,0,0,0-23.49-15.22,369.94,369.94,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="793.1 1413.95 795.95 1413.13 799.08 1416.4 796.23 1417.19 793.1 1413.95"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-22"\n    d="M-110.25,587.75c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.17,0,2.35,0,3.52.07,2.34.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a370.39,370.39,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.66,40.66,0,0,1-7.93,11.73c-6.47,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.42,73.42,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,39,39,0,0,0-1.27,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74A69.26,69.26,0,0,0,53.32,884,103.22,103.22,0,0,0,63.74,909.8a178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,22.95,60.29,44.31,91.42,65.08s62.72,40.85,94.4,60.78L441.89,1195c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,106.06,106.06,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,163.76,163.76,0,0,1-19.47,20.54A214.42,214.42,0,0,1,833.63,1747a263.16,263.16,0,0,1-49.76,26.53,296.07,296.07,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.23l-7-.4c-9.38-.56-18.74-1.56-28-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.73A174.37,174.37,0,0,1,501,1602a236.93,236.93,0,0,1,38.31-41.46A354.87,354.87,0,0,1,585,1527.49a529.33,529.33,0,0,1,49.52-26.84c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.61,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18,5.12,36,10.69,53.72,16.87a780.56,780.56,0,0,1,103.58,44.2c16.67,8.7,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.91,437.91,0,0,0,59.83,93.88c23.7,28.74,50.85,54.55,80,77.8a693,693,0,0,0,93.07,61.93,861.34,861.34,0,0,0,101.17,47.86,1036.5,1036.5,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.48-6.38,148.55-19.38,220.22-40.86a844,844,0,0,0,105.1-39.07,663.84,663.84,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.84-145.87,35.2-220.5,41.93a1295.79,1295.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.86-78.4a442.31,442.31,0,0,1-60.73-94.9,420.43,420.43,0,0,1-20.37-52.69,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95-115.91,142.29-173.89,23.57-29,46.74-58.38,68-89,10.62-15.33,20.74-31,30-47.14a389.16,389.16,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.83-2.65-7.63-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.42-27.91a774.32,774.32,0,0,0-102.76-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.25-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a525.18,525.18,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69A233.14,233.14,0,0,0,504,1604.12a171,171,0,0,0-24.65,49.53c-1.34,4.44-2.52,8.91-3.47,13.45-.46,2.25-.95,4.56-1.27,6.77a59.15,59.15,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.59,92.59,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.22,4.66.19,9.32.11,14,.1,9.31-.21,18.62-.62,27.88-1.63L705,1790l3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a293,293,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,214.29,214.29,0,0,0,21.94-17.17,160.39,160.39,0,0,0,19.13-20.14,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.06,105.06,0,0,1-10.53-26.15,71.85,71.85,0,0,1-2-14l-.06-1.77,0-1.78L50,865c0-.6.06-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-26.95,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.5-17.44-12.26-24.72a112.79,112.79,0,0,0-20.14-19.27A199.21,199.21,0,0,0,160,656.67a370.48,370.48,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07S19.2,607.24.89,603.38s-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="784.88 1445.44 787.73 1444.62 790.86 1447.89 788.01 1448.68 784.88 1445.44"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-23"\n    d="M-118.25,618.15c.76-.86,1.29-.53,1.91-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.84,3.76q27.76,4.25,55.26,10c18.33,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.14a22.17,22.17,0,0,1,.5,7.13,24,24,0,0,1-1.78,6.94,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.11,144.11,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85A47.1,47.1,0,0,0,44.79,887a38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.74,0,1.73.06,1.73a70.09,70.09,0,0,0,1.93,13.74A103.75,103.75,0,0,0,55.74,940.2a178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.54,23,60.3,44.31,91.42,65.07s62.73,40.85,94.41,60.78l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.47,48.22,83.4,75.35a560.56,560.56,0,0,1,36.93,42.46,385.36,385.36,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,120,120,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,106.08,106.08,0,0,1-8,27.23,104.08,104.08,0,0,1-6.64,12.58,117.76,117.76,0,0,1-8.16,11.63A164.49,164.49,0,0,1,847.87,1760a215.91,215.91,0,0,1-22.24,17.43,263.08,263.08,0,0,1-49.75,26.53,295.35,295.35,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.94,1.28l-7,1.12c-2.33.36-4.66.62-7,.93l-3.49.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.71-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32A132.53,132.53,0,0,1,484,1762.94a96,96,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74A174.44,174.44,0,0,1,493,1632.43,237.31,237.31,0,0,1,531.33,1591,357.31,357.31,0,0,1,577,1557.88a531.74,531.74,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.46.25,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.52,13.95c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.44,15.24,11.16,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.33,98.63-24.69,70.39-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21a408.79,408.79,0,0,0,12.56,54.29,414.9,414.9,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.81,692.81,0,0,0,93.06,61.92,861.32,861.32,0,0,0,101.17,47.87,1039.76,1039.76,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,663.43,663.43,0,0,0,98-54.39l.34.5a665.44,665.44,0,0,1-97.85,55,844.49,844.49,0,0,1-105.1,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.9-19.13-221.24-39a1040.94,1040.94,0,0,1-106.73-35.49,863.42,863.42,0,0,1-101.82-47.93A697.49,697.49,0,0,1,2298.1,2825c-29.41-23.39-56.87-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.24-4.71-.27-7.06a471.08,471.08,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.88c45.75-59.45,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a141.58,141.58,0,0,0-9.1-25.89A157.71,157.71,0,0,0,2520,1613.1c-10.61-15-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.88-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.16-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-14c-36.39-8.41-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.59-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.62-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,354.08,354.08,0,0,0-45.22,32.69A233.18,233.18,0,0,0,496,1634.52a171,171,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78A59.15,59.15,0,0,0,466,1711a64.5,64.5,0,0,0,5.72,26.52,92.81,92.81,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.89-1.1c2.31-.34,4.58-.85,6.87-1.26A293.14,293.14,0,0,0,774.7,1801a260.21,260.21,0,0,0,49.18-26.16,212.69,212.69,0,0,0,21.93-17.16A161.19,161.19,0,0,0,865,1737.52a112.52,112.52,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103,103,0,0,0,7.84-26.46c2.83-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22A381,381,0,0,0,830.14,1535a556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.25-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87a181.55,181.55,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l0-1.78,0-1.77,0-1.77c0-.6.07-1.2.13-1.79a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,73.53,73.53,0,0,1,8.84-11,144.88,144.88,0,0,1,21.61-18.05c7.69-5.39,15.69-10.3,23.8-15,16.22-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.42-10.61,21.79-17.37a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28A199.25,199.25,0,0,0,152,687.07a368.23,368.23,0,0,0-51.07-23C83.35,657.53,65.47,652,47.44,647S11.2,637.64-7.1,633.77s-36.72-7.23-55.22-10.08c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.44-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="776.89 1475.84 779.74 1475.02 782.86 1478.29 780.01 1479.08 776.89 1475.84"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-24"\n    d="M-126.22,648c.76-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.1,4.68.26,7,.44,4.67.37,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.23,55.27,10t54.61,13.13c18.05,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.86,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.65,40.65,0,0,1-7.93,11.74c-6.47,6.89-14.15,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.07,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.43,73.43,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a70.86,70.86,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76A179.24,179.24,0,0,0,63.4,993.24c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52C489.38,1295,552.65,1335.12,614,1378.1c30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.12,556.12,0,0,1,36.92,42.45,385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.07,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.05,114.05,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,217.29,217.29,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.57-18.74-1.56-28-2.91a280.3,280.3,0,0,1-54.77-13.42c-17.71-6.42-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60,60,0,0,1,.54-7.21c.36-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.32,174.32,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47A356.53,356.53,0,0,1,569,1587.78,529.24,529.24,0,0,1,618.54,1561c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.27,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,436.64,436.64,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,860.5,860.5,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a842.44,842.44,0,0,0,105.1-39.07,662.42,662.42,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.85-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5A860.94,860.94,0,0,1,2384,2917.09a698.23,698.23,0,0,1-93.84-62.19c-29.4-23.38-56.86-49.39-80.86-78.39a442.58,442.58,0,0,1-60.72-94.91,420.94,420.94,0,0,1-20.38-52.68,411.57,411.57,0,0,1-12.83-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473,473,0,0,1,1.85-56.45c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.75-99.58,42.11-62.18,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a388.49,388.49,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88A157.27,157.27,0,0,0,2512,1643c-10.6-15.06-23.56-28.43-37.7-40.37-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.24-.92-224.43,3.85c-74.75,3.31-149.42,8.6-223.85,16.32S1015.59,1456,942,1469.61s-146.48,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9A526.08,526.08,0,0,0,571,1591a351.55,351.55,0,0,0-45.23,32.69A232.77,232.77,0,0,0,488,1664.42,170.52,170.52,0,0,0,463.33,1714c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51,92.58,92.58,0,0,0,14.81,23.13,130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88A276.57,276.57,0,0,0,602,1848.58c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.65.19,9.31.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a291.24,291.24,0,0,0,53.51-15.66,259.86,259.86,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16A161.07,161.07,0,0,0,857,1767.42a112.14,112.14,0,0,0,8-11.33,101.31,101.31,0,0,0,6.47-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.23a383.68,383.68,0,0,0-31.21-46.37,556.24,556.24,0,0,0-36.69-42.29c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.64c-31.67-20-63.22-40.14-94.37-60.94s-61.88-42.23-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87A179.78,179.78,0,0,1,46.49,970.8,105,105,0,0,1,36,944.66a71.21,71.21,0,0,1-2-14L34,928.87l0-1.78,0-1.77c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.53,48.53,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.57,145.57,0,0,1,21.62-18.05c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.19-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.51,22.51,0,0,0,1.7-6.62,21.07,21.07,0,0,0-.46-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.79,112.79,0,0,0-20.13-19.28A198.81,198.81,0,0,0,144,717a370.53,370.53,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.4,6.4,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="768.91 1505.73 771.76 1504.91 774.89 1508.19 772.04 1508.97 768.91 1505.73"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-25"\n    d="M-134.44,679.53c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.37,9.32.86,14,1.39,9.3,1.07,18.57,2.35,27.83,3.76q27.77,4.23,55.26,10t54.62,13.13c18.05,5,36,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25A114.16,114.16,0,0,1,180.2,782.3c5.84,7.35,10.49,15.86,12.5,25.13a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15A144.54,144.54,0,0,0,43.05,925a72.86,72.86,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38.74,38.74,0,0,0-1.27,6.76c-.07.57-.09,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.65,103.65,0,0,0,10.41,25.76,180.34,180.34,0,0,0,15.64,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.34a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,102.56,102.56,0,0,1-6.64,12.57,112.3,112.3,0,0,1-8.16,11.63,163.85,163.85,0,0,1-19.47,20.55,217.17,217.17,0,0,1-22.23,17.43,263.42,263.42,0,0,1-49.76,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.57-18.74-1.56-28.05-2.91a280.3,280.3,0,0,1-54.77-13.42c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.21c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08,529.24,529.24,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.27,110.58,20.67q27.44,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,859.74,859.74,0,0,0,101.17,47.86A1034.72,1034.72,0,0,0,2585.4,3028c72,20,146,32.94,220.43,39.58a1293.54,1293.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.85-145.86,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19C2252.49,2863,2225,2837,2201,2808a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.27,157.27,0,0,0-13.87-23.76c-10.6-15.06-23.56-28.43-37.7-40.37-7.09-6-14.47-11.57-22.05-16.94-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.91-224.43,3.85c-74.75,3.31-149.43,8.59-223.85,16.32s-148.6,17.91-222.15,31.56S787.33,1531.94,716.2,1555c-35.51,11.62-70.54,24.84-104.25,40.9a527.34,527.34,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.83,92.83,0,0,0,14.8,23.13,130.06,130.06,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.88a277.37,277.37,0,0,0,54.1,13.31c9.22,1.34,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.32.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.8,161.8,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,100,100,0,0,0,6.48-12.23A103.38,103.38,0,0,0,871,1748.9c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.23A384.86,384.86,0,0,0,814,1596.34a556.24,556.24,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.64c-31.67-20-63.23-40.14-94.37-60.94s-61.88-42.23-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105,105,0,0,1-10.53-26.14,72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.59.06-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.36,48.36,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18.05c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.82,22.82,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-1.95-9.08-6.51-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,198.69,198.69,0,0,0-23.48-15.21,370.12,370.12,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07S-5,699-23.3,695.16-60,687.92-78.51,685.07c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="760.69 1537.22 763.54 1536.4 766.67 1539.68 763.82 1540.46 760.69 1537.22"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-26"\n    d="M-142.44,709.93c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.35,27.84,3.75q27.75,4.25,55.26,10C-12.82,728.67,5.41,733,23.47,738s36,10.52,53.53,17a370,370,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.77,113.77,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33,17.61-49.22,27-8.07,4.7-16,9.6-23.67,15a144.11,144.11,0,0,0-21.4,17.91,72.92,72.92,0,0,0-8.66,10.86,47.18,47.18,0,0,0-5.79,12.5,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74a70.19,70.19,0,0,0,1.93,13.74A103.3,103.3,0,0,0,31.55,1032a179.31,179.31,0,0,0,15.64,23.15c11.54,14.66,24.73,28,38.48,40.63s28.21,24.54,43,36c29.54,23,60.3,44.32,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52C473.16,1356.88,536.43,1397,597.79,1440c30.66,21.51,60.84,43.74,90,67.24s57.47,48.23,83.4,75.35A558.2,558.2,0,0,1,808.13,1625a383.17,383.17,0,0,1,31.5,46.68c9.22,16.37,17.07,33.64,22.11,51.84a151.9,151.9,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,114.05,114.05,0,0,1-1.26,14.16,106.31,106.31,0,0,1-8,27.23,102.62,102.62,0,0,1-6.65,12.57,113.77,113.77,0,0,1-8.15,11.63,163.8,163.8,0,0,1-19.47,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,295.61,295.61,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.49.45-3.51.35c-9.36,1-18.76,1.44-28.16,1.67-4.7,0-9.41.1-14.1-.08-2.35-.08-4.71-.08-7.05-.23l-7-.39q-14.08-.86-28.05-2.92a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.42-34.78-14.95-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59,237,237,0,0,1,38.31-41.47,357.23,357.23,0,0,1,45.66-33.08,527.09,527.09,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.2,71.34-23.17,144.43-40.43,218.08-54.21s147.95-24,222.45-31.83,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.09,5.51,74,12.26,110.57,20.67q27.44,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.88a778.06,778.06,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.73,146.73,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a393.12,393.12,0,0,1-24.8,50.81c-9.35,16.34-19.55,32.16-30.24,47.61-21.38,30.89-44.59,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.27-52.33,98.63-24.69,70.4-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21a406.87,406.87,0,0,0,12.56,54.29,415.63,415.63,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.87,692.87,0,0,0,93.06,61.93,861.26,861.26,0,0,0,101.17,47.86,1034.89,1034.89,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,663,663,0,0,0,98-54.39l.33.5a663.91,663.91,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5A860.94,860.94,0,0,1,2367.74,2979a698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9A418.89,418.89,0,0,1,2112,2690.8a411.1,411.1,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.28,28.77-109s32.67-67.84,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.13a387.19,387.19,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.86-36.87-2.57-54.66a141.48,141.48,0,0,0-9.1-25.88,157,157,0,0,0-13.87-23.77c-10.6-15.05-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.28-48.41-27.91a772.39,772.39,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.85s-36-9.76-54.24-14c-36.39-8.41-73.16-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.09-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.31-149.42,8.59-223.84,16.32s-148.6,17.9-222.16,31.56-146.48,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,351.45,351.45,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78,170.78,170.78,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.25-.94,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51,92.63,92.63,0,0,0,14.81,23.12,128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.55,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.92l7,.4c2.32.14,4.65.15,7,.23,4.65.18,9.31.1,14,.09,9.3-.21,18.62-.61,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a291.57,291.57,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15,214.07,214.07,0,0,0,21.93-17.16,160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22A102.59,102.59,0,0,0,863,1779.3c2.84-18.29.84-37.1-4.09-55s-12.66-35-21.77-51.23A381.74,381.74,0,0,0,806,1626.74a556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.71-83-75.23S627,1463.48,596.41,1442c-61.24-43-124.42-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.53,180.53,0,0,1-15.74-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c.05-.6.07-1.19.13-1.78a39.43,39.43,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,73.61,73.61,0,0,1,8.84-11,145.49,145.49,0,0,1,21.61-18c7.69-5.39,15.69-10.29,23.8-15,16.21-9.39,32.89-17.91,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.08,21.08,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.44,112.44,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,370,370,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07S-13,729.42-31.3,725.56-68,718.32-86.51,715.47c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="752.7 1567.62 755.55 1566.8 758.67 1570.08 755.82 1570.86 752.7 1567.62"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-27"\n    d="M-148.95,738.53c.75-.86,1.29-.52,1.9-.7s1.18-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.66.38,9.32.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.77,4.25,55.26,10T17,766.56c18,5,35.95,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,198.22,198.22,0,0,1,23.62,15.26,113.48,113.48,0,0,1,20.35,19.43c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93A40.85,40.85,0,0,1,169,892.24c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15A144,144,0,0,0,28.54,984a72.86,72.86,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38.94,38.94,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74A103.5,103.5,0,0,0,25,1060.58a178.63,178.63,0,0,0,15.64,23.15c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.23,59.52c63.47,39.72,126.73,79.85,188.1,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.12,556.12,0,0,1,36.92,42.45,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,102.56,102.56,0,0,1-6.64,12.57,113.52,113.52,0,0,1-8.16,11.64,165.19,165.19,0,0,1-19.47,20.54,216.21,216.21,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.92l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.11-14.1-.08-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91A279.42,279.42,0,0,1,524,1928.94c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.21c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74a174.44,174.44,0,0,1,25.11-50.59,236.19,236.19,0,0,1,38.31-41.46,354.94,354.94,0,0,1,45.66-33.09,528,528,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s148-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.33,2.27s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163.79,163.79,0,0,1,14.42,24.67,147.11,147.11,0,0,1,9.51,27c4.64,18.59,5.13,38,2.73,56.88s-7.84,37.22-14.76,54.8a395.18,395.18,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.15-30.25,47.6-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.68-22.8,29.61-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.5,3.21,111.2a406.55,406.55,0,0,0,12.57,54.29,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87A1037.09,1037.09,0,0,0,2570.89,3087c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,663.78,663.78,0,0,0,98-54.38l.34.49a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.85-145.86,35.21-220.49,41.94a1295.9,1295.9,0,0,1-224.6.18c-74.68-6.42-148.89-19.14-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,699.25,699.25,0,0,1-93.84-62.2C2238,2922,2210.53,2896,2186.52,2867a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7a471,471,0,0,1,1.85-56.46c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,158.62,158.62,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-17-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36.05-9.76-54.24-14c-36.4-8.42-73.17-15.2-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.91-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56S772.82,1590.94,701.69,1614c-35.52,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59A352.15,352.15,0,0,0,503,1714.13a233.18,233.18,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.25,64.25,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,130.06,130.06,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88a275.94,275.94,0,0,0,54.1,13.31c9.22,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26A292.28,292.28,0,0,0,744,1921.36a260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,102,102,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a383.61,383.61,0,0,0-31.2-46.37,558.18,558.18,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.14-94.36-60.94s-61.88-42.23-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a179.78,179.78,0,0,1-15.73-23.36,105,105,0,0,1-10.53-26.14,72,72,0,0,1-2-14l-.06-1.77,0-1.77,0-1.78c.05-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18.05c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.67,22.67,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.27-24.71a112.46,112.46,0,0,0-20.13-19.28,198.69,198.69,0,0,0-23.48-15.21,370.12,370.12,0,0,0-51.08-23c-17.53-6.5-35.4-12.09-53.43-17.07S-19.5,758-37.81,754.16-74.53,746.93-93,744.07c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="746.18 1596.22 749.03 1595.4 752.16 1598.68 749.31 1599.46 746.18 1596.22"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-28"\n    d="M-157.17,770c.75-.86,1.28-.52,1.9-.7s1.18-.06,1.77-.07c1.18,0,2.35,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.77,4.25,55.26,10T8.73,798.05c18.06,5,36,10.52,53.53,17a370,370,0,0,1,51.24,23,199.85,199.85,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.85,7.35,10.5,15.86,12.51,25.13a22,22,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.11,144.11,0,0,0-21.4,17.91,73.43,73.43,0,0,0-8.66,10.86,47.1,47.1,0,0,0-5.79,12.51,37.85,37.85,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a70.09,70.09,0,0,0,1.93,13.74,103.91,103.91,0,0,0,10.42,25.76,178.63,178.63,0,0,0,15.64,23.15c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,22.95,60.3,44.31,91.43,65.07s62.72,40.85,94.4,60.78L395,1377.25c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.74,90,67.25s57.46,48.22,83.39,75.35a558.47,558.47,0,0,1,36.93,42.45,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,119.92,119.92,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,104,104,0,0,1-6.64,12.57,115.1,115.1,0,0,1-8.16,11.64,165.19,165.19,0,0,1-19.47,20.54,217.29,217.29,0,0,1-22.24,17.43A263,263,0,0,1,737,1955.78a295.38,295.38,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.93,1.28l-7,1.12c-2.33.35-4.66.61-7,.92l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.39-.57-18.74-1.56-28.05-2.91a280.4,280.4,0,0,1-54.78-13.42c-17.7-6.42-34.78-15-49.94-26.32a132.6,132.6,0,0,1-20.82-19.3,96,96,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.21c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.32,174.32,0,0,1,25.11-50.59,237,237,0,0,1,38.31-41.46,356.34,356.34,0,0,1,45.66-33.09,529.41,529.41,0,0,1,49.53-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s147.95-24,222.45-31.84,149.27-13.18,224.1-16.56,149.77-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.52,14c18.06,5.12,36,10.69,53.72,16.88a777.5,777.5,0,0,1,103.59,44.2c16.66,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.23,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a162.89,162.89,0,0,1,14.41,24.67,146.37,146.37,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.88s-7.83,37.22-14.76,54.8a393.88,393.88,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.15-30.24,47.6-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.81,29.61-44.73,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.5,3.21,111.2a406.91,406.91,0,0,0,12.57,54.29,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a694.4,694.4,0,0,0,93.06,61.92,862.31,862.31,0,0,0,101.18,47.87,1036.27,1036.27,0,0,0,106.17,35.68c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a841.71,841.71,0,0,0,105.09-39.07,663.38,663.38,0,0,0,98-54.38l.34.49a664.52,664.52,0,0,1-97.85,55,842.32,842.32,0,0,1-105.1,39.61c-71.71,21.85-145.86,35.21-220.49,41.94a1295.9,1295.9,0,0,1-224.6.18c-74.68-6.42-148.89-19.14-221.24-39a1038.57,1038.57,0,0,1-106.73-35.5A863.35,863.35,0,0,1,2353,3039.08a698.51,698.51,0,0,1-93.83-62.2c-29.41-23.38-56.86-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.33-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.7-.77-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.26-7.05a471,471,0,0,1,1.85-56.46c3.84-37.63,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.12-62.17,65-91.89c45.75-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a387.19,387.19,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a140,140,0,0,0-9.1-25.88A157.71,157.71,0,0,0,2481,1765c-10.6-15-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22-16.95-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36-9.76-54.25-14c-36.39-8.42-73.16-15.2-110.12-20.73-73.94-11.09-148.56-17.39-223.25-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.21-2.41q-112.24-.91-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.85c-35.51,11.62-70.53,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69A233.18,233.18,0,0,0,457,1786.4a170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.48,13.44-.45,2.26-.94,4.56-1.26,6.78a54.65,54.65,0,0,0-.52,6.77,64.4,64.4,0,0,0,5.71,26.52,93,93,0,0,0,14.81,23.12,129.61,129.61,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88A276,276,0,0,0,571,1970.56c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.14,4.65.15,7,.23,4.65.19,9.31.1,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.45c2.3-.3,4.62-.56,6.92-.91l6.9-1.09c2.3-.35,4.57-.85,6.86-1.26a292.15,292.15,0,0,0,53.52-15.67A260.17,260.17,0,0,0,785,1926.7a213.89,213.89,0,0,0,21.94-17.16A162.54,162.54,0,0,0,826,1889.4a113.67,113.67,0,0,0,8-11.33,101.38,101.38,0,0,0,6.48-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.52,382.52,0,0,0-31.21-46.37,553.88,553.88,0,0,0-36.68-42.29c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.14-94.36-60.94s-61.88-42.23-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a179.78,179.78,0,0,1-15.73-23.36A104.61,104.61,0,0,1,5,1066.64a71.21,71.21,0,0,1-2-14l0-1.77,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.2,48.2,0,0,1,6-12.87,74.76,74.76,0,0,1,8.84-11.05A145.49,145.49,0,0,1,41,996.54c7.69-5.38,15.69-10.29,23.8-15,16.22-9.4,32.89-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26S153.58,929.73,160,923a39.68,39.68,0,0,0,7.72-11.39,22.77,22.77,0,0,0,1.71-6.61,21.12,21.12,0,0,0-.47-6.81c-2-9.08-6.51-17.44-12.27-24.71a112.79,112.79,0,0,0-20.13-19.28A198,198,0,0,0,113,839a369.46,369.46,0,0,0-51.07-23c-17.53-6.5-35.4-12.09-53.44-17.07S-27.73,789.52-46,785.65s-36.72-7.23-55.22-10.09c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="737.96 1627.71 740.81 1626.89 743.93 1630.17 741.08 1630.95 737.96 1627.71"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-29"\n    d="M-165.17,800.42c.75-.86,1.29-.52,1.9-.7s1.19-.07,1.78-.07c1.17,0,2.35,0,3.52.06q3.51.15,7,.44c4.67.37,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.23,55.27,10c18.32,3.84,36.55,8.17,54.61,13.13s36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44C155.31,910.54,160,919,162,928.32a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.28,72.28,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.73.06,1.74a70.21,70.21,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76,179.24,179.24,0,0,0,15.63,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78L387,1407.65c63.46,39.72,126.73,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,116,116,0,0,1-1.26,14.16,106.59,106.59,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63A163.72,163.72,0,0,1,801,1942.22a217.09,217.09,0,0,1-22.24,17.44A263.69,263.69,0,0,1,729,1986.18a295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7.05-.22l-7-.4q-14.07-.86-28.05-2.92a279.57,279.57,0,0,1-54.77-13.41c-17.71-6.42-34.79-14.95-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08,526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.44,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.47,147.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,412.55,412.55,0,0,0,20,52,437.23,437.23,0,0,0,59.82,93.88c23.7,28.74,50.85,54.56,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a844,844,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.85-145.87,35.21-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5A860.94,860.94,0,0,1,2345,3069.47a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.86-78.4a442.31,442.31,0,0,1-60.73-94.9,420.89,420.89,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.83-4.63-1.37-9.32-2-14-.36-2.33-.56-4.68-.83-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.84,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.63-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a772.39,772.39,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.75-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.24-.93-224.43,3.85c-74.75,3.31-149.43,8.59-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9A525.18,525.18,0,0,0,532,1743.33,352.15,352.15,0,0,0,486.8,1776,232.77,232.77,0,0,0,449,1816.8a170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51A92.35,92.35,0,0,0,439.65,1943a129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.55,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.92l7,.4c2.33.14,4.66.15,7,.23,4.66.18,9.32.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66A260.17,260.17,0,0,0,777,1957.1a212.81,212.81,0,0,0,21.94-17.16A160.47,160.47,0,0,0,818,1919.79a109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36A105.14,105.14,0,0,1-3,1097a72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.59.06-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15C73,1002.55,89.65,994,106,985c8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.51,39.51,0,0,0,159.68,942a22.51,22.51,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-1.95-9.08-6.5-17.44-12.26-24.71a112.5,112.5,0,0,0-20.14-19.28A197.87,197.87,0,0,0,105,869.35a370.53,370.53,0,0,0-51.07-23C36.42,839.8,18.55,834.22.52,829.24S-35.72,819.91-54,816.05s-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="729.96 1658.11 732.81 1657.29 735.94 1660.57 733.09 1661.35 729.96 1658.11"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-30"\n    d="M-173.14,830.32c.75-.86,1.28-.53,1.9-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.53.07,2.34.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38,9.31,1.07,18.58,2.35,27.84,3.76q27.77,4.24,55.26,10c18.33,3.85,36.55,8.18,54.61,13.13s36,10.53,53.54,17a371.63,371.63,0,0,1,51.23,23,200.3,200.3,0,0,1,23.62,15.26,113.48,113.48,0,0,1,20.35,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.9,21.9,0,0,1,.5,7.13,23.42,23.42,0,0,1-1.78,6.94A40.63,40.63,0,0,1,144.8,984c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.41,143.41,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38.94,38.94,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74A103.72,103.72,0,0,0,.84,1152.37a178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.54,22.95,60.3,44.31,91.43,65.07s62.72,40.85,94.4,60.78L379,1437.54c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.36,385.36,0,0,1,31.5,46.67c9.21,16.38,17.06,33.64,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23A104.08,104.08,0,0,1,820.6,1940a114.49,114.49,0,0,1-8.16,11.63A164.49,164.49,0,0,1,793,1972.12a216.21,216.21,0,0,1-22.24,17.43A263.65,263.65,0,0,1,721,2016.08,295.48,295.48,0,0,1,666.9,2032c-2.32.43-4.62.94-6.94,1.28l-7,1.12c-2.32.36-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a133,133,0,0,1-20.82-19.29,96,96,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,62.31,62.31,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74a174.44,174.44,0,0,1,25.11-50.59,236.54,236.54,0,0,1,38.31-41.46,355.9,355.9,0,0,1,45.66-33.09,530.31,530.31,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.45-31.84,149.27-13.17,224.1-16.56,149.77-4.62,224.68-4.08c37.45.25,74.9,1.1,112.33,2.26s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.11l5.94,3.8,5.87,3.9c3.94,2.57,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.24,14.45,12.17,27.78,25.89,38.76,41.46a163.69,163.69,0,0,1,14.42,24.66,146.44,146.44,0,0,1,9.5,27c4.65,18.58,5.14,38,2.74,56.87s-7.84,37.23-14.76,54.8A392.67,392.67,0,0,1,2457,2036c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.89,413.89,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.91,692.91,0,0,0,93.07,61.92,859.81,859.81,0,0,0,101.17,47.87,1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a845.62,845.62,0,0,0,105.1-39.07,664.75,664.75,0,0,0,98-54.39l.34.49a665,665,0,0,1-97.84,55,844.64,844.64,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.23-39a1038.75,1038.75,0,0,1-106.74-35.5A860.88,860.88,0,0,1,2337,3099.37a697.59,697.59,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7c-.13-2.35-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.68-67.85,52.75-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a140.1,140.1,0,0,0-9.1-25.89,157.71,157.71,0,0,0-13.86-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.06-16.94-3.83-2.65-7.62-5.35-11.51-7.91l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a772.57,772.57,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.24-14c-36.4-8.41-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.59-37.36-2.09-74.74-3.61-112.15-4.84s-74.8-2.1-112.21-2.4q-112.24-.93-224.43,3.85c-74.76,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.62-70.53,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,353.11,353.11,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78,170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a54.8,54.8,0,0,0-.52,6.77,64.33,64.33,0,0,0,5.71,26.52,93.1,93.1,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.21,1.35,18.49,2.34,27.79,2.91l7,.4c2.32.15,4.65.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.92l6.9-1.09c2.3-.34,4.57-.85,6.86-1.26a292.91,292.91,0,0,0,53.52-15.66A260.21,260.21,0,0,0,769,1987a213.89,213.89,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,110.93,110.93,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.45,103.45,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22a381,381,0,0,0-31.21-46.37,554,554,0,0,0-36.68-42.3c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.2-23.49-43-36.17s-27-26.09-38.6-40.86A180.46,180.46,0,0,1-.43,1153.08,104.68,104.68,0,0,1-11,1126.93a71.2,71.2,0,0,1-1.95-14l-.06-1.78,0-1.77,0-1.78c.05-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,74.8,74.8,0,0,1,8.84-11A144.46,144.46,0,0,1,25,1056.84c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26S137.61,990,144,983.26a39.66,39.66,0,0,0,7.72-11.4,22.38,22.38,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a112.8,112.8,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.4-12.09-53.43-17.07S-43.7,849.81-62,845.94s-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-14-1.41-2.32-.19-4.66-.35-7-.45-1.16,0-2.33-.07-3.49-.06-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="721.99 1688.01 724.84 1687.19 727.97 1690.46 725.12 1691.25 721.99 1688.01"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-31"\n    d="M-181.37,861.81c.76-.87,1.29-.53,1.91-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.43,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.84,3.76q27.77,4.25,55.26,10t54.61,13.13c18.06,5,36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.13a22.26,22.26,0,0,1,.5,7.14,23.58,23.58,0,0,1-1.78,6.93,40.54,40.54,0,0,1-7.92,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16.05,9.6-23.68,15a142.9,142.9,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a70.09,70.09,0,0,0,1.93,13.74,104.13,104.13,0,0,0,10.42,25.77A178.52,178.52,0,0,0,8.26,1207c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.54,22.95,60.3,44.31,91.42,65.07s62.73,40.85,94.41,60.78L370.77,1469c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.47,48.22,83.4,75.35a560.56,560.56,0,0,1,36.93,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.38,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,120,120,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,106.08,106.08,0,0,1-8,27.23,104.08,104.08,0,0,1-6.64,12.58,117.76,117.76,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54A217.29,217.29,0,0,1,762.51,2021a263.65,263.65,0,0,1-49.75,26.53,295.35,295.35,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.93,1.28l-7,1.12c-2.33.36-4.66.61-7,.93l-3.5.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.71-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a132.53,132.53,0,0,1-20.82-19.29,96,96,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,60.18,60.18,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,237,237,0,0,1,38.31-41.46,357.31,357.31,0,0,1,45.66-33.09,531.74,531.74,0,0,1,49.53-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.45-31.84,149.27-13.17,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.52,14c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.81,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.44,15.24,11.15,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.83,37.22-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.89,413.89,0,0,0,20,52A437,437,0,0,0,2158.1,2987c23.69,28.74,50.84,54.56,80,77.81a692.81,692.81,0,0,0,93.06,61.92,860.7,860.7,0,0,0,101.18,47.87,1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a844.88,844.88,0,0,0,105.09-39.07,664.35,664.35,0,0,0,98-54.39l.34.49a664.58,664.58,0,0,1-97.85,55,843.9,843.9,0,0,1-105.1,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.24-39a1038.57,1038.57,0,0,1-106.73-35.5,861.76,861.76,0,0,1-101.82-47.92,697.49,697.49,0,0,1-93.83-62.19c-29.41-23.39-56.87-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.34-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.35-.24-4.71-.27-7.06a473.17,473.17,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a141.58,141.58,0,0,0-9.1-25.89,157.71,157.71,0,0,0-13.86-23.76c-10.61-15-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.62-5.35-11.52-7.91l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-14c-36.39-8.42-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.59-37.35-2.09-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.61-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,353.11,353.11,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78,170.62,170.62,0,0,0-24.65,49.53c-1.34,4.43-2.53,8.91-3.48,13.44-.45,2.26-.94,4.57-1.27,6.78a56.64,56.64,0,0,0-.51,6.77,64.33,64.33,0,0,0,5.71,26.52,92.81,92.81,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.92l6.9-1.09c2.3-.34,4.57-.85,6.86-1.26a293.14,293.14,0,0,0,53.52-15.66,260.21,260.21,0,0,0,49.18-26.16,212.69,212.69,0,0,0,21.93-17.16,161.89,161.89,0,0,0,19.14-20.14,112.52,112.52,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.08,103.08,0,0,0,7.84-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22A381,381,0,0,0,767,1778.62a556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.25-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93S118.26,1308,88.7,1285c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.86a181.55,181.55,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l-.05-1.78,0-1.77,0-1.78c.05-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,73.53,73.53,0,0,1,8.84-11,145.56,145.56,0,0,1,21.61-18.06c7.69-5.38,15.69-10.29,23.8-15,16.22-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.42-10.6,21.79-17.36a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21,21,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.54-13.2-36.72-7.23-55.22-10.08c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.07-3.49-.06-.58,0-1.16,0-1.73.07a7.05,7.05,0,0,0-1.37.23Z"\n  />\n  <polygon\n    class="cls-3"\n    points="713.77 1719.49 716.62 1718.68 719.74 1721.95 716.89 1722.74 713.77 1719.49"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-32"\n    d="M-189.36,892.21c.75-.87,1.29-.53,1.9-.71s1.19-.06,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.32.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.24,55.26,10t54.62,13.13c18,5,36,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26A113.75,113.75,0,0,1,125.28,995c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.71,40.71,0,0,1-7.93,11.74c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.87,143.87,0,0,0-21.39,17.9,73.5,73.5,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38.91,38.91,0,0,0-1.27,6.76c-.06.57-.09,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.72,103.72,0,0,0,10.41,25.77A179.54,179.54,0,0,0,.26,1237.4c11.55,14.67,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.27,556.27,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,106.06,106.06,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63A164.45,164.45,0,0,1,776.75,2034a217.17,217.17,0,0,1-22.23,17.43A263.12,263.12,0,0,1,704.76,2078a294.5,294.5,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.09,96.09,0,0,1-15.38-24,67.77,67.77,0,0,1-6-28,60,60,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.19,236.19,0,0,1,460.22,1865a354.94,354.94,0,0,1,45.66-33.09,531.58,531.58,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.42,218.08-54.2s147.95-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.43,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.91c3.93,2.57,7.77,5.29,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147,147,0,0,1,9.51,27c4.65,18.58,5.13,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.69-22.8,29.6-44.72,59.88-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.18,405.18,0,0,0,12.56,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92A861.41,861.41,0,0,0,2424.31,3205a1037.09,1037.09,0,0,0,106.17,35.68c72,20,146,33,220.43,39.58a1292.55,1292.55,0,0,0,224.05.54c74.49-6.37,148.56-19.37,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,663.78,663.78,0,0,0,98-54.38l.34.49a664,664,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.72,21.84-145.87,35.2-220.5,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,698.29,698.29,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.86-78.39a442.24,442.24,0,0,1-60.73-94.91,419.69,419.69,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.36-.25-4.71-.27-7.06a471,471,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89C2241,2345.44,2290.26,2289,2337.5,2231c23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.09-25.88,157.76,157.76,0,0,0-13.87-23.76c-10.6-15.05-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-17-3.84-2.64-7.63-5.34-11.52-7.9l-5.82-3.87-5.87-3.77c-15.69-10-31.9-19.27-48.42-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.91-224.43,3.85c-74.75,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.51,11.61-70.54,24.84-104.24,40.89a527.51,527.51,0,0,0-49.21,26.59,353.11,353.11,0,0,0-45.22,32.69,233.56,233.56,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.25,64.25,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,130.06,130.06,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.88a275.94,275.94,0,0,0,54.1,13.31c9.22,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26A292.28,292.28,0,0,0,703.58,2075a260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,113.76,113.76,0,0,0,8-11.33,101.93,101.93,0,0,0,6.47-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22A383.28,383.28,0,0,0,759,1809a556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.53-29.2-23.5-43-36.17s-27-26.09-38.6-40.87A179.67,179.67,0,0,1-16.65,1215a105.21,105.21,0,0,1-10.53-26.15,72,72,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.37,48.37,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.47-6.81c-1.95-9.07-6.51-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,200,200,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23C12.23,931.59-5.64,926-23.67,921s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.72-27.81-3.8-4.64-.53-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a7.85,7.85,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="705.77 1749.89 708.62 1749.08 711.75 1752.35 708.9 1753.14 705.77 1749.89"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-33"\n    d="M-197.16,922.26c.75-.86,1.29-.53,1.9-.7s1.18-.07,1.77-.08c1.18,0,2.36,0,3.53.07,2.34.09,4.68.25,7,.43,4.67.38,9.33.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.76,4.25,55.26,10t54.61,13.13c18.06,5,36,10.53,53.54,17a371.63,371.63,0,0,1,51.23,23,200.3,200.3,0,0,1,23.62,15.26A113.48,113.48,0,0,1,117.48,1025c5.84,7.36,10.49,15.86,12.5,25.14a21.9,21.9,0,0,1,.5,7.13,23.28,23.28,0,0,1-1.78,6.93,40.35,40.35,0,0,1-7.92,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.41,143.41,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38.94,38.94,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.72,103.72,0,0,0,10.41,25.77,178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.53,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78L355,1529.48c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.36,385.36,0,0,1,31.5,46.67c9.21,16.38,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,104.08,104.08,0,0,1-6.64,12.58,114.49,114.49,0,0,1-8.16,11.63A164.49,164.49,0,0,1,769,2064.06a216.21,216.21,0,0,1-22.24,17.43A263.65,263.65,0,0,1,697,2108a295.48,295.48,0,0,1-54.08,15.88c-2.32.43-4.62.94-6.94,1.28l-7,1.12c-2.32.36-4.66.61-7,.93l-3.5.45L615,2128c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32A133,133,0,0,1,405,2067.05a96,96,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,62.31,62.31,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74a174.44,174.44,0,0,1,25.11-50.59,236.54,236.54,0,0,1,38.31-41.46A355.9,355.9,0,0,1,498.08,1862a530.31,530.31,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.84,149.26-13.17,224.1-16.56,149.76-4.62,224.67-4.08c37.45.25,74.9,1.1,112.33,2.26s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.81,5.87,3.9c3.94,2.57,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.24,14.45,12.17,27.78,25.89,38.76,41.46a163.69,163.69,0,0,1,14.42,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.8a392.67,392.67,0,0,1-24.81,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.89,413.89,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.84,54.56,80,77.81a692.91,692.91,0,0,0,93.07,61.92A859.81,859.81,0,0,0,2416.51,3235a1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a845.62,845.62,0,0,0,105.1-39.07,664.75,664.75,0,0,0,98-54.39l.34.49a665,665,0,0,1-97.84,55,844.64,844.64,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5A860.88,860.88,0,0,1,2313,3191.31a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.13-2.35-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.68-67.85,52.75-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a140.8,140.8,0,0,0-9.09-25.89,158.62,158.62,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.06-16.94-3.83-2.65-7.62-5.35-11.51-7.91l-5.82-3.87-5.88-3.77c-15.68-10-31.89-19.27-48.41-27.91a772.57,772.57,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.24-13.95c-36.4-8.41-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.59-37.36-2.09-74.74-3.61-112.15-4.84s-74.8-2.1-112.21-2.4q-112.24-.93-224.43,3.85c-74.76,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.62-70.53,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,353.11,353.11,0,0,0-45.22,32.69A233.18,233.18,0,0,0,417,1938.63a170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a56.81,56.81,0,0,0-.52,6.77,64.33,64.33,0,0,0,5.71,26.52,93.1,93.1,0,0,0,14.81,23.12,129.58,129.58,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.21,1.35,18.49,2.34,27.79,2.91l7,.4c2.32.15,4.65.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.92l6.9-1.09c2.3-.34,4.57-.85,6.87-1.26a293,293,0,0,0,53.51-15.66A260.21,260.21,0,0,0,745,2078.93a212.81,212.81,0,0,0,21.94-17.16A162.54,162.54,0,0,0,786,2041.63a110.93,110.93,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.45,103.45,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22a381,381,0,0,0-31.21-46.37,554,554,0,0,0-36.68-42.3c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.2-23.49-43-36.17s-27-26.09-38.6-40.86A180.46,180.46,0,0,1-24.45,1245,105.06,105.06,0,0,1-35,1218.87a72,72,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,74.8,74.8,0,0,1,8.84-11,144.46,144.46,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.66,39.66,0,0,0,7.72-11.4,22.38,22.38,0,0,0,1.71-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a112.8,112.8,0,0,0-20.13-19.28A199.25,199.25,0,0,0,73,991.18a368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-14-1.41-2.33-.19-4.67-.35-7-.45-1.16,0-2.33-.07-3.49-.06-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="697.97 1779.94 700.82 1779.13 703.95 1782.4 701.1 1783.19 697.97 1779.94"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-34"\n    d="M-205.39,953.75c.76-.87,1.29-.53,1.91-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.53.07,2.34.09,4.68.25,7,.43,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.84,3.76q27.76,4.25,55.26,10t54.61,13.13c18.06,5,36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.13a22.26,22.26,0,0,1,.5,7.14,23.58,23.58,0,0,1-1.78,6.93,40.54,40.54,0,0,1-7.92,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a142.9,142.9,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73A70.09,70.09,0,0,0-41.82,1250,104.13,104.13,0,0,0-31.4,1275.8a178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.54,23,60.3,44.31,91.43,65.07s62.72,40.85,94.4,60.78L346.75,1561c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.47,48.22,83.4,75.35a560.56,560.56,0,0,1,36.93,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.38,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,120,120,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,104.08,104.08,0,0,1-6.64,12.58A117.76,117.76,0,0,1,780.2,2075a165.19,165.19,0,0,1-19.47,20.54A217.29,217.29,0,0,1,738.49,2113a263.65,263.65,0,0,1-49.75,26.53,295.35,295.35,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.93,1.28l-7,1.12c-2.33.36-4.66.61-7,.93l-3.5.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.71-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a132.53,132.53,0,0,1-20.82-19.29,96,96,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,62.31,62.31,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74A174.44,174.44,0,0,1,405.88,1968a237,237,0,0,1,38.31-41.46,357.31,357.31,0,0,1,45.66-33.09,531.74,531.74,0,0,1,49.53-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.84,149.27-13.17,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.52,14c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l6,3.81,5.87,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.44,15.24,11.15,22.49,17.24,14.45,12.17,27.78,25.89,38.76,41.46a163.63,163.63,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.83,37.22-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.89,413.89,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.44,693.44,0,0,0,93.06,61.92,860.7,860.7,0,0,0,101.18,47.87,1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a844.88,844.88,0,0,0,105.09-39.07,664.35,664.35,0,0,0,98-54.39l.34.49a664.58,664.58,0,0,1-97.85,55,845.48,845.48,0,0,1-105.1,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.24-39a1038.57,1038.57,0,0,1-106.73-35.5,861.76,861.76,0,0,1-101.82-47.92,697.49,697.49,0,0,1-93.83-62.19c-29.41-23.39-56.87-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.24-4.71-.27-7.06a473.17,473.17,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.12-62.17,65-91.89c45.75-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a140.84,140.84,0,0,0-9.1-25.89,157.71,157.71,0,0,0-13.86-23.76c-10.61-15-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.62-5.35-11.52-7.91l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-13.95c-36.39-8.42-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.59-37.35-2.09-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.42,3.85c-74.76,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.61-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,353.11,353.11,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78,170.62,170.62,0,0,0-24.65,49.53c-1.34,4.43-2.53,8.91-3.48,13.44-.45,2.26-.94,4.57-1.27,6.78a56.64,56.64,0,0,0-.51,6.77,64.33,64.33,0,0,0,5.71,26.52,92.81,92.81,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.92l6.9-1.09c2.3-.34,4.57-.85,6.86-1.26a292.91,292.91,0,0,0,53.52-15.66,260.21,260.21,0,0,0,49.18-26.16,213.89,213.89,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,112.52,112.52,0,0,0,8-11.33,99.78,99.78,0,0,0,6.47-12.22,103.19,103.19,0,0,0,7.84-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22A381,381,0,0,0,743,1870.56a556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.86a181.55,181.55,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l-.05-1.78,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,74.76,74.76,0,0,1,8.84-11,146.1,146.1,0,0,1,21.61-18c7.69-5.38,15.69-10.29,23.8-15,16.22-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.79-17.36a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21,21,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.54-13.2-36.72-7.23-55.22-10.08c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.07-3.49-.06-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="689.75 1811.43 692.6 1810.62 695.73 1813.89 692.87 1814.68 689.75 1811.43"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-35"\n    d="M-213.38,984.15c.75-.87,1.29-.53,1.9-.71s1.19-.06,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.32.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.25,55.27,10t54.61,13.13c18,5,36,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.71,40.71,0,0,1-7.93,11.74c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.87,143.87,0,0,0-21.39,17.9,73.5,73.5,0,0,0-8.67,10.86A47.41,47.41,0,0,0-50.35,1253a38.91,38.91,0,0,0-1.27,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.37,103.37,0,0,0,10.42,25.77,178.45,178.45,0,0,0,15.63,23.14C-12.21,1344,1,1357.34,14.73,1370s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.27,556.27,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19A113.9,113.9,0,0,1,795,2054a106.06,106.06,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63A164.45,164.45,0,0,1,752.73,2126a217.17,217.17,0,0,1-22.23,17.43,263.12,263.12,0,0,1-49.76,26.52,294.5,294.5,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.09,96.09,0,0,1-15.38-24,67.77,67.77,0,0,1-6-27.95,60,60,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.19,236.19,0,0,1,436.2,1957a354.94,354.94,0,0,1,45.66-33.09,531.58,531.58,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.42,218.08-54.2s148-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.66q27.43,6.28,54.53,14c18.05,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.91c3.93,2.57,7.77,5.29,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147,147,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.69-22.8,29.6-44.72,59.88-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.18,405.18,0,0,0,12.56,54.28,413.44,413.44,0,0,0,20,52,437.42,437.42,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1036.44,1036.44,0,0,0,106.18,35.68c72,20,146,33,220.42,39.58a1292.55,1292.55,0,0,0,224.05.54c74.49-6.37,148.56-19.37,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,663.78,663.78,0,0,0,98-54.38l.34.49a663.51,663.51,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.18c-74.69-6.42-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92A698.29,698.29,0,0,1,2203,3191c-29.41-23.38-56.86-49.39-80.86-78.39a442.63,442.63,0,0,1-60.73-94.91A419.69,419.69,0,0,1,2041,2965a413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.36-.25-4.71-.27-7.06a471,471,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.74-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.09-25.88,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-17-3.83-2.64-7.63-5.34-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.42-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.92-224.43,3.85c-74.75,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.51,11.61-70.54,24.84-104.24,40.89a527.51,527.51,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69,233.56,233.56,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.25,64.25,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,130.06,130.06,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.88a275.94,275.94,0,0,0,54.1,13.31c9.22,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26A292.28,292.28,0,0,0,679.56,2167a260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.93,101.93,0,0,0,6.47-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22A383.28,383.28,0,0,0,735,1901a556.39,556.39,0,0,0-36.69-42.3c-25.79-27.05-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.14-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.53-29.2-23.5-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.21,105.21,0,0,1-10.53-26.15,72,72,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.67,22.67,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.47-6.81c-2-9.07-6.5-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,199.13,199.13,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.5-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.72-27.81-3.8-4.64-.53-9.29-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a7.85,7.85,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="681.75 1841.83 684.6 1841.02 687.73 1844.29 684.88 1845.08 681.75 1841.83"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-36"\n    d="M-221.35,1014c.75-.86,1.28-.53,1.9-.7s1.18-.07,1.77-.07c1.18,0,2.35,0,3.53.06,2.34.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.31,1.07,18.58,2.34,27.84,3.75q27.76,4.25,55.26,10c18.33,3.85,36.55,8.18,54.61,13.13s36,10.53,53.54,17a370.39,370.39,0,0,1,51.23,23,200.3,200.3,0,0,1,23.62,15.26,114.16,114.16,0,0,1,20.35,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.62,144.62,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,39,39,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74a70,70,0,0,0,1.93,13.73,104,104,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.54,43,36c29.54,23,60.3,44.31,91.43,65.08s62.72,40.85,94.4,60.78l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.84,43.74,90,67.24s57.46,48.23,83.39,75.35a558.33,558.33,0,0,1,36.93,42.46,386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,105.87,105.87,0,0,1-8,27.24,104.7,104.7,0,0,1-6.64,12.57,113.85,113.85,0,0,1-8.16,11.63,164.49,164.49,0,0,1-19.47,20.54,214.93,214.93,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,296.3,296.3,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.23l-7-.4c-9.38-.56-18.74-1.55-28-2.91a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.43-34.78-14.95-49.94-26.32a132.6,132.6,0,0,1-20.82-19.3,96,96,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.41.84-4.69,1.3-7,1-4.63,2.18-9.2,3.54-13.73a174.42,174.42,0,0,1,25.1-50.59,236.69,236.69,0,0,1,38.32-41.47,355.83,355.83,0,0,1,45.66-33.08A525.68,525.68,0,0,1,523.41,1927c33.89-16.19,69-29.51,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.77-4.62,224.68-4.09c37.45.26,74.9,1.1,112.33,2.26s74.86,2.67,112.27,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.42,6.29,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.57,7.77,5.3,11.65,8,7.7,5.43,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.76,41.46a164.18,164.18,0,0,1,14.42,24.66,147.18,147.18,0,0,1,9.5,27c4.65,18.58,5.14,38,2.74,56.87s-7.84,37.23-14.76,54.81a393.17,393.17,0,0,1-24.81,50.81c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.81,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,414,414,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1033.9,1033.9,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.24-39a1041,1041,0,0,1-106.73-35.5,860.94,860.94,0,0,1-101.81-47.93A697.59,697.59,0,0,1,2195,3220.9c-29.41-23.39-56.86-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.09-14.09l-.34-7.06c-.13-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.57,42.12-62.18,65-91.89c45.75-59.44,95.05-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.62-15.33,20.74-31,30-47.14a387.16,387.16,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140,140,0,0,0-9.1-25.88,157.8,157.8,0,0,0-13.86-23.77c-10.6-15-23.56-28.42-37.71-40.36-7.08-6-14.46-11.57-22.05-16.94-3.83-2.65-7.62-5.35-11.51-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.9-19.28-48.41-27.91a771.26,771.26,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.85s-36-9.76-54.25-14c-36.39-8.41-73.16-15.19-110.12-20.72-73.94-11.1-148.56-17.39-223.25-21.6-37.35-2.08-74.73-3.61-112.14-4.84s-74.8-2.09-112.21-2.4q-112.24-.93-224.43,3.85c-74.76,3.3-149.43,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.63,53.85c-35.51,11.62-70.53,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,233.12,233.12,0,0,0-37.77,40.77A170.93,170.93,0,0,0,368.2,2080c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.25-1,4.56-1.27,6.78a54.65,54.65,0,0,0-.52,6.77,64.32,64.32,0,0,0,5.71,26.51,92.63,92.63,0,0,0,14.81,23.12,128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.9,276.9,0,0,0,54.11,13.3c9.21,1.35,18.49,2.35,27.78,2.91l7,.41c2.32.14,4.65.14,7,.23,4.66.18,9.31.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.47-.34,3.47-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.57-.84,6.86-1.26a291.34,291.34,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15,215.29,215.29,0,0,0,21.94-17.16,161.92,161.92,0,0,0,19.13-20.15,109.83,109.83,0,0,0,8-11.33,100.5,100.5,0,0,0,6.48-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.78-51.23A381.74,381.74,0,0,0,727,1930.85a554,554,0,0,0-36.68-42.3c-25.79-27-54-51.71-83.05-75.23s-59.21-45.73-89.8-67.26c-61.24-43-124.43-83.22-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,104.76,104.76,0,0,1-10.53-26.14,71.2,71.2,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.14-1.79a39.77,39.77,0,0,1,1.33-7,48.44,48.44,0,0,1,6-12.86,74.89,74.89,0,0,1,8.84-11.05,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.68-10.29,23.79-15,16.22-9.39,32.89-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.52,39.52,0,0,0,7.72-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.11,112.11,0,0,0-20.13-19.28A199.33,199.33,0,0,0,48.84,1083a370.6,370.6,0,0,0-51.07-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.25-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="673.78 1871.73 676.63 1870.91 679.76 1874.18 676.9 1874.97 673.78 1871.73"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-37"\n    d="M-229.58,1045.53c.76-.86,1.29-.53,1.91-.7s1.18-.07,1.77-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.34,27.84,3.75q27.75,4.24,55.26,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a370,370,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.77,113.77,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15A144.11,144.11,0,0,0-52.09,1291a73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74A70,70,0,0,0-66,1341.81a103.22,103.22,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.21,24.54,43,36c29.54,23,60.3,44.31,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.82,30.66,21.52,60.84,43.75,90,67.25s57.47,48.23,83.4,75.35A560.56,560.56,0,0,1,721,1960.64a386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85A152.73,152.73,0,0,1,779.7,2087a122.1,122.1,0,0,1,.41,14.19,115.68,115.68,0,0,1-1.27,14.15,106.27,106.27,0,0,1-8,27.24,103.36,103.36,0,0,1-6.65,12.57,114.88,114.88,0,0,1-8.15,11.63,164.49,164.49,0,0,1-19.47,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,296.4,296.4,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.66.62-7,.93l-3.49.45-3.51.35c-9.36,1-18.76,1.44-28.16,1.67-4.7,0-9.41.1-14.1-.08-2.35-.08-4.71-.08-7-.23l-7-.4c-9.39-.56-18.74-1.55-28.05-2.91a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.43-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59A237,237,0,0,1,420,2018.35a357.23,357.23,0,0,1,45.66-33.08,527.09,527.09,0,0,1,49.53-26.83c33.88-16.2,69-29.51,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.1,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.09,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.43,779.43,0,0,1,103.59,44.21c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a393.12,393.12,0,0,1-24.8,50.81c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.33,98.63-24.69,70.4-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.23,407.23,0,0,0,12.56,54.29,415.63,415.63,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.87,692.87,0,0,0,93.06,61.93,861.26,861.26,0,0,0,101.17,47.86A1037.32,1037.32,0,0,0,2490.27,3394c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,663.43,663.43,0,0,0,98-54.39l.34.5a664.52,664.52,0,0,1-97.85,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1041,1041,0,0,1-106.73-35.5,861.08,861.08,0,0,1-101.82-47.93,697.49,697.49,0,0,1-93.83-62.19c-29.41-23.39-56.87-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.06a471.08,471.08,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.63-15.33,20.75-31,30-47.14a385.92,385.92,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.34s1.86-36.87-2.57-54.66a141.48,141.48,0,0,0-9.1-25.88,157,157,0,0,0-13.87-23.77c-10.6-15-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.9a773.75,773.75,0,0,0-102.77-44c-17.61-6.16-35.43-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.16-15.19-110.13-20.72-73.93-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.32s-148.6,17.9-222.15,31.56S692.2,1897.93,621.06,1921c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,233.12,233.12,0,0,0-37.77,40.77A171,171,0,0,0,360,2111.44c-1.33,4.43-2.52,8.9-3.47,13.44-.45,2.25-.94,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.76,64.5,64.5,0,0,0,5.72,26.52,92.63,92.63,0,0,0,14.81,23.12,128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.32.14,4.65.14,7,.23,4.65.18,9.31.1,14,.09,9.3-.21,18.62-.61,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a292.35,292.35,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15,215.47,215.47,0,0,0,21.93-17.16,160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103,103,0,0,0,7.84-26.45c2.83-18.29.84-37.11-4.1-55s-12.66-35-21.77-51.23a381.74,381.74,0,0,0-31.21-46.37,556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.71-83-75.23s-59.21-45.73-89.8-67.27c-61.25-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a181.55,181.55,0,0,1-15.74-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.05-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,74,74,0,0,1,8.84-11,145.49,145.49,0,0,1,21.61-18c7.69-5.39,15.69-10.29,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a112.73,112.73,0,0,0-20.13-19.27,199.33,199.33,0,0,0-23.49-15.22,370.6,370.6,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.54-13.19-36.72-7.24-55.22-10.09c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="665.55 1903.22 668.41 1902.4 671.53 1905.67 668.68 1906.46 665.55 1903.22"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-38"\n    d="M-237.57,1075.93c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.77-.08c1.18,0,2.36,0,3.53.07,2.34.09,4.68.25,7,.44,4.67.37,9.32.85,14,1.38,9.3,1.07,18.57,2.35,27.83,3.76q27.76,4.25,55.26,10c18.33,3.85,36.56,8.18,54.62,13.13s35.95,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.9,21.9,0,0,1,.5,7.13,23.63,23.63,0,0,1-1.77,6.94,40.66,40.66,0,0,1-7.93,11.73c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.78,72.78,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,38,38,0,0,0-1.27,6.76c-.07.58-.09,1.15-.13,1.72l0,1.74,0,1.73.06,1.74A69.26,69.26,0,0,0-74,1372.21,103.72,103.72,0,0,0-63.59,1398a179.54,179.54,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52C378,1722.88,441.3,1763,502.66,1806c30.65,21.52,60.83,43.75,90,67.25s57.46,48.22,83.4,75.35A558.2,558.2,0,0,1,713,1991a386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,118.05,118.05,0,0,1,.41,14.2,113.91,113.91,0,0,1-1.27,14.15,105.68,105.68,0,0,1-8,27.23,102.69,102.69,0,0,1-6.64,12.58,114.49,114.49,0,0,1-8.16,11.63,163.76,163.76,0,0,1-19.47,20.54,215.79,215.79,0,0,1-22.23,17.43,263.47,263.47,0,0,1-49.76,26.53,296.3,296.3,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.09-7-.23l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.13,132.13,0,0,1-20.83-19.29,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.54,236.54,0,0,1,412,2048.75a355.9,355.9,0,0,1,45.66-33.09,531.58,531.58,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.43,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.16,22.48,17.24,14.45,12.18,27.78,25.89,38.76,41.46a163.34,163.34,0,0,1,14.42,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,413.3,413.3,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.75,50.85,54.56,80,77.81a693,693,0,0,0,93.07,61.93,861.34,861.34,0,0,0,101.17,47.86,1037.14,1037.14,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a845.62,845.62,0,0,0,105.1-39.07,663.84,663.84,0,0,0,98-54.39l.34.5a665.85,665.85,0,0,1-97.84,55,844.64,844.64,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1044.43,1044.43,0,0,1-106.74-35.5A862.53,862.53,0,0,1,2272.61,3345a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.35-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.45,95.05-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,158.62,158.62,0,0,0-13.87-23.76c-10.6-15.05-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.78c-15.68-10-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.59-37.36-2.08-74.74-3.61-112.14-4.84s-74.81-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.51,11.62-70.54,24.84-104.25,40.9a527.25,527.25,0,0,0-49.2,26.58,354.08,354.08,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78A171,171,0,0,0,352,2141.83c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a59.15,59.15,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.77,92.77,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.22,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.85,6.87-1.26a293,293,0,0,0,53.51-15.66,260.21,260.21,0,0,0,49.18-26.16,212.81,212.81,0,0,0,21.94-17.16,161.11,161.11,0,0,0,19.13-20.14,110.93,110.93,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.33,103.33,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22a383.28,383.28,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.53-29.2-23.49-43-36.16s-27-26.1-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.06,105.06,0,0,1-10.53-26.15,72,72,0,0,1-2-14l-.06-1.78,0-1.77,0-1.77c0-.6.06-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,74.8,74.8,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.26-24.72a113.2,113.2,0,0,0-20.14-19.28,200,200,0,0,0-23.48-15.21,369.29,369.29,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="657.56 1933.62 660.41 1932.8 663.54 1936.07 660.69 1936.86 657.56 1933.62"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-39"\n    d="M-244.37,1105.22c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.09,4.68.25,7,.44,4.67.37,9.32.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.75q27.76,4.25,55.26,10c18.33,3.85,36.56,8.18,54.62,13.14s35.95,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25A114.16,114.16,0,0,1,70.27,1208c5.84,7.35,10.49,15.85,12.5,25.13a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73,73,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.09,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a69.46,69.46,0,0,0,1.94,13.74,103.65,103.65,0,0,0,10.41,25.76,180.34,180.34,0,0,0,15.64,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46A385.48,385.48,0,0,1,737.7,2067c9.21,16.37,17.06,33.64,22.11,51.84a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,106.29,106.29,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63A163.08,163.08,0,0,1,721.74,2247a215.88,215.88,0,0,1-22.23,17.44A264,264,0,0,1,649.75,2291a295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.22l-7-.4q-14.07-.86-28.05-2.92a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59A236.25,236.25,0,0,1,405.21,2078,355.83,355.83,0,0,1,450.87,2045a526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.43,6.29,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.47,147.47,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.7,28.74,50.85,54.55,80,77.8a693,693,0,0,0,93.07,61.93A859.74,859.74,0,0,0,2369.3,3418a1034.72,1034.72,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224,.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.85-145.87,35.21-220.5,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.86-78.4a441.93,441.93,0,0,1-60.73-94.9,418.89,418.89,0,0,1-20.37-52.69,412.64,412.64,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.28,28.77-109s32.67-67.84,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95.05-115.9,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.87-3.77c-15.69-10-31.9-19.28-48.42-27.91a771.7,771.7,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.75-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.81-2.09-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.31-149.43,8.59-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.25,40.9a525,525,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.25-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.59,92.59,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.55,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.92l7,.4c2.33.14,4.66.15,7,.23,4.66.18,9.32.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.19,161.19,0,0,0,19.13-20.15,111.49,111.49,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.77-51.23A384.07,384.07,0,0,0,704,2022a556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.26c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87A180.46,180.46,0,0,1-71.66,1428a105.14,105.14,0,0,1-10.53-26.14,72,72,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.06-1.19.13-1.78a39.43,39.43,0,0,1,1.33-7,48.08,48.08,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.42,39.42,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.8,20.8,0,0,0-.47-6.8c-1.95-9.08-6.51-17.44-12.26-24.71a112.5,112.5,0,0,0-20.14-19.28,198.69,198.69,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23C-42.78,1144.6-60.65,1139-78.68,1134s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="650.76 1962.91 653.61 1962.09 656.74 1965.37 653.89 1966.15 650.76 1962.91"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-40"\n    d="M-252.59,1136.71c.75-.86,1.28-.53,1.9-.7s1.18-.07,1.77-.07c1.18,0,2.35,0,3.53.06,2.34.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.31,1.07,18.58,2.35,27.84,3.75q27.76,4.25,55.26,10c18.33,3.85,36.55,8.18,54.61,13.14s36,10.52,53.54,17a369.26,369.26,0,0,1,51.23,23A199,199,0,0,1,41.7,1220a113.53,113.53,0,0,1,20.35,19.44c5.84,7.35,10.49,15.85,12.5,25.13a21.94,21.94,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.62,144.62,0,0,0-21.4,17.91,72.92,72.92,0,0,0-8.66,10.86,47.18,47.18,0,0,0-5.79,12.5,39,39,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74A69.46,69.46,0,0,0-89,1433a103.65,103.65,0,0,0,10.41,25.76A179.31,179.31,0,0,0-63,1481.91c11.55,14.66,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,23,60.3,44.32,91.43,65.08s62.72,40.85,94.4,60.78l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.84,43.74,90,67.24s57.46,48.23,83.4,75.35A558.2,558.2,0,0,1,698,2051.82a385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.84a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,105.92,105.92,0,0,1-8,27.23,104,104,0,0,1-6.64,12.57A112.3,112.3,0,0,1,733,2258a163.8,163.8,0,0,1-19.47,20.54A214.93,214.93,0,0,1,691.28,2296a263.61,263.61,0,0,1-49.75,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7-.23l-7-.39q-14.07-.85-28.05-2.92a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.42-34.78-14.95-49.94-26.32a133,133,0,0,1-20.82-19.3,96,96,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.41.84-4.69,1.3-7,1-4.63,2.18-9.2,3.54-13.73A174.19,174.19,0,0,1,358.68,2151,236.25,236.25,0,0,1,397,2109.53a355.83,355.83,0,0,1,45.66-33.08,525.68,525.68,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.77-4.62,224.68-4.09c37.45.26,74.9,1.11,112.33,2.26s74.86,2.67,112.27,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.42,6.29,54.53,14c18.05,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.76,41.46a164.18,164.18,0,0,1,14.42,24.66,146.7,146.7,0,0,1,9.5,27c4.65,18.58,5.14,38,2.74,56.87s-7.84,37.23-14.76,54.81a393.17,393.17,0,0,1-24.81,50.81c-9.35,16.35-19.55,32.16-30.24,47.61-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.78,74.51,3.21,111.21A406.91,406.91,0,0,0,2007,3116a414,414,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1033.9,1033.9,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1041.18,1041.18,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,697.59,697.59,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.1,411.1,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.13-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.84-37.62,14.32-74.28,28.76-109s32.68-67.84,52.75-99.57,42.12-62.18,65-91.89c45.76-59.44,95.05-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140,140,0,0,0-9.1-25.88,157.8,157.8,0,0,0-13.86-23.77c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.06-16.94-3.83-2.64-7.62-5.35-11.51-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.9-19.28-48.41-27.91a771.26,771.26,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.85s-36.05-9.76-54.24-14c-36.4-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.39-223.25-21.6-37.35-2.08-74.73-3.61-112.14-4.84s-74.8-2.09-112.21-2.4q-112.24-.93-224.43,3.85c-74.76,3.31-149.43,8.59-223.85,16.32s-148.6,17.91-222.15,31.56S669.18,1989.12,598,2012.13c-35.51,11.62-70.53,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78A170.75,170.75,0,0,0,337,2202.62c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.25-.95,4.56-1.27,6.78a54.65,54.65,0,0,0-.52,6.77,64.32,64.32,0,0,0,5.71,26.51,92.63,92.63,0,0,0,14.81,23.12,128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.55,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.21,1.35,18.49,2.35,27.78,2.92l7,.4c2.32.14,4.65.15,7,.23,4.66.18,9.31.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.47-.34,3.47-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.57-.84,6.86-1.26a291.34,291.34,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15,215.29,215.29,0,0,0,21.94-17.16,161.92,161.92,0,0,0,19.13-20.15,109.83,109.83,0,0,0,8-11.33,100.5,100.5,0,0,0,6.48-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.67-35-21.78-51.23a381.74,381.74,0,0,0-31.21-46.37,554,554,0,0,0-36.68-42.3c-25.79-27-54-51.71-83.05-75.23s-59.21-45.73-89.8-67.26c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93S47,1582.89,17.47,1559.86c-14.77-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,104.76,104.76,0,0,1-10.53-26.14,71.2,71.2,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.14-1.78a39.43,39.43,0,0,1,1.33-7,48.36,48.36,0,0,1,6-12.87,74.89,74.89,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.52,39.52,0,0,0,7.72-11.4,22.69,22.69,0,0,0,1.71-6.61,21.08,21.08,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.11,112.11,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,369.46,369.46,0,0,0-51.07-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.25-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-14-1.4-2.32-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="642.54 1994.4 645.39 1993.58 648.52 1996.86 645.66 1997.64 642.54 1994.4"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-41"\n    d="M-260.59,1167.11c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.07,4.7-16,9.61-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.35,73.35,0,0,0-8.66,10.85A46.79,46.79,0,0,0-97.55,1436a38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74A70.76,70.76,0,0,0-97,1463.39a103.22,103.22,0,0,0,10.42,25.77A178.45,178.45,0,0,0-71,1512.3c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.51c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35A558.2,558.2,0,0,1,690,2082.22a386.15,386.15,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.72,113.72,0,0,1-1.26,14.15,106.48,106.48,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,164.41,164.41,0,0,1-19.46,20.54,214.54,214.54,0,0,1-22.24,17.43,263.39,263.39,0,0,1-49.75,26.53,296.4,296.4,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.09-7-.23l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.78-14.95-49.94-26.33a132.56,132.56,0,0,1-20.83-19.29,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.73a174.37,174.37,0,0,1,25.11-50.6A236.93,236.93,0,0,1,389,2139.93a355.56,355.56,0,0,1,45.66-33.08A529.33,529.33,0,0,1,484.17,2080c33.89-16.19,69.05-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.09-54.21s148-24,222.45-31.83,149.26-13.18,224.1-16.57,149.76-4.61,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.44,6.28,54.53,13.95c18.06,5.12,36,10.69,53.72,16.87a781.25,781.25,0,0,1,103.59,44.2c16.66,8.7,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.24,47.6-21.39,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.14,437.14,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a693,693,0,0,0,93.07,61.93,862.1,862.1,0,0,0,101.17,47.86,1036.5,1036.5,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a843.44,843.44,0,0,0,105.1-39.07,663.33,663.33,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,420.48,420.48,0,0,1-20.38-52.69,411.42,411.42,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a387.86,387.86,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.55-28.43-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a775,775,0,0,0-102.77-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.48,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,351.55,351.55,0,0,0-45.23,32.69,232.7,232.7,0,0,0-37.76,40.77A170.77,170.77,0,0,0,329,2233c-1.33,4.44-2.52,8.91-3.47,13.45-.45,2.25-.95,4.56-1.27,6.77a59.15,59.15,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.22,4.65.19,9.31.11,14,.1,9.31-.22,18.63-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a292.81,292.81,0,0,0,53.51-15.66,260.44,260.44,0,0,0,49.18-26.15,214.29,214.29,0,0,0,21.94-17.17,160.39,160.39,0,0,0,19.13-20.14,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.65c-31.67-20-63.22-40.13-94.37-60.93S39,1613.29,9.48,1590.26c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.59-40.87a180.53,180.53,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.11,71.11,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11,145.57,145.57,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.19-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4A22.36,22.36,0,0,0,66,1302a20.78,20.78,0,0,0-.46-6.8c-2-9.08-6.51-17.44-12.27-24.72a112.73,112.73,0,0,0-20.13-19.27A200.16,200.16,0,0,0,9.61,1236a370.48,370.48,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.4,6.4,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="634.54 2024.8 637.39 2023.98 640.52 2027.25 637.67 2028.04 634.54 2024.8"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-42"\n    d="M-268.56,1197c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.32.86,14,1.39,9.3,1.07,18.57,2.35,27.83,3.76q27.76,4.24,55.26,10t54.62,13.13c18.05,5,36,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.36,143.36,0,0,0-21.39,17.9,72.86,72.86,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38,38,0,0,0-1.27,6.76c-.07.57-.09,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.72,103.72,0,0,0,10.41,25.77,178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52C347,1844,410.3,1884.08,471.67,1927.06c30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35A556.12,556.12,0,0,1,682,2112.11a385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,103.42,103.42,0,0,1-6.64,12.58,114.49,114.49,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54,217.17,217.17,0,0,1-22.23,17.43,263.42,263.42,0,0,1-49.76,26.52,294.73,294.73,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.94,67.94,0,0,1-6-27.95,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.19,236.19,0,0,1,381,2169.83a354.94,354.94,0,0,1,45.66-33.09,530.31,530.31,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s147.95-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.44,6.29,54.53,14c18,5.11,36,10.68,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.91c3.94,2.57,7.77,5.29,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163.79,163.79,0,0,1,14.42,24.67,147.11,147.11,0,0,1,9.51,27c4.64,18.59,5.13,38,2.73,56.88s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.15-30.25,47.6-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.68-22.8,29.61-44.72,59.89-64.71,91.41s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.5,3.22,111.21a405.18,405.18,0,0,0,12.56,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1037.09,1037.09,0,0,0,106.17,35.68c72,20,146,32.94,220.43,39.58a1293.54,1293.54,0,0,0,224.05.54c74.49-6.37,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,663.78,663.78,0,0,0,98-54.38l.34.49a664.93,664.93,0,0,1-97.84,55,844.69,844.69,0,0,1-105.11,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,699.25,699.25,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.05a471,471,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.09-25.88,158.62,158.62,0,0,0-13.87-23.76c-10.6-15.05-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.95-3.84-2.64-7.63-5.34-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-13.95c-36.4-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.25-.91-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78A170.75,170.75,0,0,0,321,2262.91c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.25,64.25,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,130.06,130.06,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88a275.94,275.94,0,0,0,54.1,13.31c9.22,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26a292.28,292.28,0,0,0,53.51-15.67,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,102,102,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.71,382.71,0,0,0-31.2-46.36,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.14-94.36-60.93s-61.88-42.24-91.44-65.27c-14.76-11.53-29.2-23.5-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.21,105.21,0,0,1-10.53-26.15,72,72,0,0,1-2-14l-.06-1.77,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.67,22.67,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,198.69,198.69,0,0,0-23.48-15.21,370.12,370.12,0,0,0-51.08-23c-17.53-6.5-35.4-12.09-53.43-17.07s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.08c-9.25-1.43-18.52-2.72-27.81-3.8-4.64-.53-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a7,7,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="626.57 2054.69 629.42 2053.87 632.55 2057.15 629.7 2057.94 626.57 2054.69"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-43"\n    d="M-276.78,1228.49c.75-.86,1.28-.52,1.9-.7s1.18-.06,1.77-.07c1.18,0,2.35,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.76,4.25,55.26,10t54.61,13.13c18.06,5,36,10.53,53.53,17a370,370,0,0,1,51.24,23,199,199,0,0,1,23.62,15.26,113.81,113.81,0,0,1,20.35,19.43c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33.05,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15A143.44,143.44,0,0,0-99.3,1474a73.43,73.43,0,0,0-8.66,10.86,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a70.09,70.09,0,0,0,1.93,13.74,104.13,104.13,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,23,60.3,44.31,91.43,65.07s62.72,40.85,94.4,60.78l95.23,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.74,90,67.25s57.46,48.22,83.39,75.35a558.47,558.47,0,0,1,36.93,42.45,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16A107.37,107.37,0,0,1,717,2338.13a116.11,116.11,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54,217.29,217.29,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52,294.6,294.6,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.93,1.28l-7,1.12c-2.32.35-4.66.61-7,.92l-3.5.46-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28.05-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a132.6,132.6,0,0,1-20.82-19.3,96,96,0,0,1-15.38-24,67.78,67.78,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.54-13.74a174.42,174.42,0,0,1,25.1-50.59,237,237,0,0,1,38.31-41.46,355.74,355.74,0,0,1,45.67-33.09A528,528,0,0,1,468,2141.4c33.89-16.19,69-29.5,104.66-41.2C644,2077,717.08,2059.77,790.72,2046s147.95-24,222.45-31.84,149.27-13.18,224.1-16.56,149.77-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.27s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.52,14c18.06,5.11,36,10.68,53.73,16.87a779.24,779.24,0,0,1,103.58,44.2c16.66,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.91c3.94,2.57,7.77,5.29,11.65,8,7.7,5.44,15.23,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a162.89,162.89,0,0,1,14.41,24.67,146.37,146.37,0,0,1,9.51,27c4.65,18.59,5.14,38,2.74,56.88s-7.84,37.22-14.76,54.8a394.6,394.6,0,0,1-24.81,50.82c-9.35,16.34-19.55,32.15-30.24,47.6-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.68-22.81,29.61-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.5,3.21,111.21a406.76,406.76,0,0,0,12.57,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1036.27,1036.27,0,0,0,106.17,35.68c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.37,148.55-19.38,220.23-40.86a841.71,841.71,0,0,0,105.09-39.07,663.38,663.38,0,0,0,98-54.38l.34.49a664.52,664.52,0,0,1-97.85,55,844,844,0,0,1-105.1,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.24-39a1038.57,1038.57,0,0,1-106.73-35.5,862.46,862.46,0,0,1-101.81-47.92,698,698,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.76-7c-.37-4.7-.77-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.26-7a471,471,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.12-62.17,65-91.89c45.75-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a140.26,140.26,0,0,0-9.1-25.88,157.71,157.71,0,0,0-13.86-23.76c-10.6-15-23.56-28.43-37.71-40.36-7.08-6-14.47-11.58-22-17-3.83-2.64-7.62-5.35-11.51-7.9l-5.82-3.87-5.88-3.77c-15.68-10-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-13.95c-36.39-8.42-73.16-15.19-110.12-20.73-73.94-11.09-148.56-17.39-223.25-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.21-2.41q-112.25-.91-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56S645,2080.9,573.85,2103.91c-35.51,11.62-70.53,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a54.65,54.65,0,0,0-.52,6.77,64.4,64.4,0,0,0,5.71,26.52A93,93,0,0,0,328,2371a129.61,129.61,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88A276.21,276.21,0,0,0,451.43,2429c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.14,4.65.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.45c2.3-.3,4.62-.56,6.92-.91l6.9-1.09c2.3-.35,4.57-.85,6.86-1.26a292.15,292.15,0,0,0,53.52-15.67,260.17,260.17,0,0,0,49.18-26.15A213.89,213.89,0,0,0,687.28,2368a162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,102,102,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.52,382.52,0,0,0-31.21-46.37A555.81,555.81,0,0,0,634.92,2103c-25.79-27.05-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.14-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.2-23.5-43-36.17s-27-26.09-38.6-40.87a179.1,179.1,0,0,1-15.73-23.36,104.61,104.61,0,0,1-10.53-26.14,71.2,71.2,0,0,1-2-14l-.06-1.77,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,74.76,74.76,0,0,1,8.84-11,145.67,145.67,0,0,1,21.62-18c7.68-5.38,15.68-10.29,23.79-15,16.22-9.4,32.89-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.68,39.68,0,0,0,48.06,1370a22.69,22.69,0,0,0,1.71-6.61,21.12,21.12,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.27-24.71a112.46,112.46,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,369.46,369.46,0,0,0-51.07-23c-17.53-6.5-35.4-12.09-53.44-17.07s-36.24-9.32-54.54-13.19-36.72-7.23-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.65-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a7,7,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="618.35 2086.18 621.2 2085.36 624.33 2088.64 621.47 2089.43 618.35 2086.18"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-44"\n    d="M-284.78,1258.89c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.1,4.68.26,7,.44,4.67.37,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.23,55.27,10t54.61,13.13c18.05,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.85,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.65,40.65,0,0,1-7.93,11.74c-6.47,6.89-14.15,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.79,72.79,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a71,71,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76,179.24,179.24,0,0,0,15.63,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52C330.82,1905.84,394.09,1946,455.45,1989c30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.34A558.2,558.2,0,0,1,665.79,2174a385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,116,116,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,218.39,218.39,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.22l-7-.4q-14.07-.86-28.05-2.92a279.57,279.57,0,0,1-54.77-13.41c-17.71-6.42-34.79-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60,60,0,0,1,.54-7.21c.36-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08A529.24,529.24,0,0,1,460,2171.8c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.27,110.57,20.67q27.43,6.28,54.53,14c18.05,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,436.64,436.64,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.85-145.87,35.21-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.86-78.39a443,443,0,0,1-60.73-94.91,422.44,422.44,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.83-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a472.93,472.93,0,0,1,1.85-56.45c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a388.49,388.49,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.27,157.27,0,0,0-13.87-23.76c-10.6-15.06-23.56-28.43-37.7-40.37-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.63-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.92-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32s-148.6,17.91-222.15,31.56S637,2111.3,565.86,2134.31c-35.51,11.62-70.54,24.84-104.24,40.9a527.51,527.51,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69,232.77,232.77,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51A92.58,92.58,0,0,0,320,2401.43a130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88a277.29,277.29,0,0,0,54.11,13.31c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.65.19,9.31.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.31,101.31,0,0,0,6.47-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.23a383.68,383.68,0,0,0-31.21-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.64c-31.67-20-63.22-40.14-94.37-60.94S14.84,1705.08-14.71,1682c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105,105,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.59.07-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.19-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.51,22.51,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-1.95-9.08-6.5-17.44-12.26-24.71A112.85,112.85,0,0,0,8.9,1343a197.87,197.87,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="610.35 2116.58 613.2 2115.76 616.33 2119.04 613.48 2119.82 610.35 2116.58"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-45"\n    d="M-292.58,1288.94c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.32.86,14,1.39,9.3,1.07,18.57,2.35,27.83,3.76q27.77,4.25,55.26,10t54.62,13.13c18,5,36,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.36,143.36,0,0,0-21.39,17.9,72.86,72.86,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38,38,0,0,0-1.27,6.76c-.07.57-.09,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74A103.72,103.72,0,0,0-118.6,1611,179.54,179.54,0,0,0-103,1634.14c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52C323,1935.89,386.29,1976,447.65,2019c30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35A556.12,556.12,0,0,1,658,2204.05a385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,103.42,103.42,0,0,1-6.64,12.58,114.49,114.49,0,0,1-8.16,11.63,164.45,164.45,0,0,1-19.47,20.54,217.17,217.17,0,0,1-22.23,17.43,263.42,263.42,0,0,1-49.76,26.52,294.73,294.73,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.94,67.94,0,0,1-6-27.95,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.19,236.19,0,0,1,357,2261.77a354.94,354.94,0,0,1,45.66-33.09,530.31,530.31,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s148-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.43,6.28,54.53,14c18,5.11,36,10.68,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.91c3.93,2.57,7.76,5.29,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163,163,0,0,1,14.42,24.67,147.11,147.11,0,0,1,9.51,27c4.64,18.59,5.13,38,2.73,56.88s-7.84,37.22-14.76,54.8a394.54,394.54,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.15-30.25,47.6-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.68-22.8,29.61-44.72,59.89-64.71,91.41s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.5,3.22,111.21a405.18,405.18,0,0,0,12.56,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1037.09,1037.09,0,0,0,106.17,35.68c72,20,146,32.94,220.43,39.58a1293.54,1293.54,0,0,0,224,.54c74.49-6.37,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,663.78,663.78,0,0,0,98-54.38l.34.49a664.93,664.93,0,0,1-97.84,55,844.69,844.69,0,0,1-105.11,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5A862.46,862.46,0,0,1,2217.6,3558a699.25,699.25,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.05a471,471,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a141,141,0,0,0-9.09-25.88,158.62,158.62,0,0,0-13.87-23.76c-10.6-15.05-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.95-3.84-2.64-7.63-5.34-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.4-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.92-224.43,3.85c-74.75,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78A170.75,170.75,0,0,0,297,2354.85c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.25,64.25,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,130.06,130.06,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.88a275.94,275.94,0,0,0,54.1,13.31c9.22,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.58-.85,6.87-1.26a292.28,292.28,0,0,0,53.51-15.67,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.8,161.8,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,102,102,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.23a384,384,0,0,0-31.21-46.36,556.39,556.39,0,0,0-36.69-42.3c-25.79-27.05-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.14-94.37-60.93S7,1735.13-22.52,1712.1c-14.76-11.53-29.2-23.5-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.21,105.21,0,0,1-10.53-26.15,72,72,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.67,22.67,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.26-24.71A112.85,112.85,0,0,0,1.1,1373.08a198.69,198.69,0,0,0-23.48-15.21,370.12,370.12,0,0,0-51.08-23c-17.53-6.5-35.4-12.09-53.43-17.07s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.08c-9.25-1.43-18.52-2.72-27.81-3.8-4.64-.53-9.29-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a7,7,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="602.55 2146.63 605.4 2145.81 608.53 2149.09 605.68 2149.88 602.55 2146.63"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-46"\n    d="M-300.8,1320.43c.75-.86,1.28-.52,1.9-.7s1.18-.06,1.77-.07c1.18,0,2.35,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.77,4.25,55.26,10t54.61,13.13c18.06,5,36,10.52,53.53,17a370,370,0,0,1,51.24,23,199,199,0,0,1,23.62,15.26,113.81,113.81,0,0,1,20.35,19.43c5.84,7.35,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.44,143.44,0,0,0-21.4,17.9,73.43,73.43,0,0,0-8.66,10.86,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a70.09,70.09,0,0,0,1.93,13.74,104.13,104.13,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,23,60.3,44.31,91.43,65.07s62.72,40.85,94.4,60.78l95.23,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.74,90,67.25s57.46,48.22,83.39,75.35a556.25,556.25,0,0,1,36.93,42.45,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,117.89,117.89,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,107.37,107.37,0,0,1-14.67,39.81,116.11,116.11,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54,216.21,216.21,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52,294.6,294.6,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.93,1.28l-7,1.12c-2.32.35-4.66.61-7,.92l-3.5.46-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a132.6,132.6,0,0,1-20.82-19.3,96,96,0,0,1-15.38-24,67.78,67.78,0,0,1-6-27.95,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74a174.67,174.67,0,0,1,25.1-50.59,236.63,236.63,0,0,1,38.32-41.46,354.94,354.94,0,0,1,45.66-33.09A528,528,0,0,1,444,2233.34c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s147.95-24,222.45-31.84,149.27-13.18,224.1-16.56,149.77-4.62,224.68-4.09c37.45.26,74.9,1.11,112.33,2.27s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.28,54.53,14c18.05,5.11,36,10.68,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.66,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.91c3.94,2.57,7.77,5.29,11.65,8,7.7,5.44,15.23,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a162.89,162.89,0,0,1,14.41,24.67,146.37,146.37,0,0,1,9.51,27c4.65,18.59,5.14,38,2.74,56.88s-7.84,37.22-14.76,54.8a393.3,393.3,0,0,1-24.81,50.82c-9.35,16.34-19.55,32.15-30.24,47.6-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.68-22.81,29.61-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.5,3.21,111.21a406.76,406.76,0,0,0,12.57,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87A1036.27,1036.27,0,0,0,2419,3668.87c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.37,148.56-19.38,220.23-40.86a841.71,841.71,0,0,0,105.09-39.07,663.38,663.38,0,0,0,98-54.38l.34.49a664.52,664.52,0,0,1-97.85,55,844,844,0,0,1-105.1,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.24-39a1038.57,1038.57,0,0,1-106.73-35.5,862.46,862.46,0,0,1-101.81-47.92,698.62,698.62,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.39-80.87-78.39A442.58,442.58,0,0,1,1974,3354a419.34,419.34,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.75-7c-.38-4.7-.78-9.39-1.09-14.09l-.35-7.06c-.12-2.35-.24-4.7-.26-7a471,471,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.12-62.17,65-91.89c45.75-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a140.26,140.26,0,0,0-9.1-25.88,157.71,157.71,0,0,0-13.86-23.76c-10.6-15-23.56-28.43-37.71-40.36-7.08-6-14.47-11.58-22-17-3.83-2.64-7.62-5.35-11.51-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.9-19.27-48.41-27.91a772.57,772.57,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-13.95c-36.39-8.42-73.16-15.19-110.12-20.73-73.94-11.09-148.56-17.39-223.25-21.6-37.35-2.08-74.73-3.61-112.14-4.83s-74.8-2.1-112.21-2.41q-112.25-.92-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32S841,2128.35,767.46,2142,621,2172.84,549.83,2195.85c-35.51,11.62-70.53,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59A352.15,352.15,0,0,0,351.17,2296a233.18,233.18,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a54.65,54.65,0,0,0-.52,6.77,64.4,64.4,0,0,0,5.71,26.52A93,93,0,0,0,304,2463a129.61,129.61,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88A276.21,276.21,0,0,0,427.41,2521c9.21,1.35,18.49,2.34,27.78,2.91l7,.4c2.32.14,4.65.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.45c2.3-.3,4.62-.56,6.92-.91l6.9-1.09c2.3-.35,4.57-.85,6.86-1.26a292.15,292.15,0,0,0,53.52-15.67,260.17,260.17,0,0,0,49.18-26.15A213.89,213.89,0,0,0,663.26,2460a162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,102,102,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a382.52,382.52,0,0,0-31.21-46.37A555.81,555.81,0,0,0,610.9,2195c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.14-94.36-60.93s-61.88-42.24-91.44-65.28c-14.77-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a179.1,179.1,0,0,1-15.73-23.36,104.61,104.61,0,0,1-10.53-26.14,71.2,71.2,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a40.72,40.72,0,0,1,1.34-7,48.65,48.65,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.68-10.29,23.79-15,16.22-9.4,32.89-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.68,39.68,0,0,0,24,1462a22.69,22.69,0,0,0,1.71-6.61,21.12,21.12,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.27-24.71a112.46,112.46,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,369.46,369.46,0,0,0-51.07-23c-17.53-6.5-35.4-12.09-53.44-17.07s-36.24-9.32-54.54-13.19-36.72-7.23-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.65-.53-9.3-1-14-1.4-2.32-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a7,7,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="594.33 2178.12 597.18 2177.3 600.31 2180.58 597.46 2181.37 594.33 2178.12"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-47"\n    d="M-308.8,1350.83c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.1,4.68.26,7,.44,4.67.37,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.23,55.27,10t54.61,13.13c18,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25A114.16,114.16,0,0,1,5.84,1453.6c5.84,7.35,10.49,15.85,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.65,40.65,0,0,1-7.93,11.74c-6.47,6.89-14.15,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.43,73.43,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a71,71,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76A179.24,179.24,0,0,0-119.18,1696c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.34a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.05,114.05,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,217.29,217.29,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7.05-.22l-7-.4q-14.07-.86-28.05-2.92a279.57,279.57,0,0,1-54.77-13.41c-17.71-6.42-34.78-14.95-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60,60,0,0,1,.54-7.21c.36-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08A526.93,526.93,0,0,1,436,2263.74c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.44,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.9,38.77,41.46A163.73,163.73,0,0,1,2348.7,2367a147.11,147.11,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,436.64,436.64,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.8a693,693,0,0,0,93.07,61.93,860.5,860.5,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a842.44,842.44,0,0,0,105.1-39.07,662.42,662.42,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.85-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.38-56.86-49.39-80.86-78.39a443,443,0,0,1-60.73-94.91,422.44,422.44,0,0,1-20.37-52.68,411.57,411.57,0,0,1-12.83-55c-.84-4.63-1.38-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a472.93,472.93,0,0,1,1.85-56.45c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a388.49,388.49,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.91-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32S833,2158.75,759.46,2172.4,613,2203.24,541.84,2226.25c-35.51,11.62-70.54,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59,351.55,351.55,0,0,0-45.23,32.69,232.77,232.77,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51A92.58,92.58,0,0,0,296,2493.37a130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88a277.29,277.29,0,0,0,54.11,13.31c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.65.19,9.31.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a291.24,291.24,0,0,0,53.51-15.66,259.86,259.86,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,160.47,160.47,0,0,0,19.13-20.15,110.89,110.89,0,0,0,8-11.32,101.31,101.31,0,0,0,6.47-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.23a383.68,383.68,0,0,0-31.21-46.37,554.31,554.31,0,0,0-36.69-42.29c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.64c-31.67-20-63.22-40.14-94.37-60.94S-9.18,1797-38.73,1774c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105,105,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.59.07-1.19.13-1.78a39.6,39.6,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18.05c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.19-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.51,22.51,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.5-17.44-12.26-24.71A112.79,112.79,0,0,0-15.11,1435a198.81,198.81,0,0,0-23.49-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.4,6.4,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="586.33 2208.52 589.18 2207.7 592.31 2210.98 589.46 2211.76 586.33 2208.52"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-48"\n    d="M-316.77,1380.73c.75-.86,1.29-.53,1.9-.7s1.18-.07,1.77-.08c1.18,0,2.36,0,3.53.07,2.34.09,4.68.25,7,.44,4.66.37,9.32.85,14,1.38,9.31,1.07,18.58,2.35,27.84,3.76q27.77,4.25,55.26,10c18.33,3.85,36.55,8.18,54.62,13.13s36,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,199.48,199.48,0,0,1,23.62,15.26,113.48,113.48,0,0,1,20.35,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.9,21.9,0,0,1,.5,7.13,23.71,23.71,0,0,1-1.77,6.94,40.66,40.66,0,0,1-7.93,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.62,144.62,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.41,47.41,0,0,0-5.79,12.51,38.94,38.94,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.74,0,1.73.06,1.73A69.36,69.36,0,0,0-153.2,1677a103.72,103.72,0,0,0,10.41,25.77,178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.53,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78L235.36,1988c63.47,39.73,126.73,79.85,188.1,122.83,30.65,21.52,60.83,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.36,385.36,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,104.08,104.08,0,0,1-6.64,12.58,114.49,114.49,0,0,1-8.16,11.63,164.49,164.49,0,0,1-19.47,20.54A214.84,214.84,0,0,1,627.1,2540a263.08,263.08,0,0,1-49.75,26.53,295.48,295.48,0,0,1-54.08,15.88c-2.32.43-4.62.94-6.94,1.28l-7,1.12c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.42,279.42,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.95-26.32a133,133,0,0,1-20.82-19.29,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74A174.44,174.44,0,0,1,294.5,2395a236.54,236.54,0,0,1,38.31-41.46,355.9,355.9,0,0,1,45.66-33.09A530.31,530.31,0,0,1,428,2293.63c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.45.25,74.9,1.1,112.33,2.26s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.53,13.95c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.11l5.94,3.8,5.87,3.9c3.94,2.57,7.77,5.3,11.65,8,7.7,5.44,15.24,11.16,22.48,17.24,14.45,12.17,27.78,25.89,38.76,41.46a164.18,164.18,0,0,1,14.42,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.3,413.3,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a692.91,692.91,0,0,0,93.07,61.92,859.81,859.81,0,0,0,101.17,47.87,1039.58,1039.58,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a845.62,845.62,0,0,0,105.1-39.07,663.84,663.84,0,0,0,98-54.39l.34.5a665.85,665.85,0,0,1-97.84,55,844.64,844.64,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.23-39a1041.93,1041.93,0,0,1-106.74-35.49,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.45,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140.8,140.8,0,0,0-9.09-25.89,158.62,158.62,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.88-5.88-3.77c-15.68-10-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.16-35.44-11.73-53.39-16.84s-36.05-9.76-54.24-13.95c-36.4-8.41-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.59-37.36-2.08-74.74-3.61-112.14-4.84s-74.81-2.1-112.22-2.4q-112.25-.93-224.43,3.85c-74.76,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56S605,2233.13,533.87,2256.15c-35.52,11.62-70.54,24.84-104.25,40.9a526,526,0,0,0-49.2,26.58,354.08,354.08,0,0,0-45.22,32.69,233.18,233.18,0,0,0-37.77,40.78,171,171,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a57,57,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.77,92.77,0,0,0,14.8,23.12,129.58,129.58,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.85,6.87-1.26a293,293,0,0,0,53.51-15.66,260.21,260.21,0,0,0,49.18-26.16,212.81,212.81,0,0,0,21.94-17.16,161.84,161.84,0,0,0,19.13-20.14,110.93,110.93,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.33,103.33,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22a382,382,0,0,0-31.2-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.76-11.53-29.2-23.49-43-36.16s-27-26.1-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.06,105.06,0,0,1-10.53-26.15,72,72,0,0,1-1.95-14l-.06-1.78,0-1.77,0-1.77c0-.6.07-1.2.14-1.79a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,74.8,74.8,0,0,1,8.84-11,144.46,144.46,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25S-6,1540.44.35,1533.67a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a112.8,112.8,0,0,0-20.13-19.28,200,200,0,0,0-23.48-15.21,368.88,368.88,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-14-1.41-2.33-.19-4.67-.35-7-.44-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="578.36 2238.42 581.21 2237.6 584.34 2240.87 581.49 2241.66 578.36 2238.42"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-49"\n    d="M-325,1412.22c.75-.86,1.28-.53,1.9-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.53.07,2.34.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38,9.31,1.07,18.58,2.35,27.84,3.76q27.76,4.25,55.26,10c18.33,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26A113.42,113.42,0,0,1-10.36,1515c5.84,7.36,10.5,15.86,12.51,25.14a22.17,22.17,0,0,1,.5,7.13,23.73,23.73,0,0,1-1.78,6.94A40.63,40.63,0,0,1-7,1565.92c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.11,144.11,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.74,0,1.73.06,1.73a70.09,70.09,0,0,0,1.93,13.74A104.13,104.13,0,0,0-151,1734.27a178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.54,23,60.3,44.31,91.43,65.07s62.72,40.85,94.4,60.78l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.46,48.22,83.39,75.35a560.56,560.56,0,0,1,36.93,42.46,385.36,385.36,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,120,120,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,104.08,104.08,0,0,1-6.64,12.58,116.11,116.11,0,0,1-8.16,11.63A164.49,164.49,0,0,1,641.12,2554a217.29,217.29,0,0,1-22.24,17.43A263.08,263.08,0,0,1,569.13,2598,295.35,295.35,0,0,1,515,2613.86c-2.31.43-4.61.94-6.93,1.28l-7,1.12c-2.33.36-4.66.62-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.07-4.7-.08-7.05-.22l-7-.4c-9.39-.56-18.74-1.56-28.05-2.91A279.69,279.69,0,0,1,348,2602.62c-17.7-6.42-34.78-14.94-49.94-26.32A132.53,132.53,0,0,1,277.2,2557a96,96,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,62.31,62.31,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A237.31,237.31,0,0,1,324.58,2385,357.31,357.31,0,0,1,370.24,2352a531.74,531.74,0,0,1,49.53-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.57,149.77-4.62,224.67-4.08c37.46.25,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.67q27.42,6.27,54.52,14c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.89,28.11l5.94,3.8,5.87,3.9c3.94,2.57,7.77,5.3,11.65,8,7.7,5.44,15.23,11.16,22.48,17.24,14.45,12.17,27.78,25.89,38.76,41.46a162.79,162.79,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.83,37.23-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.89,413.89,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.44,693.44,0,0,0,93.06,61.92A860.7,860.7,0,0,0,2288.68,3725a1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a844.88,844.88,0,0,0,105.09-39.07,663.43,663.43,0,0,0,98-54.39l.34.5a665.44,665.44,0,0,1-97.85,55,843.9,843.9,0,0,1-105.1,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.24-39A1040.94,1040.94,0,0,1,2287,3729.2a863.42,863.42,0,0,1-101.82-47.93,697.49,697.49,0,0,1-93.83-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.77-9.39-1.08-14.09l-.35-7.05c-.12-2.35-.24-4.71-.26-7.06a471.08,471.08,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.12-62.17,65-91.88c45.75-59.45,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a140.1,140.1,0,0,0-9.1-25.89,157.71,157.71,0,0,0-13.86-23.76c-10.61-15.05-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.88-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36.05-9.76-54.25-14c-36.39-8.41-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.59-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.42,3.85c-74.76,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.62-70.53,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58A354.08,354.08,0,0,0,327,2387.81a233.18,233.18,0,0,0-37.77,40.78,170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.48,13.44-.45,2.26-.94,4.57-1.26,6.78a55,55,0,0,0-.52,6.77,64.33,64.33,0,0,0,5.71,26.52,92.81,92.81,0,0,0,14.81,23.12,129.13,129.13,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.57-.85,6.86-1.26A292.91,292.91,0,0,0,568,2595.05a260.21,260.21,0,0,0,49.18-26.16,213.89,213.89,0,0,0,21.94-17.16,161.84,161.84,0,0,0,19.13-20.14,112.52,112.52,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.33,103.33,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22A381,381,0,0,0,623.39,2329a554,554,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87A181.55,181.55,0,0,1-152.29,1735a105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l0-1.78,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,74.16,74.16,0,0,1,8.84-11,144.88,144.88,0,0,1,21.61-18c7.69-5.39,15.69-10.3,23.8-15,16.22-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.86,39.86,0,0,0,7.72-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.4-12.09-53.44-17.07s-36.24-9.33-54.54-13.2-36.72-7.23-55.22-10.08c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.44-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="570.14 2269.91 572.99 2269.09 576.12 2272.36 573.26 2273.15 570.14 2269.91"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-50"\n    d="M-333,1442.62c.75-.87,1.29-.53,1.9-.71s1.19-.06,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.24,55.27,10t54.61,13.13c18.05,5,36,10.53,53.53,17a371.1,371.1,0,0,1,51.23,23A199.15,199.15,0,0,1-38.69,1526a113.75,113.75,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.13a22,22,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93A40.57,40.57,0,0,1-15,1596.32c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.87,143.87,0,0,0-21.39,17.9,73.3,73.3,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.91,38.91,0,0,0-1.27,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a70.86,70.86,0,0,0,1.94,13.74A103.37,103.37,0,0,0-159,1764.67a178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.53,43,36c29.54,23,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.22,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,115.83,115.83,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,165.11,165.11,0,0,1-19.46,20.54,218.39,218.39,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,294.5,294.5,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.15,1.68-4.71,0-9.41.1-14.11-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91A279.59,279.59,0,0,1,340,2633c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.21,96.21,0,0,1-15.38-24,67.85,67.85,0,0,1-6-28,60,60,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.57,236.57,0,0,1,38.31-41.46,355.64,355.64,0,0,1,45.66-33.09,531.58,531.58,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.42,218.08-54.2s148-24,222.46-31.84,149.26-13.17,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.66q27.43,6.28,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.91c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.47a163.63,163.63,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.36,58.07-96.64,114.45-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.18,405.18,0,0,0,12.56,54.28,412,412,0,0,0,20,52,437,437,0,0,0,59.82,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1038.94,1038.94,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.57a1293.66,1293.66,0,0,0,224.06.55c74.49-6.38,148.55-19.38,220.22-40.87a844,844,0,0,0,105.1-39.06,664.75,664.75,0,0,0,98-54.39l.34.49a663.51,663.51,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.18c-74.69-6.42-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,697.34,697.34,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.86-78.39a442.38,442.38,0,0,1-60.73-94.91,419.69,419.69,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.83-4.64-1.37-9.32-2-14-.36-2.33-.56-4.67-.83-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.36-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.74-58.38,68-89,10.63-15.33,20.74-31,30-47.14a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.57-54.65a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15.05-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.95-3.83-2.64-7.63-5.34-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.91-224.43,3.86c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56S588.78,2295,517.65,2318c-35.51,11.61-70.54,24.84-104.24,40.9a525.09,525.09,0,0,0-49.21,26.58A353.11,353.11,0,0,0,319,2418.21,233.56,233.56,0,0,0,281.21,2459a170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77A64.21,64.21,0,0,0,257,2562a92.71,92.71,0,0,0,14.81,23.12A129.51,129.51,0,0,0,292.09,2604c14.81,11.13,31.58,19.54,49,25.88a275.86,275.86,0,0,0,54.11,13.31c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.34,4.58-.85,6.87-1.26A293,293,0,0,0,560,2625.45a260.79,260.79,0,0,0,49.18-26.16,212.81,212.81,0,0,0,21.94-17.16A161.07,161.07,0,0,0,650.2,2562a111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22a383.28,383.28,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123L122.88,1992c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.43-65.27c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.21,105.21,0,0,1-10.53-26.15,72,72,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.76,20.76,0,0,0-.47-6.8c-1.95-9.08-6.5-17.45-12.26-24.72a112.85,112.85,0,0,0-20.14-19.28,199.13,199.13,0,0,0-23.48-15.21,369.29,369.29,0,0,0-51.07-23c-17.54-6.51-35.41-12.1-53.44-17.08s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.08c-9.25-1.42-18.51-2.71-27.81-3.8-4.64-.53-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.06-.58,0-1.16,0-1.73.07a7.21,7.21,0,0,0-1.37.23Z"\n  />\n  <polygon\n    class="cls-3"\n    points="562.14 2300.3 564.99 2299.49 568.12 2302.76 565.27 2303.55 562.14 2300.3"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-51"\n    d="M-340.32,1472.76c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.77,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23A200.41,200.41,0,0,1-46,1556.09a114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.46,40.46,0,0,1-7.93,11.73c-6.47,6.9-14.15,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.35,73.35,0,0,0-8.66,10.85,47.13,47.13,0,0,0-5.8,12.51,39,39,0,0,0-1.27,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a70.76,70.76,0,0,0,1.94,13.73,103.22,103.22,0,0,0,10.42,25.77A178.45,178.45,0,0,0-150.7,1818c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08s62.72,40.85,94.4,60.78L211.82,2080c63.46,39.72,126.73,79.84,188.09,122.82,30.65,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.22,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,113.39,113.39,0,0,1-8.16,11.63,164.41,164.41,0,0,1-19.46,20.54A216,216,0,0,1,603.56,2632a263.69,263.69,0,0,1-49.76,26.52,296.07,296.07,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7.05-.23l-7-.4c-9.38-.56-18.74-1.55-28-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.41.84-4.69,1.31-7,1-4.63,2.17-9.2,3.53-13.73A174.37,174.37,0,0,1,271,2487a236.93,236.93,0,0,1,38.31-41.46,356.53,356.53,0,0,1,45.66-33.08,526.93,526.93,0,0,1,49.52-26.83c33.89-16.2,69.05-29.51,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.1,112.34,2.26s74.85,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.44,6.28,54.53,13.95c18.06,5.12,36,10.69,53.72,16.87a780.56,780.56,0,0,1,103.58,44.2c16.67,8.7,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.23,89.47-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.14,437.14,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a693,693,0,0,0,93.07,61.93,860.5,860.5,0,0,0,101.17,47.86,1036.5,1036.5,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a844,844,0,0,0,105.1-39.07,663.33,663.33,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.7,442.7,0,0,1-60.73-94.9,422,422,0,0,1-20.37-52.69,411.42,411.42,0,0,1-12.83-55c-.84-4.64-1.38-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a387.22,387.22,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.34s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.37,157.37,0,0,0-13.87-23.77c-10.6-15.05-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a775,775,0,0,0-102.77-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,351.55,351.55,0,0,0-45.23,32.69,232.7,232.7,0,0,0-37.76,40.77,170.77,170.77,0,0,0-24.66,49.53c-1.33,4.44-2.52,8.91-3.47,13.45-.46,2.25-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.76,64.5,64.5,0,0,0,5.72,26.52,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.22,4.65.19,9.31.11,14,.1,9.31-.21,18.63-.62,27.88-1.63L475,2675l3.46-.44c2.31-.31,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26a292,292,0,0,0,53.51-15.66,259.86,259.86,0,0,0,49.18-26.15,215.6,215.6,0,0,0,21.94-17.16,161.16,161.16,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.65c-31.67-20-63.22-40.13-94.37-60.93s-61.88-42.24-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.61,74.61,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.19-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.5-17.44-12.26-24.72a112.73,112.73,0,0,0-20.13-19.27,200.16,200.16,0,0,0-23.49-15.22,371.67,371.67,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17-.05-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.4,6.4,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="554.81 2330.45 557.66 2329.63 560.79 2332.9 557.94 2333.69 554.81 2330.45"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-52"\n    d="M-348.54,1504.25c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.77-.08c1.18,0,2.36,0,3.53.07,2.34.09,4.68.25,7,.44,4.67.37,9.32.85,14,1.38,9.3,1.07,18.57,2.35,27.83,3.76q27.76,4.25,55.26,10c18.33,3.85,36.55,8.18,54.62,13.13s35.95,10.53,53.53,17a370.39,370.39,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26A114.1,114.1,0,0,1-33.9,1607c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93A40.66,40.66,0,0,1-30.6,1658c-6.47,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.71-16,9.61-23.68,15A144,144,0,0,0-171,1749.75a72.78,72.78,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,38.11,38.11,0,0,0-1.27,6.77c-.07.57-.09,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a69.26,69.26,0,0,0,1.94,13.73,103.57,103.57,0,0,0,10.41,25.77,179.54,179.54,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.64s28.22,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08S76.68,2032,108.36,2052l95.24,59.51c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.52,60.83,43.75,90,67.25s57.46,48.23,83.4,75.35A558.2,558.2,0,0,1,602,2419.36a386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,105.87,105.87,0,0,1-8,27.24,103.29,103.29,0,0,1-6.64,12.57,113.39,113.39,0,0,1-8.16,11.63,163.76,163.76,0,0,1-19.47,20.54,214.42,214.42,0,0,1-22.23,17.43A263.47,263.47,0,0,1,545.58,2690a296.3,296.3,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7.05-.23l-7-.4c-9.38-.56-18.74-1.55-28.05-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.79-14.95-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.48,62.48,0,0,1,.55-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.73a174.37,174.37,0,0,1,25.11-50.6A236.54,236.54,0,0,1,301,2477.07,354.87,354.87,0,0,1,346.7,2444a528.08,528.08,0,0,1,49.52-26.84c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.57,149.76-4.61,224.67-4.08c37.45.26,74.91,1.1,112.34,2.26s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.44,6.29,54.53,13.95c18,5.12,36,10.69,53.72,16.87a780.56,780.56,0,0,1,103.58,44.2c16.67,8.7,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.76,5.3,11.64,8,7.7,5.43,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.76,41.46a163.34,163.34,0,0,1,14.42,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.7,28.74,50.85,54.55,80,77.8a693,693,0,0,0,93.07,61.93A859.74,859.74,0,0,0,2265.13,3817a1037.14,1037.14,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,663.84,663.84,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.84-145.86,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1044.43,1044.43,0,0,1-106.74-35.5,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.87-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.69-.78-9.38-1.08-14.08l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.16,387.16,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a141.06,141.06,0,0,0-9.09-25.89,158.62,158.62,0,0,0-13.87-23.76c-10.6-15-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.78c-15.68-10-31.89-19.27-48.41-27.91a774.32,774.32,0,0,0-102.76-44c-17.61-6.16-35.44-11.72-53.39-16.84s-36-9.76-54.24-13.95c-36.4-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.84s-74.81-2.1-112.22-2.4q-112.25-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.25,40.9a525,525,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.76,232.76,0,0,0-37.77,40.77A171,171,0,0,0,241,2570.15c-1.34,4.44-2.52,8.91-3.47,13.45-.46,2.25-.95,4.56-1.27,6.77a57,57,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.59,92.59,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.22,4.66.19,9.32.11,14,.1,9.31-.21,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a292.25,292.25,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,214.29,214.29,0,0,0,21.94-17.17,161.11,161.11,0,0,0,19.13-20.14,109.83,109.83,0,0,0,8-11.33,100.5,100.5,0,0,0,6.48-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23s-59.2-45.73-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87A180.46,180.46,0,0,1-175.83,1827a105.14,105.14,0,0,1-10.53-26.14,72.06,72.06,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.6.06-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.33,75.33,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.26-24.72a112.79,112.79,0,0,0-20.14-19.27,200,200,0,0,0-23.48-15.22,370.06,370.06,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.41-2.33-.18-4.66-.35-7-.44-1.16-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="546.59 2361.94 549.44 2361.12 552.57 2364.39 549.72 2365.18 546.59 2361.94"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-53"\n    d="M-356.54,1534.65c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a371.75,371.75,0,0,1,51.24,23A201.12,201.12,0,0,1-62.24,1618a113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a22.17,22.17,0,0,1,.5,7.13,24,24,0,0,1-1.78,6.94,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33,17.62-49.22,27-8.07,4.7-16,9.6-23.67,15a144.11,144.11,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,46.79,46.79,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.58-.08,1.15-.12,1.72l0,1.74,0,1.73.06,1.73a70.09,70.09,0,0,0,1.93,13.74,103.37,103.37,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.21,24.53,43,36c29.54,23,60.3,44.31,91.42,65.07s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.83,43.75,90,67.25s57.47,48.22,83.4,75.35A558.2,558.2,0,0,1,594,2449.76a383.06,383.06,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a152,152,0,0,1,5.1,27.84,120,120,0,0,1,.4,14.19,113.88,113.88,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,116,116,0,0,1-8.15,11.63,164.49,164.49,0,0,1-19.47,20.54,215.91,215.91,0,0,1-22.24,17.43,263.08,263.08,0,0,1-49.75,26.53,295.58,295.58,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.94,1.28l-7,1.12c-2.33.36-4.67.62-7,.93l-3.49.45-3.52.34c-9.35,1-18.75,1.45-28.15,1.68-4.7,0-9.41.1-14.11-.09-2.34-.07-4.7-.08-7-.22l-7-.4c-9.39-.56-18.74-1.56-28.05-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32a133,133,0,0,1-20.83-19.29,96.23,96.23,0,0,1-15.37-24,67.86,67.86,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A237.31,237.31,0,0,1,293,2507.47a357.31,357.31,0,0,1,45.66-33.09,531.74,531.74,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.19,71.34-23.17,144.43-40.43,218.08-54.21s147.95-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.46.25,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.57,20.67q27.44,6.27,54.53,13.95c18.06,5.12,36,10.69,53.72,16.87a779.37,779.37,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.16,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.26-52.33,98.63-24.69,70.39-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.23,407.23,0,0,0,12.56,54.29,414.9,414.9,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.17,692.17,0,0,0,93.06,61.92,861.32,861.32,0,0,0,101.17,47.87,1039.76,1039.76,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,663.94,663.94,0,0,0,98-54.39l.33.5a664.82,664.82,0,0,1-97.84,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.9-19.13-221.24-39a1041.93,1041.93,0,0,1-106.74-35.49,862.53,862.53,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.24-4.71-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.45,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.42-53.34s1.87-36.87-2.56-54.66a141.58,141.58,0,0,0-9.1-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.88-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.16-35.43-11.73-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.41-73.16-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.59-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.16,31.56-146.48,30.84-217.62,53.86c-35.51,11.62-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58,353.38,353.38,0,0,0-45.22,32.69A233.18,233.18,0,0,0,257.67,2551,171,171,0,0,0,233,2600.55c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78a59.15,59.15,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.81,92.81,0,0,0,14.81,23.12A128.66,128.66,0,0,0,268.55,2696c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.3-.22,18.62-.62,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.85,6.87-1.26a293.14,293.14,0,0,0,53.52-15.66,260.21,260.21,0,0,0,49.18-26.16,212.69,212.69,0,0,0,21.93-17.16A160.39,160.39,0,0,0,626.65,2654a111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,102.54,102.54,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.22a381,381,0,0,0-31.21-46.37,554.16,554.16,0,0,0-36.69-42.3c-25.78-27-54-51.72-83-75.23s-59.21-45.74-89.81-67.27c-61.24-43-124.42-83.21-187.82-123L99.33,2084c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87a180.53,180.53,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l-.06-1.78,0-1.77,0-1.77c.05-.6.07-1.2.13-1.79a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.1,74.1,0,0,1,8.83-11,145.47,145.47,0,0,1,21.62-18c7.69-5.39,15.69-10.3,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.76,368.76,0,0,0-51.07-23c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.44-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="538.6 2392.34 541.45 2391.52 544.57 2394.79 541.72 2395.58 538.6 2392.34"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-54"\n    d="M-364.51,1564.54c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.23,55.27,10t54.61,13.13c18,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.86,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15A144.54,144.54,0,0,0-187,1810a72.79,72.79,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a70.86,70.86,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76,179.24,179.24,0,0,0,15.63,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.12,556.12,0,0,1,36.92,42.45,385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,116,116,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,218.39,218.39,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.57-18.74-1.56-28-2.91A280.3,280.3,0,0,1,308.45,2755c-17.71-6.42-34.79-14.95-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60,60,0,0,1,.54-7.21c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.32,174.32,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08,529.24,529.24,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.2s148-24,222.46-31.84,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.71c74.79,4.12,149.57,10.33,223.76,21.36,37.08,5.51,74,12.27,110.57,20.67q27.43,6.29,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.36,58.07-96.64,114.46-142.27,173.68-22.8,29.61-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,412.55,412.55,0,0,0,20,52A437,437,0,0,0,1975,3689.7c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87A1036.44,1036.44,0,0,0,2355.34,3913c72,20,145.95,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a842.44,842.44,0,0,0,105.1-39.07,663.78,663.78,0,0,0,98-54.38l.34.49a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.85-145.87,35.21-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,699.25,699.25,0,0,1-93.84-62.2C2022.42,3748,1995,3722,1971,3693a442.63,442.63,0,0,1-60.73-94.91,420.89,420.89,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.83-4.64-1.37-9.33-2-14-.36-2.33-.56-4.68-.83-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.91,470.91,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.27,157.27,0,0,0-13.87-23.76c-10.6-15.06-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.95-3.83-2.64-7.63-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.91-224.43,3.85c-74.75,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56S557.26,2417,486.13,2440c-35.51,11.62-70.54,24.84-104.24,40.9a527.51,527.51,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69,233.2,233.2,0,0,0-37.77,40.78A170.75,170.75,0,0,0,225,2630.45c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77A64.17,64.17,0,0,0,225.5,2684a92.58,92.58,0,0,0,14.81,23.13,130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88a275.86,275.86,0,0,0,54.11,13.31c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.32.1,14,.1,9.31-.22,18.62-.62,27.88-1.64l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.31,101.31,0,0,0,6.47-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.23a384.86,384.86,0,0,0-31.21-46.37,556.24,556.24,0,0,0-36.69-42.29c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123L91.36,2113.9c-31.67-20-63.23-40.14-94.37-60.94s-61.88-42.23-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a179.78,179.78,0,0,1-15.73-23.36,105,105,0,0,1-10.53-26.14,72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.53,48.53,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11.05,145.06,145.06,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.82,22.82,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.5-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,197.87,197.87,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="530.62 2422.23 533.47 2421.41 536.6 2424.69 533.75 2425.47 530.62 2422.23"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-55"\n    d="M-372.73,1596c.75-.86,1.29-.52,1.9-.7s1.18-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.66.37,9.32.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.76,4.23,55.26,10t54.62,13.13c18,5,35.95,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,199.4,199.4,0,0,1,23.62,15.25,113.88,113.88,0,0,1,20.35,19.44c5.84,7.35,10.49,15.86,12.5,25.13a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144,144,0,0,0-21.39,17.91,72.86,72.86,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38.76,38.76,0,0,0-1.28,6.76c-.06.57-.08,1.14-.12,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.65,103.65,0,0,0,10.41,25.76,179.31,179.31,0,0,0,15.64,23.15c11.55,14.66,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.23,59.52c63.47,39.72,126.73,79.85,188.1,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.34a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23,102.56,102.56,0,0,1-6.64,12.57,112.3,112.3,0,0,1-8.16,11.63,164.58,164.58,0,0,1-19.47,20.55,216.21,216.21,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.57-18.74-1.56-28.05-2.91a280.13,280.13,0,0,1-54.77-13.42c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.21c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74a174.32,174.32,0,0,1,25.11-50.59,236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08A528,528,0,0,1,372,2508.94c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.33,2.26s74.86,2.67,112.27,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.27,110.58,20.67q27.42,6.28,54.53,13.95c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163.79,163.79,0,0,1,14.42,24.67,147.11,147.11,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.77,74.51,3.21,111.21a406.91,406.91,0,0,0,12.57,54.29,414,414,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,859.74,859.74,0,0,0,101.17,47.86,1034.72,1034.72,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.85-145.86,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,411.6,411.6,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,158.12,158.12,0,0,0-13.87-23.76c-10.6-15.06-23.56-28.43-37.7-40.37-7.09-6-14.47-11.57-22.05-16.94-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.4-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.91-224.43,3.85c-74.76,3.31-149.43,8.6-223.85,16.32S769.08,2404,695.53,2417.6,549,2448.44,477.91,2471.45c-35.52,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.56-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.83,92.83,0,0,0,14.8,23.13,130.06,130.06,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88a276.65,276.65,0,0,0,54.1,13.31c9.22,1.34,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.31.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,101.38,101.38,0,0,0,6.48-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a383.61,383.61,0,0,0-31.2-46.37A556.24,556.24,0,0,0,539,2470.55c-25.79-27.05-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.64c-31.66-20-63.22-40.14-94.36-60.94s-61.88-42.23-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87A180.46,180.46,0,0,1-200,1918.79a105,105,0,0,1-10.53-26.14,72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c.05-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.51,48.51,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11.05,145.06,145.06,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.82,22.82,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71A112.46,112.46,0,0,0-79,1680.17,198.69,198.69,0,0,0-102.53,1665a370.12,370.12,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="522.4 2453.72 525.25 2452.9 528.38 2456.18 525.53 2456.96 522.4 2453.72"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-56"\n    d="M-380.73,1626.43c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.35,27.83,3.75q27.76,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.14s36,10.52,53.53,17a368.74,368.74,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25,113.47,113.47,0,0,1,20.34,19.44c5.84,7.35,10.49,15.85,12.51,25.13a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33,17.61-49.22,27-8.07,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.92,72.92,0,0,0-8.66,10.86,46.87,46.87,0,0,0-5.79,12.5,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.05,1.74a71,71,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76,180.27,180.27,0,0,0,15.63,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,384.32,384.32,0,0,1,31.5,46.68c9.22,16.37,17.07,33.64,22.11,51.84a152.75,152.75,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,114.05,114.05,0,0,1-1.26,14.16,106.71,106.71,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,163,163,0,0,1-19.46,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,295.61,295.61,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.23l-7-.39q-14.08-.86-28.05-2.92a280.2,280.2,0,0,1-54.78-13.41c-17.7-6.42-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,68,68,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08A527.09,527.09,0,0,1,364,2539.34c33.88-16.19,69-29.5,104.66-41.2,71.33-23.17,144.43-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.28,54.53,14c18.06,5.12,36,10.69,53.72,16.88a778.06,778.06,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.47,147.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.55,32.16-30.24,47.61-21.38,30.89-44.59,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.63-24.69,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a406.87,406.87,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93,860.5,860.5,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,663,663,0,0,0,98-54.39l.33.5a663.91,663.91,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4A442.27,442.27,0,0,1,1894,3660a420.48,420.48,0,0,1-20.38-52.69,412.61,412.61,0,0,1-12.83-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.28,28.77-109s32.67-67.84,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.32,20.75-31,30-47.13a387.19,387.19,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.56-54.66a141.48,141.48,0,0,0-9.1-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.28-48.41-27.91a772.39,772.39,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.85s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.09-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32S761.09,2434.35,687.53,2448s-146.48,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59A351.55,351.55,0,0,0,271.24,2602a233.15,233.15,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.25-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51A92.35,92.35,0,0,0,224.09,2769a129,129,0,0,0,20.26,18.81c14.81,11.14,31.59,19.55,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.92l7,.4c2.32.14,4.65.15,7,.23,4.65.18,9.31.1,14,.09,9.3-.21,18.62-.61,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a291.24,291.24,0,0,0,53.51-15.66,259.56,259.56,0,0,0,49.18-26.15A213.11,213.11,0,0,0,583.33,2766a160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,102.59,102.59,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.66-35-21.77-51.23a382.9,382.9,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.26c-61.24-43-124.42-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87A180.53,180.53,0,0,1-208,1949.19a105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.78a39.43,39.43,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11,145.57,145.57,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.28-27,8.18-4.53,16.3-9.18,24.13-14.26s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.08,21.08,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71A112.44,112.44,0,0,0-87,1710.57a198,198,0,0,0-23.49-15.21,370,370,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="514.4 2484.12 517.25 2483.3 520.38 2486.57 517.53 2487.36 514.4 2484.12"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-57"\n    d="M-388.53,1656.48c.75-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.17,0,2.35,0,3.52.06,2.35.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.23,55.27,10t54.61,13.13c18.05,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.86,12.51,25.13a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.65,40.65,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15A144.54,144.54,0,0,0-211,1902a72.79,72.79,0,0,0-8.66,10.86,47.13,47.13,0,0,0-5.8,12.51,38.74,38.74,0,0,0-1.27,6.76c-.06.57-.08,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a70.86,70.86,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76,179.24,179.24,0,0,0,15.63,23.15c11.55,14.66,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35A556.12,556.12,0,0,1,562,2571.59a385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,116,116,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104,104,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,164.5,164.5,0,0,1-19.46,20.55,218.39,218.39,0,0,1-22.24,17.43,263.12,263.12,0,0,1-49.76,26.52,295.28,295.28,0,0,1-54.08,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.15,1.67-4.71,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.57-18.74-1.56-28.05-2.91a280.3,280.3,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.95-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60,60,0,0,1,.54-7.21c.36-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.32,174.32,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08,529.24,529.24,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.2C532.23,2505,605.33,2487.76,679,2474s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.27,110.57,20.67q27.43,6.28,54.53,13.95c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.23,89.46-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437,437,0,0,0,59.82,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,859.74,859.74,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.85-145.87,35.21-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,699.25,699.25,0,0,1-93.84-62.2C1998.4,3840,1971,3814,1947,3785a443,443,0,0,1-60.73-94.91,422.44,422.44,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.83-4.64-1.37-9.33-2-14-.36-2.33-.56-4.68-.83-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.91,470.91,0,0,1,1.85-56.45c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a389.81,389.81,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.27,157.27,0,0,0-13.87-23.76c-10.6-15.06-23.56-28.43-37.7-40.37-7.09-6-14.47-11.57-22.05-16.94-3.83-2.64-7.63-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.25-.92-224.43,3.85c-74.75,3.31-149.43,8.6-223.85,16.32s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a527.51,527.51,0,0,0-49.21,26.59,352.15,352.15,0,0,0-45.22,32.69,232.77,232.77,0,0,0-37.76,40.78A170.52,170.52,0,0,0,201,2722.39c-1.33,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.33,64.33,0,0,0,5.72,26.51A92.58,92.58,0,0,0,216.29,2799a130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88A276.57,276.57,0,0,0,339.69,2857c9.21,1.34,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.32.1,14,.1,9.31-.22,18.63-.62,27.88-1.64l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15A212.81,212.81,0,0,0,575.53,2796a161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.31,101.31,0,0,0,6.47-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.23a383.68,383.68,0,0,0-31.21-46.37A556.24,556.24,0,0,0,523.17,2531c-25.79-27.05-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.64c-31.67-20-63.22-40.14-94.37-60.94s-61.88-42.23-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a179.78,179.78,0,0,1-15.73-23.36,104.58,104.58,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.53,48.53,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11,145.06,145.06,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.19-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37A39.51,39.51,0,0,0-63.68,1798a22.51,22.51,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.5-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,197.87,197.87,0,0,0-23.48-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="506.6 2514.17 509.45 2513.35 512.58 2516.63 509.73 2517.41 506.6 2514.17"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-58"\n    d="M-396.75,1688c.75-.86,1.29-.52,1.9-.7s1.18-.06,1.77-.07c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.37,9.32.86,14,1.39,9.3,1.07,18.57,2.35,27.83,3.76q27.77,4.23,55.26,10t54.62,13.13c18.05,5,36,10.52,53.53,17a370.45,370.45,0,0,1,51.23,23,200.34,200.34,0,0,1,23.63,15.25,114.16,114.16,0,0,1,20.34,19.44c5.84,7.35,10.49,15.86,12.5,25.13a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.85,40.85,0,0,1-7.93,11.74c-6.47,6.89-14.16,12.43-22,17.57s-16,9.79-24.19,14.34c-16.38,9.07-33,17.61-49.21,27-8.08,4.7-16,9.6-23.68,15a144,144,0,0,0-21.39,17.91,72.86,72.86,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,37.83,37.83,0,0,0-1.27,6.76c-.07.57-.09,1.14-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74A103.65,103.65,0,0,0-222.77,2010a179.31,179.31,0,0,0,15.64,23.15c11.55,14.66,24.73,28,38.48,40.63s28.22,24.54,43,36c29.53,23,60.29,44.32,91.42,65.08s62.72,40.85,94.4,60.78l95.24,59.52C218.85,2334.92,282.11,2375,343.48,2418c30.65,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.34a558.2,558.2,0,0,1,36.92,42.46,385.48,385.48,0,0,1,31.5,46.68c9.21,16.37,17.06,33.64,22.11,51.84a152.89,152.89,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,114.07,114.07,0,0,1-1.27,14.16,105.68,105.68,0,0,1-8,27.23A102.56,102.56,0,0,1,597,2797.6a112.3,112.3,0,0,1-8.16,11.63,164.58,164.58,0,0,1-19.47,20.55,217.17,217.17,0,0,1-22.23,17.43,263.42,263.42,0,0,1-49.76,26.52,295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.45-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.57-18.74-1.56-28-2.91a280.3,280.3,0,0,1-54.77-13.42c-17.71-6.42-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,68,68,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.21c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.19,174.19,0,0,1,25.11-50.59,236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08A528,528,0,0,1,348,2600.88c33.89-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.43,218.08-54.21s148-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.27,110.58,20.67q27.43,6.28,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.87,3.9c3.94,2.58,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.9,38.76,41.46a163.79,163.79,0,0,1,14.42,24.67,147.11,147.11,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.56,32.16-30.25,47.61-21.38,30.9-44.58,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.7,70.39-28.54,107.31c-3.45,37-2.77,74.51,3.21,111.21a406.91,406.91,0,0,0,12.57,54.29,414,414,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,859.74,859.74,0,0,0,101.17,47.86,1034.72,1034.72,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1293.54,1293.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a842.44,842.44,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.06,843.06,0,0,1-105.11,39.61c-71.71,21.85-145.86,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5A860.94,860.94,0,0,1,2113.43,3957a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.38-56.86-49.39-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,419.34,419.34,0,0,1-20.37-52.68,413.15,413.15,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a470.84,470.84,0,0,1,1.85-56.45c3.85-37.63,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.18,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.39,68-89.06,10.62-15.32,20.74-31,30-47.13a388.43,388.43,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,158.12,158.12,0,0,0-13.87-23.76c-10.6-15.06-23.56-28.43-37.7-40.37-7.09-6-14.47-11.57-22-16.94-3.84-2.64-7.63-5.35-11.52-7.9l-5.82-3.87-5.88-3.77c-15.68-10-31.89-19.27-48.41-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-14c-36.4-8.41-73.17-15.19-110.13-20.72-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.25-.92-224.43,3.85c-74.76,3.31-149.43,8.59-223.85,16.32s-148.6,17.91-222.15,31.56S525,2540.38,453.89,2563.39c-35.51,11.62-70.54,24.84-104.25,40.9a526.08,526.08,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,232.82,232.82,0,0,0-37.77,40.78,170.75,170.75,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.56-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.83,92.83,0,0,0,14.8,23.13,130.06,130.06,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88a277.37,277.37,0,0,0,54.1,13.31c9.22,1.34,18.49,2.34,27.79,2.91l7,.4c2.33.14,4.66.15,7,.23,4.66.19,9.31.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.33,3.46-.45c2.31-.3,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66,260.17,260.17,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,112,112,0,0,0,8-11.33,101.38,101.38,0,0,0,6.48-12.23,103.38,103.38,0,0,0,7.83-26.45c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.23a383.61,383.61,0,0,0-31.2-46.37A556.24,556.24,0,0,0,515,2562.49c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.64c-31.66-20-63.22-40.14-94.36-60.94s-61.88-42.23-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87A180.46,180.46,0,0,1-224,2010.73a105,105,0,0,1-10.53-26.14,72,72,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c.05-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.51,48.51,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.06,145.06,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.27-27,8.18-4.53,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.37a39.51,39.51,0,0,0,7.73-11.39,22.82,22.82,0,0,0,1.7-6.62,20.8,20.8,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.26-24.71a112.85,112.85,0,0,0-20.14-19.28,198.69,198.69,0,0,0-23.48-15.21,370.12,370.12,0,0,0-51.08-23c-17.53-6.51-35.4-12.09-53.43-17.07s-36.24-9.32-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.3-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="498.38 2545.66 501.23 2544.84 504.36 2548.12 501.51 2548.9 498.38 2545.66"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-59"\n    d="M-404.75,1718.37c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.35,27.83,3.75q27.77,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.14s36,10.52,53.53,17a368.74,368.74,0,0,1,51.23,23,199.07,199.07,0,0,1,23.63,15.25,113.47,113.47,0,0,1,20.34,19.44c5.84,7.35,10.49,15.85,12.51,25.13a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33.05,17.61-49.22,27-8.07,4.7-16,9.6-23.67,15a144.11,144.11,0,0,0-21.4,17.91,72.92,72.92,0,0,0-8.66,10.86,46.87,46.87,0,0,0-5.79,12.5A38.13,38.13,0,0,0-243,1994c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74a70.19,70.19,0,0,0,1.93,13.74,103.3,103.3,0,0,0,10.42,25.76,179.31,179.31,0,0,0,15.64,23.15c11.54,14.66,24.73,28,38.48,40.63s28.21,24.54,43,36c29.54,23,60.29,44.32,91.42,65.08s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.83,43.74,90,67.24S483,2563.9,508.9,2591a558.2,558.2,0,0,1,36.92,42.46,383.17,383.17,0,0,1,31.5,46.68c9.22,16.37,17.07,33.64,22.11,51.84a152.75,152.75,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,114.05,114.05,0,0,1-1.26,14.16,106.71,106.71,0,0,1-8,27.23A104,104,0,0,1,589,2828a113.77,113.77,0,0,1-8.15,11.63,163.8,163.8,0,0,1-19.47,20.54,216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52A295.61,295.61,0,0,1,435.29,2920c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.34-.08-4.7-.08-7-.23l-7-.39q-14.09-.86-28.05-2.92a280.38,280.38,0,0,1-54.78-13.41c-17.7-6.42-34.78-15-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.41.83-4.69,1.3-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47,356.53,356.53,0,0,1,45.66-33.08A527.09,527.09,0,0,1,340,2631.28c33.88-16.19,69-29.5,104.66-41.2,71.34-23.17,144.43-40.43,218.08-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.88a778.06,778.06,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.94,2.58,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.73,146.73,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.35-19.55,32.16-30.24,47.61-21.38,30.89-44.59,60.4-68.24,89.46-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.27-52.33,98.63-24.69,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a406.87,406.87,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.28,437.28,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93,861.26,861.26,0,0,0,101.17,47.86,1034.89,1034.89,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86A843.89,843.89,0,0,0,3084.9,4027a663,663,0,0,0,98-54.39l.33.5a663.91,663.91,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.1,411.1,0,0,1-12.84-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.24-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.28,28.77-109s32.67-67.84,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.32,20.75-31,30-47.13a387.19,387.19,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.87-2.56-54.66a141.48,141.48,0,0,0-9.1-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.28-48.41-27.91a772.39,772.39,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.85s-36-9.76-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.09-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32s-148.59,17.91-222.15,31.56S517,2570.78,445.89,2593.79c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59A350.76,350.76,0,0,0,247.23,2694a232.82,232.82,0,0,0-37.77,40.78,170.78,170.78,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.25-.94,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.59,19.55,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.92l7,.4c2.32.14,4.65.15,7,.23,4.65.18,9.31.1,14,.09,9.3-.21,18.62-.61,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26a291.57,291.57,0,0,0,53.52-15.66,260.17,260.17,0,0,0,49.18-26.15,214.07,214.07,0,0,0,21.93-17.16,160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,102.59,102.59,0,0,0,7.83-26.45c2.84-18.29.84-37.1-4.09-55s-12.66-35-21.77-51.23a381.74,381.74,0,0,0-31.21-46.37,554.16,554.16,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23s-59.21-45.73-89.81-67.26c-61.24-43-124.42-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87A180.53,180.53,0,0,1-232,2041.13,105.11,105.11,0,0,1-242.56,2015a71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.78a39.43,39.43,0,0,1,1.33-7,48.39,48.39,0,0,1,6-12.87,74.18,74.18,0,0,1,8.83-11,146.08,146.08,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.8-15,16.21-9.4,32.89-17.92,49.27-27,8.18-4.53,16.3-9.18,24.13-14.26s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.08,21.08,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.44,112.44,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,370,370,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="490.38 2576.06 493.24 2575.24 496.36 2578.51 493.51 2579.3 490.38 2576.06"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-60"\n    d="M-412.72,1748.27c.75-.87,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.17,0,2.35,0,3.52.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.24,55.27,10t54.61,13.13c18.05,5,35.95,10.53,53.53,17a371.63,371.63,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26A113.75,113.75,0,0,1-98.08,1851c5.84,7.36,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93A40.57,40.57,0,0,1-94.78,1902c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.87,143.87,0,0,0-21.39,17.9,74,74,0,0,0-8.67,10.86,47.41,47.41,0,0,0-5.79,12.51,38.91,38.91,0,0,0-1.27,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74,103.37,103.37,0,0,0,10.42,25.77,178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.53,43,36c29.54,23,60.29,44.31,91.42,65.07S12.5,2276,44.18,2296l95.24,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.65,21.52,60.83,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,106.06,106.06,0,0,1-8,27.23A104.9,104.9,0,0,1,581,2857.9a114.49,114.49,0,0,1-8.16,11.63,164.45,164.45,0,0,1-19.47,20.54,217.17,217.17,0,0,1-22.23,17.43A263.74,263.74,0,0,1,481.4,2934a295.25,295.25,0,0,1-54.08,15.88c-2.32.42-4.61.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.15,1.68-4.71,0-9.41.1-14.11-.09-2.35-.08-4.7-.08-7-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91a279.59,279.59,0,0,1-54.77-13.42c-17.71-6.42-34.79-14.94-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96,96,0,0,1-15.38-24,67.85,67.85,0,0,1-6-28,60,60,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.19,236.19,0,0,1,38.31-41.46A355.9,355.9,0,0,1,282.52,2688,531.58,531.58,0,0,1,332,2661.17c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.84,149.26-13.17,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.66q27.43,6.28,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.81,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.24,14.45,12.17,27.78,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.22-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63S1835,3525.1,1831.13,3562c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,413.89,413.89,0,0,0,20,52,437.42,437.42,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a692.91,692.91,0,0,0,93.07,61.92A859.81,859.81,0,0,0,2201,4061a1038.94,1038.94,0,0,0,106.18,35.69c72,20,145.95,32.94,220.42,39.57a1293.54,1293.54,0,0,0,224,.55c74.49-6.38,148.56-19.38,220.23-40.87a844,844,0,0,0,105.1-39.06,664.75,664.75,0,0,0,98-54.39l.34.49a663.51,663.51,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.18c-74.69-6.41-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,697.34,697.34,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.86-78.39a442.38,442.38,0,0,1-60.73-94.91,419.69,419.69,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.36-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89,10.62-15.33,20.74-31,30-47.14a389.16,389.16,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.57-54.65a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.63-5.35-11.52-7.91l-5.82-3.87-5.87-3.77c-15.69-10-31.9-19.27-48.42-27.91a773,773,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.81-2.1-112.22-2.41q-112.24-.92-224.43,3.86c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.51,11.61-70.54,24.84-104.24,40.9a525.09,525.09,0,0,0-49.21,26.58,353.11,353.11,0,0,0-45.22,32.69,233.56,233.56,0,0,0-37.77,40.78,170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.57-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,93,93,0,0,0,14.8,23.12,129.58,129.58,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.34,27.79,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34L406,2950c2.31-.31,4.62-.56,6.92-.92l6.9-1.09c2.3-.34,4.58-.85,6.87-1.26a293,293,0,0,0,53.51-15.66,260.79,260.79,0,0,0,49.18-26.16,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22a383.28,383.28,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.53-29.2-23.49-43-36.17s-27-26.09-38.6-40.87A179.67,179.67,0,0,1-240,2071a105.06,105.06,0,0,1-10.53-26.15,72,72,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11.05,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.76,20.76,0,0,0-.47-6.8c-2-9.08-6.5-17.45-12.26-24.72A113.2,113.2,0,0,0-119,1832.4a199.13,199.13,0,0,0-23.48-15.21,369.29,369.29,0,0,0-51.07-23c-17.54-6.51-35.41-12.1-53.44-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.71-27.81-3.8-4.64-.53-9.29-1-13.95-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.08-3.5-.06-.58,0-1.16,0-1.73.07a7.21,7.21,0,0,0-1.37.23Z"\n  />\n  <polygon\n    class="cls-3"\n    points="482.41 2605.95 485.26 2605.14 488.39 2608.41 485.54 2609.2 482.41 2605.95"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-61"\n    d="M-420.94,1779.76c.75-.87,1.29-.53,1.9-.7s1.18-.07,1.77-.08c1.18,0,2.36,0,3.53.06,2.34.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.31,1.07,18.58,2.35,27.84,3.76q27.77,4.24,55.26,10t54.61,13.13c18.06,5,36,10.53,53.54,17a371.63,371.63,0,0,1,51.23,23,199,199,0,0,1,23.62,15.26,113.48,113.48,0,0,1,20.35,19.43c5.84,7.36,10.49,15.86,12.5,25.13a22,22,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.57,40.57,0,0,1-7.93,11.74c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144,144,0,0,0-21.4,17.9,74,74,0,0,0-8.66,10.86,47.1,47.1,0,0,0-5.79,12.51,38.94,38.94,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a69.36,69.36,0,0,0,1.94,13.74A103.72,103.72,0,0,0-247,2101.81,178.52,178.52,0,0,0-231.32,2125c11.55,14.67,24.73,28,38.48,40.64s28.22,24.53,43,36c29.53,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78L131.19,2387c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,107.37,107.37,0,0,1-14.67,39.81,114.49,114.49,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54A216.21,216.21,0,0,1,522.93,2939a263,263,0,0,1-49.75,26.52,294.73,294.73,0,0,1-54.08,15.89c-2.32.42-4.62.93-6.94,1.28l-7,1.12c-2.32.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28-2.91A279.42,279.42,0,0,1,252,2970.16c-17.71-6.42-34.79-14.94-50-26.32a133,133,0,0,1-20.82-19.3,95.93,95.93,0,0,1-15.38-24,67.86,67.86,0,0,1-6-28,62.14,62.14,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.18-9.21,3.54-13.74A174.44,174.44,0,0,1,190.33,2794a236.19,236.19,0,0,1,38.31-41.46,354.94,354.94,0,0,1,45.66-33.09,530.31,530.31,0,0,1,49.52-26.83c33.89-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.84,149.26-13.17,224.09-16.56,149.77-4.62,224.68-4.09c37.45.26,74.9,1.11,112.33,2.27s74.86,2.66,112.27,4.7c74.79,4.12,149.57,10.33,223.75,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.53,14c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.81,5.87,3.9c3.94,2.57,7.77,5.3,11.65,8,7.7,5.44,15.24,11.15,22.48,17.24,14.45,12.17,27.78,25.89,38.76,41.46a163.69,163.69,0,0,1,14.42,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87S2241,2917,2234,2934.6a392.67,392.67,0,0,1-24.81,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.77,74.51,3.21,111.21a407.27,407.27,0,0,0,12.57,54.29,413.89,413.89,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.7,28.74,50.84,54.56,80,77.81a693.87,693.87,0,0,0,93.07,61.92,861.41,861.41,0,0,0,101.17,47.87,1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.57a1293.66,1293.66,0,0,0,224.06.55c74.49-6.38,148.56-19.38,220.23-40.87a844,844,0,0,0,105.1-39.06,664.75,664.75,0,0,0,98-54.39l.34.49a664,664,0,0,1-97.84,55,844.69,844.69,0,0,1-105.11,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.41-148.89-19.13-221.23-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,697.34,697.34,0,0,1-93.84-62.2c-29.41-23.38-56.86-49.38-80.87-78.39a442.34,442.34,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.13-2.36-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.84-37.62,14.32-74.29,28.76-109s32.68-67.85,52.75-99.58,42.12-62.17,65-91.89c45.76-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.79,387.79,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.65a140.8,140.8,0,0,0-9.09-25.89,158.62,158.62,0,0,0-13.87-23.76c-10.6-15.05-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.06-16.95-3.83-2.64-7.62-5.34-11.51-7.9l-5.82-3.87-5.88-3.77c-15.68-10.05-31.89-19.27-48.41-27.91a772.57,772.57,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36-9.76-54.24-14c-36.4-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.56-17.39-223.24-21.6-37.36-2.08-74.74-3.61-112.15-4.83s-74.8-2.1-112.21-2.41q-112.24-.91-224.43,3.86c-74.76,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.61-70.53,24.84-104.24,40.9a523.67,523.67,0,0,0-49.2,26.58A353.11,353.11,0,0,0,231,2755.35a233.18,233.18,0,0,0-37.77,40.78,170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-.95,4.57-1.27,6.78a56.65,56.65,0,0,0-.52,6.77,64.33,64.33,0,0,0,5.71,26.52,93.28,93.28,0,0,0,14.81,23.12,129.58,129.58,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.21,1.35,18.49,2.34,27.79,2.91l7,.4c2.32.15,4.65.15,7,.23,4.66.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.34,4.57-.85,6.86-1.26A292.91,292.91,0,0,0,472,2962.59a260.79,260.79,0,0,0,49.18-26.16,212.81,212.81,0,0,0,21.94-17.16,162.54,162.54,0,0,0,19.13-20.14,110.93,110.93,0,0,0,8-11.33,101.25,101.25,0,0,0,6.48-12.22,103.57,103.57,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22a381,381,0,0,0-31.21-46.37,554,554,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.2-23.49-43-36.17s-27-26.09-38.6-40.87a179.67,179.67,0,0,1-15.73-23.35,105.06,105.06,0,0,1-10.53-26.15,72,72,0,0,1-1.95-14l-.06-1.77,0-1.77,0-1.78c0-.59.07-1.19.14-1.78a39.77,39.77,0,0,1,1.33-7,48.65,48.65,0,0,1,6-12.87,75.41,75.41,0,0,1,8.84-11,145.67,145.67,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.66,39.66,0,0,0,7.72-11.4,22.38,22.38,0,0,0,1.71-6.61,20.76,20.76,0,0,0-.47-6.8c-2-9.08-6.51-17.45-12.27-24.72a112.8,112.8,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.4-12.1-53.43-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.52-2.71-27.81-3.8-4.64-.53-9.3-1-13.95-1.4-2.33-.19-4.67-.35-7-.45-1.16,0-2.33-.08-3.49-.06-.58,0-1.16,0-1.73.07a7.21,7.21,0,0,0-1.37.23Z"\n  />\n  <polygon\n    class="cls-3"\n    points="474.19 2637.44 477.04 2636.63 480.17 2639.9 477.32 2640.69 474.19 2637.44"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-62"\n    d="M-428.94,1810.15c.76-.86,1.29-.52,1.9-.7s1.19-.06,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.1,4.68.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.83,3.76q27.77,4.24,55.27,10t54.61,13.13c18.06,5,36,10.52,53.53,17a369.91,369.91,0,0,1,51.23,23,199.15,199.15,0,0,1,23.63,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.35,10.49,15.86,12.51,25.13a22.24,22.24,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.81,40.81,0,0,1-7.92,11.74c-6.48,6.89-14.16,12.43-22,17.57s-16,9.79-24.18,14.34c-16.39,9.07-33.05,17.62-49.22,27-8.07,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.43,73.43,0,0,0-8.66,10.86A46.79,46.79,0,0,0-265.9,2079a38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a70.86,70.86,0,0,0,1.94,13.74,103.37,103.37,0,0,0,10.42,25.77,179.14,179.14,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.63s28.21,24.54,43,36c29.54,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.72,126.73,79.85,188.09,122.83,30.66,21.51,60.83,43.74,90,67.25s57.46,48.22,83.4,75.35a556.12,556.12,0,0,1,36.92,42.45,385.48,385.48,0,0,1,31.5,46.68c9.22,16.37,17.07,33.64,22.11,51.85a153.5,153.5,0,0,1,5.1,27.84,120,120,0,0,1,.4,14.19,113.88,113.88,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.9,104.9,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63A164.37,164.37,0,0,1,537.18,2952a217.29,217.29,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52,294.83,294.83,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.12c-2.33.35-4.67.61-7,.92l-3.5.46-3.51.34c-9.35,1-18.75,1.45-28.15,1.68-4.7,0-9.41.1-14.11-.09-2.35-.08-4.7-.08-7-.22l-7.05-.4c-9.38-.56-18.74-1.56-28-2.91A279.51,279.51,0,0,1,244,3000.56c-17.71-6.42-34.78-14.94-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,67.77,67.77,0,0,1-6-27.95,60,60,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59A236.57,236.57,0,0,1,220.64,2783a355.64,355.64,0,0,1,45.66-33.09,528.15,528.15,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.65-41.2,71.34-23.16,144.44-40.43,218.09-54.2s147.95-24,222.45-31.84,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.66q27.43,6.28,54.53,14c18.06,5.11,36,10.68,53.72,16.87a779.37,779.37,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.91c3.93,2.57,7.77,5.29,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.9,38.77,41.46a163.73,163.73,0,0,1,14.41,24.67,147.11,147.11,0,0,1,9.51,27c4.65,18.59,5.14,38,2.73,56.88S2233,2947.42,2226,2965a394.54,394.54,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.15-30.24,47.6-21.39,30.9-44.59,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.28,173.68-22.8,29.61-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.64-24.69,70.39-28.54,107.32c-3.44,37-2.77,74.5,3.22,111.21a406.73,406.73,0,0,0,12.56,54.28,413.49,413.49,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.13,693.13,0,0,0,93.06,61.92,862.17,862.17,0,0,0,101.17,47.87,1036.44,1036.44,0,0,0,106.18,35.68c72,20,146,32.94,220.42,39.58a1293.66,1293.66,0,0,0,224.06.54c74.49-6.37,148.55-19.38,220.23-40.86a842.3,842.3,0,0,0,105.09-39.07,663.88,663.88,0,0,0,98-54.38l.33.49a663.91,663.91,0,0,1-97.84,55,845.14,845.14,0,0,1-105.1,39.62c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.18c-74.69-6.42-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,862.46,862.46,0,0,1-101.81-47.92,699.25,699.25,0,0,1-93.84-62.2c-29.4-23.38-56.86-49.39-80.86-78.39a442.58,442.58,0,0,1-60.72-94.91,420.94,420.94,0,0,1-20.38-52.68,411.78,411.78,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.05a473.1,473.1,0,0,1,1.85-56.46c3.85-37.63,14.33-74.29,28.77-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.39,68-89.06,10.63-15.32,20.74-31,30-47.13a388.49,388.49,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.56-54.66a141.75,141.75,0,0,0-9.1-25.88,157.76,157.76,0,0,0-13.87-23.76c-10.6-15.05-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.95-3.83-2.64-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.42-73.17-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.23-.91-224.43,3.85c-74.75,3.31-149.42,8.6-223.85,16.32s-148.59,17.91-222.15,31.56-146.48,30.84-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a526.08,526.08,0,0,0-49.2,26.59A351.55,351.55,0,0,0,223,2785.75a233.5,233.5,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.57,64.57,0,0,0,5.72,26.52,92.71,92.71,0,0,0,14.81,23.12,130,130,0,0,0,20.26,18.81c14.81,11.13,31.58,19.54,49,25.88a276,276,0,0,0,54.11,13.31c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.33.14,4.66.15,7,.23,4.65.19,9.31.11,14,.1,9.3-.22,18.62-.62,27.87-1.63l3.48-.34,3.46-.45c2.31-.3,4.63-.56,6.93-.91l6.89-1.09c2.31-.35,4.58-.85,6.87-1.26A292.05,292.05,0,0,0,464,2993a259.56,259.56,0,0,0,49.18-26.15,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,112.14,112.14,0,0,0,8-11.33,101.93,101.93,0,0,0,6.47-12.22,103.17,103.17,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.23A383.68,383.68,0,0,0,519.45,2727a558.18,558.18,0,0,0-36.69-42.29c-25.79-27.05-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.14-94.37-60.94s-61.87-42.23-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.6-40.87a179.17,179.17,0,0,1-15.74-23.36,105,105,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.69,74.69,0,0,1,8.83-11.05,146.18,146.18,0,0,1,21.62-18c7.69-5.38,15.69-10.29,23.79-15,16.22-9.4,32.9-17.92,49.28-27,8.18-4.53,16.3-9.17,24.13-14.26s15.42-10.6,21.79-17.37a39.51,39.51,0,0,0,7.73-11.39,22.36,22.36,0,0,0,1.7-6.61,20.84,20.84,0,0,0-.46-6.81c-2-9.07-6.51-17.44-12.27-24.71a112.79,112.79,0,0,0-20.13-19.28,198,198,0,0,0-23.49-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.5-35.41-12.09-53.44-17.07s-36.24-9.32-54.55-13.19-36.72-7.23-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.82,6.82,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="466.19 2667.84 469.04 2667.02 472.17 2670.3 469.32 2671.09 466.19 2667.84"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-63"\n    d="M-435.74,1839.45c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a371.1,371.1,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a22.17,22.17,0,0,1,.5,7.13,24,24,0,0,1-1.78,6.94,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.22,27-8.07,4.7-16,9.6-23.68,15A144.54,144.54,0,0,0-258.25,2085a73.35,73.35,0,0,0-8.66,10.85,46.79,46.79,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.13,1.72l0,1.74,0,1.73.05,1.73a70.86,70.86,0,0,0,1.94,13.74,103.37,103.37,0,0,0,10.42,25.77,179.47,179.47,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.53,43,36c29.54,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.41,60.78l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.83,43.75,90,67.25S452,2685,477.91,2712.1a558.2,558.2,0,0,1,36.92,42.46,385.36,385.36,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a153.66,153.66,0,0,1,5.1,27.84,120,120,0,0,1,.4,14.19,113.88,113.88,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,163.68,163.68,0,0,1-19.46,20.54,217.29,217.29,0,0,1-22.24,17.43,263.65,263.65,0,0,1-49.75,26.53,295.58,295.58,0,0,1-54.09,15.88c-2.31.43-4.61.94-6.94,1.28l-7,1.12c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.34c-9.35,1-18.75,1.45-28.15,1.68-4.7,0-9.41.1-14.11-.09-2.35-.07-4.7-.08-7-.22l-7-.4c-9.39-.56-18.75-1.56-28.05-2.91a279.51,279.51,0,0,1-54.78-13.42c-17.71-6.42-34.78-14.94-49.94-26.32a133,133,0,0,1-20.83-19.29,96.55,96.55,0,0,1-15.38-24,67.85,67.85,0,0,1-6-28,60.18,60.18,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.93,236.93,0,0,1,38.31-41.46,356.6,356.6,0,0,1,45.66-33.09A530.48,530.48,0,0,1,309,2752.35c33.88-16.19,69-29.5,104.66-41.19C485,2688,558.12,2670.73,631.77,2657s148-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.45.25,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.67q27.43,6.27,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.37,779.37,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.16,22.48,17.24,14.46,12.17,27.79,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.45-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.69,70.39-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a407.23,407.23,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a692.17,692.17,0,0,0,93.06,61.92,860.56,860.56,0,0,0,101.17,47.87,1038.94,1038.94,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,663.94,663.94,0,0,0,98-54.39l.33.49a664,664,0,0,1-97.84,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.69-6.41-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5,860.88,860.88,0,0,1-101.81-47.92,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4A442.34,442.34,0,0,1,1839,3873a419.74,419.74,0,0,1-20.38-52.68,411.78,411.78,0,0,1-12.83-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.35-.25-4.71-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.28-173.88,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.14a387.86,387.86,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.56-54.65a141.58,141.58,0,0,0-9.1-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15.05-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.88-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.39-16.84s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.59-37.35-2.09-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.85,16.31S706.08,2647.36,632.52,2661,486,2691.85,414.9,2714.87c-35.51,11.62-70.54,24.84-104.24,40.9a526,526,0,0,0-49.2,26.58A353.48,353.48,0,0,0,216.23,2815a233.5,233.5,0,0,0-37.76,40.78,170.65,170.65,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-1,4.57-1.27,6.78a59,59,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52A92.53,92.53,0,0,0,169.08,2982a129.51,129.51,0,0,0,20.26,18.81c14.81,11.14,31.59,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.4c2.33.15,4.66.15,7,.23,4.65.19,9.31.11,14,.1,9.3-.22,18.62-.62,27.88-1.63l3.47-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.85,6.87-1.26a292.81,292.81,0,0,0,53.51-15.66,259.6,259.6,0,0,0,49.18-26.16A212.81,212.81,0,0,0,528.32,2979a160.39,160.39,0,0,0,19.13-20.14,111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,102.54,102.54,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.22a382.12,382.12,0,0,0-31.21-46.37A556.39,556.39,0,0,0,476,2714c-25.79-27-54-51.72-83-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.82-123L20.13,2388.8c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87A180.53,180.53,0,0,1-263,2162.21a105,105,0,0,1-10.52-26.15,71.21,71.21,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.07-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.1,74.1,0,0,1,8.83-11A145,145,0,0,1-237.61,2066c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.28-27,8.18-4.52,16.3-9.17,24.13-14.26s15.42-10.6,21.79-17.36a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72A113.14,113.14,0,0,0-142,1923.58a199.25,199.25,0,0,0-23.49-15.21,368.76,368.76,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.07-3.49-.06-.58,0-1.17,0-1.74.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="459.39 2697.14 462.25 2696.32 465.37 2699.59 462.52 2700.38 459.39 2697.14"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-64"\n    d="M-444,1870.94c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.08c1.17,0,2.35,0,3.52.07,2.34.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.83,3.76q27.76,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a371.1,371.1,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,113.75,113.75,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.62,21.62,0,0,1,.5,7.13,23.57,23.57,0,0,1-1.77,6.93,40.57,40.57,0,0,1-7.93,11.74c-6.47,6.9-14.16,12.43-22,17.58s-16,9.79-24.19,14.33c-16.38,9.07-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a143.33,143.33,0,0,0-21.39,17.91,72.71,72.71,0,0,0-8.66,10.85,47.13,47.13,0,0,0-5.8,12.51,38.91,38.91,0,0,0-1.27,6.76c-.06.57-.08,1.15-.13,1.72l0,1.73,0,1.74.06,1.73a70.1,70.1,0,0,0,1.94,13.74A103.37,103.37,0,0,0-270,2193a178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.53,43,36c29.54,22.95,60.29,44.31,91.42,65.07s62.72,40.85,94.4,60.78l95.24,59.52C171.64,2517.89,234.91,2558,296.27,2601c30.65,21.52,60.83,43.75,90,67.25s57.46,48.22,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.36,385.36,0,0,1,31.5,46.67c9.22,16.38,17.06,33.64,22.11,51.85a152.78,152.78,0,0,1,5.09,27.84,118,118,0,0,1,.41,14.19,115.83,115.83,0,0,1-1.26,14.16,106.48,106.48,0,0,1-8,27.23,104.15,104.15,0,0,1-6.65,12.58,114.49,114.49,0,0,1-8.16,11.63,164.41,164.41,0,0,1-19.46,20.54,218.39,218.39,0,0,1-22.24,17.43,263.74,263.74,0,0,1-49.76,26.53,295.25,295.25,0,0,1-54.08,15.88c-2.31.43-4.61.94-6.94,1.28l-7,1.12c-2.32.36-4.66.61-7,.93l-3.5.45-3.51.34c-9.35,1-18.76,1.45-28.15,1.68-4.71,0-9.41.1-14.11-.09-2.35-.07-4.7-.08-7.05-.22l-7-.4c-9.38-.56-18.74-1.56-28.05-2.91A279.59,279.59,0,0,1,229,3061.34c-17.71-6.42-34.79-14.94-49.94-26.32a132.6,132.6,0,0,1-20.83-19.29,96.27,96.27,0,0,1-15.38-24,67.85,67.85,0,0,1-6-28,60.17,60.17,0,0,1,.54-7.22c.35-2.42.84-4.69,1.31-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,236.93,236.93,0,0,1,38.31-41.46,355.9,355.9,0,0,1,45.66-33.09,531.58,531.58,0,0,1,49.52-26.83c33.89-16.19,69.05-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s148-24,222.46-31.84,149.26-13.17,224.1-16.56,149.76-4.62,224.67-4.08c37.45.25,74.91,1.1,112.34,2.26s74.85,2.66,112.26,4.7c74.79,4.12,149.57,10.33,223.76,21.37,37.08,5.5,74,12.26,110.57,20.67q27.43,6.27,54.53,13.95c18,5.12,36,10.69,53.72,16.87a779.24,779.24,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.11l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.24,14.45,12.17,27.78,25.89,38.77,41.46a163.63,163.63,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.8a393.91,393.91,0,0,1-24.8,50.82c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.36,58.07-96.64,114.45-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,413.89,413.89,0,0,0,20,52,437.42,437.42,0,0,0,59.83,93.88c23.7,28.74,50.85,54.56,80,77.81a692.91,692.91,0,0,0,93.07,61.92,859.81,859.81,0,0,0,101.17,47.87,1038.94,1038.94,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a845.62,845.62,0,0,0,105.1-39.07,664.75,664.75,0,0,0,98-54.39l.34.49a664.48,664.48,0,0,1-97.84,55,845.09,845.09,0,0,1-105.1,39.61c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.18c-74.69-6.41-148.9-19.13-221.24-39a1039.55,1039.55,0,0,1-106.74-35.5A860.88,860.88,0,0,1,2066.22,4140a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.86-78.4a442.38,442.38,0,0,1-60.73-94.91,419.69,419.69,0,0,1-20.37-52.68,413.37,413.37,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.35-.25-4.71-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.58,42.12-62.17,65-91.89c45.76-59.44,95.05-115.9,142.29-173.88,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a389.16,389.16,0,0,0,24.46-50c6.79-17.22,12-35.09,14.42-53.35s1.87-36.86-2.57-54.65a140.8,140.8,0,0,0-9.09-25.89,157.76,157.76,0,0,0-13.87-23.76c-10.6-15-23.56-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.63-5.35-11.52-7.91l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.73-73.94-11.09-148.55-17.39-223.24-21.59-37.35-2.09-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.62,53.86c-35.51,11.62-70.54,24.84-104.24,40.9a527.42,527.42,0,0,0-49.21,26.58A354.08,354.08,0,0,0,208,2846.53a233.56,233.56,0,0,0-37.77,40.78,170.87,170.87,0,0,0-24.65,49.53c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.26-1,4.57-1.27,6.78a59,59,0,0,0-.52,6.77,64.18,64.18,0,0,0,5.72,26.52,92.77,92.77,0,0,0,14.8,23.12,130,130,0,0,0,20.27,18.81c14.81,11.13,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.33.15,4.66.15,7,.23,4.66.19,9.32.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.85,6.87-1.26A293,293,0,0,0,449,3053.77a260.21,260.21,0,0,0,49.18-26.16,212.81,212.81,0,0,0,21.94-17.16,161.07,161.07,0,0,0,19.13-20.14,111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.45,103.45,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.77-51.22a383.28,383.28,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.72-83.05-75.23s-59.2-45.74-89.8-67.27c-61.24-43-124.43-83.21-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.43-65.27c-14.77-11.53-29.21-23.49-43-36.17s-27-26.09-38.6-40.86a180.46,180.46,0,0,1-15.73-23.36,105.06,105.06,0,0,1-10.53-26.15,72,72,0,0,1-2-14l-.06-1.78,0-1.77,0-1.78c0-.59.06-1.19.13-1.78a39.77,39.77,0,0,1,1.33-7,48.68,48.68,0,0,1,6-12.87,74.1,74.1,0,0,1,8.83-11,144.46,144.46,0,0,1,21.62-18.05c7.69-5.39,15.69-10.3,23.79-15,16.22-9.39,32.9-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.8-17.36a39.69,39.69,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.5-17.45-12.26-24.72a113.2,113.2,0,0,0-20.14-19.28,199.13,199.13,0,0,0-23.48-15.21,369.29,369.29,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.2-36.72-7.23-55.21-10.08c-9.25-1.42-18.51-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.41-2.33-.19-4.66-.35-7-.45-1.17,0-2.34-.07-3.5-.06-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="451.17 2728.63 454.02 2727.81 457.15 2731.08 454.3 2731.87 451.17 2728.63"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-65"\n    d="M-452,1901.34c.76-.87,1.29-.53,1.91-.71s1.18-.06,1.77-.07c1.18,0,2.35,0,3.52.06,2.35.1,4.69.26,7,.44,4.67.38,9.33.86,14,1.39,9.3,1.07,18.58,2.35,27.84,3.76q27.76,4.24,55.26,10t54.61,13.13c18.06,5,36,10.53,53.53,17a371.22,371.22,0,0,1,51.24,23,199.85,199.85,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.13a22.26,22.26,0,0,1,.5,7.14,23.66,23.66,0,0,1-1.78,6.93A40.68,40.68,0,0,1-134,2055c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.07-33,17.62-49.21,27-8.08,4.7-16.05,9.6-23.68,15a143.44,143.44,0,0,0-21.4,17.9,74,74,0,0,0-8.66,10.86,47.1,47.1,0,0,0-5.79,12.51,38,38,0,0,0-1.28,6.76c-.06.57-.08,1.15-.12,1.72l0,1.73,0,1.74.06,1.73a70.09,70.09,0,0,0,1.93,13.74A104.13,104.13,0,0,0-278,2223.39a178.52,178.52,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.48,40.63s28.22,24.54,43,36c29.54,22.95,60.3,44.31,91.42,65.07S-26.73,2429.11,5,2449l95.23,59.52c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.51,60.84,43.74,90,67.25s57.47,48.22,83.4,75.35a558.62,558.62,0,0,1,36.93,42.46,384.58,384.58,0,0,1,31.5,46.67c9.21,16.37,17.06,33.64,22.11,51.85a152.63,152.63,0,0,1,5.09,27.84,120,120,0,0,1,.41,14.19,113.9,113.9,0,0,1-1.27,14.16,106.08,106.08,0,0,1-8,27.23,104.83,104.83,0,0,1-6.64,12.58,117.76,117.76,0,0,1-8.16,11.63,165.19,165.19,0,0,1-19.47,20.54,217.29,217.29,0,0,1-22.24,17.43,263,263,0,0,1-49.75,26.52A294.6,294.6,0,0,1,388.08,3103c-2.31.42-4.61.93-6.93,1.28l-7,1.12c-2.33.35-4.66.61-7,.93l-3.5.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.4.1-14.1-.09-2.35-.08-4.71-.08-7.05-.22l-7-.4c-9.39-.56-18.74-1.56-28.05-2.91A279.69,279.69,0,0,1,221,3091.74c-17.7-6.42-34.78-14.94-49.94-26.32a132.6,132.6,0,0,1-20.82-19.3,95.8,95.8,0,0,1-15.38-24,67.78,67.78,0,0,1-6-27.95,60,60,0,0,1,.55-7.22c.35-2.42.84-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,237,237,0,0,1,38.31-41.46,356.34,356.34,0,0,1,45.66-33.09,531.74,531.74,0,0,1,49.53-26.83c33.88-16.19,69-29.5,104.66-41.2,71.34-23.16,144.44-40.42,218.08-54.2s148-24,222.45-31.84,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.46.26,74.91,1.11,112.34,2.27s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.5,74,12.26,110.58,20.66q27.42,6.29,54.52,14c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.95,3.8,5.87,3.91c3.94,2.57,7.77,5.3,11.64,8,7.71,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.9,38.77,41.47a163.14,163.14,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.83,37.22-14.76,54.8a392.61,392.61,0,0,1-24.8,50.82c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.4-68.24,89.46-47.37,58.08-96.64,114.46-142.27,173.69-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.32,98.63-24.7,70.39-28.54,107.32c-3.45,37-2.78,74.51,3.21,111.21a406.76,406.76,0,0,0,12.57,54.28,413.44,413.44,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.74,50.84,54.56,80,77.81a693.76,693.76,0,0,0,93.06,61.92,862.31,862.31,0,0,0,101.18,47.87,1038.76,1038.76,0,0,0,106.17,35.69c72,20,146,32.94,220.42,39.57a1293.66,1293.66,0,0,0,224.06.55c74.49-6.38,148.55-19.38,220.23-40.87A843.24,843.24,0,0,0,3037.69,4210a664.35,664.35,0,0,0,98-54.39l.34.49a663.61,663.61,0,0,1-97.85,55,844,844,0,0,1-105.1,39.62c-71.71,21.84-145.86,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.18c-74.68-6.42-148.89-19.13-221.24-39a1038.57,1038.57,0,0,1-106.73-35.5,861.76,861.76,0,0,1-101.82-47.92,696.6,696.6,0,0,1-93.83-62.2c-29.41-23.38-56.87-49.38-80.87-78.39a442.58,442.58,0,0,1-60.72-94.91,418.16,418.16,0,0,1-20.37-52.68,411.82,411.82,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.67-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7c-.12-2.36-.24-4.71-.27-7.06a473.1,473.1,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.58,42.11-62.17,65-91.89c45.75-59.44,95-115.9,142.29-173.88,23.57-29,46.73-58.38,68-89.05,10.63-15.33,20.75-31,30-47.14a387.19,387.19,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.35s1.87-36.86-2.57-54.66a141.75,141.75,0,0,0-9.1-25.88,157.71,157.71,0,0,0-13.86-23.76c-10.61-15.05-23.56-28.43-37.71-40.36-7.09-6-14.47-11.58-22.05-16.95-3.83-2.64-7.62-5.34-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.27-48.41-27.91a773.14,773.14,0,0,0-102.77-44c-17.61-6.17-35.43-11.73-53.38-16.84s-36-9.76-54.25-14c-36.39-8.42-73.16-15.19-110.13-20.73-73.93-11.09-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.83s-74.8-2.1-112.22-2.41q-112.23-.91-224.43,3.86c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.15,31.56-146.49,30.84-217.63,53.86c-35.51,11.61-70.54,24.84-104.24,40.89a526.08,526.08,0,0,0-49.2,26.59A353.11,353.11,0,0,0,200,2876.93a233.18,233.18,0,0,0-37.77,40.78,170.5,170.5,0,0,0-24.65,49.53c-1.34,4.43-2.53,8.91-3.48,13.44-.45,2.26-.94,4.57-1.27,6.78a56.64,56.64,0,0,0-.51,6.77,64.4,64.4,0,0,0,5.71,26.52,93,93,0,0,0,14.81,23.12,129.61,129.61,0,0,0,20.27,18.81c14.8,11.13,31.58,19.54,49,25.88a276,276,0,0,0,54.11,13.31c9.21,1.35,18.48,2.34,27.78,2.91l7,.4c2.32.15,4.65.15,7,.23,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.57,6.92-.92l6.9-1.09c2.3-.35,4.57-.85,6.86-1.26A293.14,293.14,0,0,0,441,3084.17,260.79,260.79,0,0,0,490.17,3058a212.69,212.69,0,0,0,21.93-17.16,161.89,161.89,0,0,0,19.14-20.14,113.67,113.67,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103.19,103.19,0,0,0,7.84-26.46c2.84-18.28.84-37.1-4.09-55s-12.67-35-21.78-51.22a381,381,0,0,0-31.21-46.37,556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.74-89.8-67.27c-61.25-43-124.43-83.21-187.83-123L3.91,2450.69c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.5-43-36.17s-27-26.09-38.6-40.87a180.75,180.75,0,0,1-15.74-23.35A105.18,105.18,0,0,1-289.77,2198a71.21,71.21,0,0,1-2-14l0-1.77,0-1.77,0-1.78c.05-.59.07-1.19.13-1.78a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,74.11,74.11,0,0,1,8.84-11,146.1,146.1,0,0,1,21.61-18.05c7.69-5.38,15.69-10.29,23.8-15,16.22-9.4,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.26s15.43-10.6,21.79-17.36a39.69,39.69,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.12,21.12,0,0,0-.47-6.81c-2-9.07-6.51-17.44-12.27-24.71a112.79,112.79,0,0,0-20.13-19.28,199.25,199.25,0,0,0-23.49-15.21,368.23,368.23,0,0,0-51.07-23c-17.53-6.51-35.41-12.1-53.44-17.08s-36.24-9.32-54.54-13.19-36.72-7.23-55.22-10.08c-9.24-1.42-18.51-2.71-27.8-3.8-4.65-.53-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.16,0-2.33-.08-3.49-.06-.58,0-1.16,0-1.73.06a7.66,7.66,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="443.18 2759.02 446.03 2758.2 449.15 2761.48 446.3 2762.27 443.18 2759.02"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-66"\n    d="M-459.93,1931.23c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.35,27.83,3.75q27.76,4.25,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26A114.1,114.1,0,0,1-145.29,2034c5.84,7.36,10.49,15.86,12.51,25.14a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.07,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,72.92,72.92,0,0,0-8.66,10.86,46.87,46.87,0,0,0-5.79,12.5,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a71,71,0,0,0,1.94,13.74,103.3,103.3,0,0,0,10.42,25.76,178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08S-34.71,2459-3,2478.94l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63A163.72,163.72,0,0,1,506.19,3073,216,216,0,0,1,484,3090.47,263.92,263.92,0,0,1,434.2,3117a295.61,295.61,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7.05-.23l-7-.4c-9.38-.56-18.74-1.55-28.05-2.91A280.28,280.28,0,0,1,213,3121.64c-17.71-6.42-34.78-14.95-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.41.84-4.69,1.31-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59,236.63,236.63,0,0,1,38.31-41.47A356.53,356.53,0,0,1,235.31,2871a526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69.05-29.51,104.66-41.2,71.34-23.17,144.44-40.43,218.09-54.21s147.95-24,222.45-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.28,54.53,13.95c18.06,5.12,36,10.69,53.72,16.88a778.62,778.62,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.24,47.6-21.39,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.65,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.63-24.7,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.14,437.14,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a693,693,0,0,0,93.07,61.93A860.5,860.5,0,0,0,2153.74,4244a1034.08,1034.08,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.22-40.86a844,844,0,0,0,105.1-39.07,662.42,662.42,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.21-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,420.48,420.48,0,0,1-20.38-52.69,411.06,411.06,0,0,1-12.83-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a387.73,387.73,0,0,0,24.46-50c6.79-17.23,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.28-48.41-27.91a772.39,772.39,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.76-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.09-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.48,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59A351.55,351.55,0,0,0,192,2906.83a232.77,232.77,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.25-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.23,4.65.18,9.31.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.93-.91l6.89-1.1c2.3-.34,4.58-.84,6.87-1.26A291.24,291.24,0,0,0,433,3114.06a259.86,259.86,0,0,0,49.18-26.15,214.19,214.19,0,0,0,21.94-17.16,160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23A382.9,382.9,0,0,0,488.46,2848a556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23s-59.2-45.73-89.8-67.26c-61.24-43-124.43-83.22-187.82-123l-95.16-59.65c-31.67-20-63.22-40.13-94.37-60.93s-61.87-42.24-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.59-40.87A180.53,180.53,0,0,1-287.22,2254a105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.78a39.71,39.71,0,0,1,1.33-7,48.47,48.47,0,0,1,6-12.86,74.18,74.18,0,0,1,8.83-11,145.57,145.57,0,0,1,21.62-18.05c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.91,49.27-26.95,8.19-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.8,20.8,0,0,0-.46-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.44,112.44,0,0,0-20.13-19.28,198.81,198.81,0,0,0-23.49-15.21,370.53,370.53,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17-.05-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.4,6.4,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="435.2 2788.92 438.05 2788.1 441.18 2791.38 438.33 2792.16 435.2 2788.92"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-67"\n    d="M-468.15,1962.72c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.09,4.68.25,7,.44,4.67.37,9.32.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.76,4.25,55.26,10c18.33,3.85,36.56,8.18,54.62,13.13s35.95,10.53,53.53,17a370.39,370.39,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.66,40.66,0,0,1-7.93,11.73c-6.47,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.42,73.42,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,39,39,0,0,0-1.27,6.77c-.06.57-.09,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a69.26,69.26,0,0,0,1.94,13.73,103.57,103.57,0,0,0,10.41,25.77,179.54,179.54,0,0,0,15.64,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08s62.72,40.85,94.4,60.78L84,2570c63.46,39.72,126.73,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,105.87,105.87,0,0,1-8,27.24,103.29,103.29,0,0,1-6.64,12.57,112.3,112.3,0,0,1-8.16,11.63A163.76,163.76,0,0,1,498,3104.52,215.88,215.88,0,0,1,475.73,3122,264,264,0,0,1,426,3148.48a295.51,295.51,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7.05-.23l-7-.4c-9.38-.56-18.74-1.55-28.05-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.2,3.53-13.73A174.19,174.19,0,0,1,143.12,2977a236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08,526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69.05-29.51,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.1,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.75,21.37,37.09,5.51,74,12.26,110.58,20.67q27.43,6.28,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.64,18.58,5.13,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.7,28.74,50.85,54.55,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1034.72,1034.72,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.84-145.87,35.2-220.5,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.68-6.42-148.89-19.14-221.23-39a1042,1042,0,0,1-106.74-35.5A860.94,860.94,0,0,1,2042,4231.77a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.86-78.4a441.93,441.93,0,0,1-60.73-94.9,420.43,420.43,0,0,1-20.37-52.69,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89.05,10.62-15.33,20.74-31,30-47.14a387.16,387.16,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.87-5.87-3.77c-15.69-10-31.9-19.28-48.42-27.91a771.7,771.7,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.81-2.09-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.62,53.85C347,2849.76,312,2863,278.24,2879a526.27,526.27,0,0,0-49.2,26.59,352.15,352.15,0,0,0-45.22,32.69,233.12,233.12,0,0,0-37.77,40.77,170.93,170.93,0,0,0-24.65,49.54c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.25-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.59,92.59,0,0,0,14.8,23.12,129.1,129.1,0,0,0,20.27,18.81c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.23,4.66.18,9.32.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66A260.17,260.17,0,0,0,474,3119.4a214.19,214.19,0,0,0,21.94-17.16A161.19,161.19,0,0,0,515,3082.09a111.49,111.49,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.26c-61.24-43-124.43-83.22-187.83-123l-95.15-59.65c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36A105.14,105.14,0,0,1-306,2259.34a72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.6.06-1.19.13-1.78a39.71,39.71,0,0,1,1.33-7,48.16,48.16,0,0,1,6-12.86,74.18,74.18,0,0,1,8.83-11.05A145.06,145.06,0,0,1-270,2189.24c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-26.95,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.26-24.71a112.5,112.5,0,0,0-20.14-19.28,200,200,0,0,0-23.48-15.22,371.67,371.67,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-14-1.4-2.33-.19-4.66-.36-7-.45-1.16,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="426.98 2820.41 429.83 2819.59 432.96 2822.86 430.11 2823.65 426.98 2820.41"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-68"\n    d="M-476.15,1993.12c.76-.86,1.29-.53,1.91-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.84,3.76q27.75,4.24,55.26,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a370,370,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.11,144.11,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.12,1.71l0,1.74,0,1.73.06,1.74a70,70,0,0,0,1.93,13.73,103.37,103.37,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.21,24.54,43,36c29.54,23,60.3,44.31,91.42,65.07s62.72,40.85,94.41,60.78L76,2600.34c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.47,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,385.06,385.06,0,0,1,31.51,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,122.1,122.1,0,0,1,.41,14.19,115.86,115.86,0,0,1-1.27,14.15,106.08,106.08,0,0,1-8,27.23,102.75,102.75,0,0,1-6.65,12.58,116,116,0,0,1-8.15,11.63A164.49,164.49,0,0,1,490,3134.92a215.91,215.91,0,0,1-22.24,17.43A263.08,263.08,0,0,1,418,3178.88a296.4,296.4,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.49.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.41.1-14.1-.08-2.35-.08-4.71-.09-7.05-.23l-7-.4c-9.39-.56-18.74-1.56-28-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32A132.56,132.56,0,0,1,126,3137.91a96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,237.31,237.31,0,0,1,38.31-41.46,356.26,356.26,0,0,1,45.66-33.08A529.5,529.5,0,0,1,268.62,2906c33.88-16.19,69-29.5,104.66-41.19,71.34-23.17,144.43-40.43,218.08-54.21s147.95-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.46.26,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18.06,5.12,36,10.69,53.72,16.87a779.37,779.37,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a393.12,393.12,0,0,1-24.8,50.81c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.7,91.4s-38,64.26-52.33,98.63-24.69,70.39-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.23,407.23,0,0,0,12.56,54.29,414.9,414.9,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.75,50.84,54.56,80,77.81a692.87,692.87,0,0,0,93.06,61.93,862.86,862.86,0,0,0,101.17,47.86,1037.32,1037.32,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,663.94,663.94,0,0,0,98-54.39l.34.5a665.44,665.44,0,0,1-97.85,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1044.43,1044.43,0,0,1-106.74-35.5A863.28,863.28,0,0,1,2034,4262.17a698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.35-.24-4.7-.27-7.06a471.08,471.08,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.34s1.86-36.87-2.57-54.66a141.58,141.58,0,0,0-9.1-25.89,156.92,156.92,0,0,0-13.87-23.76c-10.6-15.05-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9L2085,2919l-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.16-35.43-11.72-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.41-73.16-15.19-110.13-20.72-73.94-11.1-148.55-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31s-148.6,17.91-222.16,31.56-146.48,30.84-217.62,53.86c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59,352.34,352.34,0,0,0-45.22,32.68,233.18,233.18,0,0,0-37.77,40.78A171,171,0,0,0,113.4,3059c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78a59.15,59.15,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.81,92.81,0,0,0,14.81,23.12,128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.32.14,4.65.14,7,.22,4.65.19,9.31.11,14,.1,9.3-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.89-1.1c2.31-.34,4.58-.85,6.87-1.26A293.14,293.14,0,0,0,416.8,3176,260.21,260.21,0,0,0,466,3149.79a212.69,212.69,0,0,0,21.93-17.16A160.39,160.39,0,0,0,507,3112.49a111,111,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,102.54,102.54,0,0,0,7.83-26.46c2.84-18.28.84-37.1-4.09-55s-12.66-35-21.77-51.22a381,381,0,0,0-31.21-46.37,556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.73-89.81-67.27c-61.24-43-124.42-83.21-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87a180.53,180.53,0,0,1-15.74-23.36A105,105,0,0,1-314,2289.73a71.21,71.21,0,0,1-2-14l-.05-1.78,0-1.77,0-1.77c.05-.6.07-1.19.13-1.79a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,73.53,73.53,0,0,1,8.84-11A145.49,145.49,0,0,1-278,2219.64c7.69-5.39,15.69-10.3,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28A199.25,199.25,0,0,0-205.95,2062,369.94,369.94,0,0,0-257,2039c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.54-13.19-36.72-7.24-55.22-10.09c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="418.99 2850.81 421.84 2849.99 424.96 2853.26 422.11 2854.05 418.99 2850.81"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-69"\n    d="M-483.95,2023.17c.76-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.18,0,2.35,0,3.52.06,2.35.09,4.68.25,7,.44,4.67.37,9.33.85,14,1.39,9.3,1.07,18.58,2.35,27.83,3.75q27.76,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a369.86,369.86,0,0,1,51.23,23,200.41,200.41,0,0,1,23.63,15.26,114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.51,25.14a21.93,21.93,0,0,1,.49,7.14,23.65,23.65,0,0,1-1.77,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.44-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.22,27-8.07,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.35,73.35,0,0,0-8.66,10.85,46.93,46.93,0,0,0-5.79,12.51,38.13,38.13,0,0,0-1.28,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a70.76,70.76,0,0,0,1.94,13.73A103.22,103.22,0,0,0-310,2345.22a178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08S-58.73,2551-27,2570.88l95.23,59.52c63.46,39.72,126.73,79.84,188.09,122.83,30.66,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.22,16.38,17.07,33.65,22.11,51.85a153.61,153.61,0,0,1,5.1,27.85,119.92,119.92,0,0,1,.4,14.19,113.72,113.72,0,0,1-1.26,14.15,106.67,106.67,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63A163,163,0,0,1,482.17,3165a216,216,0,0,1-22.24,17.44,263.61,263.61,0,0,1-49.75,26.52,295.61,295.61,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.67.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.75,1.44-28.15,1.67-4.7,0-9.41.1-14.11-.08-2.35-.08-4.7-.08-7-.23l-7.05-.4c-9.38-.56-18.74-1.55-28-2.91A280.2,280.2,0,0,1,189,3213.58c-17.71-6.42-34.78-14.95-49.94-26.32a133.11,133.11,0,0,1-20.83-19.3,96.55,96.55,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.36-2.41.84-4.69,1.31-7,1-4.63,2.17-9.2,3.53-13.73a174.19,174.19,0,0,1,25.11-50.59A236.63,236.63,0,0,1,165.63,2996a356.53,356.53,0,0,1,45.66-33.08,525.85,525.85,0,0,1,49.53-26.83c33.88-16.19,69-29.51,104.65-41.2,71.34-23.17,144.44-40.43,218.09-54.21s148-24,222.45-31.83,149.27-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.11,112.34,2.26s74.86,2.67,112.26,4.7c74.8,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,13.95c18.06,5.12,36,10.69,53.72,16.88a778.62,778.62,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.1l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87S2178,3160.44,2171,3178a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.24,47.6-21.39,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.28,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.63-24.7,70.4-28.54,107.32c-3.44,37-2.77,74.51,3.22,111.21a405.33,405.33,0,0,0,12.56,54.29,414.08,414.08,0,0,0,20,52,437.14,437.14,0,0,0,59.83,93.88c23.69,28.74,50.84,54.55,80,77.8a692.24,692.24,0,0,0,93.06,61.93,860.5,860.5,0,0,0,101.17,47.86,1034.08,1034.08,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a843.89,843.89,0,0,0,105.09-39.07,662.42,662.42,0,0,0,98-54.39l.34.5a664.42,664.42,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1294.91,1294.91,0,0,1-224.6.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5,860.94,860.94,0,0,1-101.81-47.93,698.23,698.23,0,0,1-93.84-62.19c-29.4-23.39-56.86-49.39-80.86-78.4a442.27,442.27,0,0,1-60.72-94.9,420.48,420.48,0,0,1-20.38-52.69,411.06,411.06,0,0,1-12.83-55c-.84-4.63-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a473.16,473.16,0,0,1,1.85-56.46c3.85-37.62,14.33-74.29,28.77-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.28-173.89,23.57-29,46.74-58.38,68-89.05,10.63-15.33,20.74-31,30-47.14a387.73,387.73,0,0,0,24.46-50c6.79-17.23,12-35.09,14.42-53.35s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15-23.55-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.77c-15.69-10.05-31.9-19.28-48.41-27.91a772.39,772.39,0,0,0-102.77-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.76-54.24-13.95c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.55-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.09-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.31-149.42,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.48,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9a523.76,523.76,0,0,0-49.2,26.59A351.55,351.55,0,0,0,168,2998.77a232.77,232.77,0,0,0-37.76,40.78,170.52,170.52,0,0,0-24.66,49.53c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.25-.95,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.49,64.49,0,0,0,5.72,26.51,92.35,92.35,0,0,0,14.81,23.12,129,129,0,0,0,20.26,18.81c14.81,11.14,31.58,19.54,49,25.89a276.55,276.55,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.33.14,4.66.14,7,.23,4.65.18,9.31.1,14,.09,9.31-.21,18.63-.61,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.63-.56,6.93-.91l6.89-1.1c2.31-.34,4.58-.84,6.87-1.26A291.24,291.24,0,0,0,409,3206a259.56,259.56,0,0,0,49.18-26.15,214.19,214.19,0,0,0,21.94-17.16,160.47,160.47,0,0,0,19.13-20.15,109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.66-35-21.77-51.23A382.9,382.9,0,0,0,464.44,2940a556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83.05-75.23s-59.2-45.73-89.8-67.26c-61.24-43-124.43-83.22-187.82-123l-95.16-59.65c-31.66-20-63.22-40.13-94.37-60.93s-61.87-42.24-91.43-65.27c-14.77-11.52-29.21-23.49-43-36.16s-27-26.09-38.59-40.87a180.53,180.53,0,0,1-15.74-23.36,105.11,105.11,0,0,1-10.52-26.14,71.21,71.21,0,0,1-2-14l-.06-1.77,0-1.78,0-1.77c0-.6.07-1.19.13-1.78a39.71,39.71,0,0,1,1.33-7,48.47,48.47,0,0,1,6-12.86,74.18,74.18,0,0,1,8.83-11.05,145.57,145.57,0,0,1,21.62-18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.91,49.27-27,8.19-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.36,22.36,0,0,0,1.7-6.61,20.8,20.8,0,0,0-.46-6.8c-2-9.08-6.51-17.44-12.27-24.71a112.44,112.44,0,0,0-20.13-19.28,200.16,200.16,0,0,0-23.49-15.22,371.67,371.67,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.4-2.33-.19-4.66-.35-7-.45-1.17,0-2.33-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.14,6.14,0,0,0-1.36.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="411.18 2880.86 414.03 2880.04 417.16 2883.32 414.31 2884.1 411.18 2880.86"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-70"\n    d="M-492.17,2054.66c.75-.86,1.29-.53,1.9-.7s1.19-.07,1.78-.07c1.17,0,2.35,0,3.52.06,2.34.09,4.68.25,7,.44,4.67.37,9.32.85,14,1.39,9.3,1.07,18.58,2.34,27.83,3.75q27.76,4.24,55.27,10c18.32,3.85,36.55,8.18,54.61,13.13s35.95,10.53,53.53,17a370.39,370.39,0,0,1,51.23,23A200.41,200.41,0,0,1-197.87,2138a114.1,114.1,0,0,1,20.34,19.43c5.84,7.36,10.49,15.86,12.5,25.14a21.94,21.94,0,0,1,.5,7.14,23.65,23.65,0,0,1-1.77,6.93,40.66,40.66,0,0,1-7.93,11.73c-6.47,6.9-14.16,12.44-22,17.58s-16,9.79-24.19,14.33c-16.38,9.08-33,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.54,144.54,0,0,0-21.39,17.91,73.42,73.42,0,0,0-8.67,10.85,47.41,47.41,0,0,0-5.79,12.51,39,39,0,0,0-1.27,6.77c-.06.57-.08,1.14-.13,1.71l0,1.74,0,1.73.06,1.74a69.26,69.26,0,0,0,1.94,13.73,103.22,103.22,0,0,0,10.42,25.77,178.45,178.45,0,0,0,15.63,23.14c11.55,14.67,24.73,28,38.49,40.64s28.21,24.54,43,36c29.54,23,60.29,44.31,91.42,65.08s62.72,40.85,94.4,60.78L60,2661.89c63.46,39.72,126.73,79.84,188.09,122.83,30.65,21.51,60.83,43.74,90,67.24s57.46,48.23,83.4,75.35a558.2,558.2,0,0,1,36.92,42.46,386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,117.83,117.83,0,0,1,.41,14.19,113.74,113.74,0,0,1-1.27,14.15,106.25,106.25,0,0,1-8,27.24,104.77,104.77,0,0,1-6.65,12.57,112.3,112.3,0,0,1-8.16,11.63,163.76,163.76,0,0,1-19.47,20.54,215.88,215.88,0,0,1-22.23,17.44A263.69,263.69,0,0,1,402,3240.42a296.07,296.07,0,0,1-54.08,15.89c-2.32.42-4.61.93-6.94,1.28l-7,1.11c-2.32.36-4.66.62-7,.93l-3.5.45-3.51.35c-9.35,1-18.76,1.44-28.16,1.67-4.7,0-9.4.1-14.1-.08-2.35-.08-4.7-.08-7.05-.23l-7-.4c-9.38-.56-18.74-1.55-28.05-2.91a280.28,280.28,0,0,1-54.77-13.41c-17.71-6.43-34.79-15-49.94-26.32a132.66,132.66,0,0,1-20.83-19.3,96.27,96.27,0,0,1-15.38-24,67.82,67.82,0,0,1-6-28,60.32,60.32,0,0,1,.54-7.22c.35-2.41.84-4.69,1.31-7,1-4.63,2.17-9.2,3.53-13.73A174.19,174.19,0,0,1,119.1,3069a236.25,236.25,0,0,1,38.31-41.47,355.83,355.83,0,0,1,45.66-33.08,526.93,526.93,0,0,1,49.52-26.83c33.89-16.19,69-29.51,104.66-41.2,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.46-31.83,149.26-13.18,224.1-16.56,149.76-4.62,224.67-4.09c37.45.26,74.91,1.1,112.34,2.26s74.85,2.67,112.26,4.7c74.79,4.12,149.57,10.34,223.76,21.37,37.08,5.51,74,12.26,110.57,20.67q27.43,6.29,54.53,14c18,5.12,36,10.69,53.72,16.88a777.93,777.93,0,0,1,103.58,44.2c16.67,8.69,33,18,48.89,28.1l5.94,3.8,5.88,3.9c3.93,2.57,7.77,5.3,11.64,8,7.7,5.44,15.24,11.15,22.48,17.23,14.45,12.18,27.78,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,147.21,147.21,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a394.42,394.42,0,0,1-24.8,50.81c-9.36,16.34-19.56,32.16-30.25,47.6-21.38,30.9-44.58,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.8,29.6-44.72,59.89-64.71,91.4s-38,64.27-52.32,98.63-24.7,70.4-28.54,107.32c-3.45,37-2.77,74.51,3.22,111.21a405.68,405.68,0,0,0,12.56,54.29,414,414,0,0,0,20,52,437.52,437.52,0,0,0,59.83,93.88c23.7,28.74,50.85,54.55,80,77.8a693,693,0,0,0,93.07,61.93,859.74,859.74,0,0,0,101.17,47.86,1034.72,1034.72,0,0,0,106.17,35.69c72,20,146,32.94,220.43,39.58a1294.54,1294.54,0,0,0,224.05.54c74.49-6.38,148.56-19.38,220.23-40.86a844,844,0,0,0,105.1-39.07,662.92,662.92,0,0,0,98-54.39l.34.5a664.93,664.93,0,0,1-97.84,55,843.51,843.51,0,0,1-105.1,39.61c-71.72,21.84-145.87,35.2-220.5,41.93a1294.79,1294.79,0,0,1-224.59.19c-74.69-6.42-148.9-19.14-221.24-39a1042,1042,0,0,1-106.74-35.5A860.94,860.94,0,0,1,2018,4323.71a698.23,698.23,0,0,1-93.84-62.19c-29.41-23.39-56.86-49.39-80.86-78.4a442.31,442.31,0,0,1-60.73-94.9,420.43,420.43,0,0,1-20.37-52.69,413,413,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.55-4.68-.82-7l-.75-7c-.38-4.7-.78-9.39-1.08-14.09l-.35-7.06c-.12-2.35-.25-4.7-.27-7.06a471.08,471.08,0,0,1,1.85-56.46c3.85-37.62,14.32-74.29,28.77-109s32.67-67.85,52.74-99.57,42.12-62.18,65-91.89c45.76-59.44,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.62-15.33,20.74-31,30-47.14a387.16,387.16,0,0,0,24.45-50c6.8-17.22,12-35.09,14.43-53.34s1.87-36.87-2.57-54.66a140.71,140.71,0,0,0-9.09-25.88,157.86,157.86,0,0,0-13.87-23.77c-10.6-15.05-23.56-28.42-37.7-40.36-7.09-6-14.47-11.57-22.05-16.94-3.84-2.65-7.63-5.35-11.52-7.9l-5.82-3.87-5.87-3.77c-15.69-10.05-31.9-19.28-48.42-27.91a771.7,771.7,0,0,0-102.76-44c-17.61-6.17-35.44-11.73-53.39-16.85s-36-9.76-54.24-14c-36.39-8.41-73.17-15.19-110.13-20.72-73.94-11.1-148.56-17.39-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.81-2.09-112.22-2.4q-112.24-.93-224.43,3.85c-74.75,3.3-149.43,8.59-223.85,16.32s-148.6,17.9-222.15,31.56-146.49,30.83-217.62,53.85c-35.51,11.62-70.54,24.84-104.24,40.9A525.18,525.18,0,0,0,205,2997.57a352.15,352.15,0,0,0-45.22,32.69A233.5,233.5,0,0,0,122,3071a170.93,170.93,0,0,0-24.65,49.54c-1.34,4.43-2.52,8.91-3.47,13.44-.46,2.25-1,4.56-1.27,6.78a58.81,58.81,0,0,0-.52,6.77,64.17,64.17,0,0,0,5.72,26.51,92.59,92.59,0,0,0,14.8,23.12A129.1,129.1,0,0,0,132.91,3216c14.81,11.14,31.58,19.54,49,25.89a276.63,276.63,0,0,0,54.1,13.3c9.22,1.35,18.49,2.35,27.79,2.91l7,.41c2.33.14,4.66.14,7,.23,4.66.18,9.32.1,14,.09,9.31-.21,18.62-.61,27.88-1.63l3.48-.34,3.46-.44c2.31-.31,4.62-.56,6.92-.91l6.9-1.1c2.3-.34,4.58-.84,6.87-1.26a291.47,291.47,0,0,0,53.51-15.66A260.17,260.17,0,0,0,450,3211.34a214.19,214.19,0,0,0,21.94-17.16A160.47,160.47,0,0,0,491,3174a109.92,109.92,0,0,0,8-11.33,100.44,100.44,0,0,0,6.47-12.22,103.38,103.38,0,0,0,7.83-26.45c2.84-18.29.84-37.11-4.09-55s-12.67-35-21.77-51.23a384.07,384.07,0,0,0-31.21-46.37,556.39,556.39,0,0,0-36.69-42.3c-25.79-27-54-51.71-83-75.23s-59.2-45.73-89.8-67.26c-61.24-43-124.43-83.22-187.83-123L-36.3,2604c-31.67-20-63.23-40.13-94.37-60.93s-61.88-42.24-91.44-65.27c-14.76-11.52-29.2-23.49-43-36.16s-27-26.09-38.6-40.87a180.46,180.46,0,0,1-15.73-23.36A105.14,105.14,0,0,1-330,2351.28a72,72,0,0,1-1.95-14l-.06-1.77,0-1.78,0-1.77c0-.6.06-1.19.13-1.79a39.77,39.77,0,0,1,1.33-7,48.47,48.47,0,0,1,6-12.86,74.18,74.18,0,0,1,8.83-11.05A145.06,145.06,0,0,1-294,2281.18c7.69-5.39,15.69-10.29,23.79-15,16.22-9.39,32.9-17.92,49.27-26.95,8.18-4.53,16.3-9.18,24.13-14.26s15.43-10.6,21.8-17.37a39.56,39.56,0,0,0,7.73-11.4,22.67,22.67,0,0,0,1.7-6.61,20.78,20.78,0,0,0-.47-6.8c-1.95-9.08-6.51-17.44-12.26-24.71a112.5,112.5,0,0,0-20.14-19.28A200,200,0,0,0-222,2123.58a371.67,371.67,0,0,0-51.07-23c-17.54-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.55-13.19-36.72-7.24-55.21-10.09c-9.25-1.42-18.52-2.71-27.81-3.79-4.64-.54-9.29-1-13.95-1.41-2.33-.18-4.66-.35-7-.44-1.17,0-2.34-.08-3.5-.07-.58,0-1.16,0-1.73.07a6.27,6.27,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="402.96 2912.35 405.81 2911.53 408.94 2914.8 406.09 2915.59 402.96 2912.35"\n  />\n</g>\n<g class="cls-1">\n  <path\n    class="cls-71"\n    d="M-500.17,2085.06c.76-.86,1.29-.53,1.91-.7s1.18-.07,1.77-.08c1.18,0,2.35,0,3.52.07,2.35.09,4.69.25,7,.44,4.67.37,9.33.85,14,1.38,9.3,1.07,18.58,2.35,27.84,3.76q27.76,4.25,55.26,10c18.32,3.85,36.55,8.18,54.61,13.13s36,10.53,53.53,17a370,370,0,0,1,51.24,23,201.12,201.12,0,0,1,23.62,15.26,113.42,113.42,0,0,1,20.34,19.43c5.84,7.36,10.5,15.86,12.51,25.14a22.22,22.22,0,0,1,.5,7.14,24,24,0,0,1-1.78,6.93,40.63,40.63,0,0,1-7.92,11.73c-6.48,6.9-14.16,12.43-22,17.58s-16,9.79-24.18,14.33c-16.39,9.08-33.05,17.62-49.21,27-8.08,4.7-16,9.6-23.68,15a144.11,144.11,0,0,0-21.4,17.91,73.35,73.35,0,0,0-8.66,10.85,47.1,47.1,0,0,0-5.79,12.51,38.19,38.19,0,0,0-1.28,6.76c-.06.58-.08,1.15-.12,1.72l0,1.74,0,1.73.06,1.74a70,70,0,0,0,1.93,13.73,103.75,103.75,0,0,0,10.42,25.77,178.52,178.52,0,0,0,15.64,23.14c11.54,14.67,24.73,28,38.48,40.64s28.21,24.54,43,36c29.54,23,60.3,44.31,91.42,65.07s62.72,40.85,94.41,60.78L52,2692.28c63.46,39.73,126.73,79.85,188.09,122.83,30.66,21.52,60.84,43.75,90,67.25s57.47,48.23,83.4,75.35a560.56,560.56,0,0,1,36.93,42.46,386.15,386.15,0,0,1,31.5,46.67c9.21,16.38,17.06,33.65,22.11,51.85a152.73,152.73,0,0,1,5.09,27.85,122.1,122.1,0,0,1,.41,14.19,115.86,115.86,0,0,1-1.27,14.15,106.08,106.08,0,0,1-8,27.23,102.75,102.75,0,0,1-6.65,12.58,116,116,0,0,1-8.15,11.63A164.49,164.49,0,0,1,466,3226.86a215.91,215.91,0,0,1-22.24,17.43A263.08,263.08,0,0,1,394,3270.82a296.4,296.4,0,0,1-54.09,15.89c-2.31.42-4.61.93-6.94,1.28l-7,1.11c-2.33.36-4.66.62-7,.93l-3.49.45-3.51.34c-9.36,1-18.76,1.45-28.16,1.68-4.7,0-9.41.1-14.1-.08-2.35-.08-4.71-.09-7-.23l-7-.4c-9.39-.56-18.74-1.56-28.05-2.91a279.69,279.69,0,0,1-54.78-13.42c-17.7-6.42-34.78-14.94-49.94-26.32A132.56,132.56,0,0,1,102,3229.85a96.23,96.23,0,0,1-15.37-24,67.82,67.82,0,0,1-6-28,60.34,60.34,0,0,1,.55-7.22c.35-2.42.83-4.69,1.3-7,1-4.63,2.17-9.21,3.53-13.74a174.44,174.44,0,0,1,25.11-50.59,237.31,237.31,0,0,1,38.31-41.46,356.26,356.26,0,0,1,45.66-33.08A529.5,529.5,0,0,1,244.6,2998c33.88-16.19,69-29.5,104.66-41.19,71.34-23.17,144.44-40.43,218.08-54.21s147.95-24,222.45-31.83,149.27-13.18,224.1-16.57,149.76-4.62,224.67-4.08c37.46.26,74.91,1.1,112.34,2.26s74.86,2.66,112.26,4.7c74.8,4.12,149.57,10.33,223.76,21.37,37.09,5.51,74,12.26,110.57,20.67q27.43,6.28,54.53,14c18.06,5.12,36,10.69,53.72,16.87a778.81,778.81,0,0,1,103.59,44.2c16.66,8.69,33,18,48.88,28.11l5.94,3.8,5.88,3.9c3.94,2.57,7.77,5.3,11.64,8,7.71,5.43,15.24,11.15,22.48,17.23,14.46,12.18,27.79,25.89,38.77,41.46a164.13,164.13,0,0,1,14.41,24.66,146.47,146.47,0,0,1,9.51,27c4.65,18.58,5.14,38,2.73,56.87s-7.84,37.23-14.76,54.81a393.12,393.12,0,0,1-24.8,50.81c-9.35,16.34-19.55,32.16-30.24,47.6-21.38,30.9-44.59,60.41-68.24,89.47-47.37,58.07-96.64,114.46-142.27,173.68-22.81,29.6-44.73,59.89-64.71,91.4s-38,64.26-52.33,98.63-24.69,70.4-28.53,107.32c-3.45,37-2.78,74.51,3.21,111.21a407.23,407.23,0,0,0,12.56,54.29,414.9,414.9,0,0,0,20,52,437,437,0,0,0,59.83,93.88c23.69,28.75,50.84,54.56,80,77.81a692.87,692.87,0,0,0,93.06,61.93,862.86,862.86,0,0,0,101.17,47.86,1037.32,1037.32,0,0,0,106.18,35.69c72,20,146,32.94,220.42,39.58a1294.65,1294.65,0,0,0,224.06.54c74.49-6.38,148.55-19.38,220.23-40.86a845.48,845.48,0,0,0,105.09-39.07,663.43,663.43,0,0,0,98-54.39l.34.5a665.44,665.44,0,0,1-97.85,55,845.09,845.09,0,0,1-105.1,39.61c-71.71,21.84-145.87,35.2-220.49,41.93a1295.9,1295.9,0,0,1-224.6.19c-74.68-6.42-148.9-19.14-221.24-39a1043.44,1043.44,0,0,1-106.73-35.5A862.67,862.67,0,0,1,2010,4354.11a697.49,697.49,0,0,1-93.83-62.19c-29.41-23.39-56.87-49.39-80.87-78.4a442.52,442.52,0,0,1-60.72-94.9,418.89,418.89,0,0,1-20.37-52.69,411.46,411.46,0,0,1-12.84-55c-.84-4.64-1.37-9.32-2-14-.35-2.33-.56-4.68-.82-7l-.76-7c-.37-4.69-.78-9.39-1.08-14.09l-.35-7.05c-.12-2.35-.24-4.7-.27-7.06a471.08,471.08,0,0,1,1.86-56.46c3.84-37.62,14.32-74.29,28.76-109s32.67-67.85,52.75-99.57,42.11-62.18,65-91.89c45.75-59.44,95-115.91,142.29-173.89,23.57-29,46.73-58.38,68-89,10.63-15.33,20.75-31,30-47.14a386.56,386.56,0,0,0,24.46-50c6.8-17.22,12-35.09,14.43-53.34s1.86-36.87-2.57-54.66a141.58,141.58,0,0,0-9.1-25.89A156.92,156.92,0,0,0,2138,3080c-10.6-15.05-23.55-28.43-37.7-40.36-7.09-6-14.47-11.58-22.05-16.94-3.83-2.65-7.62-5.35-11.52-7.9l-5.81-3.87-5.88-3.78c-15.69-10-31.9-19.27-48.41-27.91a773.7,773.7,0,0,0-102.77-44c-17.61-6.16-35.43-11.72-53.39-16.84s-36-9.76-54.24-13.95c-36.39-8.41-73.16-15.19-110.13-20.72-73.93-11.1-148.55-17.4-223.24-21.6-37.35-2.08-74.74-3.61-112.14-4.84s-74.8-2.1-112.22-2.4q-112.23-.93-224.43,3.85c-74.75,3.3-149.42,8.59-223.84,16.31S641.65,2893,568.1,2906.62s-146.49,30.84-217.63,53.86c-35.51,11.62-70.54,24.84-104.24,40.9A523.76,523.76,0,0,0,197,3028a353,353,0,0,0-45.22,32.68A233.18,233.18,0,0,0,114,3101.43,171,171,0,0,0,89.38,3151c-1.33,4.43-2.52,8.91-3.47,13.44-.45,2.26-.94,4.57-1.27,6.78a59.15,59.15,0,0,0-.52,6.77,64.5,64.5,0,0,0,5.72,26.52,92.81,92.81,0,0,0,14.81,23.12,128.66,128.66,0,0,0,20.27,18.81c14.8,11.14,31.58,19.54,49,25.89a276.72,276.72,0,0,0,54.11,13.3c9.21,1.35,18.48,2.35,27.78,2.91l7,.41c2.32.14,4.65.14,7,.22,4.65.19,9.31.11,14,.1,9.31-.22,18.62-.62,27.88-1.63l3.47-.34,3.47-.44c2.3-.31,4.62-.56,6.92-.91l6.89-1.1c2.31-.34,4.58-.85,6.87-1.26a293.14,293.14,0,0,0,53.52-15.66A260.21,260.21,0,0,0,442,3241.73a212.69,212.69,0,0,0,21.93-17.16A161.19,161.19,0,0,0,483,3204.43a112.52,112.52,0,0,0,8-11.33,101.18,101.18,0,0,0,6.47-12.22,103,103,0,0,0,7.84-26.46c2.83-18.28.84-37.1-4.1-55s-12.66-35-21.77-51.22a381,381,0,0,0-31.21-46.37,556.26,556.26,0,0,0-36.68-42.3c-25.79-27-54-51.72-83.05-75.23s-59.21-45.73-89.8-67.27c-61.25-43-124.43-83.21-187.83-123l-95.16-59.65c-31.66-20-63.22-40.13-94.36-60.93s-61.88-42.24-91.44-65.27c-14.77-11.53-29.21-23.49-43-36.16s-27-26.1-38.6-40.87a181.55,181.55,0,0,1-15.74-23.36A105,105,0,0,1-338,2381.67a71.21,71.21,0,0,1-2-14l-.05-1.78,0-1.77,0-1.77c.05-.6.07-1.19.13-1.79a39.79,39.79,0,0,1,1.34-7,48.34,48.34,0,0,1,6-12.87,73.53,73.53,0,0,1,8.84-11A145.49,145.49,0,0,1-302,2311.58c7.69-5.39,15.69-10.3,23.8-15,16.21-9.39,32.89-17.92,49.27-27,8.18-4.52,16.3-9.17,24.13-14.25s15.42-10.6,21.79-17.37a39.56,39.56,0,0,0,7.73-11.4,22.69,22.69,0,0,0,1.71-6.61,21.06,21.06,0,0,0-.47-6.8c-2-9.08-6.51-17.44-12.27-24.72a113.14,113.14,0,0,0-20.13-19.28A199.25,199.25,0,0,0-230,2154,369.41,369.41,0,0,0-281,2131c-17.53-6.51-35.41-12.09-53.44-17.07s-36.24-9.33-54.54-13.19-36.72-7.24-55.22-10.09c-9.24-1.42-18.51-2.71-27.8-3.79-4.65-.54-9.3-1-14-1.41-2.33-.18-4.66-.35-7-.44-1.17-.05-2.33-.08-3.49-.07-.58,0-1.16,0-1.73.07a6.15,6.15,0,0,0-1.37.24Z"\n  />\n  <polygon\n    class="cls-3"\n    points="394.96 2942.75 397.82 2941.93 400.94 2945.2 398.09 2945.99 394.96 2942.75"\n  />\n</g>\n</svg>'))));var i=this;n.onload=function(){e.drawImage(n,0,0);var r=new B(t);r.needsUpdate=!0,r.minFilter=s,i.onLoaded(r)}}onLoaded(t){this.geometry=new wn(32,32,3),this.material=new cn({vertexShader:ac(),fragmentShader:oc(),uniforms:{uTime:{value:0},uTexture:{value:t}},transparent:!0,side:2}),this.mesh=new en(this.geometry,this.material),this.scene.add(this.mesh),this.addEvents()}addEvents(){window.requestAnimationFrame(this.run.bind(this)),window.addEventListener("resize",this.onResize.bind(this),!1)}run(){requestAnimationFrame(this.run.bind(this)),this.render()}render(){this.material.uniforms.uTime.value=this.clock.getElapsedTime(),this.renderer.render(this.scene,this.camera)}onResize(){const t=window.innerWidth,e=window.innerHeight;this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,e)}}).init()})()})();
