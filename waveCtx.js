/*! For license information please see main.js.LICENSE.txt */
var WaveCanvas;(()=>{var t={28:(t,e,n)=>{"use strict";var i=n(645);n.n(i)()((function(t){return t[1]})).push([t.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n}\n",""])},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,i){"string"==typeof t&&(t=[[null,t,""]]);var a={};if(i)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(a[s]=!0)}for(var o=0;o<t.length;o++){var c=[].concat(t[o]);i&&a[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},270:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n\nvoid main() {\n  vec4 texture = texture2D(uTexture, vUv);\n  gl_FragColor = texture;\n}"},343:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform float uTime;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v) {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n  \n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n  \n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n  \n  // Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n           \n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n  \n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  \n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main() {\n  vUv = uv;\n\n  vec3 pos = position;\n  float noiseFreq = 1.5;\n  float noiseAmp = 0.15; \n  vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n  pos.z += snoise(noisePos) * noiseAmp;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);\n}"}},e={};function n(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return t[i](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};(()=>{"use strict";n.r(i),n.d(i,{getScene:()=>uc}),n(28);const t=100,e=1e3,a=1001,r=1002,s=1003,o=1006,c=1008,l=1012,h=1014,u=1015,d=1016,p=1020,f=1022,m=1023,g=1026,v=1027,y=2300,x=2301,_=2302,M=2400,b=2401,w=2402,S=3e3,T=7680,E=35044,A=35048,L="300 es";function C(){}Object.assign(C.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}});const R=[];for(let t=0;t<256;t++)R[t]=(t<16?"0":"")+t.toString(16);let P=1234567;const D={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(R[255&t]+R[t>>8&255]+R[t>>16&255]+R[t>>24&255]+"-"+R[255&e]+R[e>>8&255]+"-"+R[e>>16&15|64]+R[e>>24&255]+"-"+R[63&n|128]+R[n>>8&255]+"-"+R[n>>16&255]+R[n>>24&255]+R[255&i]+R[i>>8&255]+R[i>>16&255]+R[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,a){return i+(t-e)*(a-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return D.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(D.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(P=t%2147483647),P=16807*P%2147483647,(P-1)/2147483646},degToRad:function(t){return t*D.DEG2RAD},radToDeg:function(t){return t*D.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,a){const r=Math.cos,s=Math.sin,o=r(n/2),c=s(n/2),l=r((e+i)/2),h=s((e+i)/2),u=r((e-i)/2),d=s((e-i)/2),p=r((i-e)/2),f=s((i-e)/2);switch(a){case"XYX":t.set(o*h,c*u,c*d,o*l);break;case"YZY":t.set(c*d,o*h,c*u,o*l);break;case"ZXZ":t.set(c*u,c*d,o*h,o*l);break;case"XZX":t.set(o*h,c*f,c*p,o*l);break;case"YXY":t.set(c*p,o*h,c*f,o*l);break;case"ZYZ":t.set(c*f,c*p,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+a)}}};class I{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),a=this.x-t.x,r=this.y-t.y;return this.x=a*n-r*i+t.x,this.y=a*i+r*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}I.prototype.isVector2=!0;class N{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,a,r,s,o,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=a,l[5]=o,l[6]=n,l[7]=r,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,a=this.elements,r=n[0],s=n[3],o=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],M=i[5],b=i[8];return a[0]=r*f+s*v+o*_,a[3]=r*m+s*y+o*M,a[6]=r*g+s*x+o*b,a[1]=c*f+l*v+h*_,a[4]=c*m+l*y+h*M,a[7]=c*g+l*x+h*b,a[2]=u*f+d*v+p*_,a[5]=u*m+d*y+p*M,a[8]=u*g+d*x+p*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],s=t[5],o=t[6],c=t[7],l=t[8];return e*r*l-e*s*c-n*a*l+n*s*o+i*a*c-i*r*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=l*r-s*c,u=s*o-l*a,d=c*a-r*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*c-l*n)*f,t[2]=(s*n-i*r)*f,t[3]=u*f,t[4]=(l*e-i*o)*f,t[5]=(i*a-s*e)*f,t[6]=d*f,t[7]=(n*o-c*e)*f,t[8]=(r*e-n*a)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,a,r,s){const o=Math.cos(a),c=Math.sin(a);return this.set(n*o,n*c,-n*(o*r+c*s)+r+t,-i*c,i*o,-i*(-c*r+o*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,a=i[0],r=i[3],s=i[6],o=i[1],c=i[4],l=i[7];return i[0]=e*a+n*o,i[3]=e*r+n*c,i[6]=e*s+n*l,i[1]=-n*a+e*o,i[4]=-n*r+e*c,i[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let q;N.prototype.isMatrix3=!0;const O={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===q&&(q=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),q.width=t.width,q.height=t.height;const n=q.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=q}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}};let z=0;class B extends C{constructor(t=B.DEFAULT_IMAGE,e=B.DEFAULT_MAPPING,n=1001,i=1001,a=1006,r=1008,s=1023,o=1009,c=1,l=3e3){super(),Object.defineProperty(this,"id",{value:z++}),this.uuid=D.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=a,this.minFilter=r,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=o,this.offset=new I(0,0),this.repeat=new I(1,1),this.center=new I(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new N,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=D.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(H(i[t].image)):e.push(H(i[t]))}else e=H(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case e:t.x=t.x-Math.floor(t.x);break;case a:t.x=t.x<0?0:1;break;case r:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case e:t.y=t.y-Math.floor(t.y);break;case a:t.y=t.y<0?0:1;break;case r:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function H(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?O.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}B.DEFAULT_IMAGE=void 0,B.DEFAULT_MAPPING=300,B.prototype.isTexture=!0;class G{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,a=this.w,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i+r[12]*a,this.y=r[1]*e+r[5]*n+r[9]*i+r[13]*a,this.z=r[2]*e+r[6]*n+r[10]*i+r[14]*a,this.w=r[3]*e+r[7]*n+r[11]*i+r[15]*a,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,a;const r=.01,s=.1,o=t.elements,c=o[0],l=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(l-u)<r&&Math.abs(h-f)<r&&Math.abs(p-m)<r){if(Math.abs(l+u)<s&&Math.abs(h+f)<s&&Math.abs(p+m)<s&&Math.abs(c+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(c+1)/2,o=(d+1)/2,v=(g+1)/2,y=(l+u)/4,x=(h+f)/4,_=(p+m)/4;return t>o&&t>v?t<r?(n=0,i=.707106781,a=.707106781):(n=Math.sqrt(t),i=y/n,a=x/n):o>v?o<r?(n=.707106781,i=0,a=.707106781):(i=Math.sqrt(o),n=y/i,a=_/i):v<r?(n=.707106781,i=.707106781,a=0):(a=Math.sqrt(v),n=x/a,i=_/a),this.set(n,i,a,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-l)*(u-l));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-l)/v,this.w=Math.acos((c+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}G.prototype.isVector4=!0;class F extends C{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new G(0,0,t,e),this.scissorTest=!1,this.viewport=new G(0,0,t,e),n=n||{},this.texture=new B(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:o,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}F.prototype.isWebGLRenderTarget=!0,class extends F{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}.prototype.isWebGLMultisampleRenderTarget=!0;class U{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,a,r,s){let o=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=a[r+0],d=a[r+1],p=a[r+2],f=a[r+3];if(0===s)return t[e+0]=o,t[e+1]=c,t[e+2]=l,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||c!==d||l!==p){let t=1-s;const e=o*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const a=Math.sqrt(i),r=Math.atan2(a,e*n);t=Math.sin(t*r)/a,s=Math.sin(s*r)/a}const a=s*n;if(o=o*t+u*a,c=c*t+d*a,l=l*t+p*a,h=h*t+f*a,t===1-s){const t=1/Math.sqrt(o*o+c*c+l*l+h*h);o*=t,c*=t,l*=t,h*=t}}t[e]=o,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,a,r){const s=n[i],o=n[i+1],c=n[i+2],l=n[i+3],h=a[r],u=a[r+1],d=a[r+2],p=a[r+3];return t[e]=s*p+l*h+o*d-c*u,t[e+1]=o*p+l*u+c*h-s*d,t[e+2]=c*p+l*d+s*u-o*h,t[e+3]=l*p-s*h-o*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,a=t._z,r=t._order,s=Math.cos,o=Math.sin,c=s(n/2),l=s(i/2),h=s(a/2),u=o(n/2),d=o(i/2),p=o(a/2);switch(r){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],a=e[8],r=e[1],s=e[5],o=e[9],c=e[2],l=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-o)*t,this._y=(a-c)*t,this._z=(r-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(l-o)/t,this._x=.25*t,this._y=(i+r)/t,this._z=(a+c)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(a-c)/t,this._x=(i+r)/t,this._y=.25*t,this._z=(o+l)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(r-i)/t,this._x=(a+c)/t,this._y=(o+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(D.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,a=t._z,r=t._w,s=e._x,o=e._y,c=e._z,l=e._w;return this._x=n*l+r*s+i*c-a*o,this._y=i*l+r*o+a*s-n*c,this._z=a*l+r*c+n*o-i*s,this._w=r*l-n*s-i*o-a*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,a=this._z,r=this._w;let s=r*t._w+n*t._x+i*t._y+a*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=r,this._x=n,this._y=i,this._z=a,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*a+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(o),l=Math.atan2(c,s),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=r*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=a*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}U.prototype.isQuaternion=!0;class k{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(W.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(W.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,a=t.elements;return this.x=a[0]*e+a[3]*n+a[6]*i,this.y=a[1]*e+a[4]*n+a[7]*i,this.z=a[2]*e+a[5]*n+a[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,a=t.elements,r=1/(a[3]*e+a[7]*n+a[11]*i+a[15]);return this.x=(a[0]*e+a[4]*n+a[8]*i+a[12])*r,this.y=(a[1]*e+a[5]*n+a[9]*i+a[13])*r,this.z=(a[2]*e+a[6]*n+a[10]*i+a[14])*r,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,a=t.x,r=t.y,s=t.z,o=t.w,c=o*e+r*i-s*n,l=o*n+s*e-a*i,h=o*i+a*n-r*e,u=-a*e-r*n-s*i;return this.x=c*o+u*-a+l*-s-h*-r,this.y=l*o+u*-r+h*-a-c*-s,this.z=h*o+u*-s+c*-r-l*-a,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i,this.y=a[1]*e+a[5]*n+a[9]*i,this.z=a[2]*e+a[6]*n+a[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,a=t.z,r=e.x,s=e.y,o=e.z;return this.x=i*o-a*s,this.y=a*r-n*o,this.z=n*s-i*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return V.copy(this).projectOnVector(t),this.sub(V)}reflect(t){return this.sub(V.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(D.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}k.prototype.isVector3=!0;const V=new k,W=new U;class Z{constructor(t=new k(1/0,1/0,1/0),e=new k(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,a=-1/0,r=-1/0,s=-1/0;for(let o=0,c=t.length;o<c;o+=3){const c=t[o],l=t[o+1],h=t[o+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>a&&(a=c),l>r&&(r=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(a,r,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,a=-1/0,r=-1/0,s=-1/0;for(let o=0,c=t.count;o<c;o++){const c=t.getX(o),l=t.getY(o),h=t.getZ(o);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>a&&(a=c),l>r&&(r=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(a,r,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=X.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new k),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new k),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Y.copy(e.boundingBox),Y.applyMatrix4(t.matrixWorld),this.union(Y));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new k),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,X),X.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(it),at.subVectors(this.max,it),J.subVectors(t.a,it),Q.subVectors(t.b,it),K.subVectors(t.c,it),tt.subVectors(Q,J),et.subVectors(K,Q),nt.subVectors(J,K);let e=[0,-tt.z,tt.y,0,-et.z,et.y,0,-nt.z,nt.y,tt.z,0,-tt.x,et.z,0,-et.x,nt.z,0,-nt.x,-tt.y,tt.x,0,-et.y,et.x,0,-nt.y,nt.x,0];return!!ot(e,J,Q,K,at)&&(e=[1,0,0,0,1,0,0,0,1],!!ot(e,J,Q,K,at)&&(rt.crossVectors(tt,et),e=[rt.x,rt.y,rt.z],ot(e,J,Q,K,at)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new k),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return X.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(X).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(j[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),j[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),j[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),j[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),j[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),j[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),j[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),j[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(j)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Z.prototype.isBox3=!0;const j=[new k,new k,new k,new k,new k,new k,new k,new k],X=new k,Y=new Z,J=new k,Q=new k,K=new k,tt=new k,et=new k,nt=new k,it=new k,at=new k,rt=new k,st=new k;function ot(t,e,n,i,a){for(let r=0,s=t.length-3;r<=s;r+=3){st.fromArray(t,r);const s=a.x*Math.abs(st.x)+a.y*Math.abs(st.y)+a.z*Math.abs(st.z),o=e.dot(st),c=n.dot(st),l=i.dot(st);if(Math.max(-Math.max(o,c,l),Math.min(o,c,l))>s)return!1}return!0}const ct=new Z,lt=new k,ht=new k,ut=new k;class dt{constructor(t=new k,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):ct.setFromPoints(t).getCenter(n);let i=0;for(let e=0,a=t.length;e<a;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new k),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new Z),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){ut.subVectors(t,this.center);const e=ut.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(ut.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return ht.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(lt.copy(t.center).add(ht)),this.expandByPoint(lt.copy(t.center).sub(ht)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const pt=new k,ft=new k,mt=new k,gt=new k,vt=new k,yt=new k,xt=new k;class _t{constructor(t=new k,e=new k(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new k),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,pt)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new k),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=pt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(pt.copy(this.direction).multiplyScalar(e).add(this.origin),pt.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ft.copy(t).add(e).multiplyScalar(.5),mt.copy(e).sub(t).normalize(),gt.copy(this.origin).sub(ft);const a=.5*t.distanceTo(e),r=-this.direction.dot(mt),s=gt.dot(this.direction),o=-gt.dot(mt),c=gt.lengthSq(),l=Math.abs(1-r*r);let h,u,d,p;if(l>0)if(h=r*o-s,u=r*s-o,p=a*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;h*=t,u*=t,d=h*(h+r*u+2*s)+u*(r*h+u+2*o)+c}else u=a,h=Math.max(0,-(r*u+s)),d=-h*h+u*(u+2*o)+c;else u=-a,h=Math.max(0,-(r*u+s)),d=-h*h+u*(u+2*o)+c;else u<=-p?(h=Math.max(0,-(-r*a+s)),u=h>0?-a:Math.min(Math.max(-a,-o),a),d=-h*h+u*(u+2*o)+c):u<=p?(h=0,u=Math.min(Math.max(-a,-o),a),d=u*(u+2*o)+c):(h=Math.max(0,-(r*a+s)),u=h>0?a:Math.min(Math.max(-a,-o),a),d=-h*h+u*(u+2*o)+c);else u=r>0?-a:a,h=Math.max(0,-(r*u+s)),d=-h*h+u*(u+2*o)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(mt).multiplyScalar(u).add(ft),d}intersectSphere(t,e){pt.subVectors(t.center,this.origin);const n=pt.dot(this.direction),i=pt.dot(pt)-n*n,a=t.radius*t.radius;if(i>a)return null;const r=Math.sqrt(a-i),s=n-r,o=n+r;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,a,r,s,o;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(a=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(a=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),n>r||a>i?null:((a>n||n!=n)&&(n=a),(r<i||i!=i)&&(i=r),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,pt)}intersectTriangle(t,e,n,i,a){vt.subVectors(e,t),yt.subVectors(n,t),xt.crossVectors(vt,yt);let r,s=this.direction.dot(xt);if(s>0){if(i)return null;r=1}else{if(!(s<0))return null;r=-1,s=-s}gt.subVectors(this.origin,t);const o=r*this.direction.dot(yt.crossVectors(gt,yt));if(o<0)return null;const c=r*this.direction.dot(vt.cross(gt));if(c<0)return null;if(o+c>s)return null;const l=-r*gt.dot(xt);return l<0?null:this.at(l/s,a)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Mt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,a,r,s,o,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=a,g[5]=r,g[9]=s,g[13]=o,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Mt).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/bt.setFromMatrixColumn(t,0).length(),a=1/bt.setFromMatrixColumn(t,1).length(),r=1/bt.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*a,e[5]=n[5]*a,e[6]=n[6]*a,e[7]=0,e[8]=n[8]*r,e[9]=n[9]*r,e[10]=n[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,a=t.z,r=Math.cos(n),s=Math.sin(n),o=Math.cos(i),c=Math.sin(i),l=Math.cos(a),h=Math.sin(a);if("XYZ"===t.order){const t=r*l,n=r*h,i=s*l,a=s*h;e[0]=o*l,e[4]=-o*h,e[8]=c,e[1]=n+i*c,e[5]=t-a*c,e[9]=-s*o,e[2]=a-t*c,e[6]=i+n*c,e[10]=r*o}else if("YXZ"===t.order){const t=o*l,n=o*h,i=c*l,a=c*h;e[0]=t+a*s,e[4]=i*s-n,e[8]=r*c,e[1]=r*h,e[5]=r*l,e[9]=-s,e[2]=n*s-i,e[6]=a+t*s,e[10]=r*o}else if("ZXY"===t.order){const t=o*l,n=o*h,i=c*l,a=c*h;e[0]=t-a*s,e[4]=-r*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=r*l,e[9]=a-t*s,e[2]=-r*c,e[6]=s,e[10]=r*o}else if("ZYX"===t.order){const t=r*l,n=r*h,i=s*l,a=s*h;e[0]=o*l,e[4]=i*c-n,e[8]=t*c+a,e[1]=o*h,e[5]=a*c+t,e[9]=n*c-i,e[2]=-c,e[6]=s*o,e[10]=r*o}else if("YZX"===t.order){const t=r*o,n=r*c,i=s*o,a=s*c;e[0]=o*l,e[4]=a-t*h,e[8]=i*h+n,e[1]=h,e[5]=r*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-a*h}else if("XZY"===t.order){const t=r*o,n=r*c,i=s*o,a=s*c;e[0]=o*l,e[4]=-h,e[8]=c*l,e[1]=t*h+a,e[5]=r*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*l,e[10]=a*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(St,t,Tt)}lookAt(t,e,n){const i=this.elements;return Lt.subVectors(t,e),0===Lt.lengthSq()&&(Lt.z=1),Lt.normalize(),Et.crossVectors(n,Lt),0===Et.lengthSq()&&(1===Math.abs(n.z)?Lt.x+=1e-4:Lt.z+=1e-4,Lt.normalize(),Et.crossVectors(n,Lt)),Et.normalize(),At.crossVectors(Lt,Et),i[0]=Et.x,i[4]=At.x,i[8]=Lt.x,i[1]=Et.y,i[5]=At.y,i[9]=Lt.y,i[2]=Et.z,i[6]=At.z,i[10]=Lt.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,a=this.elements,r=n[0],s=n[4],o=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],M=i[0],b=i[4],w=i[8],S=i[12],T=i[1],E=i[5],A=i[9],L=i[13],C=i[2],R=i[6],P=i[10],D=i[14],I=i[3],N=i[7],q=i[11],O=i[15];return a[0]=r*M+s*T+o*C+c*I,a[4]=r*b+s*E+o*R+c*N,a[8]=r*w+s*A+o*P+c*q,a[12]=r*S+s*L+o*D+c*O,a[1]=l*M+h*T+u*C+d*I,a[5]=l*b+h*E+u*R+d*N,a[9]=l*w+h*A+u*P+d*q,a[13]=l*S+h*L+u*D+d*O,a[2]=p*M+f*T+m*C+g*I,a[6]=p*b+f*E+m*R+g*N,a[10]=p*w+f*A+m*P+g*q,a[14]=p*S+f*L+m*D+g*O,a[3]=v*M+y*T+x*C+_*I,a[7]=v*b+y*E+x*R+_*N,a[11]=v*w+y*A+x*P+_*q,a[15]=v*S+y*L+x*D+_*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],a=t[12],r=t[1],s=t[5],o=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+a*o*h-i*c*h-a*s*u+n*c*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*c*u+a*r*u-i*r*d+i*c*l-a*o*l)+t[11]*(+e*c*h-e*s*d-a*r*h+n*r*d+a*s*l-n*c*l)+t[15]*(-i*s*l-e*o*h+e*s*u+i*r*h-n*r*u+n*o*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*c-f*u*c+f*o*d-s*m*d-h*o*g+s*u*g,y=p*u*c-l*m*c-p*o*d+r*m*d+l*o*g-r*u*g,x=l*f*c-p*h*c+p*s*d-r*f*d-l*s*g+r*h*g,_=p*h*o-l*f*o-p*s*u+r*f*u+l*s*m-r*h*m,M=e*v+n*y+i*x+a*_;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return t[0]=v*b,t[1]=(f*u*a-h*m*a-f*i*d+n*m*d+h*i*g-n*u*g)*b,t[2]=(s*m*a-f*o*a+f*i*c-n*m*c-s*i*g+n*o*g)*b,t[3]=(h*o*a-s*u*a-h*i*c+n*u*c+s*i*d-n*o*d)*b,t[4]=y*b,t[5]=(l*m*a-p*u*a+p*i*d-e*m*d-l*i*g+e*u*g)*b,t[6]=(p*o*a-r*m*a-p*i*c+e*m*c+r*i*g-e*o*g)*b,t[7]=(r*u*a-l*o*a+l*i*c-e*u*c-r*i*d+e*o*d)*b,t[8]=x*b,t[9]=(p*h*a-l*f*a-p*n*d+e*f*d+l*n*g-e*h*g)*b,t[10]=(r*f*a-p*s*a+p*n*c-e*f*c-r*n*g+e*s*g)*b,t[11]=(l*s*a-r*h*a-l*n*c+e*h*c+r*n*d-e*s*d)*b,t[12]=_*b,t[13]=(l*f*i-p*h*i+p*n*u-e*f*u-l*n*m+e*h*m)*b,t[14]=(p*s*i-r*f*i-p*n*o+e*f*o+r*n*m-e*s*m)*b,t[15]=(r*h*i-l*s*i+l*n*o-e*h*o-r*n*u+e*s*u)*b,this}scale(t){const e=this.elements,n=t.x,i=t.y,a=t.z;return e[0]*=n,e[4]*=i,e[8]*=a,e[1]*=n,e[5]*=i,e[9]*=a,e[2]*=n,e[6]*=i,e[10]*=a,e[3]*=n,e[7]*=i,e[11]*=a,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),a=1-n,r=t.x,s=t.y,o=t.z,c=a*r,l=a*s;return this.set(c*r+n,c*s-i*o,c*o+i*s,0,c*s+i*o,l*s+n,l*o-i*r,0,c*o-i*s,l*o+i*r,a*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,a=e._x,r=e._y,s=e._z,o=e._w,c=a+a,l=r+r,h=s+s,u=a*c,d=a*l,p=a*h,f=r*l,m=r*h,g=s*h,v=o*c,y=o*l,x=o*h,_=n.x,M=n.y,b=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*M,i[5]=(1-(u+g))*M,i[6]=(m+v)*M,i[7]=0,i[8]=(p+y)*b,i[9]=(m-v)*b,i[10]=(1-(u+f))*b,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let a=bt.set(i[0],i[1],i[2]).length();const r=bt.set(i[4],i[5],i[6]).length(),s=bt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(a=-a),t.x=i[12],t.y=i[13],t.z=i[14],wt.copy(this);const o=1/a,c=1/r,l=1/s;return wt.elements[0]*=o,wt.elements[1]*=o,wt.elements[2]*=o,wt.elements[4]*=c,wt.elements[5]*=c,wt.elements[6]*=c,wt.elements[8]*=l,wt.elements[9]*=l,wt.elements[10]*=l,e.setFromRotationMatrix(wt),n.x=a,n.y=r,n.z=s,this}makePerspective(t,e,n,i,a,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*a/(e-t),c=2*a/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(r+a)/(r-a),d=-2*r*a/(r-a);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,a,r){const s=this.elements,o=1/(e-t),c=1/(n-i),l=1/(r-a),h=(e+t)*o,u=(n+i)*c,d=(r+a)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Mt.prototype.isMatrix4=!0;const bt=new k,wt=new Mt,St=new k(0,0,0),Tt=new k(1,1,1),Et=new k,At=new k,Lt=new k,Ct=new Mt,Rt=new U;class Pt{constructor(t=0,e=0,n=0,i=Pt.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=D.clamp,a=t.elements,r=a[0],s=a[4],o=a[8],c=a[1],l=a[5],h=a[9],u=a[2],d=a[6],p=a[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Ct.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ct,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Rt.setFromEuler(this),this.setFromQuaternion(Rt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new k(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Pt.prototype.isEuler=!0,Pt.DefaultOrder="XYZ",Pt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Dt{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let It=0;const Nt=new k,qt=new U,Ot=new Mt,zt=new k,Bt=new k,Ht=new k,Gt=new U,Ft=new k(1,0,0),Ut=new k(0,1,0),kt=new k(0,0,1),Vt={type:"added"},Wt={type:"removed"};function Zt(){Object.defineProperty(this,"id",{value:It++}),this.uuid=D.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Zt.DefaultUp.clone();const t=new k,e=new Pt,n=new U,i=new k(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Mt},normalMatrix:{value:new N}}),this.matrix=new Mt,this.matrixWorld=new Mt,this.matrixAutoUpdate=Zt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Dt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Zt.DefaultUp=new k(0,1,0),Zt.DefaultMatrixAutoUpdate=!0,Zt.prototype=Object.assign(Object.create(C.prototype),{constructor:Zt,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return qt.setFromAxisAngle(t,e),this.quaternion.multiply(qt),this},rotateOnWorldAxis:function(t,e){return qt.setFromAxisAngle(t,e),this.quaternion.premultiply(qt),this},rotateX:function(t){return this.rotateOnAxis(Ft,t)},rotateY:function(t){return this.rotateOnAxis(Ut,t)},rotateZ:function(t){return this.rotateOnAxis(kt,t)},translateOnAxis:function(t,e){return Nt.copy(t).applyQuaternion(this.quaternion),this.position.add(Nt.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Ft,t)},translateY:function(t){return this.translateOnAxis(Ut,t)},translateZ:function(t){return this.translateOnAxis(kt,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Ot.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?zt.copy(t):zt.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Bt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ot.lookAt(Bt,zt,this.up):Ot.lookAt(zt,Bt,this.up),this.quaternion.setFromRotationMatrix(Ot),i&&(Ot.extractRotation(i.matrixWorld),qt.setFromRotationMatrix(Ot),this.quaternion.premultiply(qt.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Vt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Wt)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Wt)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),Ot.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ot.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ot),this.add(t),t.updateWorldMatrix(!1,!0),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new k),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new U),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bt,t,Ht),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new k),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bt,Gt,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new k),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function a(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=a(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];a(t.shapes,i)}else a(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(a(t.materials,this.material[n]));i.material=e}else i.material=a(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(a(t.animations,n))}}if(e){const e=r(t.geometries),i=r(t.materials),a=r(t.textures),s=r(t.images),o=r(t.shapes),c=r(t.skeletons),l=r(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),a.length>0&&(n.textures=a),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=i,n;function r(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const jt=new k,Xt=new k,Yt=new N;class Jt{constructor(t=new k(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=jt.subVectors(n,e).cross(Xt.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new k),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new k);const n=t.delta(jt),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const a=-(t.start.dot(this.normal)+this.constant)/i;return a<0||a>1?null:e.copy(n).multiplyScalar(a).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new k),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Yt.getNormalMatrix(t),i=this.coplanarPoint(jt).applyMatrix4(t),a=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(a),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Jt.prototype.isPlane=!0;const Qt=new k,Kt=new k,$t=new k,te=new k,ee=new k,ne=new k,ie=new k,ae=new k,re=new k,se=new k;class oe{constructor(t=new k,e=new k,n=new k){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new k),i.subVectors(n,e),Qt.subVectors(t,e),i.cross(Qt);const a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}static getBarycoord(t,e,n,i,a){Qt.subVectors(i,e),Kt.subVectors(n,e),$t.subVectors(t,e);const r=Qt.dot(Qt),s=Qt.dot(Kt),o=Qt.dot($t),c=Kt.dot(Kt),l=Kt.dot($t),h=r*c-s*s;if(void 0===a&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),a=new k),0===h)return a.set(-2,-1,-1);const u=1/h,d=(c*o-s*l)*u,p=(r*l-s*o)*u;return a.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,te),te.x>=0&&te.y>=0&&te.x+te.y<=1}static getUV(t,e,n,i,a,r,s,o){return this.getBarycoord(t,e,n,i,te),o.set(0,0),o.addScaledVector(a,te.x),o.addScaledVector(r,te.y),o.addScaledVector(s,te.z),o}static isFrontFacing(t,e,n,i){return Qt.subVectors(n,e),Kt.subVectors(t,e),Qt.cross(Kt).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Qt.subVectors(this.c,this.b),Kt.subVectors(this.a,this.b),.5*Qt.cross(Kt).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new k),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return oe.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Jt),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return oe.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,a){return oe.getUV(t,this.a,this.b,this.c,e,n,i,a)}containsPoint(t){return oe.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return oe.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new k);const n=this.a,i=this.b,a=this.c;let r,s;ee.subVectors(i,n),ne.subVectors(a,n),ae.subVectors(t,n);const o=ee.dot(ae),c=ne.dot(ae);if(o<=0&&c<=0)return e.copy(n);re.subVectors(t,i);const l=ee.dot(re),h=ne.dot(re);if(l>=0&&h<=l)return e.copy(i);const u=o*h-l*c;if(u<=0&&o>=0&&l<=0)return r=o/(o-l),e.copy(n).addScaledVector(ee,r);se.subVectors(t,a);const d=ee.dot(se),p=ne.dot(se);if(p>=0&&d<=p)return e.copy(a);const f=d*c-o*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),e.copy(n).addScaledVector(ne,s);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return ie.subVectors(a,i),s=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(ie,s);const g=1/(m+f+u);return r=f*g,s=u*g,e.copy(n).addScaledVector(ee,r).addScaledVector(ne,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ce=0;function le(){Object.defineProperty(this,"id",{value:ce++}),this.uuid=D.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=t,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=T,this.stencilZFail=T,this.stencilZPass=T,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}le.prototype=Object.assign(Object.create(C.prototype),{constructor:le,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),a=i(t.images);e.length>0&&(n.textures=e),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(le.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const he={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ue={h:0,s:0,l:0},de={h:0,s:0,l:0};function pe(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function fe(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function me(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class ge{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=D.euclideanModulo(t,1),e=D.clamp(e,0,1),n=D.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,a=2*n-i;this.r=pe(a,i,t+1/3),this.g=pe(a,i,t),this.b=pe(a,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,a=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,a)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=he[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=fe(t.r),this.g=fe(t.g),this.b=fe(t.b),this}copyLinearToSRGB(t){return this.r=me(t.r),this.g=me(t.g),this.b=me(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,a=Math.max(e,n,i),r=Math.min(e,n,i);let s,o;const c=(r+a)/2;if(r===a)s=0,o=0;else{const t=a-r;switch(o=c<=.5?t/(a+r):t/(2-a-r),a){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=o,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(ue),ue.h+=t,ue.s+=e,ue.l+=n,this.setHSL(ue.h,ue.s,ue.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ue),t.getHSL(de);const n=D.lerp(ue.h,de.h,e),i=D.lerp(ue.s,de.s,e),a=D.lerp(ue.l,de.l,e);return this.setHSL(n,i,a),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ge.NAMES=he,ge.prototype.isColor=!0,ge.prototype.r=1,ge.prototype.g=1,ge.prototype.b=1;class ve extends le{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}ve.prototype.isMeshBasicMaterial=!0;const ye=new k,xe=new I;function _e(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=E,this.updateRange={offset:0,count:-1},this.version=0}function Me(t,e,n){_e.call(this,new Int8Array(t),e,n)}function be(t,e,n){_e.call(this,new Uint8Array(t),e,n)}function we(t,e,n){_e.call(this,new Uint8ClampedArray(t),e,n)}function Se(t,e,n){_e.call(this,new Int16Array(t),e,n)}function Te(t,e,n){_e.call(this,new Uint16Array(t),e,n)}function Ee(t,e,n){_e.call(this,new Int32Array(t),e,n)}function Ae(t,e,n){_e.call(this,new Uint32Array(t),e,n)}function Le(t,e,n){_e.call(this,new Uint16Array(t),e,n)}function Ce(t,e,n){_e.call(this,new Float32Array(t),e,n)}function Re(t,e,n){_e.call(this,new Float64Array(t),e,n)}function Pe(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty(_e.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(_e.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,a=this.itemSize;i<a;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new ge),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new I),e[n++]=a.x,e[n++]=a.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new k),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new G),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)xe.fromBufferAttribute(this,e),xe.applyMatrix3(t),this.setXY(e,xe.x,xe.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ye.fromBufferAttribute(this,e),ye.applyMatrix3(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)ye.x=this.getX(e),ye.y=this.getY(e),ye.z=this.getZ(e),ye.applyMatrix4(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)ye.x=this.getX(e),ye.y=this.getY(e),ye.z=this.getZ(e),ye.applyNormalMatrix(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)ye.x=this.getX(e),ye.y=this.getY(e),ye.z=this.getZ(e),ye.transformDirection(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,a){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=a,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==E&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}),Me.prototype=Object.create(_e.prototype),Me.prototype.constructor=Me,be.prototype=Object.create(_e.prototype),be.prototype.constructor=be,we.prototype=Object.create(_e.prototype),we.prototype.constructor=we,Se.prototype=Object.create(_e.prototype),Se.prototype.constructor=Se,Te.prototype=Object.create(_e.prototype),Te.prototype.constructor=Te,Ee.prototype=Object.create(_e.prototype),Ee.prototype.constructor=Ee,Ae.prototype=Object.create(_e.prototype),Ae.prototype.constructor=Ae,Le.prototype=Object.create(_e.prototype),Le.prototype.constructor=Le,Le.prototype.isFloat16BufferAttribute=!0,Ce.prototype=Object.create(_e.prototype),Ce.prototype.constructor=Ce,Re.prototype=Object.create(_e.prototype),Re.prototype.constructor=Re,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let De=0;const Ie=new Mt,Ne=new Zt,qe=new k,Oe=new Z,ze=new Z,Be=new k;function He(){Object.defineProperty(this,"id",{value:De++}),this.uuid=D.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}He.prototype=Object.assign(Object.create(C.prototype),{constructor:He,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(Pe(t)>65535?Ae:Te)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new N).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Ie.makeRotationX(t),this.applyMatrix4(Ie),this},rotateY:function(t){return Ie.makeRotationY(t),this.applyMatrix4(Ie),this},rotateZ:function(t){return Ie.makeRotationZ(t),this.applyMatrix4(Ie),this},translate:function(t,e,n){return Ie.makeTranslation(t,e,n),this.applyMatrix4(Ie),this},scale:function(t,e,n){return Ie.makeScale(t,e,n),this.applyMatrix4(Ie),this},lookAt:function(t){return Ne.lookAt(t),Ne.updateMatrix(),this.applyMatrix4(Ne.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(qe).negate(),this.translate(qe.x,qe.y,qe.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Ce(e,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Z);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new k(-1/0,-1/0,-1/0),new k(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Oe.setFromBufferAttribute(n),this.morphTargetsRelative?(Be.addVectors(this.boundingBox.min,Oe.min),this.boundingBox.expandByPoint(Be),Be.addVectors(this.boundingBox.max,Oe.max),this.boundingBox.expandByPoint(Be)):(this.boundingBox.expandByPoint(Oe.min),this.boundingBox.expandByPoint(Oe.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new dt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new k,1/0);if(t){const n=this.boundingSphere.center;if(Oe.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];ze.setFromBufferAttribute(n),this.morphTargetsRelative?(Be.addVectors(Oe.min,ze.min),Oe.expandByPoint(Be),Be.addVectors(Oe.max,ze.max),Oe.expandByPoint(Be)):(Oe.expandByPoint(ze.min),Oe.expandByPoint(ze.max))}Oe.getCenter(n);let i=0;for(let e=0,a=t.count;e<a;e++)Be.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Be));if(e)for(let a=0,r=e.length;a<r;a++){const r=e[a],s=this.morphTargetsRelative;for(let e=0,a=r.count;e<a;e++)Be.fromBufferAttribute(r,e),s&&(qe.fromBufferAttribute(t,e),Be.add(qe)),i=Math.max(i,n.distanceToSquared(Be))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,a=e.normal.array,r=e.uv.array,s=i.length/3;void 0===e.tangent&&this.setAttribute("tangent",new _e(new Float32Array(4*s),4));const o=e.tangent.array,c=[],l=[];for(let t=0;t<s;t++)c[t]=new k,l[t]=new k;const h=new k,u=new k,d=new k,p=new I,f=new I,m=new I,g=new k,v=new k;function y(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(r,2*t),f.fromArray(r,2*e),m.fromArray(r,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const a=1/(f.x*m.y-m.x*f.y);isFinite(a)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(a),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(a),c[t].add(g),c[e].add(g),c[n].add(g),l[t].add(v),l[e].add(v),l[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,a=i+e.count;t<a;t+=3)y(n[t+0],n[t+1],n[t+2])}const _=new k,M=new k,b=new k,w=new k;function S(t){b.fromArray(a,3*t),w.copy(b);const e=c[t];_.copy(e),_.sub(b.multiplyScalar(b.dot(e))).normalize(),M.crossVectors(w,e);const n=M.dot(l[t])<0?-1:1;o[4*t]=_.x,o[4*t+1]=_.y,o[4*t+2]=_.z,o[4*t+3]=n}for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,a=i+e.count;t<a;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new _e(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new k,a=new k,r=new k,s=new k,o=new k,c=new k,l=new k,h=new k;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),a.fromBufferAttribute(e,p),r.fromBufferAttribute(e,f),l.subVectors(r,a),h.subVectors(i,a),l.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(l),o.add(l),c.add(l),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),a.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),l.subVectors(r,a),h.subVectors(i,a),l.cross(h),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const a=n[i].array,r=t.attributes[i],s=r.array,o=r.itemSize*e,c=Math.min(s.length,a.length-o);for(let t=0,e=o;t<c;t++,e++)a[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Be.fromBufferAttribute(t,e),Be.normalize(),t.setXYZ(e,Be.x,Be.y,Be.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,a=t.normalized,r=new n.constructor(e.length*i);let s=0,o=0;for(let t=0,a=e.length;t<a;t++){s=e[t]*i;for(let t=0;t<i;t++)r[o++]=n[s++]}return new _e(r,i,a)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new He,n=this.index.array,i=this.attributes;for(const a in i){const r=t(i[a],n);e.setAttribute(a,r)}const a=this.morphAttributes;for(const i in a){const r=[],s=a[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);r.push(i)}e.morphAttributes[i]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,n=r.length;t<n;t++){const n=r[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let a=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],r=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];r.push(i.toJSON(t.data))}r.length>0&&(i[e]=r,a=!0)}a&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new He).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const a=t.morphAttributes;for(const t in a){const n=[],i=a[t];for(let t=0,a=i.length;t<a;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Ge=new Mt,Fe=new _t,Ue=new dt,ke=new k,Ve=new k,We=new k,Ze=new k,je=new k,Xe=new k,Ye=new k,Je=new k,Qe=new k,Ke=new I,$e=new I,tn=new I,en=new k,nn=new k;function an(t=new He,e=new ve){Zt.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function rn(t,e,n,i,a,r,s,o,c,l,h,u){ke.fromBufferAttribute(a,l),Ve.fromBufferAttribute(a,h),We.fromBufferAttribute(a,u);const d=t.morphTargetInfluences;if(e.morphTargets&&r&&d){Ye.set(0,0,0),Je.set(0,0,0),Qe.set(0,0,0);for(let t=0,e=r.length;t<e;t++){const e=d[t],n=r[t];0!==e&&(Ze.fromBufferAttribute(n,l),je.fromBufferAttribute(n,h),Xe.fromBufferAttribute(n,u),s?(Ye.addScaledVector(Ze,e),Je.addScaledVector(je,e),Qe.addScaledVector(Xe,e)):(Ye.addScaledVector(Ze.sub(ke),e),Je.addScaledVector(je.sub(Ve),e),Qe.addScaledVector(Xe.sub(We),e)))}ke.add(Ye),Ve.add(Je),We.add(Qe)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(l,ke),t.boneTransform(h,Ve),t.boneTransform(u,We));const p=function(t,e,n,i,a,r,s,o){let c;if(c=1===e.side?i.intersectTriangle(s,r,a,!0,o):i.intersectTriangle(a,r,s,2!==e.side,o),null===c)return null;nn.copy(o),nn.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(nn);return l<n.near||l>n.far?null:{distance:l,point:nn.clone(),object:t}}(t,e,n,i,ke,Ve,We,en);if(p){o&&(Ke.fromBufferAttribute(o,l),$e.fromBufferAttribute(o,h),tn.fromBufferAttribute(o,u),p.uv=oe.getUV(en,ke,Ve,We,Ke,$e,tn,new I)),c&&(Ke.fromBufferAttribute(c,l),$e.fromBufferAttribute(c,h),tn.fromBufferAttribute(c,u),p.uv2=oe.getUV(en,ke,Ve,We,Ke,$e,tn,new I));const t={a:l,b:h,c:u,normal:new k,materialIndex:0};oe.getNormal(ke,Ve,We,t.normal),p.face=t}return p}an.prototype=Object.assign(Object.create(Zt.prototype),{constructor:an,isMesh:!0,copy:function(t){return Zt.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,a=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ue.copy(n.boundingSphere),Ue.applyMatrix4(a),!1===t.ray.intersectsSphere(Ue))return;if(Ge.copy(a).invert(),Fe.copy(t.ray).applyMatrix4(Ge),null!==n.boundingBox&&!1===Fe.intersectsBox(n.boundingBox))return;let r;if(n.isBufferGeometry){const a=n.index,s=n.attributes.position,o=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==a)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=a.getX(n),u=a.getX(n+1),d=a.getX(n+2);r=rn(this,f,t,Fe,s,o,c,l,h,i,u,d),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=p.materialIndex,e.push(r))}}else for(let n=Math.max(0,d.start),u=Math.min(a.count,d.start+d.count);n<u;n+=3){const u=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);r=rn(this,i,t,Fe,s,o,c,l,h,u,d,p),r&&(r.faceIndex=Math.floor(n/3),e.push(r))}else if(void 0!==s)if(Array.isArray(i))for(let n=0,a=u.length;n<a;n++){const a=u[n],p=i[a.materialIndex];for(let n=Math.max(a.start,d.start),i=Math.min(a.start+a.count,d.start+d.count);n<i;n+=3)r=rn(this,p,t,Fe,s,o,c,l,h,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=a.materialIndex,e.push(r))}else for(let n=Math.max(0,d.start),a=Math.min(s.count,d.start+d.count);n<a;n+=3)r=rn(this,i,t,Fe,s,o,c,l,h,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),e.push(r))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class sn extends He{constructor(t=1,e=1,n=1,i=1,a=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:a,depthSegments:r};const s=this;i=Math.floor(i),a=Math.floor(a),r=Math.floor(r);const o=[],c=[],l=[],h=[];let u=0,d=0;function p(t,e,n,i,a,r,p,f,m,g,v){const y=r/m,x=p/g,_=r/2,M=p/2,b=f/2,w=m+1,S=g+1;let T=0,E=0;const A=new k;for(let r=0;r<S;r++){const s=r*x-M;for(let o=0;o<w;o++){const u=o*y-_;A[t]=u*i,A[e]=s*a,A[n]=b,c.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,l.push(A.x,A.y,A.z),h.push(o/m),h.push(1-r/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+w*t,i=u+e+w*(t+1),a=u+(e+1)+w*(t+1),r=u+(e+1)+w*t;o.push(n,i,r),o.push(i,a,r),E+=6}s.addGroup(d,E,v),d+=E,u+=T}p("z","y","x",-1,-1,n,e,t,r,a,0),p("z","y","x",1,-1,n,e,-t,r,a,1),p("x","z","y",1,1,t,n,e,i,r,2),p("x","z","y",1,-1,t,n,-e,i,r,3),p("x","y","z",1,-1,t,e,n,i,a,4),p("x","y","z",-1,-1,t,e,-n,i,a,5),this.setIndex(o),this.setAttribute("position",new Ce(c,3)),this.setAttribute("normal",new Ce(l,3)),this.setAttribute("uv",new Ce(h,2))}}function on(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const a=t[n][i];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?e[n][i]=a.clone():Array.isArray(a)?e[n][i]=a.slice():e[n][i]=a}}return e}function cn(t){const e={};for(let n=0;n<t.length;n++){const i=on(t[n]);for(const t in i)e[t]=i[t]}return e}const ln={clone:on,merge:cn};function hn(t){le.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function un(){Zt.call(this),this.type="Camera",this.matrixWorldInverse=new Mt,this.projectionMatrix=new Mt,this.projectionMatrixInverse=new Mt}function dn(t=50,e=1,n=.1,i=2e3){un.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}hn.prototype=Object.create(le.prototype),hn.prototype.constructor=hn,hn.prototype.isShaderMaterial=!0,hn.prototype.copy=function(t){return le.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=on(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},hn.prototype.toJSON=function(t){const e=le.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},un.prototype=Object.assign(Object.create(Zt.prototype),{constructor:un,isCamera:!0,copy:function(t,e){return Zt.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new k),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Zt.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){Zt.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),dn.prototype=Object.assign(Object.create(un.prototype),{constructor:dn,isPerspectiveCamera:!0,copy:function(t,e){return un.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*D.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*D.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*D.RAD2DEG*Math.atan(Math.tan(.5*D.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,a,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*D.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,a=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,s=r.fullHeight;a+=r.offsetX*i/t,e-=r.offsetY*n/s,i*=r.width/t,n*=r.height/s}const s=this.filmOffset;0!==s&&(a+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Zt.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const pn=90;class fn extends Zt{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new dn(pn,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new k(1,0,0)),this.add(i);const a=new dn(pn,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new k(-1,0,0)),this.add(a);const r=new dn(pn,1,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new k(0,1,0)),this.add(r);const s=new dn(pn,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new k(0,-1,0)),this.add(s);const o=new dn(pn,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new k(0,0,1)),this.add(o);const c=new dn(pn,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new k(0,0,-1)),this.add(c)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,a,r,s,o,c]=this.children,l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,a),t.setRenderTarget(n,2),t.render(e,r),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l}}class mn extends B{constructor(t,e,n,i,a,r,s,o,c,l){super(t=void 0!==t?t:[],e=void 0!==e?e:301,n,i,a,r,s=void 0!==s?s:f,o,c,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}mn.prototype.isCubeTexture=!0;class gn extends F{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new mn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:o,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=m,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",a="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new sn(5,5,5),s=new hn({name:"CubemapFromEquirect",uniforms:on(n),vertexShader:i,fragmentShader:a,side:1,blending:0});s.uniforms.tEquirect.value=e;const l=new an(r,s),h=e.minFilter;return e.minFilter===c&&(e.minFilter=o),new fn(1,10,this).update(t,l),e.minFilter=h,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,i){const a=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,i);t.setRenderTarget(a)}}gn.prototype.isWebGLCubeRenderTarget=!0;class vn extends B{constructor(t,e,n,i,a,r,o,c,l,h,u,d){super(null,r,o,c,l,h,i,a,u,d),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:s,this.minFilter=void 0!==h?h:s,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}vn.prototype.isDataTexture=!0;const yn=new dt,xn=new k;class _n{constructor(t=new Jt,e=new Jt,n=new Jt,i=new Jt,a=new Jt,r=new Jt){this.planes=[t,e,n,i,a,r]}set(t,e,n,i,a,r){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(a),s[5].copy(r),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],a=n[1],r=n[2],s=n[3],o=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(s-i,h-o,f-u,y-m).normalize(),e[1].setComponents(s+i,h+o,f+u,y+m).normalize(),e[2].setComponents(s+a,h+c,f+d,y+g).normalize(),e[3].setComponents(s-a,h-c,f-d,y-g).normalize(),e[4].setComponents(s-r,h-l,f-p,y-v).normalize(),e[5].setComponents(s+r,h+l,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),yn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(yn)}intersectsSprite(t){return yn.center.set(0,0,0),yn.radius=.7071067811865476,yn.applyMatrix4(t.matrixWorld),this.intersectsSphere(yn)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(xn.x=i.normal.x>0?t.max.x:t.min.x,xn.y=i.normal.y>0?t.max.y:t.min.y,xn.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(xn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Mn(){let t=null,e=!1,n=null,i=null;function a(e,r){n(e,r),i=t.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(a),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function bn(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,a){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const r=i.get(e);void 0===r?i.set(e,function(e,i){const a=e.array,r=e.usage,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,a,r),e.onUploadCallback();let o=5126;return a instanceof Float32Array?o=5126:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:a instanceof Int16Array?o=5122:a instanceof Uint32Array?o=5125:a instanceof Int32Array?o=5124:a instanceof Int8Array?o=5120:a instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:e.version}}(e,a)):r.version<e.version&&(function(e,i,a){const r=i.array,s=i.updateRange;t.bindBuffer(a,e),-1===s.count?t.bufferSubData(a,0,r):(n?t.bufferSubData(a,s.offset*r.BYTES_PER_ELEMENT,r,s.offset,s.count):t.bufferSubData(a,s.offset*r.BYTES_PER_ELEMENT,r.subarray(s.offset,s.offset+s.count)),s.count=-1)}(r.buffer,e,a),r.version=e.version)}}}class wn extends He{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const a=t/2,r=e/2,s=Math.floor(n),o=Math.floor(i),c=s+1,l=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-r;for(let n=0;n<c;n++){const i=n*h-a;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+c*t,i=e+c*(t+1),a=e+1+c*(t+1),r=e+1+c*t;d.push(n,i,r),d.push(i,a,r)}this.setIndex(d),this.setAttribute("position",new Ce(p,3)),this.setAttribute("normal",new Ce(f,3)),this.setAttribute("uv",new Ce(m,2))}}const Sn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Tn={common:{diffuse:{value:new ge(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new N},uv2Transform:{value:new N},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new I(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ge(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new N}},sprite:{diffuse:{value:new ge(15658734)},opacity:{value:1},center:{value:new I(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new N}}},En={basic:{uniforms:cn([Tn.common,Tn.specularmap,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.fog]),vertexShader:Sn.meshbasic_vert,fragmentShader:Sn.meshbasic_frag},lambert:{uniforms:cn([Tn.common,Tn.specularmap,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)}}]),vertexShader:Sn.meshlambert_vert,fragmentShader:Sn.meshlambert_frag},phong:{uniforms:cn([Tn.common,Tn.specularmap,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)},specular:{value:new ge(1118481)},shininess:{value:30}}]),vertexShader:Sn.meshphong_vert,fragmentShader:Sn.meshphong_frag},standard:{uniforms:cn([Tn.common,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.roughnessmap,Tn.metalnessmap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Sn.meshphysical_vert,fragmentShader:Sn.meshphysical_frag},toon:{uniforms:cn([Tn.common,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.gradientmap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)}}]),vertexShader:Sn.meshtoon_vert,fragmentShader:Sn.meshtoon_frag},matcap:{uniforms:cn([Tn.common,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.fog,{matcap:{value:null}}]),vertexShader:Sn.meshmatcap_vert,fragmentShader:Sn.meshmatcap_frag},points:{uniforms:cn([Tn.points,Tn.fog]),vertexShader:Sn.points_vert,fragmentShader:Sn.points_frag},dashed:{uniforms:cn([Tn.common,Tn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Sn.linedashed_vert,fragmentShader:Sn.linedashed_frag},depth:{uniforms:cn([Tn.common,Tn.displacementmap]),vertexShader:Sn.depth_vert,fragmentShader:Sn.depth_frag},normal:{uniforms:cn([Tn.common,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,{opacity:{value:1}}]),vertexShader:Sn.normal_vert,fragmentShader:Sn.normal_frag},sprite:{uniforms:cn([Tn.sprite,Tn.fog]),vertexShader:Sn.sprite_vert,fragmentShader:Sn.sprite_frag},background:{uniforms:{uvTransform:{value:new N},t2D:{value:null}},vertexShader:Sn.background_vert,fragmentShader:Sn.background_frag},cube:{uniforms:cn([Tn.envmap,{opacity:{value:1}}]),vertexShader:Sn.cube_vert,fragmentShader:Sn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Sn.equirect_vert,fragmentShader:Sn.equirect_frag},distanceRGBA:{uniforms:cn([Tn.common,Tn.displacementmap,{referencePosition:{value:new k},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Sn.distanceRGBA_vert,fragmentShader:Sn.distanceRGBA_frag},shadow:{uniforms:cn([Tn.lights,Tn.fog,{color:{value:new ge(0)},opacity:{value:1}}]),vertexShader:Sn.shadow_vert,fragmentShader:Sn.shadow_frag}};function An(t,e,n,i,a){const r=new ge(0);let s,o,c=0,l=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,a)}return{getClearColor:function(){return r},setClearColor:function(t,e=1){r.set(t),c=e,d(r,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,d(r,c)},render:function(n,a,p,f){let m=!0===a.isScene?a.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?d(r,c):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||306===m.mapping)?(void 0===o&&(o=new an(new sn(1,1,1),new hn({name:"BackgroundCubeMaterial",uniforms:on(En.cube.uniforms),vertexShader:En.cube.vertexShader,fragmentShader:En.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=m,o.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,l===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new an(new wn(2,2),new hn({name:"BackgroundMaterial",uniforms:on(En.background.uniforms),vertexShader:En.background.vertexShader,fragmentShader:En.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version&&u===t.toneMapping||(s.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Ln(t,e,n,i){const a=t.getParameter(34921),r=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==r,o={},c=d(null);let l=c;function h(e){return i.isWebGL2?t.bindVertexArray(e):r.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):r.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<a;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,a){const r=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;r[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==a&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,a),o[n]=a)}function g(){const e=l.newAttributes,n=l.enabledAttributes;for(let i=0,a=n.length;i<a;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function v(e,n,a,r,s,o){!0!==i.isWebGL2||5124!==a&&5125!==a?t.vertexAttribPointer(e,n,a,r,s,o):t.vertexAttribIPointer(e,n,a,s,o)}function y(){x(),l!==c&&(l=c,h(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(a,c,u,y,x){let _=!1;if(s){const e=function(e,n,a){const s=!0===a.wireframe;let c=o[e.id];void 0===c&&(c={},o[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let h=l[s];return void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():r.createVertexArrayOES()),l[s]=h),h}(y,u,c);l!==e&&(l=e,h(l.object)),_=function(t,e){const n=l.attributes,i=t.attributes;let a=0;for(const t in i){const e=n[t],r=i[t];if(void 0===e)return!0;if(e.attribute!==r)return!0;if(e.data!==r.data)return!0;a++}return l.attributesNum!==a||l.index!==e}(y,x),_&&function(t,e){const n={},i=t.attributes;let a=0;for(const t in i){const e=i[t],r={};r.attribute=e,e.data&&(r.data=e.data),n[t]=r,a++}l.attributes=n,l.attributesNum=a,l.index=e}(y,x)}else{const t=!0===c.wireframe;l.geometry===y.id&&l.program===u.id&&l.wireframe===t||(l.geometry=y.id,l.program=u.id,l.wireframe=t,_=!0)}!0===a.isInstancedMesh&&(_=!0),null!==x&&n.update(x,34963),_&&(function(a,r,s,o){if(!1===i.isWebGL2&&(a.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const c=o.attributes,l=s.getAttributes(),h=r.defaultAttributeValues;for(const e in l){const i=l[e];if(i>=0){const r=c[e];if(void 0!==r){const e=r.normalized,a=r.itemSize,s=n.get(r);if(void 0===s)continue;const c=s.buffer,l=s.type,h=s.bytesPerElement;if(r.isInterleavedBufferAttribute){const n=r.data,s=n.stride,u=r.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(34962,c),v(i,a,l,e,s*h,u*h)}else r.isInstancedBufferAttribute?(m(i,r.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=r.meshPerAttribute*r.count)):f(i),t.bindBuffer(34962,c),v(i,a,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(a.instanceMatrix);if(void 0===e)continue;const r=e.buffer,s=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(34962,r),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(a.instanceColor);if(void 0===e)continue;const r=e.buffer,s=e.type;m(i,1),t.bindBuffer(34962,r),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(a,c,u,y),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function Cn(t,e,n,i){const a=i.isWebGL2;let r;this.setMode=function(t){r=t},this.render=function(e,i){t.drawArrays(r,e,i),n.update(i,r,1)},this.renderInstances=function(i,s,o){if(0===o)return;let c,l;if(a)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](r,i,s,o),n.update(s,r,o)}}function Rn(t,e,n){let i;function a(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),v=h>0,y=r||e.has("OES_texture_float");return{isWebGL2:r,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:a,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:r?t.getParameter(36183):0}}function Pn(t){const e=this;let n=null,i=0,a=!1,r=!1;const s=new Jt,o=new N,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,a){const r=null!==t?t.length:0;let l=null;if(0!==r){if(l=c.value,!0!==a||null===l){const e=i+4*r,a=n.matrixWorldInverse;o.getNormalMatrix(a),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=i;e!==r;++e,n+=4)s.copy(t[e]).applyMatrix4(a,o),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,r){const s=0!==t.length||e||0!==i||a;return a=e,n=h(t,r,0),i=t.length,s},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,l()},this.setState=function(e,s,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!a||null===u||0===u.length||r&&!p)r?h(null):l();else{const t=r?0:i,e=4*t;let a=f.clippingState||null;c.value=a,a=h(u,s,e,o);for(let t=0;t!==e;++t)a[t]=n[t];f.clippingState=a,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Dn(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const a=e.get(n);void 0!==a&&(e.delete(n),a.dispose())}return{get:function(a){if(a&&a.isTexture){const r=a.mapping;if(303===r||304===r){if(e.has(a))return n(e.get(a).texture,a.mapping);{const r=a.image;if(r&&r.height>0){const s=t.getRenderTarget(),o=new gn(r.height/2);return o.fromEquirectangularTexture(t,a),e.set(a,o),t.setRenderTarget(s),a.addEventListener("dispose",i),n(o.texture,a.mapping)}return null}}}return a},dispose:function(){e=new WeakMap}}}function In(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Nn(t,e,n,i){const a={},r=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",s),delete a[o.id];const c=r.get(o);c&&(e.remove(c),r.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,a=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],a=t[e+1],r=t[e+2];n.push(i,a,a,r,r,i)}}else{const t=a.array;s=a.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,a=e+2;n.push(t,i,i,a,a,t)}}const o=new(Pe(n)>65535?Ae:Te)(n,1);o.version=s;const c=r.get(t);c&&e.remove(c),r.set(t,o)}return{get:function(t,e){return!0===a[e.id]||(e.addEventListener("dispose",s),a[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return r.get(t)}}}function qn(t,e,n,i){const a=i.isWebGL2;let r,s,o;this.setMode=function(t){r=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(r,i,s,e*o),n.update(i,r,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(a)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](r,c,s,i*o,l),n.update(c,r,l)}}function On(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function zn(t,e){return t[0]-e[0]}function Bn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Hn(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(a,r,s,o){const c=a.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[r.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[r.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(Bn);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(zn);const u=s.morphTargets&&r.morphAttributes.position,d=s.morphNormals&&r.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],a=e[0],s=e[1];a!==Number.MAX_SAFE_INTEGER&&s?(u&&r.getAttribute("morphTarget"+t)!==u[a]&&r.setAttribute("morphTarget"+t,u[a]),d&&r.getAttribute("morphNormal"+t)!==d[a]&&r.setAttribute("morphNormal"+t,d[a]),n[t]=s,p+=s):(u&&!0===r.hasAttribute("morphTarget"+t)&&r.deleteAttribute("morphTarget"+t),d&&!0===r.hasAttribute("morphNormal"+t)&&r.deleteAttribute("morphNormal"+t),n[t]=0)}const f=r.morphTargetsRelative?1:1-p;o.getUniforms().setValue(t,"morphTargetBaseInfluence",f),o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function Gn(t,e,n,i){let a=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=i.render.frame,o=t.geometry,c=e.get(t,o);return a.get(c)!==s&&(e.update(c),a.set(c,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",r)&&t.addEventListener("dispose",r),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),c},dispose:function(){a=new WeakMap}}}En.physical={uniforms:cn([En.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new I(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ge(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Sn.meshphysical_vert,fragmentShader:Sn.meshphysical_frag};class Fn extends B{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=s,this.minFilter=s,this.wrapR=a,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Fn.prototype.isDataTexture2DArray=!0;class Un extends B{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=s,this.minFilter=s,this.wrapR=a,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Un.prototype.isDataTexture3D=!0;const kn=new B,Vn=new Fn,Wn=new Un,Zn=new mn,jn=[],Xn=[],Yn=new Float32Array(16),Jn=new Float32Array(9),Qn=new Float32Array(4);function Kn(t,e,n){const i=t[0];if(i<=0||i>0)return t;const a=e*n;let r=jn[a];if(void 0===r&&(r=new Float32Array(a),jn[a]=r),0!==e){i.toArray(r,0);for(let i=1,a=0;i!==e;++i)a+=n,t[i].toArray(r,a)}return r}function $n(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function ti(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function ei(t,e){let n=Xn[e];void 0===n&&(n=new Int32Array(e),Xn[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function ni(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ii(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if($n(n,e))return;t.uniform2fv(this.addr,e),ti(n,e)}}function ai(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if($n(n,e))return;t.uniform3fv(this.addr,e),ti(n,e)}}function ri(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if($n(n,e))return;t.uniform4fv(this.addr,e),ti(n,e)}}function si(t,e){const n=this.cache,i=e.elements;if(void 0===i){if($n(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),ti(n,e)}else{if($n(n,i))return;Qn.set(i),t.uniformMatrix2fv(this.addr,!1,Qn),ti(n,i)}}function oi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if($n(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),ti(n,e)}else{if($n(n,i))return;Jn.set(i),t.uniformMatrix3fv(this.addr,!1,Jn),ti(n,i)}}function ci(t,e){const n=this.cache,i=e.elements;if(void 0===i){if($n(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),ti(n,e)}else{if($n(n,i))return;Yn.set(i),t.uniformMatrix4fv(this.addr,!1,Yn),ti(n,i)}}function li(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function hi(t,e){const n=this.cache;$n(n,e)||(t.uniform2iv(this.addr,e),ti(n,e))}function ui(t,e){const n=this.cache;$n(n,e)||(t.uniform3iv(this.addr,e),ti(n,e))}function di(t,e){const n=this.cache;$n(n,e)||(t.uniform4iv(this.addr,e),ti(n,e))}function pi(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function fi(t,e){const n=this.cache;$n(n,e)||(t.uniform2uiv(this.addr,e),ti(n,e))}function mi(t,e){const n=this.cache;$n(n,e)||(t.uniform3uiv(this.addr,e),ti(n,e))}function gi(t,e){const n=this.cache;$n(n,e)||(t.uniform4uiv(this.addr,e),ti(n,e))}function vi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.safeSetTexture2D(e||kn,a)}function yi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTexture3D(e||Wn,a)}function xi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.safeSetTextureCube(e||Zn,a)}function _i(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTexture2DArray(e||Vn,a)}function Mi(t,e){t.uniform1fv(this.addr,e)}function bi(t,e){const n=Kn(e,this.size,2);t.uniform2fv(this.addr,n)}function wi(t,e){const n=Kn(e,this.size,3);t.uniform3fv(this.addr,n)}function Si(t,e){const n=Kn(e,this.size,4);t.uniform4fv(this.addr,n)}function Ti(t,e){const n=Kn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Ei(t,e){const n=Kn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Ai(t,e){const n=Kn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Li(t,e){t.uniform1iv(this.addr,e)}function Ci(t,e){t.uniform2iv(this.addr,e)}function Ri(t,e){t.uniform3iv(this.addr,e)}function Pi(t,e){t.uniform4iv(this.addr,e)}function Di(t,e){t.uniform1uiv(this.addr,e)}function Ii(t,e){t.uniform2uiv(this.addr,e)}function Ni(t,e){t.uniform3uiv(this.addr,e)}function qi(t,e){t.uniform4uiv(this.addr,e)}function Oi(t,e,n){const i=e.length,a=ei(n,i);t.uniform1iv(this.addr,a);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||kn,a[t])}function zi(t,e,n){const i=e.length,a=ei(n,i);t.uniform1iv(this.addr,a);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Zn,a[t])}function Bi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return ni;case 35664:return ii;case 35665:return ai;case 35666:return ri;case 35674:return si;case 35675:return oi;case 35676:return ci;case 5124:case 35670:return li;case 35667:case 35671:return hi;case 35668:case 35672:return ui;case 35669:case 35673:return di;case 5125:return pi;case 36294:return fi;case 36295:return mi;case 36296:return gi;case 35678:case 36198:case 36298:case 36306:case 35682:return vi;case 35679:case 36299:case 36307:return yi;case 35680:case 36300:case 36308:case 36293:return xi;case 36289:case 36303:case 36311:case 36292:return _i}}(e.type)}function Hi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Mi;case 35664:return bi;case 35665:return wi;case 35666:return Si;case 35674:return Ti;case 35675:return Ei;case 35676:return Ai;case 5124:case 35670:return Li;case 35667:case 35671:return Ci;case 35668:case 35672:return Ri;case 35669:case 35673:return Pi;case 5125:return Di;case 36294:return Ii;case 36295:return Ni;case 36296:return qi;case 35678:case 36198:case 36298:case 36306:case 35682:return Oi;case 35680:case 36300:case 36308:case 36293:return zi}}(e.type)}function Gi(t){this.id=t,this.seq=[],this.map={}}Hi.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),ti(e,t)},Gi.prototype.setValue=function(t,e,n){const i=this.seq;for(let a=0,r=i.length;a!==r;++a){const r=i[a];r.setValue(t,e[r.id],n)}};const Fi=/(\w+)(\])?(\[|\.)?/g;function Ui(t,e){t.seq.push(e),t.map[e.id]=e}function ki(t,e,n){const i=t.name,a=i.length;for(Fi.lastIndex=0;;){const r=Fi.exec(i),s=Fi.lastIndex;let o=r[1];const c="]"===r[2],l=r[3];if(c&&(o|=0),void 0===l||"["===l&&s+2===a){Ui(n,void 0===l?new Bi(o,t,e):new Hi(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Gi(o),Ui(n,t)),n=t}}}function Vi(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);ki(n,t.getUniformLocation(e,n.name),this)}}function Wi(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}Vi.prototype.setValue=function(t,e,n,i){const a=this.map[e];void 0!==a&&a.setValue(t,n,i)},Vi.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},Vi.upload=function(t,e,n,i){for(let a=0,r=e.length;a!==r;++a){const r=e[a],s=n[r.id];!1!==s.needsUpdate&&r.setValue(t,s.value,i)}},Vi.seqWithValue=function(t,e){const n=[];for(let i=0,a=t.length;i!==a;++i){const a=t[i];a.id in e&&n.push(a)}return n};let Zi=0;function ji(t){switch(t){case S:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Xi(t,e,n){const i=t.getShaderParameter(e,35713),a=t.getShaderInfoLog(e).trim();return i&&""===a?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+a+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Yi(t,e){const n=ji(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ji(t,e){const n=ji(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Qi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ki(t){return""!==t}function $i(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ta(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ea=/^[ \t]*#include +<([\w\d./]+)>/gm;function na(t){return t.replace(ea,ia)}function ia(t,e){const n=Sn[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return na(n)}const aa=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ra=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sa(t){return t.replace(ra,ca).replace(aa,oa)}function oa(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ca(0,e,n,i)}function ca(t,e,n,i){let a="";for(let t=parseInt(e);t<parseInt(n);t++)a+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return a}function la(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ha(t,e,n,i){const a=t.getContext(),r=n.defines;let s=n.vertexShader,o=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ki).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(r),m=a.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Ki).join("\n"),g.length>0&&(g+="\n"),v=[p,f].filter(Ki).join("\n"),v.length>0&&(v+="\n")):(g=[la(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ki).join("\n"),v=[p,la(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Sn.tonemapping_pars_fragment:"",0!==n.toneMapping?Qi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Sn.encodings_pars_fragment,n.map?Yi("mapTexelToLinear",n.mapEncoding):"",n.matcap?Yi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Yi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Yi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Yi("lightMapTexelToLinear",n.lightMapEncoding):"",Ji("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ki).join("\n")),s=na(s),s=$i(s,n),s=ta(s,n),o=na(o),o=$i(o,n),o=ta(o,n),s=sa(s),o=sa(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===L?"":"out highp vec4 pc_fragColor;",n.glslVersion===L?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+o,_=Wi(a,35633,y+g+s),M=Wi(a,35632,x);if(a.attachShader(m,_),a.attachShader(m,M),void 0!==n.index0AttributeName?a.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&a.bindAttribLocation(m,0,"position"),a.linkProgram(m),t.debug.checkShaderErrors){const t=a.getProgramInfoLog(m).trim(),e=a.getShaderInfoLog(_).trim(),n=a.getShaderInfoLog(M).trim();let i=!0,r=!0;if(!1===a.getProgramParameter(m,35714)){i=!1;const e=Xi(a,_,"vertex"),n=Xi(a,M,"fragment");console.error("THREE.WebGLProgram: shader error: ",a.getError(),"35715",a.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(r=!1);r&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}let b,w;return a.deleteShader(_),a.deleteShader(M),this.getUniforms=function(){return void 0===b&&(b=new Vi(a,m)),b},this.getAttributes=function(){return void 0===w&&(w=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let a=0;a<i;a++){const i=t.getActiveAttrib(e,a).name;n[i]=t.getAttribLocation(e,i)}return n}(a,m)),w},this.destroy=function(){i.releaseStatesOfProgram(this),a.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=Zi++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=M,this}function ua(t,e,n,i,a,r){const s=[],o=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=S,e}return{getParameters:function(a,s,f,g,v){const y=g.fog,x=a.isMeshStandardMaterial?g.environment:null,_=e.get(a.envMap||x),M=p[a.type],b=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;let w,S;if(null!==a.precision&&(d=i.getMaxPrecision(a.precision),d!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",d,"instead.")),M){const t=En[M];w=t.vertexShader,S=t.fragmentShader}else w=a.vertexShader,S=a.fragmentShader;const T=t.getRenderTarget();return{isWebGL2:o,shaderID:M,shaderName:a.type,vertexShader:w,fragmentShader:S,defines:a.defines,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:u,outputEncoding:null!==T?m(T.texture):t.outputEncoding,map:!!a.map,mapEncoding:m(a.map),matcap:!!a.matcap,matcapEncoding:m(a.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:m(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!a.lightMap,lightMapEncoding:m(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:m(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:1===a.normalMapType,tangentSpaceNormalMap:0===a.normalMapType,clearcoatMap:!!a.clearcoatMap,clearcoatRoughnessMap:!!a.clearcoatRoughnessMap,clearcoatNormalMap:!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,gradientMap:!!a.gradientMap,sheen:!!a.sheen,transmissionMap:!!a.transmissionMap,combine:a.combine,vertexTangents:a.normalMap&&a.vertexTangents,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.displacementMap||a.transmissionMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmissionMap||!a.displacementMap),fog:!!y,useFog:a.fog,fogExp2:y&&y.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:a.skinning&&b>0,maxBones:b,useVertexTexture:l,morphTargets:a.morphTargets,morphNormals:a.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:a.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,alphaTest:a.alphaTest,doubleSided:2===a.side,flipSided:1===a.side,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=En[e];n=ln.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new ha(t,n,e,a),s.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function da(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function pa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function fa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function ma(t){const e=[];let n=0;const i=[],a=[],r={id:-1};function s(i,a,s,o,c,l){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:a,material:s,program:u.program||r,groupOrder:o,renderOrder:i.renderOrder,z:c,group:l},e[n]=h):(h.id=i.id,h.object=i,h.geometry=a,h.material=s,h.program=u.program||r,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=c,h.group=l),n++,h}return{opaque:i,transparent:a,init:function(){n=0,i.length=0,a.length=0},push:function(t,e,n,r,o,c){const l=s(t,e,n,r,o,c);(!0===n.transparent?a:i).push(l)},unshift:function(t,e,n,r,o,c){const l=s(t,e,n,r,o,c);(!0===n.transparent?a:i).unshift(l)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||pa),a.length>1&&a.sort(e||fa)}}}function ga(t){let e=new WeakMap;return{get:function(n,i){let a;return!1===e.has(n)?(a=new ma(t),e.set(n,[a])):i>=e.get(n).length?(a=new ma(t),e.get(n).push(a)):a=e.get(n)[i],a},dispose:function(){e=new WeakMap}}}function va(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new k,color:new ge};break;case"SpotLight":n={position:new k,direction:new k,color:new ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new k,color:new ge,distance:0,decay:0};break;case"HemisphereLight":n={direction:new k,skyColor:new ge,groundColor:new ge};break;case"RectAreaLight":n={color:new ge,position:new k,halfWidth:new k,halfHeight:new k}}return t[e.id]=n,n}}}let ya=0;function xa(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function _a(t,e){const n=new va,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new I};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new I,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)a.probe.push(new k);const r=new k,s=new Mt,o=new Mt;return{setup:function(r){let s=0,o=0,c=0;for(let t=0;t<9;t++)a.probe[t].set(0,0,0);let l=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;r.sort(xa);for(let t=0,e=r.length;t<e;t++){const e=r[t],v=e.color,y=e.intensity,x=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=v.r*y,o+=v.g*y,c+=v.b*y;else if(e.isLightProbe)for(let t=0;t<9;t++)a.probe[t].addScaledVector(e.sh.coefficients[t],y);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,a.directionalShadow[l]=n,a.directionalShadowMap[l]=_,a.directionalShadowMatrix[l]=e.shadow.matrix,f++}a.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(v).multiplyScalar(y),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,a.spotShadow[u]=n,a.spotShadowMap[u]=_,a.spotShadowMatrix[u]=e.shadow.matrix,g++}a.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(v).multiplyScalar(y),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),a.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,a.pointShadow[h]=n,a.pointShadowMap[h]=_,a.pointShadowMatrix[h]=e.shadow.matrix,m++}a.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(y),t.groundColor.copy(e.groundColor).multiplyScalar(y),a.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(a.rectAreaLTC1=Tn.LTC_FLOAT_1,a.rectAreaLTC2=Tn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(a.rectAreaLTC1=Tn.LTC_HALF_1,a.rectAreaLTC2=Tn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=s,a.ambient[1]=o,a.ambient[2]=c;const v=a.hash;v.directionalLength===l&&v.pointLength===h&&v.spotLength===u&&v.rectAreaLength===d&&v.hemiLength===p&&v.numDirectionalShadows===f&&v.numPointShadows===m&&v.numSpotShadows===g||(a.directional.length=l,a.spot.length=u,a.rectArea.length=d,a.point.length=h,a.hemi.length=p,a.directionalShadow.length=f,a.directionalShadowMap.length=f,a.pointShadow.length=m,a.pointShadowMap.length=m,a.spotShadow.length=g,a.spotShadowMap.length=g,a.directionalShadowMatrix.length=f,a.pointShadowMatrix.length=m,a.spotShadowMatrix.length=g,v.directionalLength=l,v.pointLength=h,v.spotLength=u,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=f,v.numPointShadows=m,v.numSpotShadows=g,a.version=ya++)},setupView:function(t,e){let n=0,i=0,c=0,l=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=a.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=a.spot[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),c++}else if(d.isRectAreaLight){const t=a.rectArea[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o.identity(),s.copy(d.matrixWorld),s.premultiply(u),o.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),l++}else if(d.isPointLight){const t=a.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=a.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:a}}function Ma(t,e){const n=new _a(t,e),i=[],a=[];return{init:function(){i.length=0,a.length=0},state:{lightsArray:i,shadowsArray:a,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){a.push(t)}}}function ba(t,e){let n=new WeakMap;return{get:function(i,a=0){let r;return!1===n.has(i)?(r=new Ma(t,e),n.set(i,[r])):a>=n.get(i).length?(r=new Ma(t,e),n.get(i).push(r)):r=n.get(i)[a],r},dispose:function(){n=new WeakMap}}}class wa extends le{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}wa.prototype.isMeshDepthMaterial=!0;class Sa extends le{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new k,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Ta(t,e,n){let i=new _n;const a=new I,r=new I,c=new G,l=[],h=[],u={},d=n.maxTextureSize,p={0:1,1:0,2:2},f=new hn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new I},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=f.clone();g.defines.HORIZONTAL_PASS=1;const v=new He;v.setAttribute("position",new _e(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new an(v,f),x=this;function _(n,i){const a=e.update(y);f.uniforms.shadow_pass.value=n.map.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,a,f,y,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,a,g,y,null)}function M(t,e,n){const i=t<<0|e<<1|n<<2;let a=l[i];return void 0===a&&(a=new wa({depthPacking:3201,morphTargets:t,skinning:e}),l[i]=a),a}function b(t,e,n){const i=t<<0|e<<1|n<<2;let a=h[i];return void 0===a&&(a=new Sa({morphTargets:t,skinning:e}),h[i]=a),a}function w(e,n,i,a,r,s,o){let c=null,l=M,h=e.customDepthMaterial;if(!0===a.isPointLight&&(l=b,h=e.customDistanceMaterial),void 0===h){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let a=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?a=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),c=l(t,a,!0===e.isInstancedMesh)}else c=h;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=u[t];void 0===n&&(n={},u[t]=n);let a=n[e];void 0===a&&(a=c.clone(),n[e]=a),c=a}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=3===o?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:p[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===a.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(a.matrixWorld),c.nearDistance=r,c.farDistance=s),c}function S(n,a,r,s,o){if(!1===n.visible)return;if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=e.update(n),a=n.material;if(Array.isArray(a)){const e=i.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],h=a[l.materialIndex];if(h&&h.visible){const e=w(n,i,h,s,r.near,r.far,o);t.renderBufferDirect(r,null,i,e,n,l)}}}else if(a.visible){const e=w(n,i,a,s,r.near,r.far,o);t.renderBufferDirect(r,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)S(c[t],a,r,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,l){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),u=t.getActiveCubeFace(),p=t.getActiveMipmapLevel(),f=t.state;f.setBlending(0),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let h=0,u=e.length;h<u;h++){const u=e[h],p=u.shadow;if(void 0===p){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===p.autoUpdate&&!1===p.needsUpdate)continue;a.copy(p.mapSize);const g=p.getFrameExtents();if(a.multiply(g),r.copy(p.mapSize),(a.x>d||a.y>d)&&(a.x>d&&(r.x=Math.floor(d/g.x),a.x=r.x*g.x,p.mapSize.x=r.x),a.y>d&&(r.y=Math.floor(d/g.y),a.y=r.y*g.y,p.mapSize.y=r.y)),null===p.map&&!p.isPointLightShadow&&3===this.type){const t={minFilter:o,magFilter:o,format:m};p.map=new F(a.x,a.y,t),p.map.texture.name=u.name+".shadowMap",p.mapPass=new F(a.x,a.y,t),p.camera.updateProjectionMatrix()}if(null===p.map){const t={minFilter:s,magFilter:s,format:m};p.map=new F(a.x,a.y,t),p.map.texture.name=u.name+".shadowMap",p.camera.updateProjectionMatrix()}t.setRenderTarget(p.map),t.clear();const v=p.getViewportCount();for(let t=0;t<v;t++){const e=p.getViewport(t);c.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),f.viewport(c),p.updateMatrices(u,t),i=p.getFrustum(),S(n,l,p.camera,u,this.type)}p.isPointLightShadow||3!==this.type||_(p,l),p.needsUpdate=!1}x.needsUpdate=!1,t.setRenderTarget(h,u,p)}}function Ea(e,n,i){const a=i.isWebGL2,r=new function(){let t=!1;const n=new G;let i=null;const a=new G(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,r,s,o){!0===o&&(t*=s,i*=s,r*=s),n.set(t,i,r,s),!1===a.equals(n)&&(e.clearColor(t,i,r,s),a.copy(n))},reset:function(){t=!1,i=null,a.set(-1,0,0,0)}}},s=new function(){let t=!1,n=null,i=null,a=null;return{setTest:function(t){t?O(2929):z(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){a!==t&&(e.clearDepth(t),a=t)},reset:function(){t=!1,n=null,i=null,a=null}}},o=new function(){let t=!1,n=null,i=null,a=null,r=null,s=null,o=null,c=null,l=null;return{setTest:function(e){t||(e?O(2960):z(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){i===t&&a===n&&r===s||(e.stencilFunc(t,n,s),i=t,a=n,r=s)},setOp:function(t,n,i){s===t&&o===n&&c===i||(e.stencilOp(t,n,i),s=t,o=n,c=i)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,i=null,a=null,r=null,s=null,o=null,c=null,l=null}}};let c={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,x=null,_=!1,M=null,b=null,w=null,S=null,T=null;const E=e.getParameter(35661);let A=!1,L=0;const C=e.getParameter(7938);-1!==C.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(C)[1]),A=L>=1):-1!==C.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(C)[1]),A=L>=2);let R=null,P={};const D=new G(0,0,e.canvas.width,e.canvas.height),I=new G(0,0,e.canvas.width,e.canvas.height);function N(t,n,i){const a=new Uint8Array(4),r=e.createTexture();e.bindTexture(t,r),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,a);return r}const q={};function O(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function z(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}q[3553]=N(3553,3553,1),q[34067]=N(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),o.setClear(0),O(2929),s.setFunc(3),U(!1),k(1),O(2884),F(0);const B={[t]:32774,101:32778,102:32779};if(a)B[103]=32775,B[104]=32776;else{const t=n.get("EXT_blend_minmax");null!==t&&(B[103]=t.MIN_EXT,B[104]=t.MAX_EXT)}const H={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function F(n,i,a,r,s,o,c,l){if(0!==n){if(!1===d&&(O(3042),d=!0),5===n)s=s||i,o=o||a,c=c||r,i===f&&s===v||(e.blendEquationSeparate(B[i],B[s]),f=i,v=s),a===m&&r===g&&o===y&&c===x||(e.blendFuncSeparate(H[a],H[r],H[o],H[c]),m=a,g=r,y=o,x=c),p=n,_=null;else if(n!==p||l!==_){if(f===t&&v===t||(e.blendEquation(32774),f=t,v=t),l)switch(n){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}else switch(n){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}m=null,g=null,y=null,x=null,p=n,_=l}}else!0===d&&(z(3042),d=!1)}function U(t){M!==t&&(t?e.frontFace(2304):e.frontFace(2305),M=t)}function k(t){0!==t?(O(2884),t!==b&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):z(2884),b=t}function V(t,n,i){t?(O(32823),S===n&&T===i||(e.polygonOffset(n,i),S=n,T=i)):z(32823)}function W(t){void 0===t&&(t=33984+E-1),R!==t&&(e.activeTexture(t),R=t)}return{buffers:{color:r,depth:s,stencil:o},enable:O,disable:z,bindFramebuffer:function(t,n){null===n&&null!==l&&(n=l),h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n)},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:F,setMaterial:function(t,e){2===t.side?z(2884):O(2884);let n=1===t.side;e&&(n=!n),U(n),1===t.blending&&!1===t.transparent?F(0):F(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),r.setMask(t.colorWrite);const i=t.stencilWrite;o.setTest(i),i&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),V(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?O(32926):z(32926)},setFlipSided:U,setCullFace:k,setLineWidth:function(t){t!==w&&(A&&e.lineWidth(t),w=t)},setPolygonOffset:V,setScissorTest:function(t){t?O(3089):z(3089)},activeTexture:W,bindTexture:function(t,n){null===R&&W();let i=P[R];void 0===i&&(i={type:void 0,texture:void 0},P[R]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||q[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=P[R];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===D.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),D.copy(t))},viewport:function(t){!1===I.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),I.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===a&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},R=null,P={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,x=null,_=!1,M=null,b=null,w=null,S=null,T=null,D.set(0,0,e.canvas.width,e.canvas.height),I.set(0,0,e.canvas.width,e.canvas.height),r.reset(),s.reset(),o.reset()}}}function Aa(t,n,i,y,x,_,M){const b=x.isWebGL2,w=x.maxTextures,S=x.maxCubemapSize,T=x.maxTextureSize,E=x.maxSamples,A=new WeakMap;let L,C=!1;try{C="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function R(t,e){return C?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function P(t,e,n,i){let a=1;if((t.width>i||t.height>i)&&(a=i/Math.max(t.width,t.height)),a<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?D.floorPowerOfTwo:Math.floor,r=i(a*t.width),s=i(a*t.height);void 0===L&&(L=R(r,s));const o=n?R(r,s):L;return o.width=r,o.height=s,o.getContext("2d").drawImage(t,0,0,r,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+r+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function I(t){return D.isPowerOfTwo(t.width)&&D.isPowerOfTwo(t.height)}function N(t,e){return t.generateMipmaps&&e&&t.minFilter!==s&&t.minFilter!==o}function q(e,n,i,a){t.generateMipmap(e),y.get(n).__maxMipLevel=Math.log2(Math.max(i,a))}function O(e,i,a){if(!1===b)return i;if(null!==e){if(void 0!==t[e])return t[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let r=i;return 6403===i&&(5126===a&&(r=33326),5131===a&&(r=33325),5121===a&&(r=33321)),6407===i&&(5126===a&&(r=34837),5131===a&&(r=34843),5121===a&&(r=32849)),6408===i&&(5126===a&&(r=34836),5131===a&&(r=34842),5121===a&&(r=32856)),33325!==r&&33326!==r&&34842!==r&&34836!==r||n.get("EXT_color_buffer_float"),r}function z(t){return t===s||1004===t||1005===t?9728:9729}function B(e){const n=e.target;n.removeEventListener("dispose",B),function(e){const n=y.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),y.remove(e))}(n),n.isVideoTexture&&A.delete(n),M.memory.textures--}function H(e){const n=e.target;n.removeEventListener("dispose",H),function(e){const n=e.texture,i=y.get(e),a=y.get(n);if(e){if(void 0!==a.__webglTexture&&t.deleteTexture(a.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);y.remove(n),y.remove(e)}}(n),M.memory.textures--}let G=0;function F(t,e){const n=y.get(t);if(t.isVideoTexture&&function(t){const e=M.render.frame;A.get(t)!==e&&(A.set(t,e),t.update())}(t),t.version>0&&n.__version!==t.version){const i=t.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void j(n,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,n.__webglTexture)}function U(e,n){const a=y.get(e);e.version>0&&a.__version!==e.version?function(e,n,a){if(6!==n.image.length)return;Z(e,n),i.activeTexture(33984+a),i.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const r=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),s=n.image[0]&&n.image[0].isDataTexture,o=[];for(let t=0;t<6;t++)o[t]=r||s?s?n.image[t].image:n.image[t]:P(n.image[t],!1,!0,S);const c=o[0],l=I(c)||b,h=_.convert(n.format),u=_.convert(n.type),d=O(n.internalFormat,h,u);let p;if(W(34067,n,l),r){for(let t=0;t<6;t++){p=o[t].mipmaps;for(let e=0;e<p.length;e++){const a=p[e];n.format!==m&&n.format!==f?null!==h?i.compressedTexImage2D(34069+t,e,d,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+t,e,d,a.width,a.height,0,h,u,a.data)}}e.__maxMipLevel=p.length-1}else{p=n.mipmaps;for(let t=0;t<6;t++)if(s){i.texImage2D(34069+t,0,d,o[t].width,o[t].height,0,h,u,o[t].data);for(let e=0;e<p.length;e++){const n=p[e].image[t].image;i.texImage2D(34069+t,e+1,d,n.width,n.height,0,h,u,n.data)}}else{i.texImage2D(34069+t,0,d,h,u,o[t]);for(let e=0;e<p.length;e++){const n=p[e];i.texImage2D(34069+t,e+1,d,h,u,n.image[t])}}e.__maxMipLevel=p.length}N(n,l)&&q(34067,n,c.width,c.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(a,e,n):(i.activeTexture(33984+n),i.bindTexture(34067,a.__webglTexture))}const k={[e]:10497,[a]:33071,[r]:33648},V={[s]:9728,1004:9984,1005:9986,[o]:9729,1007:9985,[c]:9987};function W(e,i,r){if(r?(t.texParameteri(e,10242,k[i.wrapS]),t.texParameteri(e,10243,k[i.wrapT]),32879!==e&&35866!==e||t.texParameteri(e,32882,k[i.wrapR]),t.texParameteri(e,10240,V[i.magFilter]),t.texParameteri(e,10241,V[i.minFilter])):(t.texParameteri(e,10242,33071),t.texParameteri(e,10243,33071),32879!==e&&35866!==e||t.texParameteri(e,32882,33071),i.wrapS===a&&i.wrapT===a||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(e,10240,z(i.magFilter)),t.texParameteri(e,10241,z(i.minFilter)),i.minFilter!==s&&i.minFilter!==o&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){const a=n.get("EXT_texture_filter_anisotropic");if(i.type===u&&!1===n.has("OES_texture_float_linear"))return;if(!1===b&&i.type===d&&!1===n.has("OES_texture_half_float_linear"))return;(i.anisotropy>1||y.get(i).__currentAnisotropy)&&(t.texParameterf(e,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,x.getMaxAnisotropy())),y.get(i).__currentAnisotropy=i.anisotropy)}}function Z(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",B),e.__webglTexture=t.createTexture(),M.memory.textures++)}function j(e,n,r){let c=3553;n.isDataTexture2DArray&&(c=35866),n.isDataTexture3D&&(c=32879),Z(e,n),i.activeTexture(33984+r),i.bindTexture(c,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const d=function(t){return!b&&(t.wrapS!==a||t.wrapT!==a||t.minFilter!==s&&t.minFilter!==o)}(n)&&!1===I(n.image),y=P(n.image,d,!1,T),x=I(y)||b,M=_.convert(n.format);let w,S=_.convert(n.type),E=O(n.internalFormat,M,S);W(c,n,x);const A=n.mipmaps;if(n.isDepthTexture)E=6402,b?E=n.type===u?36012:n.type===h?33190:n.type===p?35056:33189:n.type===u&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===g&&6402===E&&n.type!==l&&n.type!==h&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=l,S=_.convert(n.type)),n.format===v&&6402===E&&(E=34041,n.type!==p&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=p,S=_.convert(n.type))),i.texImage2D(3553,0,E,y.width,y.height,0,M,S,null);else if(n.isDataTexture)if(A.length>0&&x){for(let t=0,e=A.length;t<e;t++)w=A[t],i.texImage2D(3553,t,E,w.width,w.height,0,M,S,w.data);n.generateMipmaps=!1,e.__maxMipLevel=A.length-1}else i.texImage2D(3553,0,E,y.width,y.height,0,M,S,y.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=A.length;t<e;t++)w=A[t],n.format!==m&&n.format!==f?null!==M?i.compressedTexImage2D(3553,t,E,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,t,E,w.width,w.height,0,M,S,w.data);e.__maxMipLevel=A.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,E,y.width,y.height,y.depth,0,M,S,y.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,E,y.width,y.height,y.depth,0,M,S,y.data),e.__maxMipLevel=0;else if(A.length>0&&x){for(let t=0,e=A.length;t<e;t++)w=A[t],i.texImage2D(3553,t,E,M,S,w);n.generateMipmaps=!1,e.__maxMipLevel=A.length-1}else i.texImage2D(3553,0,E,M,S,y),e.__maxMipLevel=0;N(n,x)&&q(c,n,y.width,y.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function X(e,n,a,r){const s=n.texture,o=_.convert(s.format),c=_.convert(s.type),l=O(s.internalFormat,o,c);32879===r||35866===r?i.texImage3D(r,0,l,n.width,n.height,n.depth,0,o,c,null):i.texImage2D(r,0,l,n.width,n.height,0,o,c,null),i.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,a,r,y.get(s).__webglTexture,0),i.bindFramebuffer(36160,null)}function Y(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let a=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===u?a=36012:e.type===h&&(a=33190));const i=J(n);t.renderbufferStorageMultisample(36161,i,a,n.width,n.height)}else t.renderbufferStorage(36161,a,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,a=_.convert(e.format),r=_.convert(e.type),s=O(e.internalFormat,a,r);if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height)}t.bindRenderbuffer(36161,null)}function J(t){return b&&t.isWebGLMultisampleRenderTarget?Math.min(E,t.samples):0}let Q=!1,K=!1;this.allocateTextureUnit=function(){const t=G;return t>=w&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+w),G+=1,t},this.resetTextureUnits=function(){G=0},this.setTexture2D=F,this.setTexture2DArray=function(t,e){const n=y.get(t);t.version>0&&n.__version!==t.version?j(n,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){const n=y.get(t);t.version>0&&n.__version!==t.version?j(n,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,n.__webglTexture))},this.setTextureCube=U,this.setupRenderTarget=function(e){const n=e.texture,a=y.get(e),r=y.get(n);e.addEventListener("dispose",H),r.__webglTexture=t.createTexture(),r.__version=n.version,M.memory.textures++;const s=!0===e.isWebGLCubeRenderTarget,o=!0===e.isWebGLMultisampleRenderTarget,c=n.isDataTexture3D||n.isDataTexture2DArray,l=I(e)||b;if(!b||n.format!==f||n.type!==u&&n.type!==d||(n.format=m,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),s){a.__webglFramebuffer=[];for(let e=0;e<6;e++)a.__webglFramebuffer[e]=t.createFramebuffer()}else if(a.__webglFramebuffer=t.createFramebuffer(),o)if(b){a.__webglMultisampledFramebuffer=t.createFramebuffer(),a.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,a.__webglColorRenderbuffer);const r=_.convert(n.format),s=_.convert(n.type),o=O(n.internalFormat,r,s),c=J(e);t.renderbufferStorageMultisample(36161,c,o,e.width,e.height),i.bindFramebuffer(36160,a.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,a.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(a.__webglDepthRenderbuffer=t.createRenderbuffer(),Y(a.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(s){i.bindTexture(34067,r.__webglTexture),W(34067,n,l);for(let t=0;t<6;t++)X(a.__webglFramebuffer[t],e,36064,34069+t);N(n,l)&&q(34067,n,e.width,e.height),i.bindTexture(34067,null)}else{let t=3553;c&&(b?t=n.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),i.bindTexture(t,r.__webglTexture),W(t,n,l),X(a.__webglFramebuffer,e,36064,t),N(n,l)&&q(3553,n,e.width,e.height),i.bindTexture(3553,null)}e.depthBuffer&&function(e){const n=y.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");y.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),F(n.depthTexture,0);const a=y.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===g)t.framebufferTexture2D(36160,36096,3553,a,0);else{if(n.depthTexture.format!==v)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,a,0)}}(n.__webglFramebuffer,e)}else if(a){n.__webglDepthbuffer=[];for(let a=0;a<6;a++)i.bindFramebuffer(36160,n.__webglFramebuffer[a]),n.__webglDepthbuffer[a]=t.createRenderbuffer(),Y(n.__webglDepthbuffer[a],e,!1)}else i.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),Y(n.__webglDepthbuffer,e,!1);i.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(N(e,I(t)||b)){const n=t.isWebGLCubeRenderTarget?34067:3553,a=y.get(e).__webglTexture;i.bindTexture(n,a),q(n,e,t.width,t.height),i.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(b){const n=y.get(e);i.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,n.__webglFramebuffer);const a=e.width,r=e.height;let s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024),t.blitFramebuffer(0,0,a,r,0,0,a,r,s,9728),i.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===Q&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),t=t.texture),F(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===K&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),K=!0),t=t.texture),U(t,e)}}function La(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===l)return 5123;if(1013===t)return 5124;if(t===h)return 5125;if(t===u)return 5126;if(t===d)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===f)return 6407;if(t===m)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===g)return 6402;if(t===v)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===p?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}Sa.prototype.isMeshDistanceMaterial=!0;class Ca extends dn{constructor(t=[]){super(),this.cameras=t}}Ca.prototype.isArrayCamera=!0;class Ra extends Zt{constructor(){super(),this.type="Group"}}function Pa(){this._targetRay=null,this._grip=null,this._hand=null}function Da(t,e){const n=this,i=t.state;let a=null,r=1,s=null,o="local-floor",c=null;const l=[],h=new Map,u=new dn;u.layers.enable(1),u.viewport=new G;const d=new dn;d.layers.enable(2),d.viewport=new G;const p=[u,d],f=new Ca;f.layers.enable(1),f.layers.enable(2);let m=null,g=null;function v(t){const e=h.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function y(){h.forEach((function(t,e){t.disconnect(e)})),h.clear(),m=null,g=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(t){const e=a.inputSources;for(let t=0;t<l.length;t++)h.set(e[t],l[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=h.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),h.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=h.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new Pa,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new Pa,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new Pa,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return a},this.setSession=async function(t){if(a=t,null!==a){a.addEventListener("select",v),a.addEventListener("selectstart",v),a.addEventListener("selectend",v),a.addEventListener("squeeze",v),a.addEventListener("squeezestart",v),a.addEventListener("squeezeend",v),a.addEventListener("end",y),a.addEventListener("inputsourceschange",x);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const i={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:r},c=new XRWebGLLayer(a,e,i);a.updateRenderState({baseLayer:c}),s=await a.requestReferenceSpace(o),S.setContext(a),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const _=new k,M=new k;function b(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){f.near=d.near=u.near=t.near,f.far=d.far=u.far=t.far,m===f.near&&g===f.far||(a.updateRenderState({depthNear:f.near,depthFar:f.far}),m=f.near,g=f.far);const e=t.parent,n=f.cameras;b(f,e);for(let t=0;t<n.length;t++)b(n[t],e);t.matrixWorld.copy(f.matrixWorld),t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){_.setFromMatrixPosition(e.matrixWorld),M.setFromMatrixPosition(n.matrixWorld);const i=_.distanceTo(M),a=e.projectionMatrix.elements,r=n.projectionMatrix.elements,s=a[14]/(a[10]-1),o=a[14]/(a[10]+1),c=(a[9]+1)/a[5],l=(a[9]-1)/a[5],h=(a[8]-1)/a[0],u=(r[8]+1)/r[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=o+f,y=d-m,x=p+(i-m),b=c*o/v*g,w=l*o/v*g;t.projectionMatrix.makePerspective(y,x,b,w,g,v)}(f,u,d):f.projectionMatrix.copy(u.projectionMatrix),f};let w=null;const S=new Mn;S.setAnimationLoop((function(t,e){if(c=e.getViewerPose(s),null!==c){const t=c.views,e=a.renderState.baseLayer;i.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const a=t[i],r=e.getViewport(a),s=p[i];s.matrix.fromArray(a.transform.matrix),s.projectionMatrix.fromArray(a.projectionMatrix),s.viewport.set(r.x,r.y,r.width,r.height),0===i&&f.matrix.copy(s.matrix),!0===n&&f.cameras.push(s)}}const n=a.inputSources;for(let t=0;t<l.length;t++){const i=l[t],a=n[t];i.update(a,e,s)}w&&w(t,e)})),this.setAnimationLoop=function(t){w=t},this.dispose=function(){}}function Ia(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const a=t.get(i).__maxMipLevel;void 0!==a&&(e.maxMipLevel.value=a)}let a,r;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?a=n.map:n.specularMap?a=n.specularMap:n.displacementMap?a=n.displacementMap:n.normalMap?a=n.normalMap:n.bumpMap?a=n.bumpMap:n.roughnessMap?a=n.roughnessMap:n.metalnessMap?a=n.metalnessMap:n.alphaMap?a=n.alphaMap:n.emissiveMap?a=n.emissiveMap:n.clearcoatMap?a=n.clearcoatMap:n.clearcoatNormalMap?a=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(a=n.clearcoatRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uvTransform.value.copy(a.matrix)),n.aoMap?r=n.aoMap:n.lightMap&&(r=n.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uv2Transform.value.copy(r.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,a,r){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){let a;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?a=e.map:e.alphaMap&&(a=e.alphaMap),void 0!==a&&(!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uvTransform.value.copy(a.matrix))}(t,i,a,r):i.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Na(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,a=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let p=null,f=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=S,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const y=this;let x=!1,_=0,M=0,b=null,w=-1,T=null;const E=new G,A=new G;let L=null,C=e.width,R=e.height,P=1,N=null,q=null;const O=new G(0,0,C,R),z=new G(0,0,C,R);let B=!1;const H=new _n;let F=!1,U=!1;const V=new Mt,W=new k,Z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function j(){return null===b?P:1}let X,Y,J,Q,K,$,tt,et,nt,it,at,rt,st,ot,ct,lt,ht,ut,dt,pt,ft,mt,gt=n;function vt(t,n){for(let i=0;i<t.length;i++){const a=t[i],r=e.getContext(a,n);if(null!==r)return r}return null}try{const t={alpha:i,depth:a,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",_t,!1),e.addEventListener("webglcontextrestored",bt,!1),null===gt){const e=["webgl2","webgl","experimental-webgl"];if(!0===y.isWebGL1Renderer&&e.shift(),gt=vt(e,t),null===gt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===gt.getShaderPrecisionFormat&&(gt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function yt(){X=new In(gt),Y=new Rn(gt,X,t),X.init(Y),ft=new La(gt,X,Y),J=new Ea(gt,X,Y),Q=new On(gt),K=new da,$=new Aa(gt,X,J,K,Y,ft,Q),tt=new Dn(y),et=new bn(gt,Y),mt=new Ln(gt,X,et,Y),nt=new Nn(gt,et,Q,mt),it=new Gn(gt,nt,et,Q),ut=new Hn(gt),ct=new Pn(K),at=new ua(y,tt,X,Y,mt,ct),rt=new Ia(K),st=new ga(K),ot=new ba(X,Y),ht=new An(y,tt,J,it,o),lt=new Ta(y,it,Y),dt=new Cn(gt,X,Q,Y),pt=new qn(gt,X,Q,Y),Q.programs=at.programs,y.capabilities=Y,y.extensions=X,y.properties=K,y.renderLists=st,y.shadowMap=lt,y.state=J,y.info=Q}yt();const xt=new Da(y,gt);function _t(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function bt(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const t=Q.autoReset,e=lt.enabled,n=lt.autoUpdate,i=lt.needsUpdate,a=lt.type;yt(),Q.autoReset=t,lt.enabled=e,lt.autoUpdate=n,lt.needsUpdate=i,lt.type=a}function wt(t){const e=t.target;e.removeEventListener("dispose",wt),function(t){(function(t){const e=K.get(t).programs;void 0!==e&&e.forEach((function(t){at.releaseProgram(t)}))})(t),K.remove(t)}(e)}this.xr=xt,this.getContext=function(){return gt},this.getContextAttributes=function(){return gt.getContextAttributes()},this.forceContextLoss=function(){const t=X.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=X.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(C,R,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new I),t.set(C,R)},this.setSize=function(t,n,i){xt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(C=t,R=n,e.width=Math.floor(t*P),e.height=Math.floor(n*P),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new I),t.set(C*P,R*P).floor()},this.setDrawingBufferSize=function(t,n,i){C=t,R=n,P=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new G),t.copy(E)},this.getViewport=function(t){return t.copy(O)},this.setViewport=function(t,e,n,i){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,i),J.viewport(E.copy(O).multiplyScalar(P).floor())},this.getScissor=function(t){return t.copy(z)},this.setScissor=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),J.scissor(A.copy(z).multiplyScalar(P).floor())},this.getScissorTest=function(){return B},this.setScissorTest=function(t){J.setScissorTest(B=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){q=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new ge),t.copy(ht.getClearColor())},this.setClearColor=function(){ht.setClearColor.apply(ht,arguments)},this.getClearAlpha=function(){return ht.getClearAlpha()},this.setClearAlpha=function(){ht.setClearAlpha.apply(ht,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),gt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",_t,!1),e.removeEventListener("webglcontextrestored",bt,!1),st.dispose(),ot.dispose(),K.dispose(),tt.dispose(),it.dispose(),mt.dispose(),xt.dispose(),xt.removeEventListener("sessionstart",Tt),xt.removeEventListener("sessionend",Et),At.stop()},this.renderBufferImmediate=function(t,e){mt.initAttributes();const n=K.get(t);t.hasPositions&&!n.position&&(n.position=gt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=gt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=gt.createBuffer()),t.hasColors&&!n.color&&(n.color=gt.createBuffer());const i=e.getAttributes();t.hasPositions&&(gt.bindBuffer(34962,n.position),gt.bufferData(34962,t.positionArray,35048),mt.enableAttribute(i.position),gt.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(gt.bindBuffer(34962,n.normal),gt.bufferData(34962,t.normalArray,35048),mt.enableAttribute(i.normal),gt.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(gt.bindBuffer(34962,n.uv),gt.bufferData(34962,t.uvArray,35048),mt.enableAttribute(i.uv),gt.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(gt.bindBuffer(34962,n.color),gt.bufferData(34962,t.colorArray,35048),mt.enableAttribute(i.color),gt.vertexAttribPointer(i.color,3,5126,!1,0,0)),mt.disableUnusedAttributes(),gt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,a,r){null===e&&(e=Z);const s=a.isMesh&&a.matrixWorld.determinant()<0,o=It(t,e,i,a);J.setMaterial(i,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let h,u=1;!0===i.wireframe&&(c=nt.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&ut.update(a,n,i,o),mt.setup(a,i,o,n,c);let d=dt;null!==c&&(h=et.get(c),d=pt,d.setIndex(h));const p=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==r?r.start*u:0,v=null!==r?r.count*u:1/0,y=Math.max(f,g),x=Math.min(p,f+m,g+v)-1,_=Math.max(0,x-y+1);if(0!==_){if(a.isMesh)!0===i.wireframe?(J.setLineWidth(i.wireframeLinewidth*j()),d.setMode(1)):d.setMode(4);else if(a.isLine){let t=i.linewidth;void 0===t&&(t=1),J.setLineWidth(t*j()),a.isLineSegments?d.setMode(1):a.isLineLoop?d.setMode(2):d.setMode(3)}else a.isPoints?d.setMode(0):a.isSprite&&d.setMode(4);if(a.isInstancedMesh)d.renderInstances(y,_,a.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,_,t)}else d.render(y,_)}},this.compile=function(t,e){f=ot.get(t),f.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(f.pushLight(t),t.castShadow&&f.pushShadow(t))})),f.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++)Pt(n[i],t,e);else Pt(n,t,e)}))};let St=null;function Tt(){At.stop()}function Et(){At.start()}const At=new Mn;function Lt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)f.pushLight(t),t.castShadow&&f.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||H.intersectsSprite(t)){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=it.update(t),a=t.material;a.visible&&p.push(t,e,a,n,W.z,null)}}else if(t.isImmediateRenderObject)i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V),p.push(t,null,t.material,n,W.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Q.render.frame&&(t.skeleton.update(),t.skeleton.frame=Q.render.frame),!t.frustumCulled||H.intersectsObject(t))){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=it.update(t),a=t.material;if(Array.isArray(a)){const i=e.groups;for(let r=0,s=i.length;r<s;r++){const s=i[r],o=a[s.materialIndex];o&&o.visible&&p.push(t,e,o,n,W.z,s)}}else a.visible&&p.push(t,e,a,n,W.z,null)}const a=t.children;for(let t=0,r=a.length;t<r;t++)Lt(a[t],e,n,i)}function Ct(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let a=0,r=t.length;a<r;a++){const r=t[a],s=r.object,o=r.geometry,c=null===i?r.material:i,l=r.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(J.viewport(E.copy(i.viewport)),f.setupLightsView(i),Rt(s,e,i,o,c,l))}}else Rt(s,e,n,o,c,l)}}function Rt(t,e,n,i,a,r){if(t.onBeforeRender(y,e,n,i,a,r),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=It(n,e,a,t);J.setMaterial(a),mt.reset(),function(t,e){t.render((function(t){y.renderBufferImmediate(t,e)}))}(t,i)}else y.renderBufferDirect(n,e,i,a,t,r);t.onAfterRender(y,e,n,i,a,r)}function Pt(t,e,n){!0!==e.isScene&&(e=Z);const i=K.get(t),a=f.state.lights,r=f.state.shadowsArray,s=a.state.version,o=at.getParameters(t,a.state,r,e,n),c=at.getProgramCacheKey(o);let l=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=tt.get(t.envMap||i.environment),void 0===l&&(t.addEventListener("dispose",wt),l=new Map,i.programs=l);let h=l.get(c);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Dt(t,o),h}else o.uniforms=at.getUniforms(t),t.onBeforeCompile(o,y),h=at.acquireProgram(o,c),l.set(c,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Dt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=a.state.ambient,u.lightProbe.value=a.state.probe,u.directionalLights.value=a.state.directional,u.directionalLightShadows.value=a.state.directionalShadow,u.spotLights.value=a.state.spot,u.spotLightShadows.value=a.state.spotShadow,u.rectAreaLights.value=a.state.rectArea,u.ltc_1.value=a.state.rectAreaLTC1,u.ltc_2.value=a.state.rectAreaLTC2,u.pointLights.value=a.state.point,u.pointLightShadows.value=a.state.pointShadow,u.hemisphereLights.value=a.state.hemi,u.directionalShadowMap.value=a.state.directionalShadowMap,u.directionalShadowMatrix.value=a.state.directionalShadowMatrix,u.spotShadowMap.value=a.state.spotShadowMap,u.spotShadowMatrix.value=a.state.spotShadowMatrix,u.pointShadowMap.value=a.state.pointShadowMap,u.pointShadowMatrix.value=a.state.pointShadowMatrix);const d=h.getUniforms(),p=Vi.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Dt(t,e){const n=K.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function It(t,e,n,i){!0!==e.isScene&&(e=Z),$.resetTextureUnits();const a=e.fog,r=n.isMeshStandardMaterial?e.environment:null,s=null===b?y.outputEncoding:b.texture.encoding,o=tt.get(n.envMap||r),c=!0===n.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,l=K.get(n),h=f.state.lights;if(!0===F&&(!0===U||t!==T)){const e=t===T&&n.id===w;ct.setState(n,t,e)}let d=!1;n.version===l.__version?l.needsLights&&l.lightsStateVersion!==h.state.version||l.outputEncoding!==s||i.isInstancedMesh&&!1===l.instancing?d=!0:i.isInstancedMesh||!0!==l.instancing?l.envMap!==o||n.fog&&l.fog!==a?d=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===ct.numPlanes&&l.numIntersection===ct.numIntersection?l.vertexAlphas!==c&&(d=!0):d=!0:d=!0:(d=!0,l.__version=n.version);let p=l.currentProgram;!0===d&&(p=Pt(n,e,i));let g=!1,v=!1,x=!1;const _=p.getUniforms(),M=l.uniforms;if(J.useProgram(p.program)&&(g=!0,v=!0,x=!0),n.id!==w&&(w=n.id,v=!0),g||T!==t){if(_.setValue(gt,"projectionMatrix",t.projectionMatrix),Y.logarithmicDepthBuffer&&_.setValue(gt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,v=!0,x=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=_.map.cameraPosition;void 0!==e&&e.setValue(gt,W.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&_.setValue(gt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&_.setValue(gt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){_.setOptional(gt,i,"bindMatrix"),_.setOptional(gt,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(Y.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=D.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const a=new vn(i,n,n,m,u);t.boneMatrices=i,t.boneTexture=a,t.boneTextureSize=n}_.setValue(gt,"boneTexture",t.boneTexture,$),_.setValue(gt,"boneTextureSize",t.boneTextureSize)}else _.setOptional(gt,t,"boneMatrices")}}var S,E;return(v||l.receiveShadow!==i.receiveShadow)&&(l.receiveShadow=i.receiveShadow,_.setValue(gt,"receiveShadow",i.receiveShadow)),v&&(_.setValue(gt,"toneMappingExposure",y.toneMappingExposure),l.needsLights&&(E=x,(S=M).ambientLightColor.needsUpdate=E,S.lightProbe.needsUpdate=E,S.directionalLights.needsUpdate=E,S.directionalLightShadows.needsUpdate=E,S.pointLights.needsUpdate=E,S.pointLightShadows.needsUpdate=E,S.spotLights.needsUpdate=E,S.spotLightShadows.needsUpdate=E,S.rectAreaLights.needsUpdate=E,S.hemisphereLights.needsUpdate=E),a&&n.fog&&rt.refreshFogUniforms(M,a),rt.refreshMaterialUniforms(M,n,P,R),Vi.upload(gt,l.uniformsList,M,$)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Vi.upload(gt,l.uniformsList,M,$),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&_.setValue(gt,"center",i.center),_.setValue(gt,"modelViewMatrix",i.modelViewMatrix),_.setValue(gt,"normalMatrix",i.normalMatrix),_.setValue(gt,"modelMatrix",i.matrixWorld),p}At.setAnimationLoop((function(t){St&&St(t)})),"undefined"!=typeof window&&At.setContext(window),this.setAnimationLoop=function(t){St=t,xt.setAnimationLoop(t),null===t?At.stop():At.start()},xt.addEventListener("sessionstart",Tt),xt.addEventListener("sessionend",Et),this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===x)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===xt.enabled&&!0===xt.isPresenting&&(e=xt.getCamera(e)),!0===t.isScene&&t.onBeforeRender(y,t,e,n||b),f=ot.get(t,v.length),f.init(),v.push(f),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),H.setFromProjectionMatrix(V),U=this.localClippingEnabled,F=ct.init(this.clippingPlanes,U,e),p=st.get(t,g.length),p.init(),g.push(p),Lt(t,e,0,y.sortObjects),p.finish(),!0===y.sortObjects&&p.sort(N,q),!0===F&&ct.beginShadows();const a=f.state.shadowsArray;lt.render(a,t,e),f.setupLights(),f.setupLightsView(e),!0===F&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ht.render(p,t,e,i);const r=p.opaque,s=p.transparent;r.length>0&&Ct(r,t,e),s.length>0&&Ct(s,t,e),null!==b&&($.updateRenderTargetMipmap(b),$.updateMultisampleRenderTarget(b)),!0===t.isScene&&t.onAfterRender(y,t,e),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1),mt.resetDefaultState(),w=-1,T=null,v.pop(),f=v.length>0?v[v.length-1]:null,g.pop(),p=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e=0,n=0){b=t,_=e,M=n,t&&void 0===K.get(t).__webglFramebuffer&&$.setupRenderTarget(t);let i=null,a=!1,r=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(r=!0);const s=K.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=s[e],a=!0):i=t.isWebGLMultisampleRenderTarget?K.get(t).__webglMultisampledFramebuffer:s,E.copy(t.viewport),A.copy(t.scissor),L=t.scissorTest}else E.copy(O).multiplyScalar(P).floor(),A.copy(z).multiplyScalar(P).floor(),L=B;if(J.bindFramebuffer(36160,i),J.viewport(E),J.scissor(A),J.setScissorTest(L),a){const i=K.get(t.texture);gt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(r){const i=K.get(t.texture),a=e||0;gt.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,a)}},this.readRenderTargetPixels=function(t,e,n,i,a,r,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){J.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,c=s.type;if(o!==m&&ft.convert(o)!==gt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===d&&(X.has("EXT_color_buffer_half_float")||Y.isWebGL2&&X.has("EXT_color_buffer_float"));if(!(1009===c||ft.convert(c)===gt.getParameter(35738)||c===u&&(Y.isWebGL2||X.has("OES_texture_float")||X.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===gt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-a&&gt.readPixels(e,n,i,a,ft.convert(o),ft.convert(c),r):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==b?K.get(b).__webglFramebuffer:null;J.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),a=Math.floor(e.image.width*i),r=Math.floor(e.image.height*i),s=ft.convert(e.format);$.setTexture2D(e,0),gt.copyTexImage2D(3553,n,s,t.x,t.y,a,r,0),J.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const a=e.image.width,r=e.image.height,s=ft.convert(n.format),o=ft.convert(n.type);$.setTexture2D(n,0),gt.pixelStorei(37440,n.flipY),gt.pixelStorei(37441,n.premultiplyAlpha),gt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?gt.texSubImage2D(3553,i,t.x,t.y,a,r,s,o,e.image.data):e.isCompressedTexture?gt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):gt.texSubImage2D(3553,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&gt.generateMipmap(3553),J.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,a=0){if(y.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:r,height:s,data:o}=n.image,c=ft.convert(i.format),l=ft.convert(i.type);let h;if(i.isDataTexture3D)$.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(i,0),h=35866}gt.pixelStorei(37440,i.flipY),gt.pixelStorei(37441,i.premultiplyAlpha),gt.pixelStorei(3317,i.unpackAlignment);const u=gt.getParameter(3314),d=gt.getParameter(32878),p=gt.getParameter(3316),f=gt.getParameter(3315),m=gt.getParameter(32877);gt.pixelStorei(3314,r),gt.pixelStorei(32878,s),gt.pixelStorei(3316,t.min.x),gt.pixelStorei(3315,t.min.y),gt.pixelStorei(32877,t.min.z),gt.texSubImage3D(h,a,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,l,o),gt.pixelStorei(3314,u),gt.pixelStorei(32878,d),gt.pixelStorei(3316,p),gt.pixelStorei(3315,f),gt.pixelStorei(32877,m),0===a&&i.generateMipmaps&&gt.generateMipmap(h),J.unbindTexture()},this.initTexture=function(t){$.setTexture2D(t,0),J.unbindTexture()},this.resetState=function(){_=0,M=0,b=null,J.reset(),mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Ra.prototype.isGroup=!0,Object.assign(Pa.prototype,{constructor:Pa,getHandSpace:function(){return null===this._hand&&(this._hand=new Ra,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Ra,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Ra,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,a=null,r=null;const s=this._targetRay,o=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),c&&t.hand){r=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===c.joints[i.jointName]){const t=new Ra;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[i.jointName]=t,c.add(t)}const a=c.joints[i.jointName];null!==t&&(a.matrix.fromArray(t.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.jointRadius=t.radius),a.visible=null!==t}const i=c.joints["index-finger-tip"],a=c.joints["thumb-tip"],s=i.position.distanceTo(a.position),o=.02,l=.005;c.inputState.pinching&&s>o+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&s<=o-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(a=e.getPose(t.gripSpace,n),null!==a&&(o.matrix.fromArray(a.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==a),null!==c&&(c.visible=null!==r),this}}),Object.assign(Da.prototype,C.prototype),class extends Na{}.prototype.isWebGL1Renderer=!0;class qa{constructor(t,e=25e-5){this.name="",this.color=new ge(t),this.density=e}clone(){return new qa(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}qa.prototype.isFogExp2=!0;class Oa{constructor(t,e=1,n=1e3){this.name="",this.color=new ge(t),this.near=e,this.far=n}clone(){return new Oa(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Oa.prototype.isFog=!0;class za extends Zt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function Ba(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=E,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=D.generateUUID()}za.prototype.isScene=!0,Object.defineProperty(Ba.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Ba.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,a=this.stride;i<a;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=D.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new Ba(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=D.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Ha=new k;function Ga(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}Object.defineProperties(Ga.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Ga.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)Ha.x=this.getX(e),Ha.y=this.getY(e),Ha.z=this.getZ(e),Ha.applyMatrix4(t),this.setXYZ(e,Ha.x,Ha.y,Ha.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Ha.x=this.getX(e),Ha.y=this.getY(e),Ha.z=this.getZ(e),Ha.applyNormalMatrix(t),this.setXYZ(e,Ha.x,Ha.y,Ha.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Ha.x=this.getX(e),Ha.y=this.getY(e),Ha.z=this.getZ(e),Ha.transformDirection(t),this.setXYZ(e,Ha.x,Ha.y,Ha.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,a){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=a,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new _e(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ga(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class Fa extends le{constructor(t){super(),this.type="SpriteMaterial",this.color=new ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let Ua;Fa.prototype.isSpriteMaterial=!0;const ka=new k,Va=new k,Wa=new k,Za=new I,ja=new I,Xa=new Mt,Ya=new k,Ja=new k,Qa=new k,Ka=new I,$a=new I,tr=new I;function er(t,e,n,i,a,r){Za.subVectors(t,n).addScalar(.5).multiply(i),void 0!==a?(ja.x=r*Za.x-a*Za.y,ja.y=a*Za.x+r*Za.y):ja.copy(Za),t.copy(e),t.x+=ja.x,t.y+=ja.y,t.applyMatrix4(Xa)}(class extends Zt{constructor(t){if(super(),this.type="Sprite",void 0===Ua){Ua=new He;const t=new Ba(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Ua.setIndex([0,1,2,0,2,3]),Ua.setAttribute("position",new Ga(t,3,0,!1)),Ua.setAttribute("uv",new Ga(t,2,3,!1))}this.geometry=Ua,this.material=void 0!==t?t:new Fa,this.center=new I(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Va.setFromMatrixScale(this.matrixWorld),Xa.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Wa.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Va.multiplyScalar(-Wa.z);const n=this.material.rotation;let i,a;0!==n&&(a=Math.cos(n),i=Math.sin(n));const r=this.center;er(Ya.set(-.5,-.5,0),Wa,r,Va,i,a),er(Ja.set(.5,-.5,0),Wa,r,Va,i,a),er(Qa.set(.5,.5,0),Wa,r,Va,i,a),Ka.set(0,0),$a.set(1,0),tr.set(1,1);let s=t.ray.intersectTriangle(Ya,Ja,Qa,!1,ka);if(null===s&&(er(Ja.set(-.5,.5,0),Wa,r,Va,i,a),$a.set(0,1),s=t.ray.intersectTriangle(Ya,Qa,Ja,!1,ka),null===s))return;const o=t.ray.origin.distanceTo(ka);o<t.near||o>t.far||e.push({distance:o,point:ka.clone(),uv:oe.getUV(ka,Ya,Ja,Qa,Ka,$a,tr,new I),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}).prototype.isSprite=!0;const nr=new k,ir=new G,ar=new G,rr=new k,sr=new Mt;function or(t,e){an.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Mt,this.bindMatrixInverse=new Mt}function cr(){Zt.call(this),this.type="Bone"}or.prototype=Object.assign(Object.create(an.prototype),{constructor:or,isSkinnedMesh:!0,copy:function(t){return an.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new G,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){an.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;ir.fromBufferAttribute(i.attributes.skinIndex,t),ar.fromBufferAttribute(i.attributes.skinWeight,t),nr.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=ar.getComponent(t);if(0!==i){const a=ir.getComponent(t);sr.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(rr.copy(nr).applyMatrix4(sr),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}),cr.prototype=Object.assign(Object.create(Zt.prototype),{constructor:cr,isBone:!0});const lr=new Mt,hr=new Mt,ur=[],dr=new an;function pr(t,e,n){an.call(this,t,e),this.instanceMatrix=new _e(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}pr.prototype=Object.assign(Object.create(an.prototype),{constructor:pr,isInstancedMesh:!0,copy:function(t){return an.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(dr.geometry=this.geometry,dr.material=this.material,void 0!==dr.material)for(let a=0;a<i;a++){this.getMatrixAt(a,lr),hr.multiplyMatrices(n,lr),dr.matrixWorld=hr,dr.raycast(t,ur);for(let t=0,n=ur.length;t<n;t++){const n=ur[t];n.instanceId=a,n.object=this,e.push(n)}ur.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new _e(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class fr extends le{constructor(t){super(),this.type="LineBasicMaterial",this.color=new ge(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}fr.prototype.isLineBasicMaterial=!0;const mr=new k,gr=new k,vr=new Mt,yr=new _t,xr=new dt;function _r(t=new He,e=new fr){Zt.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}_r.prototype=Object.assign(Object.create(Zt.prototype),{constructor:_r,isLine:!0,copy:function(t){return Zt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)mr.fromBufferAttribute(e,t-1),gr.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=mr.distanceTo(gr);t.setAttribute("lineDistance",new Ce(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,a=t.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),xr.copy(n.boundingSphere),xr.applyMatrix4(i),xr.radius+=a,!1===t.ray.intersectsSphere(xr))return;vr.copy(i).invert(),yr.copy(t.ray).applyMatrix4(vr);const s=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,c=new k,l=new k,h=new k,u=new k,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,a=n.attributes.position;if(null!==i)for(let n=Math.max(0,r.start),s=Math.min(i.count,r.start+r.count)-1;n<s;n+=d){const r=i.getX(n),s=i.getX(n+1);if(c.fromBufferAttribute(a,r),l.fromBufferAttribute(a,s),yr.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(u);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,r.start),i=Math.min(a.count,r.start+r.count)-1;n<i;n+=d){if(c.fromBufferAttribute(a,n),l.fromBufferAttribute(a,n+1),yr.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Mr=new k,br=new k;function wr(t,e){_r.call(this,t,e),this.type="LineSegments"}wr.prototype=Object.assign(Object.create(_r.prototype),{constructor:wr,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Mr.fromBufferAttribute(e,t),br.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Mr.distanceTo(br);t.setAttribute("lineDistance",new Ce(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});(class extends _r{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class Sr extends le{constructor(t){super(),this.type="PointsMaterial",this.color=new ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}Sr.prototype.isPointsMaterial=!0;const Tr=new Mt,Er=new _t,Ar=new dt,Lr=new k;function Cr(t=new He,e=new Sr){Zt.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function Rr(t,e,n,i,a,r,s){const o=Er.distanceSqToPoint(t);if(o<n){const n=new k;Er.closestPointToPoint(t,n),n.applyMatrix4(i);const c=a.ray.origin.distanceTo(n);if(c<a.near||c>a.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:s})}}Cr.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Cr,isPoints:!0,copy:function(t){return Zt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,a=t.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ar.copy(n.boundingSphere),Ar.applyMatrix4(i),Ar.radius+=a,!1===t.ray.intersectsSphere(Ar))return;Tr.copy(i).invert(),Er.copy(t.ray).applyMatrix4(Tr);const s=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,s=n.attributes.position;if(null!==a)for(let n=Math.max(0,r.start),c=Math.min(a.count,r.start+r.count);n<c;n++){const r=a.getX(n);Lr.fromBufferAttribute(s,r),Rr(Lr,r,o,i,t,e,this)}else for(let n=Math.max(0,r.start),a=Math.min(s.count,r.start+r.count);n<a;n++)Lr.fromBufferAttribute(s,n),Rr(Lr,n,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),class extends B{constructor(t,e,n,i,a,r,s,c,l){super(t,e,n,i,a,r,s,c,l),this.format=void 0!==s?s:f,this.minFilter=void 0!==r?r:o,this.magFilter=void 0!==a?a:o,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;class Pr extends B{constructor(t,e,n,i,a,r,s,o,c,l,h,u){super(null,r,s,o,c,l,i,a,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Pr.prototype.isCompressedTexture=!0,class extends B{constructor(t,e,n,i,a,r,s,o,c){super(t,e,n,i,a,r,s,o,c),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends B{constructor(t,e,n,i,a,r,o,c,h,u){if((u=void 0!==u?u:g)!==g&&u!==v)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===g&&(n=l),void 0===n&&u===v&&(n=p),super(null,i,a,r,o,c,u,n,h),this.image={width:t,height:e},this.magFilter=void 0!==o?o:s,this.minFilter=void 0!==c?c:s,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0,new k,new k,new k,new oe;function Dr(t,e,n,i,a){let r,s;if(a===function(t,e,n,i){let a=0;for(let r=e,s=n-i;r<n;r+=i)a+=(t[s]-t[r])*(t[r+1]+t[s+1]),s=r;return a}(t,e,n,i)>0)for(r=e;r<n;r+=i)s=$r(r,t[r],t[r+1],s);else for(r=n-i;r>=e;r-=i)s=$r(r,t[r],t[r+1],s);return s&&jr(s,s.next)&&(ts(s),s=s.next),s}function Ir(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!jr(i,i.next)&&0!==Zr(i.prev,i,i.next))i=i.next;else{if(ts(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Nr(t,e,n,i,a,r,s){if(!t)return;!s&&r&&function(t,e,n,i){let a=t;do{null===a.z&&(a.z=Ur(a.x,a.y,e,n,i)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next}while(a!==t);a.prevZ.nextZ=null,a.prevZ=null,function(t){let e,n,i,a,r,s,o,c,l=1;do{for(n=t,t=null,r=null,s=0;n;){for(s++,i=n,o=0,e=0;e<l&&(o++,i=i.nextZ,i);e++);for(c=l;o>0||c>0&&i;)0!==o&&(0===c||!i||n.z<=i.z)?(a=n,n=n.nextZ,o--):(a=i,i=i.nextZ,c--),r?r.nextZ=a:t=a,a.prevZ=r,r=a;n=i}r.nextZ=null,l*=2}while(s>1)}(a)}(t,i,a,r);let o,c,l=t;for(;t.prev!==t.next;)if(o=t.prev,c=t.next,r?Or(t,i,a,r):qr(t))e.push(o.i/n),e.push(t.i/n),e.push(c.i/n),ts(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?Nr(t=zr(Ir(t),e,n),e,n,i,a,r,2):2===s&&Br(t,e,n,i,a,r):Nr(Ir(t),e,n,i,a,r,1);break}}function qr(t){const e=t.prev,n=t,i=t.next;if(Zr(e,n,i)>=0)return!1;let a=t.next.next;for(;a!==t.prev;){if(Vr(e.x,e.y,n.x,n.y,i.x,i.y,a.x,a.y)&&Zr(a.prev,a,a.next)>=0)return!1;a=a.next}return!0}function Or(t,e,n,i){const a=t.prev,r=t,s=t.next;if(Zr(a,r,s)>=0)return!1;const o=a.x<r.x?a.x<s.x?a.x:s.x:r.x<s.x?r.x:s.x,c=a.y<r.y?a.y<s.y?a.y:s.y:r.y<s.y?r.y:s.y,l=a.x>r.x?a.x>s.x?a.x:s.x:r.x>s.x?r.x:s.x,h=a.y>r.y?a.y>s.y?a.y:s.y:r.y>s.y?r.y:s.y,u=Ur(o,c,e,n,i),d=Ur(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Vr(a.x,a.y,r.x,r.y,s.x,s.y,p.x,p.y)&&Zr(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Vr(a.x,a.y,r.x,r.y,s.x,s.y,f.x,f.y)&&Zr(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Vr(a.x,a.y,r.x,r.y,s.x,s.y,p.x,p.y)&&Zr(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Vr(a.x,a.y,r.x,r.y,s.x,s.y,f.x,f.y)&&Zr(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function zr(t,e,n){let i=t;do{const a=i.prev,r=i.next.next;!jr(a,r)&&Xr(a,i,i.next,r)&&Qr(a,r)&&Qr(r,a)&&(e.push(a.i/n),e.push(i.i/n),e.push(r.i/n),ts(i),ts(i.next),i=t=r),i=i.next}while(i!==t);return Ir(i)}function Br(t,e,n,i,a,r){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&Wr(s,t)){let o=Kr(s,t);return s=Ir(s,s.next),o=Ir(o,o.next),Nr(s,e,n,i,a,r),void Nr(o,e,n,i,a,r)}t=t.next}s=s.next}while(s!==t)}function Hr(t,e){return t.x-e.x}function Gr(t,e){if(e=function(t,e){let n=e;const i=t.x,a=t.y;let r,s=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){const t=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(a===n.y)return n;if(a===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!r)return null;if(i===s)return r;const o=r,c=r.x,l=r.y;let h,u=1/0;n=r;do{i>=n.x&&n.x>=c&&i!==n.x&&Vr(a<l?i:s,a,c,l,a<l?s:i,a,n.x,n.y)&&(h=Math.abs(a-n.y)/(i-n.x),Qr(n,t)&&(h<u||h===u&&(n.x>r.x||n.x===r.x&&Fr(r,n)))&&(r=n,u=h)),n=n.next}while(n!==o);return r}(t,e)){const n=Kr(e,t);Ir(e,e.next),Ir(n,n.next)}}function Fr(t,e){return Zr(t.prev,t,e.prev)<0&&Zr(e.next,t,t.next)<0}function Ur(t,e,n,i,a){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*a)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*a)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function kr(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Vr(t,e,n,i,a,r,s,o){return(a-s)*(e-o)-(t-s)*(r-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(r-o)-(a-s)*(i-o)>=0}function Wr(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Xr(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Qr(t,e)&&Qr(e,t)&&function(t,e){let n=t,i=!1;const a=(t.x+e.x)/2,r=(t.y+e.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&a<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Zr(t.prev,t,e.prev)||Zr(t,e.prev,e))||jr(t,e)&&Zr(t.prev,t,t.next)>0&&Zr(e.prev,e,e.next)>0)}function Zr(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function jr(t,e){return t.x===e.x&&t.y===e.y}function Xr(t,e,n,i){const a=Jr(Zr(t,e,n)),r=Jr(Zr(t,e,i)),s=Jr(Zr(n,i,t)),o=Jr(Zr(n,i,e));return a!==r&&s!==o||!(0!==a||!Yr(t,n,e))||!(0!==r||!Yr(t,i,e))||!(0!==s||!Yr(n,t,i))||!(0!==o||!Yr(n,e,i))}function Yr(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Jr(t){return t>0?1:t<0?-1:0}function Qr(t,e){return Zr(t.prev,t,t.next)<0?Zr(t,e,t.next)>=0&&Zr(t,t.prev,e)>=0:Zr(t,e,t.prev)<0||Zr(t,t.next,e)<0}function Kr(t,e){const n=new es(t.i,t.x,t.y),i=new es(e.i,e.x,e.y),a=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=a,a.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function $r(t,e,n,i){const a=new es(t,e,n);return i?(a.next=i.next,a.prev=i,i.next.prev=a,i.next=a):(a.prev=a,a.next=a),a}function ts(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function es(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const ns={area:function(t){const e=t.length;let n=0;for(let i=e-1,a=0;a<e;i=a++)n+=t[i].x*t[a].y-t[a].x*t[i].y;return.5*n},isClockWise:function(t){return ns.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],a=[];is(t),as(n,t);let r=t.length;e.forEach(is);for(let t=0;t<e.length;t++)i.push(r),r+=e[t].length,as(n,e[t]);const s=function(t,e,n){n=n||2;const i=e&&e.length,a=i?e[0]*n:t.length;let r=Dr(t,0,a,n,!0);const s=[];if(!r||r.next===r.prev)return s;let o,c,l,h,u,d,p;if(i&&(r=function(t,e,n,i){const a=[];let r,s,o,c,l;for(r=0,s=e.length;r<s;r++)o=e[r]*i,c=r<s-1?e[r+1]*i:t.length,l=Dr(t,o,c,i,!1),l===l.next&&(l.steiner=!0),a.push(kr(l));for(a.sort(Hr),r=0;r<a.length;r++)Gr(a[r],n),n=Ir(n,n.next);return n}(t,e,r,n)),t.length>80*n){o=l=t[0],c=h=t[1];for(let e=n;e<a;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=Math.max(l-o,h-c),p=0!==p?1/p:0}return Nr(r,s,n,o,c,p),s}(n,i);for(let t=0;t<s.length;t+=3)a.push(s.slice(t,t+3));return a}};function is(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function as(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class rs extends He{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],a=[];for(let e=0,n=t.length;e<n;e++)r(t[e]);function r(t){const r=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:ss;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,v,y,x,_,M=!1;f&&(g=f.getSpacedPoints(o),M=!0,l=!1,v=f.computeFrenetFrames(o,!1),y=new k,x=new k,_=new k),l||(p=0,h=0,u=0,d=0);const b=t.extractPoints(s);let w=b.shape;const S=b.holes;if(!ns.isClockWise(w)){w=w.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];ns.isClockWise(e)&&(S[t]=e.reverse())}}const T=ns.triangulateShape(w,S),E=w;for(let t=0,e=S.length;t<e;t++){const e=S[t];w=w.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const L=w.length,C=T.length;function R(t,e,n){let i,a,r;const s=t.x-e.x,o=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=s*s+o*o,u=s*l-o*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-o/u,f=e.y+s/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-o*c);i=p+s*m-t.x,a=f+o*m-t.y;const g=i*i+a*a;if(g<=2)return new I(i,a);r=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(l)&&(t=!0),t?(i=-o,a=s,r=Math.sqrt(h)):(i=s,a=o,r=Math.sqrt(h/2))}return new I(i/r,a/r)}const P=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),P[t]=R(E[t],E[n],E[i]);const D=[];let N,q=P.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];N=[];for(let t=0,n=e.length,i=n-1,a=t+1;t<n;t++,i++,a++)i===n&&(i=0),a===n&&(a=0),N[t]=R(e[t],e[i],e[a]);D.push(N),q=q.concat(N)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);B(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=D[t];for(let t=0,a=e.length;t<a;t++){const a=A(e[t],N[t],i);B(a.x,a.y,-n)}}}const O=u+d;for(let t=0;t<L;t++){const e=l?A(w[t],q[t],O):w[t];M?(x.copy(v.normals[0]).multiplyScalar(e.x),y.copy(v.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(x).add(y),B(_.x,_.y,_.z)):B(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<L;e++){const n=l?A(w[e],q[e],O):w[e];M?(x.copy(v.normals[t]).multiplyScalar(n.x),y.copy(v.binormals[t]).multiplyScalar(n.y),_.copy(g[t]).add(x).add(y),B(_.x,_.y,_.z)):B(n.x,n.y,c/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);B(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=D[t];for(let t=0,a=e.length;t<a;t++){const a=A(e[t],N[t],i);M?B(a.x,a.y+g[o-1].y,g[o-1].x+n):B(a.x,a.y,c+n)}}}function z(t,e){let n=t.length;for(;--n>=0;){const i=n;let a=n-1;a<0&&(a=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=L*t,r=L*(t+1);G(e+i+n,e+a+n,e+a+r,e+i+r)}}}function B(t,e,n){r.push(t),r.push(e),r.push(n)}function H(t,e,a){F(t),F(e),F(a);const r=i.length/3,s=m.generateTopUV(n,i,r-3,r-2,r-1);U(s[0]),U(s[1]),U(s[2])}function G(t,e,a,r){F(t),F(e),F(r),F(e),F(a),F(r);const s=i.length/3,o=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);U(o[0]),U(o[1]),U(o[3]),U(o[1]),U(o[2]),U(o[3])}function F(t){i.push(r[3*t+0]),i.push(r[3*t+1]),i.push(r[3*t+2])}function U(t){a.push(t.x),a.push(t.y)}!function(){const t=i.length/3;if(l){let t=0,e=L*t;for(let t=0;t<C;t++){const n=T[t];H(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=L*t;for(let t=0;t<C;t++){const n=T[t];H(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<C;t++){const e=T[t];H(e[2],e[1],e[0])}for(let t=0;t<C;t++){const e=T[t];H(e[0]+L*o,e[1]+L*o,e[2]+L*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;z(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];z(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Ce(i,3)),this.setAttribute("uv",new Ce(a,2)),this.computeVertexNormals()}toJSON(){const t=He.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const ss={generateTopUV:function(t,e,n,i,a){const r=e[3*n],s=e[3*n+1],o=e[3*i],c=e[3*i+1],l=e[3*a],h=e[3*a+1];return[new I(r,s),new I(o,c),new I(l,h)]},generateSideWallUV:function(t,e,n,i,a,r){const s=e[3*n],o=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*a],p=e[3*a+1],f=e[3*a+2],m=e[3*r],g=e[3*r+1],v=e[3*r+2];return Math.abs(o-h)<.01?[new I(s,1-c),new I(l,1-u),new I(d,1-f),new I(m,1-v)]:[new I(o,1-c),new I(h,1-u),new I(p,1-f),new I(g,1-v)]}};function os(t,e,n){He.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],a=[],r=[],s=[],o=1e-5,c=new k,l=new k,h=new k,u=new k,d=new k;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let i=0;i<=n;i++){const p=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,p,l),a.push(l.x,l.y,l.z),i-o>=0?(t(i-o,p,h),u.subVectors(l,h)):(t(i+o,p,h),u.subVectors(h,l)),p-o>=0?(t(i,p-o,h),d.subVectors(l,h)):(t(i,p+o,h),d.subVectors(h,l)),c.crossVectors(u,d).normalize(),r.push(c.x,c.y,c.z),s.push(i,p)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*p+n,a=t*p+n+1,r=(t+1)*p+n+1,s=(t+1)*p+n;i.push(e,a,s),i.push(a,r,s)}this.setIndex(i),this.setAttribute("position",new Ce(a,3)),this.setAttribute("normal",new Ce(r,3)),this.setAttribute("uv",new Ce(s,2))}os.prototype=Object.create(He.prototype),os.prototype.constructor=os;class cs extends He{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],a=[],r=[];let s=0,o=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(s,o,e),s+=o,o=0;function c(t){const s=i.length/3,c=t.extractPoints(e);let l=c.shape;const h=c.holes;!1===ns.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ns.isClockWise(e)&&(h[t]=e.reverse())}const u=ns.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];i.push(e.x,e.y,0),a.push(0,0,1),r.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+s,a=e[1]+s,r=e[2]+s;n.push(i,a,r),o+=3}}this.setIndex(n),this.setAttribute("position",new Ce(i,3)),this.setAttribute("normal",new Ce(a,3)),this.setAttribute("uv",new Ce(r,2))}toJSON(){const t=He.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}(class extends le{constructor(t){super(),this.type="ShadowMaterial",this.color=new ge(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;function ls(t){le.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}function hs(t){ls.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new I(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=D.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}(class extends hn{constructor(t){super(t),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0,ls.prototype=Object.create(le.prototype),ls.prototype.constructor=ls,ls.prototype.isMeshStandardMaterial=!0,ls.prototype.copy=function(t){return le.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this},hs.prototype=Object.create(ls.prototype),hs.prototype.constructor=hs,hs.prototype.isMeshPhysicalMaterial=!0,hs.prototype.copy=function(t){return ls.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new ge).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};(class extends le{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new ge(16777215),this.specular=new ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshPhongMaterial=!0;(class extends le{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ge(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class extends le{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends le{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class extends le{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends fr{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const us={arraySlice:function(t,e,n){return us.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,a=new t.constructor(i);for(let r=0,s=0;s!==i;++r){const i=n[r]*e;for(let n=0;n!==e;++n)a[s++]=t[i+n]}return a},flattenJSON:function(t,e,n,i){let a=1,r=t[0];for(;void 0!==r&&void 0===r[i];)r=t[a++];if(void 0===r)return;let s=r[i];if(void 0!==s)if(Array.isArray(s))do{s=r[i],void 0!==s&&(e.push(r.time),n.push.apply(n,s)),r=t[a++]}while(void 0!==r);else if(void 0!==s.toArray)do{s=r[i],void 0!==s&&(e.push(r.time),s.toArray(n,n.length)),r=t[a++]}while(void 0!==r);else do{s=r[i],void 0!==s&&(e.push(r.time),n.push(s)),r=t[a++]}while(void 0!==r)},subclip:function(t,e,n,i,a=30){const r=t.clone();r.name=e;const s=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],o=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*a;if(!(r<n||r>=i)){c.push(e.times[t]);for(let n=0;n<o;++n)l.push(e.values[t*o+n])}}0!==c.length&&(e.times=us.convertArray(c,e.times.constructor),e.values=us.convertArray(l,e.values.constructor),s.push(e))}r.tracks=s;let o=1/0;for(let t=0;t<r.tracks.length;++t)o>r.tracks[t].times[0]&&(o=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const a=n.tracks.length,r=e/i;for(let e=0;e<a;++e){const i=n.tracks[e],a=i.ValueTypeName;if("bool"===a||"string"===a)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===a}));if(void 0===s)continue;let o=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=c/3);let l=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(r<=i.times[0]){const t=o,e=c-o;d=us.arraySlice(i.values,t,e)}else if(r>=i.times[u]){const t=u*c+o,e=t+c-o;d=us.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=o,n=c-o;t.evaluate(r),d=us.arraySlice(t.resultBuffer,e,n)}"quaternion"===a&&(new U).fromArray(d).normalize().conjugate().toArray(d);const p=s.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===a)U.multiplyQuaternionsFlat(s.values,e,d,0,s.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)s.values[e+n]-=d[n]}}}return t.blendMode=2501,t}};function ds(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function ps(t,e,n,i){ds.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function fs(t,e,n,i){ds.call(this,t,e,n,i)}function ms(t,e,n,i){ds.call(this,t,e,n,i)}Object.assign(ds.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],a=e[n-1];t:{e:{let r;n:{i:if(!(t<i)){for(let r=n+2;;){if(void 0===i){if(t<a)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,a)}if(n===r)break;if(a=i,i=e[++n],t<i)break e}r=e.length;break n}if(t>=a)break t;{const s=e[1];t<s&&(n=2,a=s);for(let r=n-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===r)break;if(i=a,a=e[--n-1],t>=a)break e}r=n,n=0}}for(;n<r;){const i=n+r>>>1;t<e[i]?r=i:n=i+1}if(i=e[n],a=e[n-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,a,t)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,a=t*i;for(let t=0;t!==i;++t)e[t]=n[a+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(ds.prototype,{beforeStart_:ds.prototype.copySampleValue_,afterEnd_:ds.prototype.copySampleValue_}),ps.prototype=Object.assign(Object.create(ds.prototype),{constructor:ps,DefaultSettings_:{endingStart:M,endingEnd:M},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let a=t-2,r=t+1,s=i[a],o=i[r];if(void 0===s)switch(this.getSettings_().endingStart){case b:a=t,s=2*e-n;break;case w:a=i.length-2,s=e+i[a]-i[a+1];break;default:a=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case b:r=t,o=2*n-e;break;case w:r=1,o=n+i[1]-i[0];break;default:r=t-1,o=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(o-n),this._offsetPrev=a*l,this._offsetNext=r*l},interpolate_:function(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==s;++t)a[t]=g*r[l+t]+v*r[c+t]+y*r[o+t]+x*r[h+t];return a}}),fs.prototype=Object.assign(Object.create(ds.prototype),{constructor:fs,interpolate_:function(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==s;++t)a[t]=r[c+t]*h+r[o+t]*l;return a}}),ms.prototype=Object.assign(Object.create(ds.prototype),{constructor:ms,interpolate_:function(t){return this.copySampleValue_(t-1)}});class gs{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=us.convertArray(e,this.TimeBufferType),this.values=us.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:us.convertArray(t.times,Array),values:us.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new ms(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new fs(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ps(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case y:e=this.InterpolantFactoryMethodDiscrete;break;case x:e=this.InterpolantFactoryMethodLinear;break;case _:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return y;case this.InterpolantFactoryMethodLinear:return x;case this.InterpolantFactoryMethodSmooth:return _}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let a=0,r=i-1;for(;a!==i&&n[a]<t;)++a;for(;-1!==r&&n[r]>e;)--r;if(++r,0!==a||r!==i){a>=r&&(r=Math.max(r,1),a=r-1);const t=this.getValueSize();this.times=us.arraySlice(n,a,r),this.values=us.arraySlice(this.values,a*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,a=n.length;0===a&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==a;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,r),t=!1;break}r=i}if(void 0!==i&&us.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=us.arraySlice(this.times),e=us.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===_,a=t.length-1;let r=1;for(let s=1;s<a;++s){let a=!1;const o=t[s];if(o!==t[s+1]&&(1!==s||o!==t[0]))if(i)a=!0;else{const t=s*n,i=t-n,r=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[r+s]){a=!0;break}}}if(a){if(s!==r){t[r]=t[s];const i=s*n,a=r*n;for(let t=0;t!==n;++t)e[a+t]=e[i+t]}++r}}if(a>0){t[r]=t[a];for(let t=a*n,i=r*n,s=0;s!==n;++s)e[i+s]=e[t+s];++r}return r!==t.length?(this.times=us.arraySlice(t,0,r),this.values=us.arraySlice(e,0,r*n)):(this.times=t,this.values=e),this}clone(){const t=us.arraySlice(this.times,0),e=us.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}gs.prototype.TimeBufferType=Float32Array,gs.prototype.ValueBufferType=Float32Array,gs.prototype.DefaultInterpolation=x;class vs extends gs{}vs.prototype.ValueTypeName="bool",vs.prototype.ValueBufferType=Array,vs.prototype.DefaultInterpolation=y,vs.prototype.InterpolantFactoryMethodLinear=void 0,vs.prototype.InterpolantFactoryMethodSmooth=void 0;class ys extends gs{}ys.prototype.ValueTypeName="color";class xs extends gs{}function _s(t,e,n,i){ds.call(this,t,e,n,i)}xs.prototype.ValueTypeName="number",_s.prototype=Object.assign(Object.create(ds.prototype),{constructor:_s,interpolate_:function(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=(n-e)/(i-e);let c=t*s;for(let t=c+s;c!==t;c+=4)U.slerpFlat(a,0,r,c-s,r,c,o);return a}});class Ms extends gs{InterpolantFactoryMethodLinear(t){return new _s(this.times,this.values,this.getValueSize(),t)}}Ms.prototype.ValueTypeName="quaternion",Ms.prototype.DefaultInterpolation=x,Ms.prototype.InterpolantFactoryMethodSmooth=void 0;class bs extends gs{}bs.prototype.ValueTypeName="string",bs.prototype.ValueBufferType=Array,bs.prototype.DefaultInterpolation=y,bs.prototype.InterpolantFactoryMethodLinear=void 0,bs.prototype.InterpolantFactoryMethodSmooth=void 0;class ws extends gs{}ws.prototype.ValueTypeName="vector";class Ss{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=D.generateUUID(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,a=n.length;t!==a;++t)e.push(Ts(n[t]).scale(i));const a=new this(t.name,t.duration,e,t.blendMode);return a.uuid=t.uuid,a}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(gs.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const a=e.length,r=[];for(let t=0;t<a;t++){let s=[],o=[];s.push((t+a-1)%a,t,(t+1)%a),o.push(0,1,0);const c=us.getKeyframeOrder(s);s=us.sortedArray(s,1,c),o=us.sortedArray(o,1,c),i||0!==s[0]||(s.push(a),o.push(o[0])),r.push(new xs(".morphTargetInfluences["+e[t].name+"]",s,o).scale(1/n))}return new this(t,-1,r)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},a=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.name.match(a);if(r&&r.length>1){const t=r[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const r=[];for(const t in i)r.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return r}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,a){if(0!==n.length){const r=[],s=[];us.flattenJSON(n,r,s,i),0!==r.length&&a.push(new t(e,r,s))}},i=[],a=t.name||"default",r=t.fps||30,s=t.blendMode;let o=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const a=c[t].keys;if(a&&0!==a.length)if(a[0].morphTargets){const t={};let e;for(e=0;e<a.length;e++)if(a[e].morphTargets)for(let n=0;n<a[e].morphTargets.length;n++)t[a[e].morphTargets[n]]=-1;for(const n in t){const t=[],r=[];for(let i=0;i!==a[e].morphTargets.length;++i){const i=a[e];t.push(i.time),r.push(i.morphTarget===n?1:0)}i.push(new xs(".morphTargetInfluence["+n+"]",t,r))}o=t.length*(r||1)}else{const r=".bones["+e[t].name+"]";n(ws,r+".position",a,"pos",i),n(Ms,r+".quaternion",a,"rot",i),n(ws,r+".scale",a,"scl",i)}}return 0===i.length?null:new this(a,o,i,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ts(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return xs;case"vector":case"vector2":case"vector3":case"vector4":return ws;case"color":return ys;case"quaternion":return Ms;case"bool":case"boolean":return vs;case"string":return bs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];us.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Es={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const As=new function(t,e,n){const i=this;let a,r=!1,s=0,o=0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===r&&void 0!==i.onStart&&i.onStart(t,s,o),r=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}};function Ls(t){this.manager=void 0!==t?t:As,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ls.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,a){n.load(t,i,e,a)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Cs={};function Rs(t){Ls.call(this,t)}function Ps(t){Ls.call(this,t)}Rs.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Rs,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,r=Es.get(t);if(void 0!==r)return a.manager.itemStart(t),setTimeout((function(){e&&e(r),a.manager.itemEnd(t)}),0),r;if(void 0!==Cs[t])return void Cs[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],r=!!s[2];let o=s[3];o=decodeURIComponent(o),r&&(o=atob(o));try{let i;const r=(this.responseType||"").toLowerCase();switch(r){case"arraybuffer":case"blob":const t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o.charCodeAt(e);i="blob"===r?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(o,n);break;case"json":i=JSON.parse(o);break;default:i=o}setTimeout((function(){e&&e(i),a.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)}),0)}}else{Cs[t]=[],Cs[t].push({onLoad:e,onProgress:n,onError:i}),o=new XMLHttpRequest,o.open("GET",t,!0),o.addEventListener("load",(function(e){const n=this.response,i=Cs[t];if(delete Cs[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Es.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}a.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}a.manager.itemError(t),a.manager.itemEnd(t)}}),!1),o.addEventListener("progress",(function(e){const n=Cs[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),o.addEventListener("error",(function(e){const n=Cs[t];delete Cs[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}a.manager.itemError(t),a.manager.itemEnd(t)}),!1),o.addEventListener("abort",(function(e){const n=Cs[t];delete Cs[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}a.manager.itemError(t),a.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)o.setRequestHeader(t,this.requestHeader[t]);o.send(null)}return a.manager.itemStart(t),o},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Ps.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Ps,load:function(t,e,n,i){const a=this,r=[],s=new Pr,c=new Rs(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(a.withCredentials);let l=0;function h(h){c.load(t[h],(function(t){const n=a.parse(t,!0);r[h]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(s.minFilter=o),s.image=r,s.format=n.format,s.needsUpdate=!0,e&&e(s))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)h(e);else c.load(t,(function(t){const n=a.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){r[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)r[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),r[e].format=n.format,r[e].width=n.width,r[e].height=n.height}s.image=r}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=o),s.format=n.format,s.needsUpdate=!0,e&&e(s)}),n,i);return s}});class Ds extends Ls{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,r=Es.get(t);if(void 0!==r)return a.manager.itemStart(t),setTimeout((function(){e&&e(r),a.manager.itemEnd(t)}),0),r;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),Es.add(t,this),e&&e(this),a.manager.itemEnd(t)}function c(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),a.manager.itemStart(t),s.src=t,s}}class Is extends Ls{constructor(t){super(t)}load(t,e,n,i){const a=new mn,r=new Ds(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let s=0;function o(n){r.load(t[n],(function(t){a.images[n]=t,s++,6===s&&(a.needsUpdate=!0,e&&e(a))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return a}}function Ns(t){Ls.call(this,t)}function qs(t){Ls.call(this,t)}function Os(){this.type="Curve",this.arcLengthDivisions=200}Ns.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Ns,load:function(t,e,n,i){const r=this,s=new vn,l=new Rs(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(r.withCredentials),l.load(t,(function(t){const n=r.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:a,s.wrapT=void 0!==n.wrapT?n.wrapT:a,s.magFilter=void 0!==n.magFilter?n.magFilter:o,s.minFilter=void 0!==n.minFilter?n.minFilter:o,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=c),1===n.mipmapCount&&(s.minFilter=o),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,i),s}}),qs.prototype=Object.assign(Object.create(Ls.prototype),{constructor:qs,load:function(t,e,n,i){const a=new B,r=new Ds(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,(function(n){a.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);a.format=i?f:m,a.needsUpdate=!0,void 0!==e&&e(a)}),n,i),a}}),Object.assign(Os.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),a=0;e.push(0);for(let r=1;r<=t;r++)n=this.getPoint(r/t),a+=n.distanceTo(i),e.push(a),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const a=n.length;let r;r=e||t*n[a-1];let s,o=0,c=a-1;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),s=n[i]-r,s<0)o=i+1;else{if(!(s>0)){c=i;break}c=i-1}if(i=c,n[i]===r)return i/(a-1);const l=n[i];return(i+(r-l)/(n[i+1]-l))/(a-1)},getTangent:function(t,e){const n=1e-4;let i=t-n,a=t+n;i<0&&(i=0),a>1&&(a=1);const r=this.getPoint(i),s=this.getPoint(a),o=e||(r.isVector2?new I:new k);return o.copy(s).sub(r).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new k,i=[],a=[],r=[],s=new k,o=new Mt;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new k),i[e].normalize()}a[0]=new k,r[0]=new k;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),a[0].crossVectors(i[0],s),r[0].crossVectors(i[0],a[0]);for(let e=1;e<=t;e++){if(a[e]=a[e-1].clone(),r[e]=r[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(D.clamp(i[e-1].dot(i[e]),-1,1));a[e].applyMatrix4(o.makeRotationAxis(s,t))}r[e].crossVectors(i[e],a[e])}if(!0===e){let e=Math.acos(D.clamp(a[0].dot(a[t]),-1,1));e/=t,i[0].dot(s.crossVectors(a[0],a[t]))>0&&(e=-e);for(let n=1;n<=t;n++)a[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),r[n].crossVectors(i[n],a[n])}return{tangents:i,normals:a,binormals:r}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});class zs extends Os{constructor(t=0,e=0,n=1,i=1,a=0,r=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=a,this.aEndAngle=r,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new I,i=2*Math.PI;let a=this.aEndAngle-this.aStartAngle;const r=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=i;for(;a>i;)a-=i;a<Number.EPSILON&&(a=r?0:i),!0!==this.aClockwise||r||(a===i?a=-i:a-=i);const s=this.aStartAngle+t*a;let o=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=c-this.aY;o=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(o,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}zs.prototype.isEllipseCurve=!0;class Bs extends zs{constructor(t,e,n,i,a,r){super(t,e,n,n,i,a,r),this.type="ArcCurve"}}function Hs(){let t=0,e=0,n=0,i=0;function a(a,r,s,o){t=a,e=s,n=-3*a+3*r-2*s-o,i=2*a-2*r+s+o}return{initCatmullRom:function(t,e,n,i,r){a(e,n,r*(n-t),r*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,r,s,o){let c=(e-t)/r-(n-t)/(r+s)+(n-e)/s,l=(n-e)/s-(i-e)/(s+o)+(i-n)/o;c*=s,l*=s,a(e,n,c,l)},calc:function(a){const r=a*a;return t+e*a+n*r+i*(r*a)}}}Bs.prototype.isArcCurve=!0;const Gs=new k,Fs=new Hs,Us=new Hs,ks=new Hs;class Vs extends Os{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new k){const n=e,i=this.points,a=i.length,r=(a-(this.closed?0:1))*t;let s,o,c=Math.floor(r),l=r-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/a)+1)*a:0===l&&c===a-1&&(c=a-2,l=1),this.closed||c>0?s=i[(c-1)%a]:(Gs.subVectors(i[0],i[1]).add(i[0]),s=Gs);const h=i[c%a],u=i[(c+1)%a];if(this.closed||c+2<a?o=i[(c+2)%a]:(Gs.subVectors(i[a-1],i[a-2]).add(i[a-1]),o=Gs),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Fs.initNonuniformCatmullRom(s.x,h.x,u.x,o.x,e,n,i),Us.initNonuniformCatmullRom(s.y,h.y,u.y,o.y,e,n,i),ks.initNonuniformCatmullRom(s.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Fs.initCatmullRom(s.x,h.x,u.x,o.x,this.tension),Us.initCatmullRom(s.y,h.y,u.y,o.y,this.tension),ks.initCatmullRom(s.z,h.z,u.z,o.z,this.tension));return n.set(Fs.calc(l),Us.calc(l),ks.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new k).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ws(t,e,n,i,a){const r=.5*(i-e),s=.5*(a-n),o=t*t;return(2*n-2*i+r+s)*(t*o)+(-3*n+3*i-2*r-s)*o+r*t+n}function Zs(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function js(t,e,n,i,a){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,a)}Vs.prototype.isCatmullRomCurve3=!0;class Xs extends Os{constructor(t=new I,e=new I,n=new I,i=new I){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new I){const n=e,i=this.v0,a=this.v1,r=this.v2,s=this.v3;return n.set(js(t,i.x,a.x,r.x,s.x),js(t,i.y,a.y,r.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Xs.prototype.isCubicBezierCurve=!0;class Ys extends Os{constructor(t=new k,e=new k,n=new k,i=new k){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new k){const n=e,i=this.v0,a=this.v1,r=this.v2,s=this.v3;return n.set(js(t,i.x,a.x,r.x,s.x),js(t,i.y,a.y,r.y,s.y),js(t,i.z,a.z,r.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Ys.prototype.isCubicBezierCurve3=!0;class Js extends Os{constructor(t=new I,e=new I){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new I;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Js.prototype.isLineCurve=!0;class Qs extends Os{constructor(t=new I,e=new I,n=new I){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,i=this.v0,a=this.v1,r=this.v2;return n.set(Zs(t,i.x,a.x,r.x),Zs(t,i.y,a.y,r.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Qs.prototype.isQuadraticBezierCurve=!0;class Ks extends Os{constructor(t=new k,e=new k,n=new k){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new k){const n=e,i=this.v0,a=this.v1,r=this.v2;return n.set(Zs(t,i.x,a.x,r.x),Zs(t,i.y,a.y,r.y),Zs(t,i.z,a.z,r.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ks.prototype.isQuadraticBezierCurve3=!0;class $s extends Os{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new I){const n=e,i=this.points,a=(i.length-1)*t,r=Math.floor(a),s=a-r,o=i[0===r?r:r-1],c=i[r],l=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return n.set(Ws(s,o.x,c.x,l.x,h.x),Ws(s,o.y,c.y,l.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new I).fromArray(n))}return this}}$s.prototype.isSplineCurve=!0;var to=Object.freeze({__proto__:null,ArcCurve:Bs,CatmullRomCurve3:Vs,CubicBezierCurve:Xs,CubicBezierCurve3:Ys,EllipseCurve:zs,LineCurve:Js,LineCurve3:class extends Os{constructor(t=new k,e=new k){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new k){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:Qs,QuadraticBezierCurve3:Ks,SplineCurve:$s});class eo extends Os{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Js(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,a=this.curves[i],r=a.getLength(),s=0===r?0:1-t/r;return a.getPointAt(s)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,a=this.curves;i<a.length;i++){const r=a[i],s=r&&r.isEllipseCurve?2*t:r&&(r.isLineCurve||r.isLineCurve3)?1:r&&r.isSplineCurve?t*r.points.length:t,o=r.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new to[n.type]).fromJSON(n))}return this}}class no extends eo{constructor(t){super(),this.type="Path",this.currentPoint=new I,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Js(this.currentPoint.clone(),new I(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const a=new Qs(this.currentPoint.clone(),new I(t,e),new I(n,i));return this.curves.push(a),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,a,r){const s=new Xs(this.currentPoint.clone(),new I(t,e),new I(n,i),new I(a,r));return this.curves.push(s),this.currentPoint.set(a,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new $s(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,a,r){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,a,r),this}absarc(t,e,n,i,a,r){return this.absellipse(t,e,n,n,i,a,r),this}ellipse(t,e,n,i,a,r,s,o){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,a,r,s,o),this}absellipse(t,e,n,i,a,r,s,o){const c=new zs(t,e,n,i,a,r,s,o);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class io extends no{constructor(t){super(t),this.uuid=D.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new no).fromJSON(n))}return this}}class ao extends Zt{constructor(t,e=1){super(),this.type="Light",this.color=new ge(t),this.intensity=e}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}ao.prototype.isLight=!0;(class extends ao{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Zt.DefaultUp),this.updateMatrix(),this.groundColor=new ge(e)}copy(t){return ao.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const ro=new Mt,so=new k,oo=new k;class co{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new I(512,512),this.map=null,this.mapPass=null,this.matrix=new Mt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new _n,this._frameExtents=new I(1,1),this._viewportCount=1,this._viewports=[new G(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;so.setFromMatrixPosition(t.matrixWorld),e.position.copy(so),oo.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(oo),e.updateMatrixWorld(),ro.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ro),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class lo extends co{constructor(){super(new dn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*D.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,a=t.distance||e.far;n===e.fov&&i===e.aspect&&a===e.far||(e.fov=n,e.aspect=i,e.far=a,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}lo.prototype.isSpotLightShadow=!0;(class extends ao{constructor(t,e,n=0,i=Math.PI/3,a=0,r=1){super(t,e),this.type="SpotLight",this.position.copy(Zt.DefaultUp),this.updateMatrix(),this.target=new Zt,this.distance=n,this.angle=i,this.penumbra=a,this.decay=r,this.shadow=new lo}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isSpotLight=!0;const ho=new Mt,uo=new k,po=new k;class fo extends co{constructor(){super(new dn(90,1,.5,500)),this._frameExtents=new I(4,2),this._viewportCount=6,this._viewports=[new G(2,1,1,1),new G(0,1,1,1),new G(3,1,1,1),new G(1,1,1,1),new G(3,0,1,1),new G(1,0,1,1)],this._cubeDirections=[new k(1,0,0),new k(-1,0,0),new k(0,0,1),new k(0,0,-1),new k(0,1,0),new k(0,-1,0)],this._cubeUps=[new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,0,1),new k(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,a=t.distance||n.far;a!==n.far&&(n.far=a,n.updateProjectionMatrix()),uo.setFromMatrixPosition(t.matrixWorld),n.position.copy(uo),po.copy(n.position),po.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(po),n.updateMatrixWorld(),i.makeTranslation(-uo.x,-uo.y,-uo.z),ho.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ho)}}fo.prototype.isPointLightShadow=!0;(class extends ao{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new fo}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class mo extends un{constructor(t=-1,e=1,n=1,i=-1,a=.1,r=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=a,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,a,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let a=n-t,r=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=t*this.view.offsetX,r=a+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(a,r,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=Zt.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}mo.prototype.isOrthographicCamera=!0;class go extends co{constructor(){super(new mo(-5,5,5,-5,.5,500))}}go.prototype.isDirectionalLightShadow=!0;(class extends ao{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Zt.DefaultUp),this.updateMatrix(),this.target=new Zt,this.shadow=new go}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isDirectionalLight=!0;(class extends ao{constructor(t,e){super(t,e),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends ao{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class vo{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new k)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,a=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*i),e.addScaledVector(r[2],.488603*a),e.addScaledVector(r[3],.488603*n),e.addScaledVector(r[4],n*i*1.092548),e.addScaledVector(r[5],i*a*1.092548),e.addScaledVector(r[6],.315392*(3*a*a-1)),e.addScaledVector(r[7],n*a*1.092548),e.addScaledVector(r[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,a=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*i),e.addScaledVector(r[2],1.023328*a),e.addScaledVector(r[3],1.023328*n),e.addScaledVector(r[4],.858086*n*i),e.addScaledVector(r[5],.858086*i*a),e.addScaledVector(r[6],.743125*a*a-.247708),e.addScaledVector(r[7],.858086*n*a),e.addScaledVector(r[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,a=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*a,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*a,e[6]=.315392*(3*a*a-1),e[7]=1.092548*n*a,e[8]=.546274*(n*n-i*i)}}vo.prototype.isSphericalHarmonics3=!0;class yo extends ao{constructor(t=new vo,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}yo.prototype.isLightProbe=!0;function xo(){He.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function _o(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),_e.call(this,t,e,n),this.meshPerAttribute=i||1}function Mo(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ls.call(this,t),this.options={premultiplyAlpha:"none"}}xo.prototype=Object.assign(Object.create(He.prototype),{constructor:xo,isInstancedBufferGeometry:!0,copy:function(t){return He.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=He.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),_o.prototype=Object.assign(Object.create(_e.prototype),{constructor:_o,isInstancedBufferAttribute:!0,copy:function(t){return _e.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=_e.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),Mo.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Mo,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,r=Es.get(t);if(void 0!==r)return a.manager.itemStart(t),setTimeout((function(){e&&e(r),a.manager.itemEnd(t)}),0),r;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(a.options,{colorSpaceConversion:"none"}))})).then((function(n){Es.add(t,n),e&&e(n),a.manager.itemEnd(t)})).catch((function(e){i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)})),a.manager.itemStart(t)}});let bo;class wo extends Ls{constructor(t){super(t)}load(t,e,n,i){const a=this,r=new Rs(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(n){try{const t=n.slice(0);(void 0===bo&&(bo=new(window.AudioContext||window.webkitAudioContext)),bo).decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),a.manager.itemError(t)}}),n,i)}}(class extends yo{constructor(t,e,n=1){super(void 0,n);const i=(new ge).set(t),a=(new ge).set(e),r=new k(i.r,i.g,i.b),s=new k(a.r,a.g,a.b),o=Math.sqrt(Math.PI),c=o*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(r).sub(s).multiplyScalar(c)}}).prototype.isHemisphereLightProbe=!0,class extends yo{constructor(t,e=1){super(void 0,e);const n=(new ge).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0,new Mt,new Mt;class So{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=To(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=To();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function To(){return("undefined"==typeof performance?Date:performance).now()}class Eo{constructor(t,e,n){let i,a,r;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,a=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,a=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,a=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=a,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,a=t*i+i;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==i;++t)n[a+t]=n[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(n,a,0,t,i)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,a=this.cumulativeWeight,r=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-a,e)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,a=e+e;t!==a;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,a=i;t!==a;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,a){if(i>=.5)for(let i=0;i!==a;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){U.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,a){const r=this._workIndex*a;U.multiplyQuaternionsFlat(t,r,t,e,t,n),U.slerpFlat(t,e,t,e,t,r,i)}_lerp(t,e,n,i,a){const r=1-i;for(let s=0;s!==a;++s){const a=e+s;t[a]=t[a]*r+t[n+s]*i}}_lerpAdditive(t,e,n,i,a){for(let r=0;r!==a;++r){const a=e+r;t[a]=t[a]+t[n+r]*i}}}const Ao=new RegExp("[\\[\\]\\.:\\/]","g"),Lo="[^\\[\\]\\.:\\/]",Co="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Ro=/((?:WC+[\/:])*)/.source.replace("WC",Lo),Po=/(WCOD+)?/.source.replace("WCOD",Co),Do=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Lo),Io=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Lo),No=new RegExp("^"+Ro+Po+Do+Io+"$"),qo=["material","materials","bones"];function Oo(t,e,n){const i=n||zo.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function zo(t,e,n){this.path=e,this.parsedPath=n||zo.parseTrackName(e),this.node=zo.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Oo.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=n.length;i!==a;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(zo,{Composite:Oo,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new zo.Composite(t,e,n):new zo(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Ao,"")},parseTrackName:function(t){const e=No.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==qo.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const a=t[i];if(a.name===e||a.uuid===e)return a;const r=n(a.children);if(r)return r}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(zo.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(t||(t=zo.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const r=t[i];if(void 0===r){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=a}else void 0!==r.fromArray&&void 0!==r.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(zo.prototype,{_getValue_unbound:zo.prototype.getValue,_setValue_unbound:zo.prototype.setValue});class Bo{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const a=e.tracks,r=a.length,s=new Array(r),o={endingStart:M,endingEnd:M};for(let t=0;t!==r;++t){const e=a[t].createInterpolant(null);s[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,a=i/n,r=n/i;t.warp(1,a,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,a=i.time,r=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,c=s.sampleValues;return o[0]=a,o[1]=a+n,c[0]=t/r,c[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const a=this._startTime;if(null!==a){const i=(t-a)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const r=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(r),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,a=t.length;n!==a;++n)t[n].evaluate(r),e[n].accumulate(i,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,a=this._loopCount;const r=2202===n;if(0===t)return-1===a?i:r&&1==(1&a)?e-i:i;if(2200===n){-1===a&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===a&&(t>=0?(a=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,a+=Math.abs(n);const s=this.repetitions-a;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=a,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(r&&1==(1&a))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=b,i.endingEnd=b):(i.endingStart=t?this.zeroSlopeAtStart?b:M:w,i.endingEnd=e?this.zeroSlopeAtEnd?b:M:w)}_scheduleFading(t,e,n){const i=this._mixer,a=i.time;let r=this._weightInterpolant;null===r&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const s=r.parameterPositions,o=r.sampleValues;return s[0]=a,o[0]=e,s[1]=a+t,o[1]=n,this}}(class extends C{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,a=i.length,r=t._propertyBindings,s=t._interpolants,o=n.uuid,c=this._bindingsByRootAndName;let l=c[o];void 0===l&&(l={},c[o]=l);for(let t=0;t!==a;++t){const a=i[t],c=a.name;let h=l[c];if(void 0!==h)r[t]=h;else{if(h=r[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new Eo(zo.create(n,c,i),a.ValueTypeName,a.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,c),r[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,a=this._actionsByClip;let r=a[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,a[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),r.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const a=t._clip.uuid,r=this._actionsByClip,s=r[a],o=s.knownActions,c=o[o.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,o[l]=c,o.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete r[a],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,a=this._bindings;let r=i[e];void 0===r&&(r={},i[e]=r),r[n]=t,t._cacheIndex=a.length,a.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,a=n.path,r=this._bindingsByRootAndName,s=r[i],o=e[e.length-1],c=t._cacheIndex;o._cacheIndex=c,e[c]=o,e.pop(),delete s[a],0===Object.keys(s).length&&delete r[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new fs(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,a=e[i];t.__cacheIndex=i,e[i]=t,a.__cacheIndex=n,e[n]=a}clipAction(t,e,n){const i=e||this._root,a=i.uuid;let r="string"==typeof t?Ss.findByName(i,t):t;const s=null!==r?r.uuid:t,o=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==r?r.blendMode:2500),void 0!==o){const t=o.actionByRoot[a];if(void 0!==t&&t.blendMode===n)return t;c=o.knownActions[0],null===r&&(r=c._clip)}if(null===r)return null;const l=new Bo(this,r,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,a),l}existingAction(t,e){const n=e||this._root,i=n.uuid,a="string"==typeof t?Ss.findByName(n,t):t,r=a?a.uuid:t,s=this._actionsByClip[r];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,a=Math.sign(t),r=this._accuIndex^=1;for(let s=0;s!==n;++s)e[s]._update(i,t,a,r);const s=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)s[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,a=i[n];if(void 0!==a){const t=a.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const a=i._cacheIndex,r=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,r._cacheIndex=a,e[a]=r,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Ho{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Ho(void 0===this.value.clone?this.value:this.value.clone())}}function Go(t,e,n){Ba.call(this,t,e),this.meshPerAttribute=n||1}function Fo(t,e,n,i,a){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=a,this.version=0}function Uo(t,e,n=0,i=1/0){this.ray=new _t(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Dt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ko(t,e){return t.distance-e.distance}function Vo(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,a=i.length;t<a;t++)Vo(i[t],e,n,!0)}}Go.prototype=Object.assign(Object.create(Ba.prototype),{constructor:Go,isInstancedInterleavedBuffer:!0,copy:function(t){return Ba.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Ba.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Ba.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Fo.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Fo.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Uo.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e=!1,n=[]){return Vo(t,this,n,e),n.sort(ko),n},intersectObjects:function(t,e=!1,n=[]){for(let i=0,a=t.length;i<a;i++)Vo(t[i],this,n,e);return n.sort(ko),n}});const Wo=new I;class Zo{constructor(t=new I(1/0,1/0),e=new I(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Wo.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new I),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new I),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new I),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new I),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Wo.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function jo(t){Zt.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Zo.prototype.isBox2=!0,jo.prototype=Object.create(Zt.prototype),jo.prototype.constructor=jo,jo.prototype.isImmediateRenderObject=!0;const Xo=new k,Yo=new Mt,Jo=new Mt;function Qo(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Qo(t.children[n]));return e}const Ko=new Float32Array(1),$o=(new Int32Array(Ko.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),tc=5+$o.length,ec=new ve({side:1,depthWrite:!1,depthTest:!1}),{_lodPlanes:nc,_sizeLods:ic,_sigmas:ac}=(new an(new sn,ec),rc());function rc(){const t=[],e=[],n=[];let i=8;for(let a=0;a<tc;a++){const r=Math.pow(2,i);e.push(r);let s=1/r;a>4?s=$o[a-8+4-1]:0==a&&(s=0),n.push(s);const o=1/(r-1),c=-o/2,l=1+o/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),v=new Float32Array(f*d*u),y=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),v.set(h,f*d*t);const a=[t,t,t,t,t,t];y.set(a,m*d*t)}const x=new He;x.setAttribute("position",new _e(g,p)),x.setAttribute("uv",new _e(v,f)),x.setAttribute("faceIndex",new _e(y,m)),t.push(x),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}Math.sqrt(5),Os.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Os.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},no.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends wr{constructor(t=10,e=10,n=4473924,i=8947848){n=new ge(n),i=new ge(i);const a=e/2,r=t/e,s=t/2,o=[],c=[];for(let t=0,l=0,h=-s;t<=e;t++,h+=r){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);const e=t===a?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new He;l.setAttribute("position",new Ce(o,3)),l.setAttribute("color",new Ce(c,3)),super(l,new fr({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends wr{constructor(t){const e=Qo(t),n=new He,i=[],a=[],r=new ge(0,0,1),s=new ge(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),a.push(r.r,r.g,r.b),a.push(s.r,s.g,s.b))}n.setAttribute("position",new Ce(i,3)),n.setAttribute("color",new Ce(a,3)),super(n,new fr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Jo.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const a=e[t];a.parent&&a.parent.isBone&&(Yo.multiplyMatrices(Jo,a.matrixWorld),Xo.setFromMatrixPosition(Yo),i.setXYZ(n,Xo.x,Xo.y,Xo.z),Yo.multiplyMatrices(Jo,a.parent.matrixWorld),Xo.setFromMatrixPosition(Yo),i.setXYZ(n+1,Xo.x,Xo.y,Xo.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Ls.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}(t)},Ls.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Zo.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Zo.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Zo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Zo.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},Z.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Z.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Z.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Z.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Z.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},dt.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},_n.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},D.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},D.nearestPowerOfTwo=function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),D.floorPowerOfTwo(t)},D.nextPowerOfTwo=function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),D.ceilPowerOfTwo(t)},N.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},N.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},N.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},N.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},N.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},N.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Mt.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Mt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Mt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new k).setFromMatrixColumn(this,3)},Mt.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Mt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Mt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Mt.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Mt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Mt.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Mt.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Mt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Mt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Mt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Mt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Mt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Mt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Mt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Mt.prototype.makeFrustum=function(t,e,n,i,a,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,a,r)},Mt.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Jt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},U.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},U.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},_t.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},_t.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},_t.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},oe.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},oe.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},oe.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},oe.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},oe.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},oe.barycoordFromPoint=function(t,e,n,i,a){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),oe.getBarycoord(t,e,n,i,a)},oe.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),oe.getNormal(t,e,n,i)},io.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},io.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new rs(this,t)},io.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new cs(this,t)},I.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},I.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},I.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},k.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},k.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},k.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},k.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},k.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},k.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},k.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},k.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},k.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},G.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},G.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Zt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Zt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Zt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Zt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Zt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Zt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),an.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(an.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),or.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Os.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),dn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(ao.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(_e.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===A},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(A)}}}),_e.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?A:E),this},_e.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},_e.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},He.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},He.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new _e(arguments[1],arguments[2])))},He.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},He.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},He.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},He.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},He.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(He.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(xo.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Uo.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(Ba.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===A},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Ba.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?A:E),this},Ba.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},rs.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},rs.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},rs.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},za.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Ho.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(le.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ge}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(hs.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(hn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Na.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},Na.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Na.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Na.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Na.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Na.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Na.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Na.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Na.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Na.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Na.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Na.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Na.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Na.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Na.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Na.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Na.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Na.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Na.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Na.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Na.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Na.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Na.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Na.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Na.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Na.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:S}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ta.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(F.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),class extends Zt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new wo).load(t,(function(t){e.setBuffer(t)})),this},fn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},fn.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},O.crossOrigin=void 0,O.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const a=new qs;a.setCrossOrigin(this.crossOrigin);const r=a.load(t,n,void 0,i);return e&&(r.mapping=e),r},O.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const a=new Is;a.setCrossOrigin(this.crossOrigin);const r=a.load(t,n,void 0,i);return e&&(r.mapping=e),r},O.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},O.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"127"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="127");var sc=n(343),oc=n.n(sc),cc=n(270),lc=n.n(cc);const hc=new class{constructor(){this.scene=new za,this.camera=new dn(45,window.innerWidth/window.innerHeight,.1,100),this.camera.position.z=1,this.camera.zoom=parseFloat(document.querySelector(".wave-canvas").getAttribute("zoom")),this.renderer=new Na({alpha:!0,antialias:!0}),document.querySelector(".wave-canvas").appendChild(this.renderer.domElement),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(0,0),this.clock=new So,this.onResize()}init(){this.createMesh()}createMesh(){var t=document.createElement("canvas");t.width=10089,t.height=6862;var e=t.getContext("2d"),n=document.createElement("img");n.setAttribute("src","data:image/svg+xml;base64,"+window.btoa(unescape(encodeURIComponent('<svg id="Слой_1" data-name="Слой 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1355.13 921.66"><defs><style>.cls-1{opacity:0.5;}.cls-2{fill:url(#Безымянный_градиент_125);}.cls-3{fill:#fff;}.cls-4{fill:url(#Безымянный_градиент_125-2);}.cls-5{fill:url(#Безымянный_градиент_125-3);}.cls-6{fill:url(#Безымянный_градиент_125-4);}.cls-7{fill:url(#Безымянный_градиент_125-5);}.cls-8{fill:url(#Безымянный_градиент_125-6);}.cls-9{fill:url(#Безымянный_градиент_125-7);}.cls-10{fill:url(#Безымянный_градиент_125-8);}.cls-11{fill:url(#Безымянный_градиент_125-9);}.cls-12{fill:url(#Безымянный_градиент_125-10);}.cls-13{fill:url(#Безымянный_градиент_125-11);}.cls-14{fill:url(#Безымянный_градиент_125-12);}.cls-15{fill:url(#Безымянный_градиент_125-13);}.cls-16{fill:url(#Безымянный_градиент_125-14);}.cls-17{fill:url(#Безымянный_градиент_125-15);}.cls-18{fill:url(#Безымянный_градиент_125-16);}.cls-19{fill:url(#Безымянный_градиент_125-17);}.cls-20{fill:url(#Безымянный_градиент_125-18);}.cls-21{fill:url(#Безымянный_градиент_125-19);}.cls-22{fill:url(#Безымянный_градиент_125-20);}.cls-23{fill:url(#Безымянный_градиент_125-21);}.cls-24{fill:url(#Безымянный_градиент_125-22);}.cls-25{fill:url(#Безымянный_градиент_125-23);}.cls-26{fill:url(#Безымянный_градиент_125-24);}.cls-27{fill:url(#Безымянный_градиент_125-25);}.cls-28{fill:url(#Безымянный_градиент_125-26);}.cls-29{fill:url(#Безымянный_градиент_125-27);}.cls-30{fill:url(#Безымянный_градиент_125-28);}.cls-31{fill:url(#Безымянный_градиент_125-29);}.cls-32{fill:url(#Безымянный_градиент_125-30);}.cls-33{fill:url(#Безымянный_градиент_125-31);}.cls-34{fill:url(#Безымянный_градиент_125-32);}.cls-35{fill:url(#Безымянный_градиент_125-33);}.cls-36{fill:url(#Безымянный_градиент_125-34);}.cls-37{fill:url(#Безымянный_градиент_125-35);}.cls-38{fill:url(#Безымянный_градиент_125-36);}.cls-39{fill:url(#Безымянный_градиент_125-37);}.cls-40{fill:url(#Безымянный_градиент_125-38);}.cls-41{fill:url(#Безымянный_градиент_125-39);}.cls-42{fill:url(#Безымянный_градиент_125-40);}.cls-43{fill:url(#Безымянный_градиент_125-41);}.cls-44{fill:url(#Безымянный_градиент_125-42);}.cls-45{fill:url(#Безымянный_градиент_125-43);}.cls-46{fill:url(#Безымянный_градиент_125-44);}.cls-47{fill:url(#Безымянный_градиент_125-45);}.cls-48{fill:url(#Безымянный_градиент_125-46);}.cls-49{fill:url(#Безымянный_градиент_125-47);}.cls-50{fill:url(#Безымянный_градиент_125-48);}.cls-51{fill:url(#Безымянный_градиент_125-49);}.cls-52{fill:url(#Безымянный_градиент_125-50);}.cls-53{fill:url(#Безымянный_градиент_125-51);}.cls-54{fill:url(#Безымянный_градиент_125-52);}.cls-55{fill:url(#Безымянный_градиент_125-53);}.cls-56{fill:url(#Безымянный_градиент_125-54);}.cls-57{fill:url(#Безымянный_градиент_125-55);}.cls-58{fill:url(#Безымянный_градиент_125-56);}.cls-59{fill:url(#Безымянный_градиент_125-57);}.cls-60{fill:url(#Безымянный_градиент_125-58);}.cls-61{fill:url(#Безымянный_градиент_125-59);}.cls-62{fill:url(#Безымянный_градиент_125-60);}.cls-63{fill:url(#Безымянный_градиент_125-61);}.cls-64{fill:url(#Безымянный_градиент_125-62);}.cls-65{fill:url(#Безымянный_градиент_125-63);}.cls-66{fill:url(#Безымянный_градиент_125-64);}.cls-67{fill:url(#Безымянный_градиент_125-65);}.cls-68{fill:url(#Безымянный_градиент_125-66);}.cls-69{fill:url(#Безымянный_градиент_125-67);}.cls-70{fill:url(#Безымянный_градиент_125-68);}.cls-71{fill:url(#Безымянный_градиент_125-69);}.cls-72{fill:url(#Безымянный_градиент_125-70);}.cls-73{fill:url(#Безымянный_градиент_125-71);}.cls-74{fill:url(#Безымянный_градиент_125-72);}.cls-75{fill:url(#Безымянный_градиент_125-73);}.cls-76{fill:url(#Безымянный_градиент_125-74);}.cls-77{fill:url(#Безымянный_градиент_125-75);}.cls-78{fill:url(#Безымянный_градиент_125-76);}.cls-79{fill:url(#Безымянный_градиент_125-77);}.cls-80{fill:url(#Безымянный_градиент_125-78);}.cls-81{fill:url(#Безымянный_градиент_125-79);}.cls-82{fill:url(#Безымянный_градиент_125-80);}.cls-83{fill:url(#Безымянный_градиент_125-81);}.cls-84{fill:url(#Безымянный_градиент_125-82);}.cls-85{fill:url(#Безымянный_градиент_125-83);}.cls-86{fill:url(#Безымянный_градиент_125-84);}.cls-87{fill:url(#Безымянный_градиент_125-85);}.cls-88{fill:url(#Безымянный_градиент_125-86);}.cls-89{fill:url(#Безымянный_градиент_125-87);}.cls-90{fill:url(#Безымянный_градиент_125-88);}.cls-91{fill:url(#Безымянный_градиент_125-89);}.cls-92{fill:url(#Безымянный_градиент_125-90);}.cls-93{fill:url(#Безымянный_градиент_125-91);}.cls-94{fill:url(#Безымянный_градиент_125-92);}.cls-95{fill:url(#Безымянный_градиент_125-93);}.cls-96{fill:url(#Безымянный_градиент_125-94);}.cls-97{fill:url(#Безымянный_градиент_125-95);}.cls-98{fill:url(#Безымянный_градиент_125-96);}.cls-99{fill:url(#Безымянный_градиент_125-97);}.cls-100{fill:url(#Безымянный_градиент_125-98);}.cls-101{fill:url(#Безымянный_градиент_125-99);}.cls-102{fill:url(#Безымянный_градиент_125-100);}.cls-103{fill:url(#Безымянный_градиент_125-101);}.cls-104{fill:url(#Безымянный_градиент_125-102);}.cls-105{fill:url(#Безымянный_градиент_125-103);}.cls-106{fill:url(#Безымянный_градиент_125-104);}.cls-107{fill:url(#Безымянный_градиент_125-105);}.cls-108{fill:url(#Безымянный_градиент_125-106);}.cls-109{fill:url(#Безымянный_градиент_125-107);}.cls-110{fill:url(#Безымянный_градиент_125-108);}.cls-111{fill:url(#Безымянный_градиент_125-109);}.cls-112{fill:url(#Безымянный_градиент_125-110);}.cls-113{fill:url(#Безымянный_градиент_125-111);}.cls-114{fill:url(#Безымянный_градиент_125-112);}.cls-115{fill:url(#Безымянный_градиент_125-113);}.cls-116{fill:url(#Безымянный_градиент_125-114);}.cls-117{fill:url(#Безымянный_градиент_125-115);}.cls-118{fill:url(#Безымянный_градиент_125-116);}.cls-119{fill:url(#Безымянный_градиент_125-117);}.cls-120{fill:url(#Безымянный_градиент_125-118);}.cls-121{fill:url(#Безымянный_градиент_125-119);}.cls-122{fill:url(#Безымянный_градиент_125-120);}.cls-123{fill:url(#Безымянный_градиент_125-121);}.cls-124{fill:url(#Безымянный_градиент_125-122);}.cls-125{fill:url(#Безымянный_градиент_125-123);}.cls-126{fill:url(#Безымянный_градиент_125-124);}.cls-127{fill:url(#Безымянный_градиент_125-125);}.cls-128{fill:url(#Безымянный_градиент_125-126);}.cls-129{fill:url(#Безымянный_градиент_125-127);}.cls-130{fill:url(#Безымянный_градиент_125-128);}.cls-131{fill:url(#Безымянный_градиент_125-129);}.cls-132{fill:url(#Безымянный_градиент_125-130);}.cls-133{fill:url(#Безымянный_градиент_125-131);}.cls-134{fill:url(#Безымянный_градиент_125-132);}.cls-135{fill:url(#Безымянный_градиент_125-133);}.cls-136{fill:url(#Безымянный_градиент_125-134);}.cls-137{fill:url(#Безымянный_градиент_125-135);}.cls-138{fill:url(#Безымянный_градиент_125-136);}.cls-139{fill:url(#Безымянный_градиент_125-137);}.cls-140{fill:url(#Безымянный_градиент_125-138);}</style><linearGradient id="Безымянный_градиент_125" x1="16.65" y1="-128.09" x2="556.55" y2="183.62" gradientTransform="translate(288.61 145.57) rotate(21.18)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#23b1c0"/><stop offset="0.08" stop-color="#25b2c1"/><stop offset="0.1" stop-color="#2cb4c3"/><stop offset="0.12" stop-color="#38b8c6"/><stop offset="0.14" stop-color="#49becb"/><stop offset="0.15" stop-color="#5fc6d1"/><stop offset="0.17" stop-color="#7ad0d9"/><stop offset="0.18" stop-color="#9bdce2"/><stop offset="0.19" stop-color="#c1e9ed"/><stop offset="0.2" stop-color="#ebf8f9"/><stop offset="0.2" stop-color="#fff"/><stop offset="0.2" stop-color="#eff8f9"/><stop offset="0.21" stop-color="#c0e3e9"/><stop offset="0.22" stop-color="#96d1da"/><stop offset="0.23" stop-color="#72c2cd"/><stop offset="0.24" stop-color="#55b5c3"/><stop offset="0.25" stop-color="#3fabbb"/><stop offset="0.26" stop-color="#2fa4b5"/><stop offset="0.27" stop-color="#26a0b2"/><stop offset="0.29" stop-color="#239fb1"/><stop offset="0.29" stop-color="#3a95b2"/><stop offset="0.3" stop-color="#538bb4"/><stop offset="0.32" stop-color="#6782b5"/><stop offset="0.33" stop-color="#757cb5"/><stop offset="0.35" stop-color="#7d79b6"/><stop offset="0.38" stop-color="#7f78b6"/><stop offset="0.38" stop-color="#8c86bd"/><stop offset="0.39" stop-color="#bdbada"/><stop offset="0.41" stop-color="#e1dfee"/><stop offset="0.42" stop-color="#f7f7fa"/><stop offset="0.43" stop-color="#fff"/><stop offset="0.44" stop-color="#fbe5ec"/><stop offset="0.46" stop-color="#f7c9d8"/><stop offset="0.48" stop-color="#f3b3c7"/><stop offset="0.5" stop-color="#f1a3bc"/><stop offset="0.52" stop-color="#ef9ab5"/><stop offset="0.55" stop-color="#ef97b3"/><stop offset="0.57" stop-color="#ef99b5"/><stop offset="0.58" stop-color="#f1a1ba"/><stop offset="0.58" stop-color="#f3aec4"/><stop offset="0.59" stop-color="#f5c1d2"/><stop offset="0.59" stop-color="#f9d9e3"/><stop offset="0.59" stop-color="#fef6f9"/><stop offset="0.6" stop-color="#fff"/><stop offset="0.6" stop-color="#fceef2"/><stop offset="0.61" stop-color="#f8cfdc"/><stop offset="0.62" stop-color="#f4b6ca"/><stop offset="0.64" stop-color="#f1a3bc"/><stop offset="0.65" stop-color="#ef95b2"/><stop offset="0.67" stop-color="#ed8dac"/><stop offset="0.71" stop-color="#ed8baa"/><stop offset="0.73" stop-color="#ee8fad"/><stop offset="0.75" stop-color="#ef9ab5"/><stop offset="0.76" stop-color="#f2acc2"/><stop offset="0.78" stop-color="#f6c7d6"/><stop offset="0.8" stop-color="#fbe8ee"/><stop offset="0.81" stop-color="#fff"/><stop offset="0.83" stop-color="#fadfe7"/><stop offset="0.85" stop-color="#f4bcce"/><stop offset="0.87" stop-color="#f09fb9"/><stop offset="0.9" stop-color="#ec89a8"/><stop offset="0.93" stop-color="#ea799d"/><stop offset="0.96" stop-color="#e87096"/><stop offset="1" stop-color="#e86d94"/></linearGradient><linearGradient id="Безымянный_градиент_125-2" x1="16.64" y1="-123.4" x2="556.54" y2="188.32" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-3" x1="16.61" y1="-118.86" x2="556.51" y2="192.85" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-4" x1="16.58" y1="-114.4" x2="556.47" y2="197.31" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-5" x1="16.56" y1="-109.7" x2="556.45" y2="202.01" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-6" x1="16.54" y1="-105.17" x2="556.43" y2="206.54" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-7" x1="16.53" y1="-100.69" x2="556.42" y2="211.02" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-8" x1="16.51" y1="-95.99" x2="556.4" y2="215.71" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-9" x1="16.49" y1="-91.45" x2="556.37" y2="220.25" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-10" x1="16.45" y1="-86.99" x2="556.33" y2="224.71" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-11" x1="16.43" y1="-82.29" x2="556.31" y2="229.4" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-12" x1="16.41" y1="-77.76" x2="556.29" y2="233.94" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-13" x1="16.51" y1="-73.42" x2="556.4" y2="238.28" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-14" x1="16.5" y1="-68.73" x2="556.38" y2="242.98" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-15" x1="16.47" y1="-64.19" x2="556.36" y2="247.51" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-16" x1="16.44" y1="-59.73" x2="556.32" y2="251.97" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-17" x1="16.42" y1="-55.03" x2="556.3" y2="256.67" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-18" x1="16.4" y1="-50.5" x2="556.27" y2="261.2" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-19" x1="16.39" y1="-46.02" x2="556.26" y2="265.68" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-20" x1="16.37" y1="-41.32" x2="556.24" y2="270.38" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-21" x1="16.35" y1="-36.79" x2="556.22" y2="274.91" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-22" x1="16.31" y1="-32.32" x2="556.18" y2="279.37" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-23" x1="16.29" y1="-27.63" x2="556.16" y2="284.07" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-24" x1="16.27" y1="-23.09" x2="556.13" y2="288.6" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-25" x1="16.39" y1="-18.86" x2="556.26" y2="292.84" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-26" x1="16.37" y1="-14.16" x2="556.25" y2="297.53" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-27" x1="16.35" y1="-9.63" x2="556.22" y2="302.07" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-28" x1="16.31" y1="-5.16" x2="556.18" y2="306.53" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-29" x1="16.29" y1="-0.47" x2="556.16" y2="311.22" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-30" x1="16.27" y1="4.07" x2="556.13" y2="315.76" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-31" x1="16.26" y1="8.55" x2="556.12" y2="320.24" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-32" x1="16.25" y1="13.24" x2="556.11" y2="324.93" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-33" x1="16.22" y1="17.78" x2="556.08" y2="329.47" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-34" x1="16.18" y1="22.24" x2="556.04" y2="333.93" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-35" x1="16.17" y1="26.94" x2="556.02" y2="338.62" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-36" x1="16.15" y1="31.47" x2="556" y2="343.16" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-37" x1="16.25" y1="35.81" x2="556.11" y2="347.5" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-38" x1="16.23" y1="40.51" x2="556.09" y2="352.19" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-39" x1="16.21" y1="45.04" x2="556.07" y2="356.73" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-40" x1="16.17" y1="49.51" x2="556.02" y2="361.19" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-41" x1="16.15" y1="54.2" x2="556.01" y2="365.88" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-42" x1="16.13" y1="58.74" x2="555.98" y2="370.42" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-43" x1="16.12" y1="63.22" x2="555.97" y2="374.9" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-44" x1="16.11" y1="67.91" x2="555.95" y2="379.59" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-45" x1="16.08" y1="72.45" x2="555.93" y2="384.13" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-46" x1="16.04" y1="76.91" x2="555.89" y2="388.59" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-47" x1="16.03" y1="81.61" x2="555.87" y2="393.28" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-48" x1="16.01" y1="86.14" x2="555.84" y2="397.82" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-49" x1="16.07" y1="90.62" x2="555.91" y2="402.3" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-50" x1="16.05" y1="95.31" x2="555.89" y2="406.99" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-51" x1="16.03" y1="99.85" x2="555.87" y2="411.53" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-52" x1="15.99" y1="104.31" x2="555.82" y2="415.99" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-53" x1="15.97" y1="109.01" x2="555.81" y2="420.68" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-54" x1="15.95" y1="113.54" x2="555.78" y2="425.22" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-55" x1="15.94" y1="118.02" x2="555.77" y2="429.69" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-56" x1="15.92" y1="122.72" x2="555.75" y2="434.39" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-57" x1="15.9" y1="127.25" x2="555.73" y2="438.92" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-58" x1="15.86" y1="131.72" x2="555.68" y2="443.39" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-59" x1="15.85" y1="136.41" x2="555.67" y2="448.08" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-60" x1="15.82" y1="140.95" x2="555.64" y2="452.61" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-61" x1="15.93" y1="145.29" x2="555.76" y2="456.96" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-62" x1="15.91" y1="149.98" x2="555.74" y2="461.65" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-63" x1="15.89" y1="154.52" x2="555.71" y2="466.19" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-64" x1="15.85" y1="158.98" x2="555.67" y2="470.65" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-65" x1="15.83" y1="163.68" x2="555.65" y2="475.34" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-66" x1="15.81" y1="168.21" x2="555.63" y2="479.88" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-67" x1="15.8" y1="172.69" x2="555.62" y2="484.36" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-68" x1="15.78" y1="177.39" x2="555.6" y2="489.05" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-69" x1="15.76" y1="181.92" x2="555.57" y2="493.59" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-70" x1="2624.04" y1="-116.75" x2="3122.25" y2="170.89" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-71" x1="2624.02" y1="-112.06" x2="3122.24" y2="175.59" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-72" x1="2624" y1="-107.52" x2="3122.21" y2="180.12" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-73" x1="2623.97" y1="-103.06" x2="3122.17" y2="184.58" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-74" x1="2623.95" y1="-98.36" x2="3122.16" y2="189.28" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-75" x1="2623.93" y1="-93.83" x2="3122.14" y2="193.81" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-76" x1="2623.92" y1="-89.35" x2="3122.13" y2="198.29" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-77" x1="2623.91" y1="-84.65" x2="3122.11" y2="202.99" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-78" x1="2623.89" y1="-80.11" x2="3122.09" y2="207.52" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-79" x1="2623.85" y1="-75.65" x2="3122.05" y2="211.98" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-80" x1="2623.84" y1="-70.95" x2="3122.03" y2="216.68" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-81" x1="2623.82" y1="-66.42" x2="3122.01" y2="221.21" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-82" x1="2623.91" y1="-62.08" x2="3122.11" y2="225.56" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-83" x1="2623.9" y1="-57.39" x2="3122.1" y2="230.25" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-84" x1="2623.87" y1="-52.85" x2="3122.07" y2="234.78" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-85" x1="2623.84" y1="-48.39" x2="3122.03" y2="239.25" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-86" x1="2623.83" y1="-43.69" x2="3122.02" y2="243.94" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-87" x1="2623.8" y1="-39.16" x2="3121.99" y2="248.47" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-88" x1="2623.8" y1="-34.68" x2="3121.99" y2="252.95" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-89" x1="2623.78" y1="-29.98" x2="3121.97" y2="257.65" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-90" x1="2623.76" y1="-25.45" x2="3121.95" y2="262.18" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-91" x1="2623.73" y1="-20.98" x2="3121.91" y2="266.64" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-92" x1="2623.71" y1="-16.29" x2="3121.89" y2="271.34" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-93" x1="2623.69" y1="-11.75" x2="3121.87" y2="275.87" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-94" x1="2623.8" y1="-7.52" x2="3121.99" y2="280.11" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-95" x1="2623.78" y1="-2.82" x2="3121.97" y2="284.81" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-96" x1="2623.76" y1="1.71" x2="3121.95" y2="289.34" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-97" x1="2623.73" y1="6.18" x2="3121.91" y2="293.8" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-98" x1="2623.71" y1="10.87" x2="3121.89" y2="298.5" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-99" x1="2623.69" y1="15.41" x2="3121.87" y2="303.03" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-100" x1="2623.68" y1="19.89" x2="3121.86" y2="307.51" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-101" x1="2623.67" y1="24.58" x2="3121.84" y2="312.2" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-102" x1="2623.65" y1="29.12" x2="3121.82" y2="316.74" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-103" x1="2623.61" y1="33.58" x2="3121.78" y2="321.2" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-104" x1="2623.6" y1="38.28" x2="3121.76" y2="325.89" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-105" x1="2623.58" y1="42.81" x2="3121.74" y2="330.43" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-106" x1="2623.67" y1="47.15" x2="3121.85" y2="334.77" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-107" x1="2623.66" y1="51.85" x2="3121.83" y2="339.47" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-108" x1="2623.64" y1="56.38" x2="3121.81" y2="344" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-109" x1="2623.6" y1="60.85" x2="3121.77" y2="348.46" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-110" x1="2623.59" y1="65.54" x2="3121.75" y2="353.16" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-111" x1="2623.57" y1="70.08" x2="3121.73" y2="357.69" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-112" x1="2623.56" y1="74.56" x2="3121.72" y2="362.17" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-113" x1="2623.54" y1="79.25" x2="3121.7" y2="366.86" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-114" x1="2623.52" y1="83.79" x2="3121.68" y2="371.4" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-115" x1="2623.49" y1="88.25" x2="3121.64" y2="375.86" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-116" x1="2623.47" y1="92.95" x2="3121.62" y2="380.55" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-117" x1="2623.45" y1="97.48" x2="3121.6" y2="385.09" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-118" x1="2623.51" y1="101.96" x2="3121.66" y2="389.57" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-119" x1="2623.49" y1="106.65" x2="3121.65" y2="394.26" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-120" x1="2623.47" y1="111.19" x2="3121.62" y2="398.8" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-121" x1="2623.44" y1="115.65" x2="3121.58" y2="403.26" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-122" x1="2623.42" y1="120.35" x2="3121.57" y2="407.95" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-123" x1="2623.4" y1="124.88" x2="3121.54" y2="412.49" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-124" x1="2623.39" y1="129.36" x2="3121.53" y2="416.97" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-125" x1="2623.38" y1="134.06" x2="3121.52" y2="421.66" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-126" x1="2623.36" y1="138.59" x2="3121.49" y2="426.19" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-127" x1="2623.32" y1="143.06" x2="3121.46" y2="430.66" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-128" x1="2623.31" y1="147.75" x2="3121.44" y2="435.35" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-129" x1="2623.29" y1="152.29" x2="3121.42" y2="439.88" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-130" x1="2623.38" y1="156.63" x2="3121.52" y2="444.23" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-131" x1="2623.37" y1="161.32" x2="3121.5" y2="448.92" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-132" x1="2623.35" y1="165.86" x2="3121.48" y2="453.46" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-133" x1="2623.31" y1="170.32" x2="3121.44" y2="457.92" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-134" x1="2623.3" y1="175.02" x2="3121.43" y2="462.61" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-135" x1="2623.28" y1="179.55" x2="3121.4" y2="467.15" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-136" x1="2623.27" y1="184.03" x2="3121.39" y2="471.63" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-137" x1="2623.25" y1="188.73" x2="3121.38" y2="476.32" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-138" x1="2623.23" y1="193.26" x2="3121.35" y2="480.85" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3815.79, 1512.29)" xlink:href="#Безымянный_градиент_125"/></defs><g class="cls-1"><path class="cls-2" d="M645.48,442.7c-.62-.33-1.25-.65-1.86-1a124,124,0,0,1-13.69-8.57,99.55,99.55,0,0,1-12.28-10.45,77,77,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16A54.68,54.68,0,0,1,605,349.06a94.68,94.68,0,0,1,9.16-13.25c3.4-4.18,7.05-8.15,10.82-12,7.55-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a56.05,56.05,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.21,22.21,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a112.4,112.4,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92q-7.65-2.73-15.49-4.83c-10.45-2.84-21.05-5-31.7-6.86q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.41.79c-8.35.57-16.69,1.44-24.95,2.78-2.73-3.38-5.67-6.59-8.71-9.69C410,190.5,406,186.8,402,183.2c-8.06-7.2-16.45-14-24.87-20.78l-12.64-10.15c-4.2-3.39-8.38-6.8-12.49-10.3s-8.16-7.09-12-10.88c-1.92-1.89-3.79-3.84-5.55-5.89a49,49,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.54,9.54,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.5,5.5,0,0,1,.3-1,6.69,6.69,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.49-1.05,3.71-1.65a17.57,17.57,0,0,0,3.45-2.14,6.18,6.18,0,0,0,1.33-1.55,3.41,3.41,0,0,0,.37-1,3,3,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81A16.17,16.17,0,0,0,349,83a28.59,28.59,0,0,0-3.13-2.58,52,52,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.8-5.15-1.66-7.75-2.38c-1.31-.35-2.61-.69-3.93-1-.66-.15-1.31-.3-2-.43-.33-.07-.66-.13-1-.18l-.5-.07-.25,0c-.1,0-.17,0-.29.07l.08,0a.56.56,0,0,1,.2,0h.25l.5.07,1,.19c.66.13,1.31.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38S329,72,331.53,73s5,2.12,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.11,2.58,16.56,16.56,0,0,1,2.56,3.1,8.72,8.72,0,0,1,1.33,3.75,2.93,2.93,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.24.54-2.47,1.11-3.67,1.75a21.13,21.13,0,0,0-3.4,2.22,10.89,10.89,0,0,0-1.45,1.43,7,7,0,0,0-1.08,1.75,6.22,6.22,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.25,0,.26,0,.25a10.81,10.81,0,0,0,.05,2,15.28,15.28,0,0,0,1.06,3.92,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.79,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5q-3.4.56-6.78,1.23a124.87,124.87,0,0,0-15.69,4.13,75.69,75.69,0,0,0-7.56,3,53.14,53.14,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,25.12,25.12,0,0,0-4.45,6.83,18.39,18.39,0,0,0-.74,1.91c-.11.32-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.79,9.79,0,0,0,.39,4.1,13.65,13.65,0,0,0,1.8,3.7,18.91,18.91,0,0,0,2.66,3.12,27.84,27.84,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.17,1,.16c.67.1,1.34.17,2,.25,1.35.12,2.7.22,4.06.23h1c.34,0,.67,0,1,0l1,0c.34,0,.68,0,1-.06a43.8,43.8,0,0,0,8-1.36,38.74,38.74,0,0,0,7.57-3,31.81,31.81,0,0,0,3.49-2.12,23.75,23.75,0,0,0,3.13-2.62,15.4,15.4,0,0,0,1.37-1.53,14,14,0,0,0,1.16-1.69,15.11,15.11,0,0,0,1.62-3.76,17.07,17.07,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.16,22.16,0,0,0-.26-4.07,33.54,33.54,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22c-1.41-2.31-2.94-4.55-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.51,1.9,32.23,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.88q7.82,2.11,15.43,4.83,3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.32a110,110,0,0,1,14,8c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.76.65c.52.44,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.06,31.06,0,0,1,4.72,6.42,23.47,23.47,0,0,1,1.59,3.64,20.6,20.6,0,0,1,.86,3.87,21.33,21.33,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.1,6.25-3.56,4-7.38,7.85-11.24,11.61-7.76,7.5-15.78,14.76-23.34,22.5-3.78,3.87-7.45,7.86-10.86,12.07a94.69,94.69,0,0,0-9.25,13.37,56,56,0,0,0-6,15.14,68.45,68.45,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.93,58.93,0,0,0,2.93,16,64,64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59c.64.35,1.28.68,1.93,1ZM424.11,206.81a80,80,0,0,1,4.54,6.68,55.08,55.08,0,0,1,3.68,7.17,33.08,33.08,0,0,1,2.25,7.71,18.81,18.81,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,15.81,15.81,0,0,1-1.34,1.49,22.86,22.86,0,0,1-3.08,2.56,31.72,31.72,0,0,1-3.43,2.09,37.52,37.52,0,0,1-7.49,2.92,42,42,0,0,1-7.94,1.33c-.33,0-.67.06-1,.07l-1,0h-2c-1.35,0-2.69-.12-4-.24-.66-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,26.9,26.9,0,0,1-6.58-4.54,18.76,18.76,0,0,1-2.59-3,13.65,13.65,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.2-.63.3-1c.21-.63.46-1.25.72-1.87a24.66,24.66,0,0,1,4.38-6.68,33.36,33.36,0,0,1,6.1-5.2,50.27,50.27,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.59,125.59,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C423,205.35,423.56,206.07,424.11,206.81Z"/><polygon class="cls-3" points="422.02 204.11 422.44 204.04 422.83 204.57 422.41 204.63 422.02 204.11"/></g><g class="cls-1"><path class="cls-4" d="M643.78,447.08l-1.87-1a124.13,124.13,0,0,1-13.69-8.58,100.38,100.38,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63.45,63.45,0,0,1-7-14.46,58.47,58.47,0,0,1-2.87-15.79,63.64,63.64,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89,96.2,96.2,0,0,1,9.17-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.33,24.33,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86A113.11,113.11,0,0,0,637,232.23c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.63.08-32.42.8-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.17-8.06-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48,25.19,25.19,0,0,1-1.84-3.58,14.92,14.92,0,0,1-1.06-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.24,0-.25c0-.08,0-.17.05-.25a5.14,5.14,0,0,1,.3-.94,6.75,6.75,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.65a17,17,0,0,0,3.44-2.14,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,0-1,8.88,8.88,0,0,0-1.37-3.82,16.79,16.79,0,0,0-2.58-3.13,28.59,28.59,0,0,0-3.13-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-2-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.31-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07q.5.08,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.44,16.44,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.21,3.21,0,0,1-.36.92,5.85,5.85,0,0,1-1.3,1.51A17.39,17.39,0,0,1,346,99.83c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.25.53-2.47,1.1-3.67,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.77,6.77,0,0,0-1.08,1.74,6.57,6.57,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a11.59,11.59,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L375.21,167c8.41,6.78,16.78,13.61,24.83,20.81,4,3.61,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a127.23,127.23,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.42,34.42,0,0,0-6.19,5.3,25.11,25.11,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.76,27.76,0,0,0,6.71,4.62,41,41,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1-.05,1-.06a42.72,42.72,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,30.76,30.76,0,0,0,3.48-2.12,24.57,24.57,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,15.3,15.3,0,0,0,1.61-3.77,16.73,16.73,0,0,0,.61-4.05,22.16,22.16,0,0,0-.26-4.07,34.17,34.17,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22,80.19,80.19,0,0,0-4.58-6.71l-1.55-2c8.13-1.3,16.35-2.14,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.22,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.36,7.54,2.92c2.48,1,4.94,2.14,7.36,3.32a111.26,111.26,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.77.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a30.85,30.85,0,0,1,4.72,6.43,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.55,21.55,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.88-7.45,7.86-10.87,12.07A96.15,96.15,0,0,0,602.52,353a56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78,78,0,0,0,10.26,12.6,100.11,100.11,0,0,0,12.39,10.5,124.69,124.69,0,0,0,13.77,8.59l1.95,1ZM422.39,211.18a76.94,76.94,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,18.86,18.86,0,0,1-.34,7.95,14.75,14.75,0,0,1-1.57,3.65,13.44,13.44,0,0,1-1.14,1.65,14.34,14.34,0,0,1-1.33,1.48,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.88a40.43,40.43,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,17.88,17.88,0,0,1-2.59-3,13.19,13.19,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.19-.63.3-1c.21-.63.46-1.25.72-1.86a24.63,24.63,0,0,1,4.37-6.68,33.48,33.48,0,0,1,6.11-5.21,50.27,50.27,0,0,1,7-3.92,76.9,76.9,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.53-.69,7.08-1.26C421.28,209.72,421.84,210.45,422.39,211.18Z"/><polygon class="cls-3" points="420.31 208.49 420.73 208.42 421.12 208.94 420.7 209 420.31 208.49"/></g><g class="cls-1"><path class="cls-5" d="M642.14,451.31c-.63-.33-1.27-.66-1.89-1a122.65,122.65,0,0,1-13.69-8.58,100.44,100.44,0,0,1-12.29-10.44,78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,58.47,58.47,0,0,1-2.87-15.79,63.64,63.64,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89,96.2,96.2,0,0,1,9.17-13.25c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.52-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.33,24.33,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.63.08-32.42.8-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.68-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79L361.1,160.87c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1.05-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.24,0-.25c0-.08,0-.17.05-.25a5.14,5.14,0,0,1,.3-.94,6.47,6.47,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.65a17,17,0,0,0,3.44-2.14,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.82,16.79,16.79,0,0,0-2.58-3.13A28.59,28.59,0,0,0,342.54,89a54.41,54.41,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-2-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.31-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07q.49.08,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.44,16.44,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.69,2.69,0,0,1,0,1,2.92,2.92,0,0,1-.35.92,5.85,5.85,0,0,1-1.3,1.51,16.93,16.93,0,0,1-3.42,2.11c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.25.53-2.47,1.1-3.67,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.77,6.77,0,0,0-1.08,1.74,7,7,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.48,10.33l12.63,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a127.23,127.23,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.76,27.76,0,0,0,6.71,4.62,41,41,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1-.05c.34,0,.68,0,1-.06a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.57,24.57,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,16.76,16.76,0,0,0,2.22-7.82,23.07,23.07,0,0,0-.26-4.07,34,34,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23c-1.41-2.31-2.95-4.55-4.58-6.71l-1.55-2c8.13-1.3,16.35-2.14,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.54.91,5,1.89,7.54,2.92s4.94,2.14,7.36,3.32a113.24,113.24,0,0,1,14,8c2.22,1.52,4.39,3.12,6.46,4.82l.78.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.81a31.25,31.25,0,0,1,4.72,6.42,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.55,21.55,0,0,1-.56,7.87,32.64,32.64,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.85-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.2,58.2,0,0,0,.91,8.1,59.66,59.66,0,0,0,2,7.89,63.64,63.64,0,0,0,7.1,14.63,78.52,78.52,0,0,0,10.25,12.6,101,101,0,0,0,12.4,10.5,123.21,123.21,0,0,0,13.77,8.59c.66.36,1.32.7,2,1ZM420.73,215.4a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.95,14.75,14.75,0,0,1-1.57,3.65,13.44,13.44,0,0,1-1.14,1.65,14.34,14.34,0,0,1-1.33,1.48,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,17.88,17.88,0,0,1-2.59-3,13.19,13.19,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.3-1,.21-.63.46-1.25.72-1.86a24.63,24.63,0,0,1,4.37-6.68,33.48,33.48,0,0,1,6.11-5.21,50.21,50.21,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.52-.69,7.08-1.26C419.62,213.94,420.18,214.67,420.73,215.4Z"/><polygon class="cls-3" points="418.64 212.71 419.07 212.64 419.46 213.16 419.04 213.22 418.64 212.71"/></g><g class="cls-1"><path class="cls-6" d="M640.53,455.48l-1.93-1a122.57,122.57,0,0,1-13.69-8.57,99.55,99.55,0,0,1-12.28-10.45,77.61,77.61,0,0,1-10.15-12.5,63.45,63.45,0,0,1-7-14.46,59.8,59.8,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16A54.81,54.81,0,0,1,600,361.8a95.27,95.27,0,0,1,9.16-13.25c3.4-4.18,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.59,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a56.05,56.05,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.21,22.21,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.86,24.86,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.11,113.11,0,0,0-14.09-8.09q-3.66-1.77-7.41-3.33c-2.5-1-5-2-7.58-2.92-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85q-8-1.39-16-2.58t-16.06-2.23q-16.08-2-32.26-3.21t-32.39-1.43c-10.81-.14-21.63.07-32.42.8-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.67-6.58-8.71-9.69-3.78-3.86-7.73-7.55-11.76-11.16-8.06-7.19-16.45-14-24.87-20.78L359.45,165c-4.2-3.4-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48,25.19,25.19,0,0,1-1.84-3.58,14.92,14.92,0,0,1-1.06-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.24c0-.09,0-.17,0-.25a5.5,5.5,0,0,1,.3-1,6.87,6.87,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.48-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.65a16.76,16.76,0,0,0,3.44-2.14,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,8.88,8.88,0,0,0-1.37-3.82A16.47,16.47,0,0,0,344,95.72a28.59,28.59,0,0,0-3.13-2.58A52,52,0,0,0,333.94,89c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.8-5.15-1.66-7.75-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.31-2-.44-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0a4.29,4.29,0,0,1,.5.07q.49.07,1,.18c.67.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.13,16.13,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,16.7,16.7,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.13,21.13,0,0,0-3.4,2.22,10.89,10.89,0,0,0-1.45,1.43,7,7,0,0,0-1.08,1.75,6.22,6.22,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a10.7,10.7,0,0,0,.05,2,15.17,15.17,0,0,0,1.06,3.92,25.11,25.11,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.85,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.33l12.62,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34,34,0,0,0-6.19,5.3,25.34,25.34,0,0,0-4.46,6.82c-.27.63-.52,1.26-.73,1.91-.11.32-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.37,27.37,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.68.1,1.35.17,2,.25,1.36.12,2.71.22,4.07.24h2l1-.05,1-.06a43.55,43.55,0,0,0,8-1.36,38,38,0,0,0,7.58-3,30.76,30.76,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.49,16.49,0,0,0,1.37-1.52,15.83,15.83,0,0,0,1.16-1.69,15.3,15.3,0,0,0,1.61-3.77,16.73,16.73,0,0,0,.61-4,22.16,22.16,0,0,0-.26-4.07,34.17,34.17,0,0,0-2.29-7.81A55.94,55.94,0,0,0,424,226c-1.41-2.31-2.94-4.55-4.57-6.71-.51-.67-1-1.34-1.56-2,8.13-1.3,16.35-2.14,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.23,3.24q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.36,7.54,2.92c2.48,1,4.94,2.14,7.36,3.32a111.26,111.26,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.77.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a30.85,30.85,0,0,1,4.72,6.43,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.33,21.33,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96,96,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,68.45,68.45,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2l0,1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6,100.11,100.11,0,0,0,12.39,10.5A123.89,123.89,0,0,0,638.29,455c.66.36,1.33.71,2,1.06ZM419.08,219.55a79.37,79.37,0,0,1,4.55,6.68,55.08,55.08,0,0,1,3.68,7.17,33.08,33.08,0,0,1,2.25,7.71,18.86,18.86,0,0,1-.34,7.95,14.75,14.75,0,0,1-1.57,3.65,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.7,39.7,0,0,1-7.53-2.82,26.9,26.9,0,0,1-6.58-4.54,18.34,18.34,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c0-.32.11-.64.19-1s.19-.63.3-1c.21-.63.46-1.25.72-1.87a24.58,24.58,0,0,1,4.37-6.67,33.42,33.42,0,0,1,6.11-5.21,50.27,50.27,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C418,218.09,418.53,218.81,419.08,219.55Z"/><polygon class="cls-3" points="417 216.85 417.42 216.79 417.81 217.31 417.39 217.37 417 216.85"/></g><g class="cls-1"><path class="cls-7" d="M638.83,459.86c-.65-.34-1.3-.68-1.94-1a124,124,0,0,1-13.69-8.57,101.41,101.41,0,0,1-12.29-10.45,78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,60.1,60.1,0,0,1-2-7.79,61.36,61.36,0,0,1-.88-8,63.56,63.56,0,0,1,1.43-16,55,55,0,0,1,5.9-14.9,96.2,96.2,0,0,1,9.17-13.25c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.56-14.95,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.52-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.18,21.18,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86A113,113,0,0,0,632,245c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.68-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,27.06,27.06,0,0,1-1.85-3.59,15.23,15.23,0,0,1-1-3.86,10.39,10.39,0,0,1-.05-2l0-.25,0-.24,0-.25c0-.08,0-.16.05-.25a5.14,5.14,0,0,1,.3-.94,6.47,6.47,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.68,28.68,0,0,0-3.13-2.59,54.41,54.41,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5.05-2-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.3-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07q.5.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,29.56,29.56,0,0,1,3.11,2.58,16.44,16.44,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.76,2.76,0,0,1-.05,1,3,3,0,0,1-.35.91,5.85,5.85,0,0,1-1.3,1.51,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.74a21.82,21.82,0,0,0-3.4,2.22,10.39,10.39,0,0,0-1.45,1.44,6.94,6.94,0,0,0-1.08,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.48,10.33l12.63,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.85,6.2,8.53,9.51-2.27.37-4.53.77-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.07,7.07,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.76,27.76,0,0,0,6.71,4.62,40.3,40.3,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68,0,1-.07a42.69,42.69,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23.76,23.76,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,15.14,15.14,0,0,0,1.61-3.77,15.46,15.46,0,0,0,.42-2,15.63,15.63,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.67,54.67,0,0,0-3.72-7.22,81,81,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.7,10.77-.71,21.58-.91,32.37-.76s21.58.67,32.35,1.46,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.84,2.54.9,5,1.88,7.54,2.91s4.94,2.14,7.36,3.32a112,112,0,0,1,14,8c2.22,1.51,4.39,3.11,6.46,4.81l.78.64.77.66c.52.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.6,21.6,0,0,1-.56,7.88,33,33,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.2,58.2,0,0,0,.91,8.1,59.66,59.66,0,0,0,2,7.89,63.64,63.64,0,0,0,7.1,14.63,78.52,78.52,0,0,0,10.25,12.6,101,101,0,0,0,12.4,10.5,123.21,123.21,0,0,0,13.77,8.59c.67.37,1.35.72,2,1.07ZM417.37,223.92a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,8,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,42.54,42.54,0,0,1-7.93,1.34c-.33,0-.67.05-1,.06l-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.14-2-.25l-1-.15-1-.18c-1.32-.23-2.63-.53-3.93-.88A39.74,39.74,0,0,1,378,264.7a26.9,26.9,0,0,1-6.58-4.54,18.21,18.21,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.92,7.92,0,0,1,.19-1c.08-.31.19-.63.3-.95q.31-.94.72-1.86a24.63,24.63,0,0,1,4.37-6.68,33.88,33.88,0,0,1,6.11-5.21,51.25,51.25,0,0,1,7-3.91,77,77,0,0,1,7.5-3A125.09,125.09,0,0,1,408.61,223q3.52-.71,7.08-1.27C416.26,222.46,416.82,223.19,417.37,223.92Z"/><polygon class="cls-3" points="415.28 221.23 415.71 221.16 416.1 221.68 415.68 221.75 415.28 221.23"/></g><g class="cls-1"><path class="cls-8" d="M637.19,464.09c-.66-.34-1.31-.69-2-1a124,124,0,0,1-13.69-8.57A99.64,99.64,0,0,1,609.25,444a78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,57.28,57.28,0,0,1-2.87-15.79,63.56,63.56,0,0,1,1.43-16,55,55,0,0,1,5.9-14.9,95.34,95.34,0,0,1,9.17-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-14.95,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.79-2,3.52-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.18,21.18,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.5-4.84-10.44-2.84-21.05-5-31.69-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.56-16.68,1.43-24.94,2.77-2.73-3.38-5.68-6.58-8.71-9.68-3.78-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,26.46,26.46,0,0,1-1.85-3.59,15.23,15.23,0,0,1-1.05-3.86,10.39,10.39,0,0,1-.05-2l0-.24,0-.25,0-.25c0-.08,0-.16,0-.24a5,5,0,0,1,.3-.95,6.47,6.47,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.66,29.66,0,0,0-3.13-2.59,54.41,54.41,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5.05-2-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.3-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07q.49.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,29.65,29.65,0,0,1,3.1,2.58,16.12,16.12,0,0,1,2.56,3.1,8.78,8.78,0,0,1,1.34,3.75,2.76,2.76,0,0,1-.05,1,3.24,3.24,0,0,1-.35.91,6.05,6.05,0,0,1-1.3,1.51,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.44,7.21,7.21,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.3,6.93,12.49,10.33L368.53,184c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.85,6.2,8.53,9.51q-3.4.56-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.65-.3,1a7.07,7.07,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.2,19.2,0,0,0,2.65,3.11,27.76,27.76,0,0,0,6.71,4.62,40.21,40.21,0,0,0,7.62,2.85c1.32.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a42.69,42.69,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23.76,23.76,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,15.14,15.14,0,0,0,1.61-3.77,15.46,15.46,0,0,0,.42-2,15.63,15.63,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,53.56,53.56,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.72,21.57-.92,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.66,16,2.6c10.63,1.86,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84,2.54.9,5.05,1.88,7.54,2.91s4.94,2.14,7.36,3.32a112,112,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.46,4.82l.78.64.77.65c.52.43,1,.88,1.52,1.33,1,.89,1.95,1.82,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86A21.6,21.6,0,0,1,663,290a33.49,33.49,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06A96.15,96.15,0,0,0,595.84,370a56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.74,59.74,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89,63.64,63.64,0,0,0,7.1,14.63,78.52,78.52,0,0,0,10.25,12.6,100.08,100.08,0,0,0,12.4,10.5,124.77,124.77,0,0,0,13.77,8.6l2,1.07ZM415.71,228.14a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.22,33.22,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09A37.62,37.62,0,0,1,407.8,272a42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.14-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.23-2.63-.53-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.21,18.21,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.41,7.41,0,0,1,.19-1c.08-.32.19-.64.3-1,.21-.64.45-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.09,125.09,0,0,1,407,227.24q3.53-.7,7.08-1.27C414.6,226.68,415.16,227.41,415.71,228.14Z"/><polygon class="cls-3" points="413.62 225.45 414.05 225.38 414.44 225.9 414.02 225.97 413.62 225.45"/></g><g class="cls-1"><path class="cls-9" d="M635.57,468.27c-.66-.34-1.32-.69-2-1a124,124,0,0,1-13.69-8.57,99.55,99.55,0,0,1-12.28-10.45,77,77,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16A55,55,0,0,1,595,374.57a94.1,94.1,0,0,1,9.16-13.25c3.4-4.18,7.06-8.15,10.82-12,7.55-7.72,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a56.05,56.05,0,0,0,4.42-6.86,33.24,33.24,0,0,0,3-7.61,21.94,21.94,0,0,0,.57-8.19,20.6,20.6,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.45,32.45,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.33l-.78-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a111.17,111.17,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92q-7.65-2.73-15.49-4.83c-10.45-2.84-21.05-5-31.7-6.86q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.41.79c-8.35.57-16.69,1.44-24.95,2.78-2.73-3.38-5.67-6.59-8.71-9.69C399.94,216,396,212.31,392,208.71c-8.06-7.2-16.45-14-24.87-20.78l-12.64-10.15c-4.2-3.39-8.38-6.8-12.49-10.3s-8.16-7.09-12-10.88c-1.92-1.89-3.79-3.85-5.55-5.89a49,49,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.56,9.56,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a5.5,5.5,0,0,1,.3-1,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.43-1.41,19.63,19.63,0,0,1,3.36-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.48-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.15,17.15,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.54,3.36,3.36,0,0,0,.37-1,3,3,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.88,29.88,0,0,0-3.13-2.59,53,53,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.15-1.31-.3-2-.43q-.49-.1-1-.18a4.46,4.46,0,0,0-.51-.07l-.25,0c-.1,0-.17,0-.29.07l.08,0,.2,0,.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.11,2.58,16.56,16.56,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.45,3.45,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.2.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.54-2.47,1.11-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22A10.31,10.31,0,0,0,318,131a7.13,7.13,0,0,0-1.08,1.74,6.69,6.69,0,0,0-.31,1,2.17,2.17,0,0,0,0,.25l0,.25,0,.26,0,.25a10.68,10.68,0,0,0,.05,2,15.24,15.24,0,0,0,1.06,3.93,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.79,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.86,6.19,8.53,9.5q-3.4.56-6.78,1.23A125.32,125.32,0,0,0,389.52,235a75.69,75.69,0,0,0-7.56,3,53.14,53.14,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,25.12,25.12,0,0,0-4.45,6.83,18.39,18.39,0,0,0-.74,1.91c-.11.32-.22.64-.31,1a9.18,9.18,0,0,0-.2,1,9.82,9.82,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.63.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.34.18,2,.26,1.35.12,2.7.22,4.06.23h1l1,0,1,0c.34,0,.68,0,1-.07a42.16,42.16,0,0,0,8-1.36,38.08,38.08,0,0,0,7.57-2.95,33.44,33.44,0,0,0,3.49-2.12,23.75,23.75,0,0,0,3.13-2.62,16.61,16.61,0,0,0,1.37-1.53A14,14,0,0,0,423,265.7a15.11,15.11,0,0,0,1.62-3.76,17.07,17.07,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.47,21.47,0,0,0-.26-4.08,33.6,33.6,0,0,0-2.29-7.8,55.94,55.94,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.51,1.9,32.23,3.25q8,1,16,2.25c5.33.81,10.66,1.66,16,2.59C577,238,587.6,240.19,598,243c5.21,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.31a111.33,111.33,0,0,1,14,8c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.76.65c.52.43,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.06,31.06,0,0,1,4.72,6.42,23.47,23.47,0,0,1,1.59,3.64,20.43,20.43,0,0,1,.86,3.87,21.12,21.12,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.1,6.25-3.56,4-7.38,7.85-11.24,11.61-7.76,7.5-15.77,14.76-23.34,22.5-3.78,3.87-7.45,7.86-10.86,12.07a94.69,94.69,0,0,0-9.25,13.37,56,56,0,0,0-6,15.14,68.45,68.45,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.33,0,.67,0,1,0,.68,0,1.36.06,2a58.93,58.93,0,0,0,2.93,16,64,64,0,0,0,7.1,14.62,78.22,78.22,0,0,0,10.26,12.61,100.85,100.85,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59l2,1.08Zm-221.48-236c1.62,2.16,3.14,4.38,4.54,6.69a55.08,55.08,0,0,1,3.68,7.17,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,22.86,22.86,0,0,1-3.08,2.56,31.72,31.72,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34c-.33,0-.67.06-1,.07l-1,0h-2c-1.35,0-2.69-.11-4-.23-.66-.08-1.33-.15-2-.25l-1-.16-1-.17c-1.32-.24-2.63-.54-3.93-.89a40,40,0,0,1-7.52-2.82,27,27,0,0,1-6.59-4.54,18.76,18.76,0,0,1-2.59-3,13.65,13.65,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9c0-.32.11-.64.19-1s.2-.64.3-1c.21-.63.46-1.26.72-1.87a24.66,24.66,0,0,1,4.38-6.68,33.36,33.36,0,0,1,6.1-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.55,125.55,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C413,230.86,413.54,231.58,414.09,232.31Z"/><polygon class="cls-3" points="412 229.62 412.42 229.55 412.81 230.08 412.39 230.14 412 229.62"/></g><g class="cls-1"><path class="cls-10" d="M633.87,472.65l-2-1.06A122.57,122.57,0,0,1,618.2,463a100.38,100.38,0,0,1-12.29-10.45,78.09,78.09,0,0,1-10.14-12.5,63.45,63.45,0,0,1-7-14.46,59.8,59.8,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.11,55.11,0,0,1,5.9-14.89,96.2,96.2,0,0,1,9.17-13.25c3.4-4.18,7.05-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.59,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a57.26,57.26,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.86,24.86,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86A113.11,113.11,0,0,0,627,257.74q-3.66-1.77-7.41-3.33c-2.5-1-5-2-7.58-2.92-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85q-8-1.4-16-2.58T532.73,235q-16.08-2-32.26-3.21t-32.39-1.43c-10.81-.14-21.63.07-32.42.8-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.67-6.58-8.71-9.69-3.78-3.86-7.73-7.55-11.76-11.16-8.06-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48A25.19,25.19,0,0,1,316,145a14.92,14.92,0,0,1-1.06-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.24c0-.09,0-.17.05-.25a5.5,5.5,0,0,1,.3-.95,6.87,6.87,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.65a17,17,0,0,0,3.44-2.14,6,6,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,8.88,8.88,0,0,0-1.37-3.82,16.47,16.47,0,0,0-2.58-3.13,28.59,28.59,0,0,0-3.13-2.58,52,52,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.61-2.8-5.14-1.66-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.31-2-.44-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0a4.29,4.29,0,0,1,.5.07q.5.08,1,.18c.67.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.13,16.13,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,17,17,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.13,21.13,0,0,0-3.4,2.22,10.89,10.89,0,0,0-1.45,1.43,7,7,0,0,0-1.08,1.75,6.22,6.22,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a10.7,10.7,0,0,0,0,2,14.78,14.78,0,0,0,1.06,3.92,25.11,25.11,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.32l12.62,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34,34,0,0,0-6.19,5.3,25.11,25.11,0,0,0-4.46,6.82c-.27.63-.52,1.26-.73,1.91-.11.32-.22.64-.31,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.37,27.37,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.07.24h2l1,0,1-.06a43.55,43.55,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,30.76,30.76,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.49,16.49,0,0,0,1.37-1.52,17.45,17.45,0,0,0,1.16-1.69,15.3,15.3,0,0,0,1.61-3.77,16.73,16.73,0,0,0,.61-4.05,22.16,22.16,0,0,0-.26-4.07,34.17,34.17,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22,80.19,80.19,0,0,0-4.58-6.71l-1.55-2c8.13-1.3,16.35-2.14,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.24q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.48,1,4.94,2.14,7.36,3.32a111.26,111.26,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.77.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a30.85,30.85,0,0,1,4.72,6.43,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.55,21.55,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96,96,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,68.45,68.45,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2l0,1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78,78,0,0,0,10.26,12.6,100.11,100.11,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59c.68.37,1.37.73,2.06,1.09Zm-221.5-236a76.94,76.94,0,0,1,4.54,6.68,53.93,53.93,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,18.81,18.81,0,0,1-.34,7.94,14.66,14.66,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.7,39.7,0,0,1-7.53-2.82,26.9,26.9,0,0,1-6.58-4.54,18.34,18.34,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.19-.63.3-1c.21-.63.46-1.25.72-1.87a24.58,24.58,0,0,1,4.37-6.67,33.09,33.09,0,0,1,6.11-5.21,50.27,50.27,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C411.26,235.23,411.82,236,412.37,236.69Z"/><polygon class="cls-3" points="410.29 234 410.71 233.93 411.1 234.45 410.68 234.51 410.29 234"/></g><g class="cls-1"><path class="cls-11" d="M632.23,476.88c-.67-.35-1.34-.7-2-1.06a124.13,124.13,0,0,1-13.69-8.58,100.38,100.38,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63.45,63.45,0,0,1-7-14.46A58.47,58.47,0,0,1,584.26,414a63.64,63.64,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89,96.2,96.2,0,0,1,9.17-13.25c3.4-4.18,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.59,11.29-11.66,1.8-2,3.53-4.12,5.14-6.31a57.26,57.26,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.33,24.33,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86A113.11,113.11,0,0,0,625.32,262q-3.66-1.77-7.41-3.32t-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85q-8-1.4-16-2.58t-16.06-2.23q-16.08-2-32.26-3.21t-32.39-1.43c-10.81-.14-21.63.07-32.42.8-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.67-6.58-8.71-9.69-3.78-3.86-7.73-7.55-11.76-11.16-8.06-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1.05-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.24c0-.09,0-.17,0-.25a5.5,5.5,0,0,1,.3-.95,6.58,6.58,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1.05,3.71-1.65a17,17,0,0,0,3.44-2.14,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,8.88,8.88,0,0,0-1.37-3.82,16.47,16.47,0,0,0-2.58-3.13,28.59,28.59,0,0,0-3.13-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.61-2.8-5.14-1.66-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.31-2-.44-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0a4.29,4.29,0,0,1,.5.07q.49.08,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.13,16.13,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.33,3.33,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,17,17,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.25.53-2.47,1.1-3.67,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.77,6.77,0,0,0-1.08,1.74,6.22,6.22,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a11.59,11.59,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.11,25.11,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.92,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34,34,0,0,0-6.19,5.3,25.11,25.11,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.76,27.76,0,0,0,6.71,4.62,41,41,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.13,2.71.22,4.07.24h2l1-.05c.34,0,.68,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,30.76,30.76,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.49,16.49,0,0,0,1.37-1.52,17.45,17.45,0,0,0,1.16-1.69,15.3,15.3,0,0,0,1.61-3.77,16.73,16.73,0,0,0,.61-4,23.07,23.07,0,0,0-.26-4.07,34.17,34.17,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22c-1.41-2.31-3-4.55-4.58-6.71l-1.55-2c8.13-1.3,16.35-2.14,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.24q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.48,1,4.94,2.14,7.36,3.32a112,112,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.77.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a30.85,30.85,0,0,1,4.72,6.43,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.55,21.55,0,0,1-.56,7.87,32.64,32.64,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96,96,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78,78,0,0,0,10.26,12.6,100.11,100.11,0,0,0,12.39,10.5,124.69,124.69,0,0,0,13.77,8.59l2.09,1.1Zm-221.52-236a79.26,79.26,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.95,14.75,14.75,0,0,1-1.57,3.65,13.32,13.32,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.7,39.7,0,0,1-7.53-2.82,26.9,26.9,0,0,1-6.58-4.54,17.88,17.88,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.3-.95.21-.63.46-1.25.72-1.86a24.47,24.47,0,0,1,4.37-6.68,33.09,33.09,0,0,1,6.11-5.21,50.27,50.27,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3A126.89,126.89,0,0,1,402,240q3.53-.69,7.08-1.27C409.6,239.45,410.16,240.17,410.71,240.91Z"/><polygon class="cls-3" points="408.63 238.22 409.05 238.15 409.44 238.67 409.02 238.73 408.63 238.22"/></g><g class="cls-1"><path class="cls-12" d="M630.62,481.05c-.68-.36-1.37-.72-2-1.09a124,124,0,0,1-13.69-8.57,99.55,99.55,0,0,1-12.28-10.45,77.61,77.61,0,0,1-10.15-12.5,63.32,63.32,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16A54.81,54.81,0,0,1,590,387.31a94.68,94.68,0,0,1,9.16-13.25c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a56.05,56.05,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.21,22.21,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a112.4,112.4,0,0,0-14.09-8.09q-3.66-1.77-7.41-3.33t-7.58-2.92Q601,257.13,593.19,255c-10.45-2.84-21.06-5-31.7-6.85q-8-1.4-16-2.58c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.41.8c-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.38-6.81-12.49-10.31s-8.16-7.09-12-10.88c-1.92-1.89-3.79-3.84-5.55-5.88a50.71,50.71,0,0,1-4.83-6.48,25.74,25.74,0,0,1-1.84-3.58,14.92,14.92,0,0,1-1.06-3.87,9.54,9.54,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.5,5.5,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.49-1,3.71-1.65a17.21,17.21,0,0,0,3.44-2.14,6,6,0,0,0,1.34-1.55,3.41,3.41,0,0,0,.37-1,3,3,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.59,28.59,0,0,0-3.13-2.58,52,52,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.8-5.15-1.66-7.75-2.38c-1.31-.35-2.61-.69-3.93-1-.66-.15-1.31-.3-2-.43-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0c.17,0,.33,0,.5.06l1,.19c.67.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.12,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.11,2.58,16.56,16.56,0,0,1,2.56,3.1,8.76,8.76,0,0,1,1.33,3.75,2.93,2.93,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.24.54-2.47,1.11-3.67,1.75a21.13,21.13,0,0,0-3.4,2.22,10.89,10.89,0,0,0-1.45,1.43,7,7,0,0,0-1.08,1.75,6.22,6.22,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10.81,10.81,0,0,0,0,2.05,15.28,15.28,0,0,0,1.06,3.92,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.94,12.49,10.33l12.62,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5q-3.41.56-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34,34,0,0,0-6.19,5.3,25.19,25.19,0,0,0-4.46,6.82c-.27.62-.52,1.26-.73,1.91-.11.32-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.79,9.79,0,0,0,.39,4.1,13.65,13.65,0,0,0,1.8,3.7,18.91,18.91,0,0,0,2.66,3.12,27.37,27.37,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.17,1,.16c.67.1,1.34.17,2,.25,1.36.12,2.71.22,4.07.23h1c.33,0,.67,0,1,0l1,0,1-.06a43.55,43.55,0,0,0,8-1.36,38.58,38.58,0,0,0,7.58-3,30.76,30.76,0,0,0,3.48-2.12,23.2,23.2,0,0,0,3.14-2.62,15.4,15.4,0,0,0,1.37-1.53,14.76,14.76,0,0,0,1.16-1.68,15.33,15.33,0,0,0,1.62-3.77,17.07,17.07,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.16,22.16,0,0,0-.26-4.07,33.54,33.54,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22c-1.41-2.31-2.94-4.55-4.57-6.71-.51-.68-1-1.34-1.56-2,8.14-1.3,16.35-2.14,24.57-2.69,10.78-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.23,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.88,5.21,1.42,10.36,3,15.43,4.83q3.81,1.36,7.54,2.92c2.48,1,4.94,2.13,7.36,3.32a110,110,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.78.64.76.65c.52.44,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.06,31.06,0,0,1,4.72,6.42,23.47,23.47,0,0,1,1.59,3.64,20.6,20.6,0,0,1,.86,3.87,21.33,21.33,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,68.45,68.45,0,0,0-1.22,8.06c0,.34-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.93,58.93,0,0,0,2.93,16,64,64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6A100.85,100.85,0,0,0,614.49,472a123.89,123.89,0,0,0,13.78,8.59l2.11,1.12Zm-221.55-236a80,80,0,0,1,4.54,6.68,55.08,55.08,0,0,1,3.68,7.17,33.08,33.08,0,0,1,2.25,7.71,18.81,18.81,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.2,30.2,0,0,1-3.43,2.09,37.52,37.52,0,0,1-7.49,2.92,42,42,0,0,1-7.94,1.33c-.33,0-.67.06-1,.07l-1,0h-2c-1.35,0-2.69-.12-4-.24-.66-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.7,39.7,0,0,1-7.53-2.82,26.9,26.9,0,0,1-6.58-4.54,18.34,18.34,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.19-.63.3-.95c.21-.63.46-1.25.72-1.87a24.86,24.86,0,0,1,4.37-6.68,33.77,33.77,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.59,125.59,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C408,243.6,408.51,244.32,409.07,245.06Z"/><polygon class="cls-3" points="406.98 242.36 407.4 242.29 407.79 242.82 407.37 242.88 406.98 242.36"/></g><g class="cls-1"><path class="cls-13" d="M628.92,485.43l-2-1.09a122.65,122.65,0,0,1-13.69-8.58,100.44,100.44,0,0,1-12.29-10.44,78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,58.47,58.47,0,0,1-2.87-15.79,63.64,63.64,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89,96.2,96.2,0,0,1,9.17-13.25c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.52-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.4,22.4,0,0,0,.57-8.2,21.53,21.53,0,0,0-.9-4,24.33,24.33,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86A113.11,113.11,0,0,0,622,270.48c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.63.08-32.42.8-8.34.56-16.68,1.43-24.94,2.77C403,243.29,400,240.09,397,237c-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79L347.72,194.9c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58A15.31,15.31,0,0,1,310,153.9a10.27,10.27,0,0,1-.05-2l0-.25,0-.24,0-.25c0-.08,0-.17.05-.25a5.14,5.14,0,0,1,.3-.94,6.47,6.47,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.82,16.79,16.79,0,0,0-2.58-3.13,28.59,28.59,0,0,0-3.13-2.58,54.41,54.41,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5.05-2-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.31-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07q.49.08,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.44,16.44,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,2.92,2.92,0,0,1-.35.92,5.85,5.85,0,0,1-1.3,1.51,16.93,16.93,0,0,1-3.42,2.11c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.25.53-2.47,1.1-3.67,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.77,6.77,0,0,0-1.08,1.74,7,7,0,0,0-.31,1c0,.09,0,.17,0,.25l0,.26,0,.25,0,.26a11.59,11.59,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a127.23,127.23,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.76,27.76,0,0,0,6.71,4.62,41,41,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0,1-.07a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.76,23.76,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,15.3,15.3,0,0,0,1.61-3.77,15.46,15.46,0,0,0,.42-2,15.63,15.63,0,0,0,.19-2,23.12,23.12,0,0,0-.26-4.08,34,34,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23c-1.41-2.31-2.95-4.55-4.58-6.71l-1.55-2c8.13-1.3,16.35-2.14,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.54.91,5,1.89,7.54,2.92s4.94,2.14,7.36,3.32a113.24,113.24,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.77.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.81a30.89,30.89,0,0,1,4.72,6.42,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.62,21.62,0,0,1-.56,7.88,32.75,32.75,0,0,1-3,7.39,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.85-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.2,58.2,0,0,0,.91,8.1,59.66,59.66,0,0,0,2,7.89,63.64,63.64,0,0,0,7.1,14.63,78,78,0,0,0,10.26,12.6,100.11,100.11,0,0,0,12.39,10.5,123.21,123.21,0,0,0,13.77,8.59c.71.38,1.42.76,2.14,1.13Zm-221.57-236a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.95,14.59,14.59,0,0,1-1.57,3.65,13.44,13.44,0,0,1-1.14,1.65,14.34,14.34,0,0,1-1.33,1.48,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.21,18.21,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.3-.95.21-.63.46-1.25.72-1.86a24.63,24.63,0,0,1,4.37-6.68,33.48,33.48,0,0,1,6.11-5.21,51.25,51.25,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.53-.69,7.08-1.26C406.24,248,406.8,248.7,407.35,249.43Z"/><polygon class="cls-3" points="405.26 246.74 405.69 246.67 406.08 247.19 405.66 247.25 405.26 246.74"/></g><g class="cls-1"><path class="cls-14" d="M627.28,489.66l-2.07-1.1A122.65,122.65,0,0,1,611.52,480a100.44,100.44,0,0,1-12.29-10.44A78.06,78.06,0,0,1,589.09,457a63.25,63.25,0,0,1-7-14.46,60.1,60.1,0,0,1-2-7.79,61.36,61.36,0,0,1-.88-8,63.64,63.64,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89,96.2,96.2,0,0,1,9.17-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.8-2,3.52-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.4,22.4,0,0,0,.57-8.2,21.53,21.53,0,0,0-.9-4,24.33,24.33,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.63.08-32.42.8-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.68-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,15.19,15.19,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.24,0-.25c0-.08,0-.17.05-.25a5.14,5.14,0,0,1,.3-.94,6.47,6.47,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.82,16.41,16.41,0,0,0-2.58-3.12,27.58,27.58,0,0,0-3.13-2.59,54.41,54.41,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5.05-2-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07q.5.08,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,27.36,27.36,0,0,1,3.1,2.58,16.12,16.12,0,0,1,2.56,3.1,8.65,8.65,0,0,1,1.34,3.75,2.76,2.76,0,0,1-.05,1,3,3,0,0,1-.35.91,5.85,5.85,0,0,1-1.3,1.51,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.82,21.82,0,0,0-3.4,2.22,10.39,10.39,0,0,0-1.45,1.44,6.94,6.94,0,0,0-1.08,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.25l0,.26,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.48,10.33l12.63,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a127.23,127.23,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.76,27.76,0,0,0,6.71,4.62,41,41,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0,1-.07a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.76,23.76,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,15.14,15.14,0,0,0,1.61-3.77,15.46,15.46,0,0,0,.42-2,15.63,15.63,0,0,0,.19-2,23.12,23.12,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23,80.8,80.8,0,0,0-4.58-6.7c-.51-.68-1-1.35-1.55-2,8.13-1.31,16.35-2.15,24.57-2.7,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.54.91,5.05,1.89,7.54,2.92s4.94,2.14,7.36,3.32a113.24,113.24,0,0,1,14,8c2.22,1.52,4.39,3.12,6.46,4.82l.78.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.81a31.52,31.52,0,0,1,4.72,6.42,21.77,21.77,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.62,21.62,0,0,1-.56,7.88,33,33,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.2,58.2,0,0,0,.91,8.1,59.66,59.66,0,0,0,2,7.89,63.64,63.64,0,0,0,7.1,14.63A78.52,78.52,0,0,0,598.72,470a101,101,0,0,0,12.4,10.5,123.21,123.21,0,0,0,13.77,8.59l2.16,1.14Zm-221.59-236a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,8,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,24.46,24.46,0,0,1-3.08,2.56,30.83,30.83,0,0,1-3.44,2.08,37.06,37.06,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67,0-1,.06l-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.23-2.63-.53-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.21,18.21,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.35,9.35,0,0,1-.37-3.89,7.92,7.92,0,0,1,.19-1c.08-.31.19-.63.3-.95q.31-.94.72-1.86a24.63,24.63,0,0,1,4.37-6.68,33.48,33.48,0,0,1,6.11-5.21,51.25,51.25,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.52-.69,7.08-1.26C404.58,252.19,405.14,252.92,405.69,253.65Z"/><polygon class="cls-3" points="403.6 250.96 404.03 250.89 404.42 251.41 404 251.47 403.6 250.96"/></g><g class="cls-1"><path class="cls-15" d="M625.72,493.69q-1-.51-2-1.05a124,124,0,0,1-13.69-8.57,99.64,99.64,0,0,1-12.29-10.45,78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.79-2,3.52-4.12,5.14-6.3a57.38,57.38,0,0,0,4.42-6.87,33.63,33.63,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.5-4.84-10.44-2.84-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.56-16.68,1.43-24.94,2.78-2.73-3.39-5.68-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79L344.59,203.2c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.42,15.42,0,0,1-1.05-3.87,10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.64,6.64,0,0,1,1-1.7,10.44,10.44,0,0,1,1.42-1.4A20.81,20.81,0,0,1,313,153c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.66,29.66,0,0,0-3.13-2.59,54.41,54.41,0,0,0-6.95-4.17c-2.41-1.22-4.88-2.33-7.38-3.34s-5.05-2-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1l-2-.44-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.14,1.32.28,2,.44,1.31.31,2.62.65,3.92,1q3.9,1.09,7.74,2.38c2.56.87,5.09,1.8,7.59,2.82s5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,29.65,29.65,0,0,1,3.1,2.58,15.88,15.88,0,0,1,2.56,3.11,8.74,8.74,0,0,1,1.34,3.74,2.73,2.73,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,6.19,6.19,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.41,7.41,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17,0,.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.3,6.93,12.49,10.33L357,213.58c8.41,6.77,16.78,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.15,3,3.05,5.85,6.2,8.53,9.51q-3.4.55-6.78,1.22a128.55,128.55,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.27-.74,1.91-.1.33-.21.65-.3,1a7.07,7.07,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.2,19.2,0,0,0,2.65,3.11,27.76,27.76,0,0,0,6.71,4.62,40.21,40.21,0,0,0,7.62,2.85c1.32.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68,0,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,15.57,15.57,0,0,0,2.77-5.46,15.12,15.12,0,0,0,.42-2,15.63,15.63,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.16,54.16,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.91c2.48,1,4.94,2.14,7.36,3.32a112,112,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.46,4.82l.78.64.77.65c.52.43,1,.88,1.52,1.33,1,.89,1.95,1.82,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.49,33.49,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51C600.68,378,597,382,593.59,386.18a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89A64,64,0,0,0,587,461.52a79.13,79.13,0,0,0,10.26,12.6,100.08,100.08,0,0,0,12.4,10.5,124.77,124.77,0,0,0,13.77,8.6l2.06,1.08Zm-221.5-236a79.26,79.26,0,0,1,4.54,6.68,55.92,55.92,0,0,1,3.69,7.18,33,33,0,0,1,2.25,7.7,19,19,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0c-.34,0-.67,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82A27.46,27.46,0,0,1,358.3,294a18.69,18.69,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.41,7.41,0,0,1,.19-1c.08-.32.19-.64.3-.95.21-.64.45-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.7,7.08-1.27C403.11,256.27,403.67,257,404.22,257.73Z"/><polygon class="cls-3" points="402.13 255.04 402.56 254.97 402.95 255.49 402.53 255.56 402.13 255.04"/></g><g class="cls-1"><path class="cls-16" d="M624,498.07,622,497a124.86,124.86,0,0,1-13.68-8.57A99.64,99.64,0,0,1,596.05,478a77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.63,63.63,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.16,94.16,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.73,33.73,0,0,0,3.05-7.61,22.37,22.37,0,0,0,.57-8.19,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.12,32.12,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.33l-.77-.66-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.85-5.54-5.89A49.92,49.92,0,0,1,308,174a26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.49,6.49,0,0,1,.29-1,6.73,6.73,0,0,1,1.05-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.18-.63,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.5-3,1.26-.51,2.5-1,3.71-1.64a16.88,16.88,0,0,0,3.45-2.15,5.81,5.81,0,0,0,1.34-1.54,4.05,4.05,0,0,0,.37-1,3.55,3.55,0,0,0,0-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18a4.29,4.29,0,0,0-.5-.07l-.26,0c-.09,0-.16-.05-.28.07l.08,0a.75.75,0,0,1,.2,0l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.68,5.68,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,50.56,50.56,0,0,0,4.83,6.51c1.77,2,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L355.33,218c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.41.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4A34.37,34.37,0,0,0,357.1,277a24.93,24.93,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.35,7.35,0,0,0-.2,1,9.66,9.66,0,0,0,.39,4.11,14.07,14.07,0,0,0,1.79,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.26,1.35.12,2.71.22,4.06.23h1l1,0,1,0c.34,0,.67,0,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,31.76,31.76,0,0,0,3.48-2.13,23,23,0,0,0,3.14-2.61,15.17,15.17,0,0,0,1.36-1.53,14.11,14.11,0,0,0,1.17-1.69,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,22.31,22.31,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,56,56,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84,2.53.91,5,1.88,7.53,2.92s5,2.13,7.37,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.45,20.45,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,57.87,57.87,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.43,61.43,0,0,0,2,7.9,63.94,63.94,0,0,0,7.09,14.62,78.76,78.76,0,0,0,10.26,12.61,100.21,100.21,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59l2.08,1.09Zm-221.51-236a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,14.82,14.82,0,0,1-2.71,5.3,17,17,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09A37.86,37.86,0,0,1,394.6,306a41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.23-.67-.08-1.34-.15-2-.25l-1-.16-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.64.29-.95.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.7,7.08-1.27C401.4,260.65,402,261.37,402.51,262.1Z"/><polygon class="cls-3" points="400.42 259.41 400.84 259.34 401.24 259.87 400.81 259.93 400.42 259.41"/></g><g class="cls-1"><path class="cls-17" d="M622.38,502.3c-.67-.35-1.35-.7-2-1.07a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.17,63.17,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.16,94.16,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.73,33.73,0,0,0,3.05-7.61,22.37,22.37,0,0,0,.57-8.19,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.12,32.12,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.33l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-24.95,2.78-2.73-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.15c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25a2,2,0,0,1,.05-.24,6.49,6.49,0,0,1,.29-.95,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,20.75,20.75,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.5-3,1.25-.51,2.5-1,3.71-1.64A16.88,16.88,0,0,0,328,153a5.6,5.6,0,0,0,1.33-1.54,3.7,3.7,0,0,0,.38-1,3.55,3.55,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-7-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.75.75,0,0,1,.2,0l.25,0,.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a52.72,52.72,0,0,1,6.92,4.17,26.61,26.61,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,50.56,50.56,0,0,0,4.83,6.51c1.77,2,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9S336.84,208.61,341,212l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5q-3.4.56-6.79,1.23A125.32,125.32,0,0,0,376.28,269a76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.78,34.78,0,0,0-6.2,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.35,7.35,0,0,0-.2,1,9.66,9.66,0,0,0,.39,4.11,14.07,14.07,0,0,0,1.79,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17,1,.15c.67.11,1.35.18,2,.26,1.35.12,2.71.22,4.06.23h1l1,0,1,0c.34,0,.67,0,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,33.3,33.3,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.95,16.95,0,0,0,2.53-3.22A15.08,15.08,0,0,0,411.4,296a15.26,15.26,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,22.31,22.31,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,57.3,57.3,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84,2.53.91,5,1.88,7.53,2.92s4.95,2.13,7.37,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.51,1.33,1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,21.25,21.25,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,57.87,57.87,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07A95.46,95.46,0,0,0,581,408.15a56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.67,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,63.94,63.94,0,0,0,7.09,14.62,78.22,78.22,0,0,0,10.26,12.61,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59l2.1,1.1Zm-221.53-236a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,14.82,14.82,0,0,1-2.71,5.3,17,17,0,0,1-1.33,1.49,23,23,0,0,1-3.09,2.56,29.89,29.89,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-1.52l-.5,0c-1.34,0-2.68-.11-4-.23-.67-.08-1.34-.15-2-.25l-1-.16-1-.17c-1.32-.24-2.64-.54-3.93-.89a40.13,40.13,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C399.74,264.87,400.3,265.59,400.85,266.32Z"/><polygon class="cls-3" points="398.76 263.63 399.18 263.56 399.58 264.09 399.15 264.15 398.76 263.63"/></g><g class="cls-1"><path class="cls-18" d="M620.77,506.47l-2.06-1.09A124.86,124.86,0,0,1,605,496.81a99.64,99.64,0,0,1-12.29-10.45,78,78,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56.75,56.75,0,0,0,4.41-6.86,33.92,33.92,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,20.62,20.62,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.92-2.85-.51-.44-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.83-10.28-3.42-15.5-4.84-10.44-2.83-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.43-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58A15.31,15.31,0,0,1,301.8,175a10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.14,6.14,0,0,1,.29-1,6.73,6.73,0,0,1,1.05-1.69,10.51,10.51,0,0,1,1.42-1.41A20.81,20.81,0,0,1,308,165.7c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.81,5.81,0,0,0,1.34-1.54,3.67,3.67,0,0,0,.37-1,3.57,3.57,0,0,0,0-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,30.94,30.94,0,0,0-3.13-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-2-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43l-1-.19c-.17,0-.33-.05-.5-.06l-.26,0c-.09,0-.16,0-.28.06l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07c.33,0,.66.12,1,.18l2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.68,5.68,0,0,0-.31,1c0,.08,0,.16-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L352,226.32c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.68,9.68,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.71,19.71,0,0,0,2.65,3.12,27.81,27.81,0,0,0,6.71,4.61,40.21,40.21,0,0,0,7.62,2.85c1.31.35,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.06.24h1l1,0,1,0c.34,0,.67-.05,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,31.76,31.76,0,0,0,3.48-2.13,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.53,15.53,0,0,0,3.19-7.46,20.09,20.09,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.77,54.77,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.37,7.53,2.92t7.37,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.52,1.33,1,.9,1.95,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.52,20.52,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.84-11.25,11.6-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.57,66.57,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.86,61.86,0,0,0,2,7.9A64.14,64.14,0,0,0,582,474.26a78.76,78.76,0,0,0,10.26,12.61,101.83,101.83,0,0,0,12.4,10.5A124.69,124.69,0,0,0,618.4,506l2.13,1.12Zm-221.57-236c1.62,2.16,3.15,4.38,4.54,6.68a55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,15.61,15.61,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.86,37.86,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.07-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.72,27.72,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,7.41,7.41,0,0,1,.19-1c.08-.31.19-.64.29-.95.22-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.7,7.08-1.27C398.09,269,398.65,269.74,399.2,270.47Z"/><polygon class="cls-3" points="397.11 267.78 397.54 267.71 397.93 268.24 397.51 268.3 397.11 267.78"/></g><g class="cls-1"><path class="cls-19" d="M619.07,510.85c-.69-.36-1.38-.72-2.07-1.1a124.86,124.86,0,0,1-13.68-8.57A99.64,99.64,0,0,1,591,490.73a77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47A57.3,57.3,0,0,1,571,448a63.17,63.17,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85q-8-1.39-16-2.58c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.4-1.42s-21.62.07-32.41.8c-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.88a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.27,10.27,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,.05-.24,6.49,6.49,0,0,1,.29-1,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,21,21,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.5-3,1.25-.52,2.5-1.05,3.71-1.65a17.28,17.28,0,0,0,3.45-2.14A5.79,5.79,0,0,0,326,160a3.77,3.77,0,0,0,.38-1,3.64,3.64,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.69-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.54.54,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.12,7.37,3.35a53.83,53.83,0,0,1,6.92,4.17,28.37,28.37,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2,15.3,15.3,0,0,0,1.07,3.92,25.64,25.64,0,0,0,1.86,3.61,49.64,49.64,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.94,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3,5.86,6.19,8.54,9.5q-3.4.55-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.78,34.78,0,0,0-6.2,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.52,1.26-.74,1.91-.11.32-.21.64-.3,1a9,9,0,0,0-.21,1,9.63,9.63,0,0,0,.4,4.1,13.92,13.92,0,0,0,1.79,3.7,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.83,38.83,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,14.15,14.15,0,0,0,1.36-1.53,14.85,14.85,0,0,0,1.17-1.68,15.6,15.6,0,0,0,2-5.78,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71c-.51-.68-1-1.34-1.56-2,8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.65,1.51,1.33c1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.39,20.39,0,0,1,.31,11.74,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a58.44,58.44,0,0,0,2.94,16,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59l2.14,1.13Zm-221.58-236a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,15.71,15.71,0,0,1-1.33,1.49,23,23,0,0,1-3.09,2.56,28.54,28.54,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a40.13,40.13,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C396.38,273.39,396.94,274.11,397.49,274.85Z"/><polygon class="cls-3" points="395.4 272.15 395.82 272.08 396.22 272.61 395.79 272.67 395.4 272.15"/></g><g class="cls-1"><path class="cls-20" d="M617.43,515.08c-.7-.36-1.39-.73-2.09-1.11a124.86,124.86,0,0,1-13.68-8.57A99.64,99.64,0,0,1,589.37,495a77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,59.69,59.69,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89,93.9,93.9,0,0,1,9.17-13.25c3.4-4.18,7-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85q-8-1.4-16-2.58t-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.4-1.42s-21.62.07-32.41.8c-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.74-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L336.2,224.54c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.88a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,11.12,11.12,0,0,1,0-2l0-.25,0-.25,0-.24a1.84,1.84,0,0,1,0-.25,6.49,6.49,0,0,1,.29-1,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.5-1.05,3.71-1.65a17.57,17.57,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.77,3.77,0,0,0,.38-1,3.64,3.64,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.69-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.61.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.12,7.37,3.35a53.83,53.83,0,0,1,6.92,4.17,28.37,28.37,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.15,3.15,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2,14.9,14.9,0,0,0,1.07,3.92,25.64,25.64,0,0,0,1.86,3.61,49.64,49.64,0,0,0,4.83,6.51c1.77,2,3.63,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.94,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5q-3.4.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.09,34.09,0,0,0-6.2,5.3,24.92,24.92,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.32-.21.64-.3,1a9,9,0,0,0-.21,1,9.63,9.63,0,0,0,.4,4.1,13.92,13.92,0,0,0,1.79,3.7,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.17c.34.07.67.11,1,.16.67.1,1.35.17,2,.25,1.35.12,2.7.22,4.06.23h1c.34,0,.68,0,1,0l1,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,14.15,14.15,0,0,0,1.36-1.53,14.85,14.85,0,0,0,1.17-1.68,15.3,15.3,0,0,0,1.61-3.77,17.07,17.07,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71c-.51-.68-1-1.34-1.56-2,8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5.05,1.88,7.53,2.92s4.95,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.65,1.51,1.33c1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.6,20.6,0,0,1,.86,3.87,21.33,21.33,0,0,1-.55,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07A95.46,95.46,0,0,0,576,420.89,55.71,55.71,0,0,0,570,436a66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.67-.09,1l-.07,1c0,.68-.05,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a59.4,59.4,0,0,0,.91,8.1,61,61,0,0,0,2,7.9,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6A100.85,100.85,0,0,0,601.25,506,125.76,125.76,0,0,0,615,514.55c.72.39,1.44.77,2.17,1.14Zm-221.6-236a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.57,33.57,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.94,14.66,14.66,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,15.71,15.71,0,0,1-1.33,1.49,23,23,0,0,1-3.09,2.56,28.54,28.54,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.69-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a39.45,39.45,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,6.52,6.52,0,0,1,.19-1c.08-.31.19-.63.29-1,.22-.63.46-1.25.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.44,125.44,0,0,1,15.62-4.1q3.54-.69,7.09-1.27C394.72,277.61,395.28,278.33,395.83,279.07Z"/><polygon class="cls-3" points="393.74 276.37 394.16 276.31 394.56 276.83 394.13 276.89 393.74 276.37"/></g><g class="cls-1"><path class="cls-21" d="M615.81,519.26c-.7-.37-1.4-.73-2.09-1.11A124,124,0,0,1,600,509.58a100.52,100.52,0,0,1-12.29-10.45,78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,60.1,60.1,0,0,1-2-7.79,61.36,61.36,0,0,1-.88-8,63.56,63.56,0,0,1,1.43-16,55,55,0,0,1,5.9-14.9,96.2,96.2,0,0,1,9.17-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-14.95,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.8-2,3.52-4.12,5.14-6.31a56.48,56.48,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.18,21.18,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.5-4.84-10.44-2.84-21.05-5-31.69-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.68-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,27.06,27.06,0,0,1-1.85-3.59,15.23,15.23,0,0,1-1.05-3.86,10.39,10.39,0,0,1-.05-2l0-.24,0-.25,0-.25c0-.08,0-.16.05-.24a5,5,0,0,1,.3-.95,6.47,6.47,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,0-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.68,28.68,0,0,0-3.13-2.59,54.41,54.41,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5.05-1.95-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.3-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,29.65,29.65,0,0,1,3.1,2.58,16.12,16.12,0,0,1,2.56,3.1,8.65,8.65,0,0,1,1.34,3.75,2.76,2.76,0,0,1-.05,1,3,3,0,0,1-.35.91,6.05,6.05,0,0,1-1.3,1.51,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.74a21.82,21.82,0,0,0-3.4,2.22,10.39,10.39,0,0,0-1.45,1.44A6.94,6.94,0,0,0,297,183.7a5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.48,10.33L347,239.09c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.85,6.2,8.53,9.51-2.27.37-4.53.77-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.07,7.07,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.2,19.2,0,0,0,2.65,3.11,27.76,27.76,0,0,0,6.71,4.62,40.3,40.3,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a42.69,42.69,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23.76,23.76,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,16.3,16.3,0,0,0,1.16-1.69,15.14,15.14,0,0,0,1.61-3.77,15.46,15.46,0,0,0,.42-2,15.63,15.63,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.67,54.67,0,0,0-3.72-7.22,81,81,0,0,0-4.58-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.7,10.77-.71,21.58-.91,32.37-.75s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.84,2.54.9,5.05,1.88,7.54,2.91s4.94,2.14,7.36,3.32a112,112,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.46,4.81l.78.65.77.65c.52.43,1,.88,1.52,1.33,1,.89,1.95,1.82,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.6,21.6,0,0,1-.56,7.88,33,33,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.2,58.2,0,0,0,.91,8.1,59.66,59.66,0,0,0,2,7.89A63.64,63.64,0,0,0,577,487a78.52,78.52,0,0,0,10.25,12.6,101,101,0,0,0,12.4,10.5,123.21,123.21,0,0,0,13.77,8.59c.72.39,1.45.77,2.18,1.15Zm-221.61-236a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.23-2.63-.53-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.21,18.21,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.92,7.92,0,0,1,.19-1c.08-.31.19-.63.3-.94.21-.64.45-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,34.16,34.16,0,0,1,6.1-5.21,52,52,0,0,1,7-3.91,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.7,7.08-1.27C393.09,281.78,393.65,282.51,394.2,283.24Z"/><polygon class="cls-3" points="392.11 280.55 392.54 280.48 392.93 281 392.51 281.07 392.11 280.55"/></g><g class="cls-1"><path class="cls-22" d="M614.11,523.64,612,522.52A124.86,124.86,0,0,1,598.32,514,99.64,99.64,0,0,1,586,503.5,78,78,0,0,1,575.89,491a62.91,62.91,0,0,1-7-14.47A57.3,57.3,0,0,1,566,460.75a63.18,63.18,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56.75,56.75,0,0,0,4.41-6.86,33.92,33.92,0,0,0,3.05-7.61,22.37,22.37,0,0,0,.57-8.19,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.92-2.85-.51-.44-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.83-10.28-3.42-15.5-4.84-10.44-2.83-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.43-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.31,10.31,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.14,6.14,0,0,1,.29-.95,6.73,6.73,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.18-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.81,5.81,0,0,0,1.34-1.54,4.05,4.05,0,0,0,.37-1,3.57,3.57,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.95-7.6-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43l-1-.19c-.17,0-.33,0-.5-.06l-.26,0c-.09,0-.16-.05-.28.06l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.68,5.68,0,0,0-.31,1c0,.08,0,.16-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2A15.26,15.26,0,0,0,296,196a25.64,25.64,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.68,9.68,0,0,0,.39,4.11,14.07,14.07,0,0,0,1.79,3.7,19.77,19.77,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.35,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.06.24h1l1,0,1,0c.34,0,.67,0,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,15.17,15.17,0,0,0,1.36-1.53,14.11,14.11,0,0,0,1.17-1.69,15.5,15.5,0,0,0,2-5.77,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,54.77,54.77,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.53,2.92t7.37,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.52,20.52,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.84-11.25,11.6-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.57,66.57,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.86,61.86,0,0,0,2,7.9,64.14,64.14,0,0,0,7.09,14.62A78.76,78.76,0,0,0,585.52,504a101.08,101.08,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59l2.19,1.15Zm-221.62-236c1.62,2.16,3.15,4.38,4.54,6.68a55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,15.6,15.6,0,0,1-4,6.79,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.86,37.86,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.07-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.72,27.72,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,7.41,7.41,0,0,1,.19-1c.08-.31.19-.64.29-.95.22-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.52-.7,7.08-1.27C391.38,286.16,391.94,286.88,392.49,287.61Z"/><polygon class="cls-3" points="390.4 284.92 390.82 284.85 391.22 285.37 390.8 285.44 390.4 284.92"/></g><g class="cls-1"><path class="cls-23" d="M612.48,527.87c-.72-.37-1.43-.75-2.14-1.13a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47A57.3,57.3,0,0,1,564.38,465a63.63,63.63,0,0,1,1.42-16,55.52,55.52,0,0,1,5.91-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56.75,56.75,0,0,0,4.41-6.86,33.73,33.73,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.33l-.77-.66-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.83-10.28-3.42-15.5-4.84-10.44-2.83-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.43-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79L331.2,237.3c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a6.14,6.14,0,0,1,.29-.95,6.73,6.73,0,0,1,1.05-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.18-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.5-3,1.25-.51,2.5-1,3.71-1.64a17.32,17.32,0,0,0,3.45-2.15,5.6,5.6,0,0,0,1.33-1.54,3.7,3.7,0,0,0,.38-1,3.55,3.55,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.95-7.6-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43l-1-.19c-.17,0-.33,0-.5-.06l-.26,0c-.09,0-.16-.05-.28.06l.08,0h.2l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.68,5.68,0,0,0-.31,1c0,.08,0,.16-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,51.26,51.26,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29A24.93,24.93,0,0,0,341,313.6c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.68,9.68,0,0,0,.39,4.11,14.07,14.07,0,0,0,1.79,3.7,19.77,19.77,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.35,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.06.24h1l1,0,1,0c.34,0,.67-.05,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,31.76,31.76,0,0,0,3.48-2.13,23,23,0,0,0,3.14-2.61,15.17,15.17,0,0,0,1.36-1.53,14.11,14.11,0,0,0,1.17-1.69,15.5,15.5,0,0,0,2-5.77,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,56,56,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84,2.53.91,5.05,1.88,7.53,2.92s4.95,2.13,7.37,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.52,1.33,1,.9,1.95,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.52,20.52,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4,57.87,57.87,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.84-11.25,11.6-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07A95.46,95.46,0,0,0,571,433.66a55.91,55.91,0,0,0-6,15.14,66.57,66.57,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.43,61.43,0,0,0,2,7.9,64.14,64.14,0,0,0,7.09,14.62,78.22,78.22,0,0,0,10.26,12.61,101.08,101.08,0,0,0,12.4,10.5A124.69,124.69,0,0,0,610,527.32l2.21,1.16Zm-221.65-236a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,14.82,14.82,0,0,1-2.71,5.3,17,17,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.86,37.86,0,0,1-7.49,2.91A41.73,41.73,0,0,1,375,337c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.23-.67-.08-1.34-.15-2-.26-.33,0-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.72,27.72,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,7.76,7.76,0,0,1,.19-1c.08-.31.19-.64.29-.95.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C389.72,290.38,390.28,291.1,390.83,291.83Z"/><polygon class="cls-3" points="388.74 289.14 389.16 289.07 389.56 289.6 389.13 289.66 388.74 289.14"/></g><g class="cls-1"><path class="cls-24" d="M610.86,532c-.72-.38-1.45-.76-2.16-1.15A124,124,0,0,1,595,522.32a99.64,99.64,0,0,1-12.29-10.45,78.43,78.43,0,0,1-10.14-12.5,63.32,63.32,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9A94.65,94.65,0,0,1,579.23,425c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a58.07,58.07,0,0,0,4.42-6.86,34.37,34.37,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,20.62,20.62,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85A111.87,111.87,0,0,0,603.79,317c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.28-3.42-15.5-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.56-16.68,1.43-25,2.78-2.72-3.39-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.42,15.42,0,0,1-1.05-3.87,10.31,10.31,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.14,6.14,0,0,1,.29-.95,6.73,6.73,0,0,1,1-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.57,3.57,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.66,29.66,0,0,0-3.13-2.59A55.59,55.59,0,0,0,304,165.4c-2.41-1.22-4.88-2.32-7.38-3.34s-5.05-1.95-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1l-2-.44-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07c.33,0,.66.12,1,.18.66.14,1.32.28,2,.44,1.31.31,2.62.65,3.92,1q3.9,1.09,7.74,2.38c2.56.87,5.09,1.8,7.59,2.82s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,6,6,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93A26.2,26.2,0,0,0,294.5,208a50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.3,6.93,12.49,10.33L342,251.83c8.41,6.78,16.78,13.6,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.27-.74,1.91-.1.33-.21.65-.3,1a7.07,7.07,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.2,19.2,0,0,0,2.65,3.11,27.56,27.56,0,0,0,6.71,4.62,40.21,40.21,0,0,0,7.62,2.85c1.32.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.06.24h2l1,0c.34,0,.67,0,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,15.62,15.62,0,0,0,2.77-5.45,18.14,18.14,0,0,0,.61-4.05,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.16,54.16,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.91c2.48,1,4.94,2.14,7.36,3.32a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.52,1.33,1,.89,1.95,1.82,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64A20.52,20.52,0,0,1,637,350a21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4A56.59,56.59,0,0,1,629.1,372c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89A64,64,0,0,0,572,499.77a78.68,78.68,0,0,0,10.26,12.6,101,101,0,0,0,12.4,10.51,124.69,124.69,0,0,0,13.77,8.59l2.25,1.18ZM389.18,296a79.26,79.26,0,0,1,4.54,6.68,55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,15.2,15.2,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0c-.34,0-.67,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.25,13.25,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.41,7.41,0,0,1,.19-1c.08-.32.19-.64.3-.95.21-.64.45-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.52-.7,7.08-1.27C388.07,294.53,388.63,295.25,389.18,296Z"/><polygon class="cls-3" points="387.09 293.29 387.51 293.22 387.91 293.74 387.49 293.81 387.09 293.29"/></g><g class="cls-1"><path class="cls-25" d="M609.16,536.42,607,535.26a124.86,124.86,0,0,1-13.68-8.57A99.64,99.64,0,0,1,581,516.24a77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47A57.3,57.3,0,0,1,561,473.49a63.17,63.17,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.16,94.16,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.44,22.44,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.79,31.79,0,0,0-4.86-6.59c-.93-1-1.91-2-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.09-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-24.95,2.78-2.73-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.15c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25a2,2,0,0,1,.05-.24,6.49,6.49,0,0,1,.29-1,6.73,6.73,0,0,1,1.05-1.69,10,10,0,0,1,1.42-1.41,20.75,20.75,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.5-3,1.25-.52,2.5-1.05,3.71-1.65A16.88,16.88,0,0,0,314.6,187a5.6,5.6,0,0,0,1.33-1.54,3.7,3.7,0,0,0,.38-1,3.55,3.55,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0,.2,0,.25,0,.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a52.72,52.72,0,0,1,6.92,4.17,26.61,26.61,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,50.56,50.56,0,0,0,4.83,6.51c1.77,2,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.79,1.23A125.32,125.32,0,0,0,362.9,303a76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,24.93,24.93,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.35,7.35,0,0,0-.2,1,9.66,9.66,0,0,0,.39,4.11,14.07,14.07,0,0,0,1.79,3.7A19.33,19.33,0,0,0,341.2,337a27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17,1,.15c.67.11,1.35.18,2,.26,1.35.12,2.71.22,4.06.23h1l1,0,1,0c.34,0,.67,0,1-.06a42.71,42.71,0,0,0,8-1.37,38.17,38.17,0,0,0,7.58-2.95,33.3,33.3,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.95,16.95,0,0,0,2.53-3.22A15.08,15.08,0,0,0,398,330a15.26,15.26,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.31,22.31,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,57.3,57.3,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s4.95,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.51,1.33,1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,21.25,21.25,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,57.87,57.87,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.67,0,1.35.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,63.94,63.94,0,0,0,7.09,14.62,78.22,78.22,0,0,0,10.26,12.61,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59c.75.4,1.5.8,2.26,1.19ZM387.47,300.35A79.42,79.42,0,0,1,392,307a55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,14.82,14.82,0,0,1-2.71,5.3,17,17,0,0,1-1.33,1.49,22.34,22.34,0,0,1-3.09,2.56,29.89,29.89,0,0,1-3.43,2.09,37.26,37.26,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.64-.54-3.93-.89a40.13,40.13,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,123.42,123.42,0,0,1,15.63-4.1q3.53-.7,7.08-1.27C386.36,298.9,386.92,299.62,387.47,300.35Z"/><polygon class="cls-3" points="385.38 297.66 385.8 297.59 386.2 298.12 385.77 298.18 385.38 297.66"/></g><g class="cls-1"><path class="cls-26" d="M607.52,540.65c-.73-.38-1.47-.77-2.2-1.17a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45A77.55,77.55,0,0,1,569.21,508a62.91,62.91,0,0,1-7-14.47,59.69,59.69,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.44,22.44,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.4-1.42s-21.62.07-32.41.79c-8.35.57-16.68,1.44-25,2.78-2.73-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L326.18,250c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.25a2,2,0,0,1,.05-.24,6.49,6.49,0,0,1,.29-.95,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,21,21,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.5-1.05,3.71-1.65a17.28,17.28,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.7,3.7,0,0,0,.38-1,3.55,3.55,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.75.75,0,0,1,.2,0l.25,0,.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.61.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a52.72,52.72,0,0,1,6.92,4.17,28.37,28.37,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.69,5.69,0,0,1-1.31,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,49.64,49.64,0,0,0,4.83,6.51c1.77,2,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5q-3.41.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.78,34.78,0,0,0-6.2,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.52,1.26-.74,1.91-.11.32-.21.64-.3,1a9,9,0,0,0-.21,1,9.63,9.63,0,0,0,.4,4.1,13.92,13.92,0,0,0,1.79,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1l1,0,1,0,1-.06a42.71,42.71,0,0,0,8-1.37,38.17,38.17,0,0,0,7.58-2.95,33.3,33.3,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,16.95,16.95,0,0,0,2.53-3.22,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83,2.53.91,5.05,1.88,7.53,2.92s4.95,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.51,1.33,1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,21.25,21.25,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.67,0,1.35,0,2a58.44,58.44,0,0,0,2.94,16,63.94,63.94,0,0,0,7.09,14.62A78.22,78.22,0,0,0,578.84,521a100.85,100.85,0,0,0,12.39,10.5A125.76,125.76,0,0,0,605,540.06c.76.41,1.52.8,2.28,1.2ZM385.81,304.57a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,15.71,15.71,0,0,1-1.33,1.49,23,23,0,0,1-3.09,2.56,29.89,29.89,0,0,1-3.43,2.09,37.89,37.89,0,0,1-7.49,2.92,42.52,42.52,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a40.13,40.13,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C384.7,303.12,385.26,303.84,385.81,304.57Z"/><polygon class="cls-3" points="383.72 301.88 384.14 301.81 384.54 302.34 384.11 302.4 383.72 301.88"/></g><g class="cls-1"><path class="cls-27" d="M606,544.58c-.7-.36-1.4-.73-2.09-1.11a124,124,0,0,1-13.69-8.57,99.64,99.64,0,0,1-12.29-10.45A77.55,77.55,0,0,1,567.79,512a63.32,63.32,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a58.07,58.07,0,0,0,4.42-6.86,34.37,34.37,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,20.62,20.62,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.92-2.85-.51-.44-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85A111.87,111.87,0,0,0,599,329.62c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.28-3.42-15.5-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.43-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79L324.76,254c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.79-3.85-5.55-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58A15.31,15.31,0,0,1,287,213a10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.14,6.14,0,0,1,.29-1,6.73,6.73,0,0,1,1.05-1.69,10.51,10.51,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.81,5.81,0,0,0,1.34-1.54,3.36,3.36,0,0,0,.37-1,3.55,3.55,0,0,0,0-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,30.94,30.94,0,0,0-3.13-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-1.95-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43l-1-.19c-.17,0-.33-.05-.5-.06l-.26,0c-.09,0-.16-.05-.28.06l.08,0h.2l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.68,5.68,0,0,0-.31,1c0,.08,0,.16-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.3,6.93,12.49,10.33l12.63,10.16C345.62,271.19,354,278,362,285.22c4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4A34,34,0,0,0,339,323.5a25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.71,19.71,0,0,0,2.65,3.12,27.81,27.81,0,0,0,6.71,4.61,40.21,40.21,0,0,0,7.62,2.85c1.32.35,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.06.24h1l1,0,1,0c.34,0,.67-.05,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,31.76,31.76,0,0,0,3.48-2.13,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.53,15.53,0,0,0,3.19-7.46,15.63,15.63,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.77,54.77,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.92c2.48,1,4.94,2.13,7.36,3.31a112,112,0,0,1,14,8c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,22.51,22.51,0,0,1,1.58,3.64,20.52,20.52,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.84-11.25,11.6-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.57,66.57,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.86,61.86,0,0,0,2,7.9,64.14,64.14,0,0,0,7.09,14.62A78.76,78.76,0,0,0,577.42,525a101.83,101.83,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.72.39,1.45.77,2.17,1.14Zm-221.61-236c1.62,2.16,3.15,4.38,4.54,6.68a55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,15.2,15.2,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.07-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.27,18.27,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,7.41,7.41,0,0,1,.19-1c.08-.31.19-.64.3-1,.21-.64.45-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C383.28,307.11,383.84,307.83,384.39,308.56Z"/><polygon class="cls-3" points="382.3 305.87 382.73 305.8 383.12 306.32 382.7 306.39 382.3 305.87"/></g><g class="cls-1"><path class="cls-28" d="M604.3,549c-.7-.36-1.41-.74-2.11-1.12a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85A113.11,113.11,0,0,0,597.29,334c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.85q-8-1.4-16-2.58c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.8c-8.35.56-16.68,1.43-25,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.88a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.27,10.27,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,.05-.24,6.49,6.49,0,0,1,.29-.95,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,21.44,21.44,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.5-3,1.25-.52,2.5-1,3.71-1.65a17.28,17.28,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.77,3.77,0,0,0,.38-1,3.64,3.64,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.69-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.54.54,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.12,7.37,3.35a53.83,53.83,0,0,1,6.92,4.17,26.61,26.61,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2.05,15.3,15.3,0,0,0,1.07,3.92A25.64,25.64,0,0,0,288,225a50.56,50.56,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.94,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5q-3.4.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,24.93,24.93,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.63,9.63,0,0,0,.39,4.1,13.92,13.92,0,0,0,1.79,3.7,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0c.34,0,.67,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.83,38.83,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,14.15,14.15,0,0,0,1.36-1.53,14.85,14.85,0,0,0,1.17-1.68,15.6,15.6,0,0,0,2-5.78,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22A80.08,80.08,0,0,0,383,312.7c-.51-.68-1-1.34-1.56-2,8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.53.91,5.05,1.88,7.53,2.92s5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.65,1.51,1.33c1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.39,20.39,0,0,1,.31,11.74,33.11,33.11,0,0,1-3,7.4A56.23,56.23,0,0,1,622.6,389c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59l2.19,1.15Zm-221.62-236a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,15.6,15.6,0,0,1-4,6.79,22.34,22.34,0,0,1-3.09,2.56,28.54,28.54,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a40.13,40.13,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-1,.22-.63.46-1.25.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C381.57,311.48,382.13,312.2,382.68,312.94Z"/><polygon class="cls-3" points="380.59 310.24 381.01 310.18 381.41 310.7 380.99 310.76 380.59 310.24"/></g><g class="cls-1"><path class="cls-29" d="M602.66,553.19c-.71-.37-1.42-.74-2.13-1.13a124.86,124.86,0,0,1-13.68-8.57A99.64,99.64,0,0,1,574.56,533a77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,59.69,59.69,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.85q-8-1.39-16-2.58t-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.4-1.42s-21.62.07-32.41.8c-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.24a1.84,1.84,0,0,1,0-.25,6.49,6.49,0,0,1,.29-.95,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,21,21,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.5-1.05,3.71-1.65a17.28,17.28,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.77,3.77,0,0,0,.38-1,3.64,3.64,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.69-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.61.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.12,7.37,3.35a53.83,53.83,0,0,1,6.92,4.17,28.37,28.37,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.69,5.69,0,0,1-1.31,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2,15.3,15.3,0,0,0,1.07,3.92,25.64,25.64,0,0,0,1.86,3.61,49.64,49.64,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.91s8.29,6.93,12.49,10.32L333.84,273c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3,5.86,6.19,8.54,9.5q-3.4.55-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.09,34.09,0,0,0-6.2,5.3,24.92,24.92,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.32-.21.64-.3,1a9,9,0,0,0-.21,1,9.63,9.63,0,0,0,.4,4.1,13.92,13.92,0,0,0,1.79,3.7,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,15.06,15.06,0,0,0,1.36-1.52,15.92,15.92,0,0,0,1.17-1.69,15.6,15.6,0,0,0,2-5.78,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71c-.51-.68-1-1.34-1.56-2,8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.65,1.51,1.33c1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.39,20.39,0,0,1,.31,11.74,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07A96,96,0,0,0,561.15,459a56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a58.44,58.44,0,0,0,2.94,16A64,64,0,0,0,563.79,521a78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59c.73.4,1.47.78,2.21,1.16ZM381,317.16a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.94,14.66,14.66,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,15.71,15.71,0,0,1-1.33,1.49A23,23,0,0,1,384,356a28.54,28.54,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a39.45,39.45,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C379.91,315.7,380.47,316.42,381,317.16Z"/><polygon class="cls-3" points="378.93 314.46 379.35 314.4 379.75 314.92 379.32 314.98 378.93 314.46"/></g><g class="cls-1"><path class="cls-30" d="M601.05,557.36l-2.17-1.15a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.18,63.18,0,0,1,1.43-16,55,55,0,0,1,5.9-14.89,94.16,94.16,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.44,22.44,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.79,31.79,0,0,0-4.86-6.59c-.93-1-1.91-1.95-2.93-2.85-.5-.45-1-.91-1.53-1.34l-.77-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85A113.11,113.11,0,0,0,594,342.36c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-25,2.78C375,315.17,372,312,369,308.86c-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.15c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.49,6.49,0,0,1,.29-.95,6.73,6.73,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.52,2.49-1,3.7-1.65A17.28,17.28,0,0,0,306.5,208a6,6,0,0,0,1.34-1.55,4.05,4.05,0,0,0,.37-1,3.55,3.55,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0,.2,0,.25,0,.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35A53.5,53.5,0,0,1,301.1,195a27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5A17.44,17.44,0,0,1,303,210c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16C340.6,283.93,349,290.76,357,298c4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23A125,125,0,0,0,354.8,324a76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,24.93,24.93,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.63,9.63,0,0,0,.39,4.1,13.92,13.92,0,0,0,1.79,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1l1,0,1,0c.34,0,.67,0,1-.06a42.71,42.71,0,0,0,8-1.37,38.17,38.17,0,0,0,7.58-3,33.3,33.3,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.95,16.95,0,0,0,2.53-3.22,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.31,22.31,0,0,0-.25-4.08A34.09,34.09,0,0,0,388,335a54.77,54.77,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.45,20.45,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.67,0,1.35.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,63.94,63.94,0,0,0,7.09,14.62A78.76,78.76,0,0,0,572.4,537.7a100.21,100.21,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59l2.24,1.18ZM379.37,321.3a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,15.6,15.6,0,0,1-4,6.79,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.26,37.26,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,123.42,123.42,0,0,1,15.63-4.1c2.35-.46,4.71-.89,7.08-1.27C378.26,319.85,378.82,320.57,379.37,321.3Z"/><polygon class="cls-3" points="377.28 318.61 377.7 318.54 378.1 319.07 377.68 319.13 377.28 318.61"/></g><g class="cls-1"><path class="cls-31" d="M599.35,561.74l-2.18-1.15A124.94,124.94,0,0,1,583.49,552a99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63,63,0,0,1-7-14.46,59.84,59.84,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89,94.48,94.48,0,0,1,9.17-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.12,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.36,23.36,0,0,0-1.64-3.77,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58S503.38,324.67,498,324q-16.09-2-32.26-3.22t-32.4-1.43c-10.8-.14-21.62.07-32.41.8-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.74-7.55-11.76-11.16-8.07-7.19-16.45-14-24.87-20.78L318,271.15c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,11.12,11.12,0,0,1,0-2l0-.25,0-.25,0-.24a2.21,2.21,0,0,1,.05-.25,6,6,0,0,1,.29-.94,7.05,7.05,0,0,1,1-1.7,11.21,11.21,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,5.64,5.64,0,0,0,1.33-1.55,3.63,3.63,0,0,0,.38-1,3.57,3.57,0,0,0,.05-1,9.15,9.15,0,0,0-1.37-3.82,16.53,16.53,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.61.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a52.65,52.65,0,0,1,6.92,4.16,28.37,28.37,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3,3,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,16.63,16.63,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74A21.13,21.13,0,0,0,283,223a11,11,0,0,0-1.46,1.44,6.74,6.74,0,0,0-1.07,1.74,5.58,5.58,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.26,0,.25,0,.26a9.94,9.94,0,0,0,0,2,14.8,14.8,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,51,51,0,0,0,4.83,6.51c1.77,2,3.63,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.61,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5-2.27.38-4.53.78-6.79,1.23a127.07,127.07,0,0,0-15.69,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.09,34.09,0,0,0-6.2,5.3,25.07,25.07,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.33-.21.64-.3,1a9,9,0,0,0-.21,1,9.7,9.7,0,0,0,.4,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.13,2.71.23,4.06.24h2l1-.05,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,16.48,16.48,0,0,0,2.53-3.21,15.3,15.3,0,0,0,1.61-3.77,17.39,17.39,0,0,0,.6-4.05,22.15,22.15,0,0,0-.25-4.07,34.17,34.17,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.43,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.66c.51.43,1,.88,1.51,1.32,1,.9,2,1.83,2.88,2.8a31.58,31.58,0,0,1,4.72,6.43,22.62,22.62,0,0,1,1.58,3.64,20.33,20.33,0,0,1,.86,3.86,21.33,21.33,0,0,1-.55,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.56,95.56,0,0,0-9.24,13.38,55.52,55.52,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.09,1l-.07,1c0,.68-.05,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.76,59.76,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59c.75.41,1.5.8,2.26,1.19ZM377.66,325.68a79.26,79.26,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.57,33.57,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.95,14.75,14.75,0,0,1-1.57,3.65,14.16,14.16,0,0,1-1.13,1.65,15.59,15.59,0,0,1-1.33,1.48,23.8,23.8,0,0,1-3.09,2.57,29.81,29.81,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0h-2c-1.34,0-2.69-.11-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a39.45,39.45,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.19,13.19,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,6.52,6.52,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.86a24.47,24.47,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,127.21,127.21,0,0,1,15.62-4.1q3.54-.69,7.09-1.27C376.55,324.22,377.11,324.94,377.66,325.68Z"/><polygon class="cls-3" points="375.57 322.99 375.99 322.92 376.39 323.44 375.96 323.5 375.57 322.99"/></g><g class="cls-1"><path class="cls-32" d="M597.71,566l-2.2-1.16a124.94,124.94,0,0,1-13.68-8.58,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63,63,0,0,1-7-14.46,59.84,59.84,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8A63.17,63.17,0,0,1,551,487a55.46,55.46,0,0,1,5.91-14.89,94.48,94.48,0,0,1,9.17-13.25c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.12,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4A22.56,22.56,0,0,0,622.1,376a31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86A112.52,112.52,0,0,0,590.6,351c-2.43-1.18-4.91-2.28-7.41-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.1-2-32.26-3.22t-32.4-1.43c-10.8-.14-21.62.07-32.41.8-8.35.56-16.68,1.43-25,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.74-7.55-11.76-11.16-8.07-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,11.12,11.12,0,0,1,0-2l0-.25,0-.25,0-.24c0-.08,0-.17,0-.25a6.05,6.05,0,0,1,.3-.94,7.05,7.05,0,0,1,1-1.7,11.21,11.21,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,5.82,5.82,0,0,0,1.33-1.55,3.63,3.63,0,0,0,.38-1,3.24,3.24,0,0,0,0-1,9,9,0,0,0-1.36-3.82,16.53,16.53,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,52.73,52.73,0,0,0-7-4.17c-2.4-1.23-4.87-2.33-7.38-3.35s-5-1.94-7.6-2.8-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.09,0a.93.93,0,0,1,.2,0l.25,0,.49.07c.34.05.67.11,1,.18.66.13,1.32.28,2,.44,1.31.31,2.61.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a52.65,52.65,0,0,1,6.92,4.16,28.37,28.37,0,0,1,3.11,2.58,16.18,16.18,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,2.94,2.94,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,16.63,16.63,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.66,21.66,0,0,0-3.41,2.22,11.6,11.6,0,0,0-1.45,1.44,6.74,6.74,0,0,0-1.07,1.74,5.58,5.58,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a9.94,9.94,0,0,0,0,2,14.8,14.8,0,0,0,1.07,3.92,25.7,25.7,0,0,0,1.85,3.62,52.06,52.06,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.56,5.91,3.84,3.8,7.88,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.61,8,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5-2.27.38-4.53.78-6.79,1.23a127.07,127.07,0,0,0-15.69,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.09,34.09,0,0,0-6.2,5.3,25.07,25.07,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.33-.21.64-.31,1s-.15.68-.2,1a9.7,9.7,0,0,0,.4,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.13,2.7.23,4.06.24h2l1-.05,1-.06a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,25.28,25.28,0,0,0,3.14-2.61,16.35,16.35,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.3,15.3,0,0,0,1.61-3.77,17.39,17.39,0,0,0,.6-4,21.31,21.31,0,0,0-.26-4.07,33.2,33.2,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.43,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.66c.51.43,1,.88,1.51,1.32,1,.9,2,1.83,2.88,2.8a31.17,31.17,0,0,1,4.71,6.43,21.81,21.81,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.33,21.33,0,0,1-.55,7.87,33.11,33.11,0,0,1-3,7.4,55.1,55.1,0,0,1-4.36,6.75c-1.59,2.16-3.31,4.23-5.09,6.25-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.88-7.45,7.86-10.87,12.07a96.48,96.48,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.8,68.8,0,0,0-1.23,8.06c0,.34,0,.68-.08,1l-.07,1c0,.68,0,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.76,59.76,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63A78.58,78.58,0,0,0,569,546.29a100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59q1.13.61,2.28,1.2ZM376,329.9c1.62,2.15,3.14,4.38,4.54,6.68a55.79,55.79,0,0,1,3.69,7.17,33.57,33.57,0,0,1,2.25,7.71,19,19,0,0,1-.35,8,14.75,14.75,0,0,1-1.57,3.65,14.16,14.16,0,0,1-1.13,1.65,15.59,15.59,0,0,1-1.33,1.48,23.8,23.8,0,0,1-3.09,2.57,29.81,29.81,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67,0-1,.06l-1,0h-2c-1.34,0-2.69-.11-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a39.45,39.45,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.19,13.19,0,0,1-1.73-3.56,9.06,9.06,0,0,1-.37-3.9,6.52,6.52,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.86a24.63,24.63,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,51.43,51.43,0,0,1,7-3.92,77.08,77.08,0,0,1,7.51-3,127.21,127.21,0,0,1,15.62-4.1q3.54-.69,7.09-1.27C374.89,328.44,375.45,329.16,376,329.9Z"/><polygon class="cls-3" points="373.91 327.21 374.33 327.14 374.73 327.66 374.3 327.72 373.91 327.21"/></g><g class="cls-1"><path class="cls-33" d="M596.09,570.15c-.74-.38-1.47-.77-2.2-1.17a124,124,0,0,1-13.69-8.57A99.64,99.64,0,0,1,567.91,550a78.43,78.43,0,0,1-10.14-12.5,63.32,63.32,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a58.07,58.07,0,0,0,4.42-6.86,33.89,33.89,0,0,0,3-7.61A22.37,22.37,0,0,0,623,388a21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85A111.87,111.87,0,0,0,589,355.13c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.5-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.56-16.68,1.43-25,2.78-2.72-3.39-5.67-6.59-8.7-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.42,15.42,0,0,1-1-3.87,10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.42,6.42,0,0,1,1-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a17.32,17.32,0,0,0,3.45-2.15,5.7,5.7,0,0,0,1.34-1.55,3.19,3.19,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.66,29.66,0,0,0-3.13-2.59,55.59,55.59,0,0,0-6.95-4.17c-2.41-1.22-4.88-2.32-7.38-3.34s-5.05-2-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43l-1-.19-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07c.33,0,.66.12,1,.18.66.14,1.32.28,2,.44,1.31.31,2.62.65,3.92,1q3.9,1.09,7.74,2.38c2.56.87,5.09,1.8,7.59,2.82s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.73,8.73,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,6,6,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.41,7.41,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.3,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4A34,34,0,0,0,329,349a25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.27-.74,1.91-.1.33-.21.65-.3,1a7.07,7.07,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.2,19.2,0,0,0,2.65,3.11,27.76,27.76,0,0,0,6.71,4.62,40.21,40.21,0,0,0,7.62,2.85c1.32.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.62,15.62,0,0,0,2.77-5.45,18.14,18.14,0,0,0,.61-4.05,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,54.16,54.16,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.91c2.48,1,4.94,2.14,7.36,3.32a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a31.52,31.52,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63,78.68,78.68,0,0,0,10.26,12.6A101,101,0,0,0,579.8,561a124.69,124.69,0,0,0,13.77,8.59l2.29,1.2ZM374.37,334.07a79.26,79.26,0,0,1,4.54,6.68,55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56A32.49,32.49,0,0,1,374,375a37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0c-.34,0-.67,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.25,13.25,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.41,7.41,0,0,1,.19-1c.08-.32.19-.64.3-.95.21-.64.45-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.52-.71,7.08-1.27C373.26,332.62,373.82,333.34,374.37,334.07Z"/><polygon class="cls-3" points="372.28 331.38 372.71 331.31 373.1 331.83 372.68 331.9 372.28 331.38"/></g><g class="cls-1"><path class="cls-34" d="M594.4,574.53l-2.23-1.18a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.63,63.63,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.16,94.16,0,0,1,9.17-13.25c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.44,22.44,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.79,31.79,0,0,0-4.86-6.59c-.93-1-1.91-1.95-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.77-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.09-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L313,283.91c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.49,6.49,0,0,1,.29-1,6.73,6.73,0,0,1,1.05-1.69,10,10,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.5-3,1.25-.52,2.5-1.05,3.71-1.65a16.88,16.88,0,0,0,3.45-2.15,5.81,5.81,0,0,0,1.34-1.54,4.05,4.05,0,0,0,.37-1,3.55,3.55,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-7-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0,.2,0,.25,0,.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,50.56,50.56,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,24.93,24.93,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.35,7.35,0,0,0-.2,1,9.66,9.66,0,0,0,.39,4.11,14.07,14.07,0,0,0,1.79,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.26,1.35.12,2.71.22,4.06.23h1l1,0,1,0c.34,0,.67,0,1-.06a42.71,42.71,0,0,0,8-1.37,38.17,38.17,0,0,0,7.58-2.95,33.3,33.3,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.95,16.95,0,0,0,2.53-3.22,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.31,22.31,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,56,56,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.45,20.45,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,57.87,57.87,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.67,0,1.35.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,63.94,63.94,0,0,0,7.09,14.62,78.22,78.22,0,0,0,10.26,12.61,100.21,100.21,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.76.41,1.53.81,2.3,1.21ZM372.66,338.44a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,14.82,14.82,0,0,1-2.71,5.3,17,17,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.26,37.26,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-1,.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,123.42,123.42,0,0,1,15.63-4.1q3.53-.71,7.08-1.27C371.55,337,372.11,337.71,372.66,338.44Z"/><polygon class="cls-3" points="370.57 335.75 370.99 335.68 371.39 336.21 370.96 336.27 370.57 335.75"/></g><g class="cls-1"><path class="cls-35" d="M592.76,578.76c-.75-.39-1.5-.78-2.25-1.19A124.86,124.86,0,0,1,576.83,569a99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.17,63.17,0,0,1,1.42-16,55.33,55.33,0,0,1,5.91-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.44,22.44,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.1-2-32.26-3.22c-10.78-.78-21.59-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-25,2.78-2.73-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78l-12.64-10.15c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.25a2,2,0,0,1,.05-.24,6.49,6.49,0,0,1,.29-1,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,21,21,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.5-3,1.25-.52,2.5-1.05,3.71-1.65a17.28,17.28,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.7,3.7,0,0,0,.38-1,3.55,3.55,0,0,0,.05-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,29.76,29.76,0,0,0-3.12-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0,.2,0,.25,0,.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.55.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a52.72,52.72,0,0,1,6.92,4.17,27.46,27.46,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,49.64,49.64,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9S307,285,311.19,288.35l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.72,11.16,3,3,5.86,6.19,8.54,9.5q-3.41.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.78,34.78,0,0,0-6.2,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.63,9.63,0,0,0,.39,4.1,13.92,13.92,0,0,0,1.79,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40.67,40.67,0,0,0,7.62,2.86c1.31.35,2.64.65,4,.89l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1l1,0,1,0c.34,0,.67,0,1-.06a42.71,42.71,0,0,0,8-1.37,38.17,38.17,0,0,0,7.58-2.95,33.3,33.3,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,16.95,16.95,0,0,0,2.53-3.22,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.51,1.33,1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,21.25,21.25,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.67,0,1.35,0,2a58.44,58.44,0,0,0,2.94,16,63.94,63.94,0,0,0,7.09,14.62A78.22,78.22,0,0,0,564,559.06a100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59c.77.41,1.54.82,2.32,1.22ZM371,342.66a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,15.23,15.23,0,0,1-1.58,3.66,14,14,0,0,1-1.13,1.64A15.71,15.71,0,0,1,377.1,379a23,23,0,0,1-3.09,2.56,29.89,29.89,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,42.52,42.52,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a40.13,40.13,0,0,1-7.53-2.82,27.43,27.43,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.87A24.63,24.63,0,0,1,326,358a33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C369.89,341.21,370.45,341.93,371,342.66Z"/><polygon class="cls-3" points="368.91 339.97 369.33 339.9 369.73 340.43 369.3 340.49 368.91 339.97"/></g><g class="cls-1"><path class="cls-36" d="M591.14,582.93l-2.28-1.21a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47A57.3,57.3,0,0,1,542.9,520a63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,94.65,94.65,0,0,1,9.17-13.24c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.73,33.73,0,0,0,3.05-7.61,22.37,22.37,0,0,0,.57-8.19,20.62,20.62,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.92-2.85-.51-.44-1-.9-1.54-1.33l-.77-.66-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85A111.87,111.87,0,0,0,584,367.87c-2.44-1.19-4.91-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.83-10.28-3.42-15.5-4.84-10.44-2.83-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.09-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.85-5.54-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,14.9,14.9,0,0,1-1.05-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.14,6.14,0,0,1,.29-1,6.73,6.73,0,0,1,1.05-1.69,10.51,10.51,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.63,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.7-1.64a16.88,16.88,0,0,0,3.45-2.15,5.81,5.81,0,0,0,1.34-1.54,3.67,3.67,0,0,0,.37-1,3.55,3.55,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,30.94,30.94,0,0,0-3.13-2.59,54.34,54.34,0,0,0-7-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-1.94-7.61-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43l-1-.19c-.17,0-.33-.05-.5-.06l-.26,0c-.09,0-.16-.05-.28.06l.08,0h.2l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.1,2.57,15.88,15.88,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.47,20.47,0,0,0-3.4,2.22,10.38,10.38,0,0,0-1.46,1.43,7.09,7.09,0,0,0-1.07,1.74,5.68,5.68,0,0,0-.31,1c0,.08,0,.16,0,.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.35,7.35,0,0,0-.2,1,9.68,9.68,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.27,19.27,0,0,0,2.65,3.12,27.81,27.81,0,0,0,6.71,4.61,40.21,40.21,0,0,0,7.62,2.85c1.31.36,2.64.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.06.24h1l1,0,1,0c.34,0,.67,0,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,31.76,31.76,0,0,0,3.48-2.13,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.53,15.53,0,0,0,3.19-7.46,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.25-4.08,34.09,34.09,0,0,0-2.29-7.8,54.77,54.77,0,0,0-3.73-7.22,78.47,78.47,0,0,0-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.36-2.15,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.53,2.92t7.37,3.31a112,112,0,0,1,14,8c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.89,1.52,1.33,1,.9,1.95,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.52,20.52,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,33.3,33.3,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.6-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61.43,61.43,0,0,0,2,7.9,63.94,63.94,0,0,0,7.09,14.62,78.76,78.76,0,0,0,10.26,12.61,101.83,101.83,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.78.42,1.57.83,2.36,1.23ZM369.35,346.81a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,15.6,15.6,0,0,1-4,6.79,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.86,37.86,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.23-.67-.08-1.34-.15-2-.26-.33-.05-.67-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89A40.39,40.39,0,0,1,330,387.6a27.72,27.72,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,7.76,7.76,0,0,1,.19-1c.08-.31.19-.64.29-1,.22-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C368.24,345.36,368.8,346.08,369.35,346.81Z"/><polygon class="cls-3" points="367.26 344.12 367.69 344.05 368.08 344.57 367.66 344.64 367.26 344.12"/></g><g class="cls-1"><path class="cls-37" d="M589.44,587.31c-.76-.4-1.53-.8-2.29-1.22a123.36,123.36,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45A77.55,77.55,0,0,1,551,554.57a62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89,95.34,95.34,0,0,1,9.17-13.25c3.4-4.18,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.71-4.29-3.32-6.53-4.85a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.85q-8-1.4-16-2.58T488,349.5q-16.1-2-32.26-3.22t-32.4-1.42c-10.8-.14-21.62.07-32.41.8-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L308,296.66c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.24a1.84,1.84,0,0,1,.05-.25,6.49,6.49,0,0,1,.29-.95,7,7,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,21,21,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.5-1,3.71-1.65a16.83,16.83,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.77,3.77,0,0,0,.38-1,3.62,3.62,0,0,0,0-1,9.11,9.11,0,0,0-1.37-3.81,16.22,16.22,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.35a53.83,53.83,0,0,1,6.92,4.17,28.37,28.37,0,0,1,3.11,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.69,5.69,0,0,1-1.31,1.5,16.63,16.63,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2.05,15.3,15.3,0,0,0,1.07,3.92,25.11,25.11,0,0,0,1.86,3.61,49.64,49.64,0,0,0,4.83,6.51c1.77,2,3.64,4,5.56,5.91,3.84,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.32L320.46,307c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5q-3.41.56-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.43,34.43,0,0,0-6.2,5.3,25.07,25.07,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.32-.21.64-.3,1a9,9,0,0,0-.21,1,9.7,9.7,0,0,0,.4,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,15.06,15.06,0,0,0,1.36-1.52,15.92,15.92,0,0,0,1.17-1.69,15.6,15.6,0,0,0,2-5.78,17.37,17.37,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34.17,34.17,0,0,0-2.29-7.81,57.3,57.3,0,0,0-3.73-7.22A80.08,80.08,0,0,0,368,351c-.51-.68-1-1.34-1.56-2,8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.14,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.65,1.51,1.33c1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.39,20.39,0,0,1,.31,11.74,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07A96,96,0,0,0,547.77,493a56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.67-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a58.46,58.46,0,0,0,2.94,16A64,64,0,0,0,550.41,555a78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59c.79.42,1.58.84,2.37,1.24ZM367.64,351.19a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.94,14.66,14.66,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,15.71,15.71,0,0,1-1.33,1.49,23,23,0,0,1-3.09,2.56,28.54,28.54,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89A39.45,39.45,0,0,1,328.3,392a27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-1,.22-.63.46-1.25.73-1.87a24.78,24.78,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C366.53,349.73,367.09,350.45,367.64,351.19Z"/><polygon class="cls-3" points="365.55 348.5 365.97 348.43 366.37 348.95 365.94 349.01 365.55 348.5"/></g><g class="cls-1"><path class="cls-38" d="M587.81,591.54c-.78-.4-1.55-.81-2.32-1.23a123.36,123.36,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63,63,0,0,1-7-14.46,59.84,59.84,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89A94.48,94.48,0,0,1,556,484.41c3.4-4.18,7.05-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31A57.19,57.19,0,0,0,611,425.1a33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.86,23.86,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.78-.65c-2.1-1.71-4.29-3.32-6.53-4.85a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85q-8-1.39-16-2.58t-16.06-2.23q-16.09-2-32.26-3.22t-32.4-1.42c-10.8-.14-21.62.07-32.41.8-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.74-7.55-11.76-11.16-8.07-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,11.12,11.12,0,0,1,0-2l0-.25,0-.25,0-.24c0-.09,0-.17,0-.25a8,8,0,0,1,.3-.95,7.19,7.19,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.5-1.05,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,5.79,5.79,0,0,0,1.33-1.55,3.63,3.63,0,0,0,.38-1,3.57,3.57,0,0,0,.05-1,9.1,9.1,0,0,0-1.37-3.82,16.53,16.53,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.66-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.61.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.35a53.83,53.83,0,0,1,6.92,4.17,28.37,28.37,0,0,1,3.11,2.58,16.18,16.18,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1,0,1,3.15,3.15,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,16.63,16.63,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2.05,14.8,14.8,0,0,0,1.07,3.92,26.11,26.11,0,0,0,1.85,3.61,50.63,50.63,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.56,5.91,3.84,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.32l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.72,11.16,3,3,5.86,6.19,8.54,9.5-2.27.38-4.53.78-6.79,1.23a125.32,125.32,0,0,0-15.69,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.09,34.09,0,0,0-6.2,5.3,25.07,25.07,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.32-.21.64-.31,1s-.15.68-.2,1a9.7,9.7,0,0,0,.4,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.12,2.7.22,4.06.23h1c.34,0,.68,0,1,0l1,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,15.06,15.06,0,0,0,1.36-1.52,15.92,15.92,0,0,0,1.17-1.69,15.3,15.3,0,0,0,1.61-3.77,17.39,17.39,0,0,0,.6-4,21.31,21.31,0,0,0-.26-4.07,33.2,33.2,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22,80.08,80.08,0,0,0-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.24q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s4.95,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.65,1.51,1.33c1,.9,2,1.83,2.88,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.6,20.6,0,0,1,.86,3.87,21.33,21.33,0,0,1-.55,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96,96,0,0,0-9.24,13.37,55.71,55.71,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.68-.09,1l-.07,1c0,.68,0,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a59.76,59.76,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63A78.58,78.58,0,0,0,559,571.8a100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59c.79.43,1.59.84,2.39,1.26ZM366,355.41a79.26,79.26,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.57,33.57,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.94,14.66,14.66,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,15.71,15.71,0,0,1-1.33,1.49,23,23,0,0,1-3.09,2.56,28.54,28.54,0,0,1-3.43,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.69-.11-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a39.45,39.45,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,6.52,6.52,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.87a24.78,24.78,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,73.53,73.53,0,0,1,7.5-3,127.21,127.21,0,0,1,15.62-4.1q3.54-.69,7.09-1.27C364.87,354,365.43,354.67,366,355.41Z"/><polygon class="cls-3" points="363.89 352.71 364.31 352.65 364.71 353.17 364.28 353.23 363.89 352.71"/></g><g class="cls-1"><path class="cls-39" d="M586.24,595.57,584,594.4a123.44,123.44,0,0,1-13.68-8.58,100.44,100.44,0,0,1-12.29-10.44,78.06,78.06,0,0,1-10.14-12.51,62.84,62.84,0,0,1-7-14.46,59.84,59.84,0,0,1-2-7.8,57.77,57.77,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89,94.48,94.48,0,0,1,9.17-13.25c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.79-2,3.52-4.12,5.14-6.31a56.4,56.4,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.4,22.4,0,0,0,.57-8.2,21.55,21.55,0,0,0-.91-4,22.56,22.56,0,0,0-1.65-3.77,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.28-7.41-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.1-2-32.26-3.22t-32.4-1.43c-10.8-.14-21.62.08-32.41.8-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.68-3.79-3.87-7.74-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.79L304.88,305c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58A14.92,14.92,0,0,1,267.1,264a11.12,11.12,0,0,1,0-2l0-.25,0-.24,0-.25c0-.08,0-.17,0-.25a5.14,5.14,0,0,1,.3-.94,7.05,7.05,0,0,1,1-1.7,11.21,11.21,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15A5.82,5.82,0,0,0,293,244.6a3.63,3.63,0,0,0,.38-1,3.24,3.24,0,0,0,0-1,9,9,0,0,0-1.36-3.82,16.46,16.46,0,0,0-2.59-3.12,27.47,27.47,0,0,0-3.12-2.59,53.84,53.84,0,0,0-7-4.17c-2.4-1.23-4.87-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.09,0a.93.93,0,0,1,.2,0l.25,0,.49.07c.34.05.67.11,1,.18.66.13,1.32.28,2,.44,1.31.31,2.61.65,3.91,1,2.61.72,5.19,1.52,7.75,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a52.65,52.65,0,0,1,6.92,4.16,28.37,28.37,0,0,1,3.11,2.58,16.5,16.5,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.3,3.3,0,0,1-.05,1,3,3,0,0,1-.36.91,5.67,5.67,0,0,1-1.3,1.51,17.07,17.07,0,0,1-3.41,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a22.4,22.4,0,0,0-3.41,2.22,11.6,11.6,0,0,0-1.45,1.44,6.74,6.74,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1c0,.09,0,.17-.05.25l0,.26,0,.25,0,.26a9.94,9.94,0,0,0,0,2,14.8,14.8,0,0,0,1.07,3.92,25.7,25.7,0,0,0,1.85,3.62,52.06,52.06,0,0,0,4.84,6.51c1.77,2,3.63,4,5.56,5.91,3.84,3.8,7.88,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.53,9.5-2.26.38-4.52.78-6.78,1.23a127.07,127.07,0,0,0-15.69,4.13,76.56,76.56,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.2,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.33-.21.64-.31,1s-.15.68-.2,1a9.7,9.7,0,0,0,.4,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.11,1.35.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0,1-.07a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.43,24.43,0,0,0,3.14-2.61,16.35,16.35,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.3,15.3,0,0,0,1.61-3.77,17.34,17.34,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.36,21.36,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23,78.31,78.31,0,0,0-4.57-6.7c-.51-.68-1-1.35-1.56-2,8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5,1.89,7.53,2.92s5,2.14,7.37,3.32a113.24,113.24,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.66c.51.43,1,.88,1.51,1.32,1,.9,2,1.83,2.88,2.81a30.84,30.84,0,0,1,4.71,6.42,21.81,21.81,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.4,21.4,0,0,1-.55,7.88,33.22,33.22,0,0,1-3,7.39,56,56,0,0,1-4.36,6.76c-1.59,2.15-3.31,4.22-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a97.08,97.08,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.8,68.8,0,0,0-1.23,8.06c0,.34-.05.68-.08,1l-.07,1c0,.68,0,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.76,59.76,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5A124.26,124.26,0,0,0,583.71,595c.76.41,1.53.81,2.3,1.21ZM364.51,359.49c1.62,2.15,3.14,4.38,4.54,6.68a55.79,55.79,0,0,1,3.69,7.17,33.57,33.57,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.95,14.59,14.59,0,0,1-1.57,3.65,13.36,13.36,0,0,1-1.13,1.65,17.09,17.09,0,0,1-1.33,1.48,23.8,23.8,0,0,1-3.09,2.57,29.81,29.81,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0h-2c-1.34,0-2.69-.11-4-.24-.67-.08-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.53-3.93-.88a39.48,39.48,0,0,1-7.53-2.83,27.15,27.15,0,0,1-6.59-4.54,18.63,18.63,0,0,1-2.58-3,13.4,13.4,0,0,1-1.73-3.57,9.06,9.06,0,0,1-.37-3.9,6.52,6.52,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.86a24.63,24.63,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,52.45,52.45,0,0,1,7-3.91,74.69,74.69,0,0,1,7.51-3,127.21,127.21,0,0,1,15.62-4.1q3.54-.69,7.09-1.26C363.4,358,364,358.76,364.51,359.49Z"/><polygon class="cls-3" points="362.42 356.8 362.84 356.73 363.24 357.25 362.81 357.31 362.42 356.8"/></g><g class="cls-1"><path class="cls-40" d="M584.54,600l-2.23-1.18a125,125,0,0,1-13.69-8.57,100.29,100.29,0,0,1-12.28-10.45,78.43,78.43,0,0,1-10.14-12.5,63.36,63.36,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.2,55.2,0,0,1,5.91-14.9,93.81,93.81,0,0,1,9.17-13.24c3.39-4.18,7-8.15,10.82-12,7.54-7.72,15.55-15,23.32-22.48,3.88-3.76,7.71-7.6,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a58,58,0,0,0,4.41-6.86,33.43,33.43,0,0,0,3-7.61,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4A22.66,22.66,0,0,0,608.9,410a31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.65-.78-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.29,111.29,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16-2.23q-16.1-2-32.27-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.78-2.73-3.39-5.67-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.31s-8.16-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,15,15,0,0,1-1.06-3.87,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5.24,5.24,0,0,1,.3-1,7.25,7.25,0,0,1,1-1.7,10.51,10.51,0,0,1,1.43-1.4,20,20,0,0,1,3.37-2.21c1.18-.64,2.41-1.2,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,5.85,5.85,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,27.76,27.76,0,0,0-3.13-2.59,54.18,54.18,0,0,0-7-4.17c-2.4-1.22-4.88-2.32-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1l-2-.44-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.34.05.67.12,1,.18.66.14,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.6.73,5.19,1.52,7.74,2.38s5.1,1.8,7.6,2.82,5,2.12,7.36,3.35a52.83,52.83,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.25,16.25,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1,0,1,3.15,3.15,0,0,1-.36.92,5.63,5.63,0,0,1-1.3,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.75a20.56,20.56,0,0,0-3.41,2.22,10.31,10.31,0,0,0-1.45,1.43,7.09,7.09,0,0,0-1.07,1.74,5.06,5.06,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.25,0,.26a9.93,9.93,0,0,0,0,2,15.24,15.24,0,0,0,1.06,3.93,27.36,27.36,0,0,0,1.86,3.61,51.33,51.33,0,0,0,4.84,6.51c1.77,2,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.79,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5q-3.39.56-6.78,1.23a125.32,125.32,0,0,0-15.69,4.13,75.52,75.52,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.27-.74,1.91-.11.33-.22.65-.31,1s-.15.68-.2,1a9.84,9.84,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.56,27.56,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18,1,.15c.67.11,1.34.18,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68,0,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23.63,23.63,0,0,0,3.14-2.61,19.8,19.8,0,0,0,1.36-1.53,14.11,14.11,0,0,0,1.17-1.69,15.62,15.62,0,0,0,1.61-3.76,17.39,17.39,0,0,0,.6-4.05,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.36,1.45,21.51,1.89,32.22,3.25c5.35.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.22,4,31.63,6.87,5.2,1.42,10.35,3,15.42,4.84q3.81,1.36,7.54,2.91c2.49,1,5,2.14,7.37,3.32a112,112,0,0,1,14,8.05c2.22,1.52,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.51,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.37,21.37,0,0,1-.55,7.88,32.86,32.86,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.34,22.51-3.77,3.87-7.44,7.86-10.86,12.06a95.36,95.36,0,0,0-9.25,13.38,56.3,56.3,0,0,0-6,15.13,70.94,70.94,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.4,59.4,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,63.6,63.6,0,0,0,7.09,14.63,78.15,78.15,0,0,0,10.26,12.6,100.93,100.93,0,0,0,12.39,10.51A123.89,123.89,0,0,0,582,599.35c.76.41,1.54.81,2.31,1.21ZM362.8,363.86c1.62,2.15,3.14,4.38,4.54,6.68a54.6,54.6,0,0,1,3.68,7.18,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,23,23,0,0,1-3.08,2.56,31.37,31.37,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34c-.33,0-.66.05-1,.06l-1,0c-.33,0-.67,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.67-.07-1.34-.14-2-.25-.34-.05-.67-.09-1-.15l-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.52,27.52,0,0,1-6.59-4.54,19.13,19.13,0,0,1-2.58-3,13.25,13.25,0,0,1-1.73-3.57,9,9,0,0,1-.37-3.89,7.4,7.4,0,0,1,.18-1c.09-.32.2-.64.3-.95.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.55,125.55,0,0,1,354,363q3.54-.7,7.08-1.27C361.69,362.41,362.25,363.13,362.8,363.86Z"/><polygon class="cls-3" points="360.71 361.17 361.13 361.1 361.52 361.62 361.1 361.69 360.71 361.17"/></g><g class="cls-1"><path class="cls-41" d="M582.91,604.18c-.76-.39-1.51-.78-2.26-1.19A125,125,0,0,1,567,594.42,100.29,100.29,0,0,1,554.68,584a78,78,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.2,55.2,0,0,1,5.91-14.9,93.81,93.81,0,0,1,9.17-13.24c3.39-4.18,7-8.15,10.82-12,7.54-7.72,15.55-15,23.32-22.48,3.88-3.76,7.71-7.6,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a58,58,0,0,0,4.41-6.86,33.43,33.43,0,0,0,3-7.61,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,22.66,22.66,0,0,0-1.65-3.78,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.65-.79-.65c-2.1-1.72-4.28-3.33-6.52-4.85a111.29,111.29,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.05-2.23q-16.1-2-32.27-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.78-2.73-3.39-5.67-6.59-8.71-9.69C347,351.78,343,348.08,339,344.48c-8.06-7.2-16.45-14-24.87-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.31s-8.16-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,15,15,0,0,1-1.06-3.87,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5.24,5.24,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.43-1.41,20,20,0,0,1,3.37-2.21c1.18-.64,2.41-1.2,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,5.85,5.85,0,0,0,1.33-1.55,3.19,3.19,0,0,0,.37-1,3,3,0,0,0,0-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,28.88,28.88,0,0,0-3.13-2.59A54.18,54.18,0,0,0,276,237.5c-2.41-1.22-4.88-2.32-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.15-1.31-.3-2-.43l-1-.19-.51-.07h-.25c-.09,0-.16-.05-.29.06l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.34.05.67.12,1,.18.66.14,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.6.73,5.19,1.52,7.74,2.38s5.1,1.8,7.6,2.82,5,2.12,7.36,3.35a52.83,52.83,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.63,16.63,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.15,3.15,0,0,1-.36.92,5.63,5.63,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.2.59-2.45,1.12-3.69,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.75a20.15,20.15,0,0,0-3.41,2.22A10.31,10.31,0,0,0,265,266.8a7.09,7.09,0,0,0-1.07,1.74,5.06,5.06,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.24,15.24,0,0,0,1.06,3.93,27.36,27.36,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L314,323.93c8.41,6.78,16.79,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5q-3.39.56-6.78,1.23a125.32,125.32,0,0,0-15.69,4.13,75.52,75.52,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.27-.74,1.91-.11.33-.22.65-.31,1s-.15.68-.2,1a9.84,9.84,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.56,27.56,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18,1,.15c.67.11,1.34.18,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68-.05,1-.07a42,42,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,22.92,22.92,0,0,0,3.13-2.61,16.61,16.61,0,0,0,1.37-1.53,14.11,14.11,0,0,0,1.17-1.69,15.62,15.62,0,0,0,1.61-3.76,17.39,17.39,0,0,0,.6-4,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.52,1.89,32.23,3.25c5.35.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.22,4,31.63,6.87,5.2,1.42,10.35,3,15.42,4.84q3.81,1.37,7.54,2.92c2.49,1,5,2.13,7.36,3.31a110.62,110.62,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.76.65c.52.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.16,21.16,0,0,1-.56,7.88,32.37,32.37,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.34,22.51-3.78,3.87-7.44,7.86-10.86,12.06a95.36,95.36,0,0,0-9.25,13.38,55.91,55.91,0,0,0-6,15.14,70.43,70.43,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.4,59.4,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,63.6,63.6,0,0,0,7.09,14.63,78.15,78.15,0,0,0,10.26,12.6A100.93,100.93,0,0,0,566.56,595a123.89,123.89,0,0,0,13.78,8.59l2.33,1.22ZM361.14,368.08c1.62,2.15,3.14,4.38,4.54,6.68a54.6,54.6,0,0,1,3.68,7.18,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,23.64,23.64,0,0,1-3.08,2.56,29.89,29.89,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34l-1,.06-1,0c-.33,0-.67,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.67-.07-1.34-.14-2-.25-.34,0-.67-.09-1-.15l-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.32,27.32,0,0,1-6.59-4.54,19.73,19.73,0,0,1-2.59-3,13.56,13.56,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.09-.31.2-.64.3-.95.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.55,125.55,0,0,1,15.63-4.09q3.54-.71,7.08-1.27C360,366.63,360.59,367.35,361.14,368.08Z"/><polygon class="cls-3" points="359.05 365.39 359.47 365.32 359.86 365.84 359.44 365.91 359.05 365.39"/></g><g class="cls-1"><path class="cls-42" d="M581.29,608.35,579,607.14a123.92,123.92,0,0,1-13.68-8.57A99.64,99.64,0,0,1,553,588.12a78.06,78.06,0,0,1-10.14-12.51,62.84,62.84,0,0,1-7-14.46,60.1,60.1,0,0,1-2-7.79,58.11,58.11,0,0,1-.88-8,63.13,63.13,0,0,1,1.42-16,55.39,55.39,0,0,1,5.91-14.9,94.48,94.48,0,0,1,9.17-13.25c3.39-4.17,7.05-8.14,10.82-12,7.54-7.71,15.55-15,23.32-22.47,3.89-3.77,7.71-7.6,11.3-11.67,1.79-2,3.52-4.12,5.14-6.3a57.31,57.31,0,0,0,4.41-6.87,33.17,33.17,0,0,0,3-7.6,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,22.66,22.66,0,0,0-1.65-3.78,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a112.45,112.45,0,0,0-14.1-8.08c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.84-21.05-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.57s-10.69-1.56-16-2.23q-16.1-2-32.27-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.68-3.79-3.86-7.74-7.56-11.76-11.16-8.07-7.2-16.46-14-24.88-20.79L299.86,317.7c-4.21-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,25.36,25.36,0,0,1-1.85-3.59,14.85,14.85,0,0,1-1.06-3.86,10.3,10.3,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a5,5,0,0,1,.3-1,7.05,7.05,0,0,1,1-1.7,10.51,10.51,0,0,1,1.43-1.4,20,20,0,0,1,3.37-2.21c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,5.85,5.85,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,28.57,28.57,0,0,0-3.12-2.59,53.84,53.84,0,0,0-7-4.17c-2.4-1.23-4.87-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.3-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.09,0a.93.93,0,0,1,.2,0l.24,0,.5.07c.34,0,.67.11,1,.18.66.13,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.61.72,5.19,1.52,7.74,2.38s5.1,1.8,7.6,2.82,5,2.12,7.37,3.35a53.32,53.32,0,0,1,6.92,4.16,30.84,30.84,0,0,1,3.11,2.58,16.25,16.25,0,0,1,2.56,3.11,8.82,8.82,0,0,1,1.34,3.74,3.3,3.3,0,0,1-.05,1,3.15,3.15,0,0,1-.36.92,5.78,5.78,0,0,1-1.3,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.74a21.27,21.27,0,0,0-3.41,2.23,10.88,10.88,0,0,0-1.45,1.43,7.09,7.09,0,0,0-1.07,1.74,5.06,5.06,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.25,0,.26a9.94,9.94,0,0,0,0,2,15.17,15.17,0,0,0,1.06,3.92,26.87,26.87,0,0,0,1.86,3.62,51.33,51.33,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.79,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3,5.86,6.2,8.53,9.51q-3.39.56-6.78,1.22a128.87,128.87,0,0,0-15.69,4.13,78.07,78.07,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.27-.74,1.91-.11.33-.21.65-.31,1s-.15.68-.2,1a9.85,9.85,0,0,0,.39,4.11,14.42,14.42,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.56,27.56,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.11,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68,0,1-.07a42.69,42.69,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23.63,23.63,0,0,0,3.14-2.61,17.91,17.91,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.53,15.53,0,0,0,1.61-3.77,17.34,17.34,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,54.67,54.67,0,0,0-3.72-7.22A80.85,80.85,0,0,0,359.8,372q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.72,21.57-.92,32.36-.76s21.59.66,32.36,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.66,16,2.6c10.63,1.86,21.22,4,31.63,6.87,5.2,1.42,10.35,3,15.43,4.84,2.53.9,5,1.88,7.53,2.91s5,2.14,7.37,3.32a112,112,0,0,1,14,8.05c2.22,1.51,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.51,1.33,1,.89,2,1.82,2.88,2.8a31.11,31.11,0,0,1,4.71,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.38,21.38,0,0,1-.55,7.88,33.49,33.49,0,0,1-3,7.4,56.67,56.67,0,0,1-4.36,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a95.36,95.36,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.8,68.8,0,0,0-1.23,8.06c0,.34,0,.68-.08,1l-.07,1c0,.67,0,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a59.58,59.58,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89A64,64,0,0,0,542.26,576a78.58,78.58,0,0,0,10.26,12.6,100,100,0,0,0,12.39,10.5,124.9,124.9,0,0,0,13.78,8.6c.78.42,1.57.83,2.37,1.24ZM359.49,372.23c1.62,2.15,3.14,4.38,4.54,6.68a55.27,55.27,0,0,1,3.69,7.18,33.49,33.49,0,0,1,2.25,7.7,19,19,0,0,1-.35,7.95,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,18.85,18.85,0,0,1-1.33,1.49,23.73,23.73,0,0,1-3.09,2.56,31.37,31.37,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.67-.08-1.34-.14-2-.25-.34-.05-.67-.09-1-.15l-1-.17c-1.33-.24-2.64-.54-3.93-.89a39.23,39.23,0,0,1-7.53-2.83,27.2,27.2,0,0,1-6.59-4.53,19.13,19.13,0,0,1-2.58-3,13.4,13.4,0,0,1-1.73-3.57,9,9,0,0,1-.37-3.89,6,6,0,0,1,.19-1c.08-.32.19-.64.29-.95.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,78,78,0,0,1,7.5-3,126,126,0,0,1,15.63-4.09q3.54-.7,7.08-1.27C358.38,370.77,358.94,371.5,359.49,372.23Z"/><polygon class="cls-3" points="357.4 369.54 357.82 369.47 358.21 369.99 357.79 370.06 357.4 369.54"/></g><g class="cls-1"><path class="cls-43" d="M579.59,612.73c-.77-.4-1.54-.8-2.3-1.22a125,125,0,0,1-13.69-8.57,100.29,100.29,0,0,1-12.28-10.45A77.55,77.55,0,0,1,541.18,580a62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.2,55.2,0,0,1,5.91-14.9,93.81,93.81,0,0,1,9.17-13.24c3.39-4.18,7-8.15,10.82-12,7.54-7.72,15.55-15,23.32-22.48,3.88-3.76,7.71-7.6,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a58,58,0,0,0,4.41-6.86,33.24,33.24,0,0,0,3-7.61,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,23.51,23.51,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.33l-.78-.66-.79-.65c-2.1-1.72-4.28-3.33-6.52-4.85a111.29,111.29,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.57-16.69,1.44-24.95,2.78-2.73-3.38-5.67-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.3s-8.16-7.09-12-10.88c-1.92-1.89-3.78-3.85-5.55-5.89a49.85,49.85,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5.24,5.24,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10.59,10.59,0,0,1,1.43-1.41,20,20,0,0,1,3.37-2.21c1.18-.64,2.4-1.2,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.15,17.15,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.54,3.36,3.36,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,28.88,28.88,0,0,0-3.13-2.59,53,53,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.15-1.31-.3-2-.43l-1-.19c-.17,0-.34-.05-.51-.06l-.25,0c-.09,0-.16,0-.29.06l.08,0h.2l.25,0,.5.07,1,.18,2,.44c1.32.31,2.62.66,3.92,1,2.6.72,5.19,1.51,7.74,2.38s5.1,1.79,7.6,2.81,5,2.12,7.36,3.35a52.83,52.83,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.63,16.63,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.45,3.45,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.2.6-2.45,1.12-3.69,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.15,20.15,0,0,0-3.41,2.22,10.31,10.31,0,0,0-1.45,1.43,7.09,7.09,0,0,0-1.07,1.74,4.94,4.94,0,0,0-.31,1,1.84,1.84,0,0,0,0,.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.24,15.24,0,0,0,1.06,3.93,26.75,26.75,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.79,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.86,6.19,8.53,9.5-2.26.37-4.53.78-6.78,1.23a125.32,125.32,0,0,0-15.69,4.13,75.52,75.52,0,0,0-7.55,3,52.64,52.64,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.53,1.26-.74,1.91-.11.32-.22.64-.31,1s-.15.68-.2,1a9.84,9.84,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.63.66,4,.9l1,.17,1,.15c.67.11,1.34.18,2,.25,1.35.13,2.7.23,4.06.24h1l1,0,1,0c.34,0,.68,0,1-.07a42,42,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,32.73,32.73,0,0,0,3.48-2.13,22.92,22.92,0,0,0,3.13-2.61,16.61,16.61,0,0,0,1.37-1.53,15.37,15.37,0,0,0,1.17-1.69,15.62,15.62,0,0,0,1.61-3.76,17.07,17.07,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.94,55.94,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.52,1.9,32.23,3.25q8,1,16,2.25c5.33.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.87,5.21,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.92c2.49,1,5,2.13,7.36,3.31a111.33,111.33,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.76.65c.52.43,1,.88,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.06,31.06,0,0,1,4.72,6.42,23.47,23.47,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.16,21.16,0,0,1-.56,7.88,32.37,32.37,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.09,6.25-3.57,4-7.38,7.85-11.25,11.6C573.6,478,565.58,485.25,558,493c-3.78,3.87-7.44,7.86-10.86,12.07a94.69,94.69,0,0,0-9.25,13.37,55.91,55.91,0,0,0-6,15.14,70.77,70.77,0,0,0-1.22,8c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a58.44,58.44,0,0,0,2.94,16,63.53,63.53,0,0,0,7.09,14.62A78.22,78.22,0,0,0,550.81,593a101.74,101.74,0,0,0,12.39,10.5A123.89,123.89,0,0,0,577,612.09c.79.42,1.58.84,2.38,1.25ZM357.78,376.6c1.62,2.16,3.14,4.38,4.54,6.69a53.87,53.87,0,0,1,3.68,7.17,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,22.86,22.86,0,0,1-3.08,2.56,29.89,29.89,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34c-.33,0-.67.06-1,.07l-1,0h-2c-1.35,0-2.69-.11-4-.23-.66-.08-1.33-.15-2-.26l-1-.15-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.32,27.32,0,0,1-6.59-4.54,19.27,19.27,0,0,1-2.59-3,13.65,13.65,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9c0-.32.11-.65.19-1s.2-.64.3-.95c.21-.63.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.55,125.55,0,0,1,349,375.7c2.35-.47,4.72-.89,7.08-1.27C356.66,375.15,357.23,375.87,357.78,376.6Z"/><polygon class="cls-3" points="355.69 373.91 356.11 373.84 356.5 374.37 356.08 374.43 355.69 373.91"/></g><g class="cls-1"><path class="cls-44" d="M578,617c-.77-.4-1.55-.81-2.32-1.23a125,125,0,0,1-13.69-8.57,100.29,100.29,0,0,1-12.28-10.45,77,77,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.2,55.2,0,0,1,5.91-14.9,94.58,94.58,0,0,1,9.16-13.24c3.4-4.18,7.06-8.15,10.82-12,7.55-7.72,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.24,33.24,0,0,0,3-7.61,21.94,21.94,0,0,0,.57-8.19,20.6,20.6,0,0,0-.9-4,23.51,23.51,0,0,0-1.65-3.78,32.45,32.45,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.33l-.78-.66-.79-.65c-2.1-1.72-4.28-3.33-6.52-4.85a111.29,111.29,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.82-10.27-3.42-15.49-4.84-10.44-2.83-21-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.57-16.69,1.44-25,2.78-2.73-3.38-5.67-6.59-8.71-9.69C342,364.52,338,360.82,334,357.22c-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.8-12.49-10.3s-8.16-7.09-12-10.88c-1.92-1.89-3.79-3.85-5.55-5.89a49.85,49.85,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.56,9.56,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.43-1.41,20.3,20.3,0,0,1,3.36-2.21c1.19-.63,2.41-1.2,3.65-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.15,17.15,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.54,3.36,3.36,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,29.88,29.88,0,0,0-3.13-2.59,53,53,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.15-1.31-.3-2-.43l-1-.18a4.46,4.46,0,0,0-.51-.07l-.25,0c-.09,0-.17,0-.29.07l.08,0h.2l.25,0,.5.07,1,.18,2,.44c1.32.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.1,1.79,7.6,2.81s5,2.12,7.36,3.35a52.83,52.83,0,0,1,6.93,4.17A29.46,29.46,0,0,1,281,257.1a16.63,16.63,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.45,3.45,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.2.6-2.45,1.12-3.7,1.63-2.49,1-5,2-7.51,3-1.24.54-2.47,1.11-3.66,1.75a20.15,20.15,0,0,0-3.41,2.22,10.31,10.31,0,0,0-1.45,1.43,7.44,7.44,0,0,0-1.08,1.74,5.65,5.65,0,0,0-.3,1,2.21,2.21,0,0,0-.05.25l0,.25,0,.26,0,.25a10.68,10.68,0,0,0,.05,2,15.24,15.24,0,0,0,1.06,3.93,26.75,26.75,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.79,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.86,6.19,8.53,9.5-2.26.37-4.53.78-6.78,1.23a125.32,125.32,0,0,0-15.69,4.13,75.52,75.52,0,0,0-7.55,3,52.64,52.64,0,0,0-7.11,4,34,34,0,0,0-6.19,5.29,25.12,25.12,0,0,0-4.45,6.83,18.39,18.39,0,0,0-.74,1.91c-.11.32-.22.64-.31,1a9.18,9.18,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.33,19.33,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.36,2.63.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.34.18,2,.25,1.35.13,2.7.23,4.06.24h1l1,0,1,0c.34,0,.68,0,1-.07a42,42,0,0,0,8-1.36,38.08,38.08,0,0,0,7.57-2.95,31.89,31.89,0,0,0,3.49-2.13,22.92,22.92,0,0,0,3.13-2.61,16.61,16.61,0,0,0,1.37-1.53,15.37,15.37,0,0,0,1.17-1.69,15.62,15.62,0,0,0,1.61-3.76,17.07,17.07,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.47,21.47,0,0,0-.26-4.08,33.6,33.6,0,0,0-2.29-7.8A55.94,55.94,0,0,0,361,387.3a80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.52,1.9,32.23,3.25q8,1,16,2.25c5.33.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.87,5.21,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.92c2.49,1,5,2.13,7.36,3.31a111.33,111.33,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.76.65c.52.43,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.06,31.06,0,0,1,4.72,6.42,23.47,23.47,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.16,21.16,0,0,1-.56,7.88,32.18,32.18,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.09,6.25-3.57,4-7.38,7.85-11.25,11.6-7.75,7.51-15.77,14.77-23.34,22.51-3.78,3.87-7.45,7.86-10.86,12.07a94.69,94.69,0,0,0-9.25,13.37,55.91,55.91,0,0,0-6,15.14,70.6,70.6,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a58.44,58.44,0,0,0,2.94,16,63.53,63.53,0,0,0,7.09,14.62,78.22,78.22,0,0,0,10.26,12.61,101.74,101.74,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59c.79.43,1.6.85,2.4,1.26ZM356.12,380.82c1.62,2.16,3.14,4.38,4.54,6.69a53.87,53.87,0,0,1,3.68,7.17,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,22.86,22.86,0,0,1-3.08,2.56,30.78,30.78,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34c-.33,0-.67.06-1,.07l-1,0h-2c-1.35,0-2.69-.11-4-.23-.66-.08-1.33-.15-2-.25l-1-.16-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.32,27.32,0,0,1-6.59-4.54,19.27,19.27,0,0,1-2.59-3,13.65,13.65,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9c.05-.32.11-.65.19-1s.2-.64.3-.95c.21-.63.46-1.26.72-1.87a24.66,24.66,0,0,1,4.38-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.55,125.55,0,0,1,15.63-4.09c2.35-.47,4.72-.89,7.08-1.27C355,379.37,355.57,380.09,356.12,380.82Z"/><polygon class="cls-3" points="354.03 378.13 354.45 378.06 354.84 378.58 354.42 378.65 354.03 378.13"/></g><g class="cls-1"><path class="cls-45" d="M576.34,621.14c-.79-.4-1.56-.81-2.34-1.23a124.94,124.94,0,0,1-13.68-8.58A99.64,99.64,0,0,1,548,600.88a77.55,77.55,0,0,1-10.14-12.5,63,63,0,0,1-7-14.46,59.84,59.84,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89A94.48,94.48,0,0,1,544.54,514c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.55-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.12,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.36,23.36,0,0,0-1.64-3.77,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.1-2-32.26-3.22t-32.4-1.43c-10.8-.14-21.62.07-32.41.8-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.74-7.55-11.76-11.16-8.07-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,11.12,11.12,0,0,1,0-2l0-.25,0-.25,0-.24c0-.08,0-.17,0-.25a6.05,6.05,0,0,1,.3-.94,7.05,7.05,0,0,1,1-1.7,11.21,11.21,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.5-1.05,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,5.64,5.64,0,0,0,1.33-1.55,3.63,3.63,0,0,0,.38-1,3.57,3.57,0,0,0,.05-1A9.15,9.15,0,0,0,282,264.3a16.53,16.53,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.07-.67-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07q.5.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.61.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a52.65,52.65,0,0,1,6.92,4.16,28.37,28.37,0,0,1,3.11,2.58,16.18,16.18,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3,3,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,16.63,16.63,0,0,1-3.41,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.44,6.74,6.74,0,0,0-1.07,1.74,5.58,5.58,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a9.94,9.94,0,0,0,0,2,14.8,14.8,0,0,0,1.07,3.92A26.81,26.81,0,0,0,259.8,297a52.06,52.06,0,0,0,4.84,6.51c1.77,2,3.63,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.61,7.95,7.3,11.72,11.16,3,3.05,5.86,6.19,8.54,9.5-2.27.38-4.53.78-6.79,1.23a127.07,127.07,0,0,0-15.69,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.09,34.09,0,0,0-6.2,5.3,25.07,25.07,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.33-.21.64-.31,1s-.15.68-.2,1a9.7,9.7,0,0,0,.4,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0,1-.06a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.5,24.5,0,0,0,3.14-2.62,16.48,16.48,0,0,0,2.53-3.21,15.3,15.3,0,0,0,1.61-3.77,17.39,17.39,0,0,0,.6-4.05,21.31,21.31,0,0,0-.26-4.07,33.2,33.2,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.43,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5,1.88,7.53,2.92s5,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.66c.51.43,1,.88,1.51,1.32,1,.9,2,1.83,2.88,2.8a31.58,31.58,0,0,1,4.72,6.43,22.62,22.62,0,0,1,1.58,3.64,20.33,20.33,0,0,1,.86,3.86,21.33,21.33,0,0,1-.55,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96.48,96.48,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.8,68.8,0,0,0-1.23,8.06c0,.34,0,.68-.08,1l-.07,1c0,.68,0,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a59.76,59.76,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,125.76,125.76,0,0,0,13.78,8.59l2.41,1.27ZM354.49,385a79.26,79.26,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.57,33.57,0,0,1,2.25,7.71,19,19,0,0,1-.35,7.95,14.75,14.75,0,0,1-1.57,3.65,14.16,14.16,0,0,1-1.13,1.65,15.59,15.59,0,0,1-1.33,1.48,23.8,23.8,0,0,1-3.09,2.57,29.81,29.81,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0h-2c-1.34,0-2.69-.11-4-.24-.67-.08-1.34-.15-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.89a39.45,39.45,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.19,13.19,0,0,1-1.73-3.56,9.22,9.22,0,0,1-.37-3.9,6.52,6.52,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.86a24.47,24.47,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,51,51,0,0,1,7-3.92,73.53,73.53,0,0,1,7.5-3,127.21,127.21,0,0,1,15.62-4.1q3.54-.69,7.09-1.27C353.38,383.54,353.94,384.26,354.49,385Z"/><polygon class="cls-3" points="352.4 382.31 352.82 382.24 353.22 382.76 352.79 382.82 352.4 382.31"/></g><g class="cls-1"><path class="cls-46" d="M574.64,625.52l-2.35-1.24a123.92,123.92,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,78.06,78.06,0,0,1-10.14-12.51,62.84,62.84,0,0,1-7-14.46,57.3,57.3,0,0,1-2.87-15.78,63.13,63.13,0,0,1,1.42-16,55.07,55.07,0,0,1,5.91-14.9,94.48,94.48,0,0,1,9.17-13.25c3.39-4.17,7-8.14,10.82-12,7.54-7.71,15.55-14.95,23.32-22.47,3.89-3.77,7.71-7.6,11.3-11.67,1.79-2,3.52-4.12,5.14-6.3a57.31,57.31,0,0,0,4.41-6.87,33.17,33.17,0,0,0,3-7.6,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,22.66,22.66,0,0,0-1.65-3.78,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a112.45,112.45,0,0,0-14.1-8.08c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.84-21-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.57s-10.69-1.56-16.05-2.23q-16.09-2-32.27-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,24.36,24.36,0,0,1-1.85-3.59,14.85,14.85,0,0,1-1.06-3.86,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5,5,0,0,1,.3-.95,7.05,7.05,0,0,1,1-1.7,11.21,11.21,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,5.85,5.85,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,27.76,27.76,0,0,0-3.13-2.59,53.06,53.06,0,0,0-6.95-4.17c-2.4-1.23-4.88-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.3-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.08,0a1.1,1.1,0,0,1,.21,0l.24,0,.5.07c.34.05.67.11,1,.18.66.13,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.61.72,5.19,1.52,7.74,2.38s5.1,1.8,7.6,2.82,5,2.12,7.36,3.35a52.77,52.77,0,0,1,6.93,4.16,30.84,30.84,0,0,1,3.11,2.58,16.25,16.25,0,0,1,2.56,3.11,8.82,8.82,0,0,1,1.34,3.74,3.3,3.3,0,0,1-.05,1,3.15,3.15,0,0,1-.36.92,5.78,5.78,0,0,1-1.3,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.74a21.27,21.27,0,0,0-3.41,2.23,10.88,10.88,0,0,0-1.45,1.43,6.91,6.91,0,0,0-1.07,1.74,5.06,5.06,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.25,0,.26a9.94,9.94,0,0,0,0,2,15.17,15.17,0,0,0,1.06,3.92,26.87,26.87,0,0,0,1.86,3.62,51.33,51.33,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.79,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.86,6.2,8.53,9.51q-3.39.56-6.78,1.22A128.87,128.87,0,0,0,328.21,392a78.07,78.07,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.27-.74,1.91-.11.33-.22.65-.31,1s-.15.68-.2,1a9.85,9.85,0,0,0,.39,4.11,14.42,14.42,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.56,27.56,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.11,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68-.05,1-.07a42.69,42.69,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,23.63,23.63,0,0,0,3.14-2.61,19.8,19.8,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.53,15.53,0,0,0,1.61-3.77,17.34,17.34,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,54.67,54.67,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.72,21.57-.92,32.36-.76s21.59.66,32.36,1.45,21.51,1.89,32.22,3.25c5.35.68,10.7,1.44,16,2.24s10.67,1.66,16,2.6c10.63,1.86,21.22,4,31.63,6.87,5.2,1.42,10.35,3,15.43,4.84,2.53.9,5,1.88,7.53,2.91s5,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.51,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.51,1.33,1,.89,2,1.82,2.88,2.8a31.11,31.11,0,0,1,4.71,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.38,21.38,0,0,1-.55,7.88,33,33,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61C568.6,490.76,560.58,498,553,505.76c-3.78,3.87-7.45,7.86-10.87,12.06a95.36,95.36,0,0,0-9.25,13.38,56.3,56.3,0,0,0-6,15.13,70.94,70.94,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.58,59.58,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,63.6,63.6,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100,100,0,0,0,12.39,10.5,124.9,124.9,0,0,0,13.78,8.6c.8.43,1.61.85,2.42,1.27ZM352.78,389.37c1.62,2.15,3.14,4.38,4.54,6.68a55.27,55.27,0,0,1,3.69,7.18,33.49,33.49,0,0,1,2.25,7.7,19,19,0,0,1-.35,7.95,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,23,23,0,0,1-3.08,2.56,31.37,31.37,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42.68,42.68,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.67-.08-1.34-.14-2-.25-.34-.05-.67-.09-1-.15l-1-.17c-1.33-.24-2.64-.54-3.93-.89a39.23,39.23,0,0,1-7.53-2.83,27.2,27.2,0,0,1-6.59-4.53,19.13,19.13,0,0,1-2.58-3,13.4,13.4,0,0,1-1.73-3.57,9,9,0,0,1-.37-3.89,7.4,7.4,0,0,1,.18-1c.09-.32.2-.64.3-1,.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3A126,126,0,0,1,344,388.47q3.54-.71,7.08-1.27C351.67,387.91,352.23,388.64,352.78,389.37Z"/><polygon class="cls-3" points="350.69 386.68 351.11 386.61 351.5 387.13 351.08 387.2 350.69 386.68"/></g><g class="cls-1"><path class="cls-47" d="M573,629.75l-2.37-1.25a125,125,0,0,1-13.69-8.57,100.29,100.29,0,0,1-12.28-10.45A78.06,78.06,0,0,1,534.52,597a63.29,63.29,0,0,1-7-14.46,59.66,59.66,0,0,1-2-7.79,58.11,58.11,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.07,55.07,0,0,1,5.91-14.9,93.81,93.81,0,0,1,9.17-13.24c3.39-4.18,7.05-8.15,10.82-12,7.54-7.71,15.55-14.95,23.32-22.47,3.88-3.77,7.71-7.6,11.3-11.67,1.79-2,3.52-4.12,5.14-6.3a57.31,57.31,0,0,0,4.41-6.87,33.17,33.17,0,0,0,3-7.6,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,22.66,22.66,0,0,0-1.65-3.78,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a112.45,112.45,0,0,0-14.1-8.08c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.84-21-5-31.7-6.85-5.33-.93-10.66-1.77-16-2.57s-10.69-1.56-16-2.23q-16.1-2-32.27-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-25,2.77-2.73-3.38-5.67-6.58-8.71-9.68C337,377.29,333,373.59,329,370c-8.06-7.2-16.45-14-24.87-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,15,15,0,0,1-1.06-3.87,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5,5,0,0,1,.3-.95,7.25,7.25,0,0,1,1-1.7,10.51,10.51,0,0,1,1.43-1.4,20,20,0,0,1,3.37-2.21c1.18-.64,2.41-1.2,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,5.85,5.85,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,27.76,27.76,0,0,0-3.13-2.59A53.06,53.06,0,0,0,266,263c-2.4-1.23-4.88-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.16-1.31-.3-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.34.05.67.12,1,.18.66.13,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.6.73,5.19,1.52,7.74,2.38s5.1,1.8,7.6,2.82,5,2.12,7.36,3.35a52.77,52.77,0,0,1,6.93,4.16,30.84,30.84,0,0,1,3.11,2.58,16.63,16.63,0,0,1,2.56,3.11,8.82,8.82,0,0,1,1.34,3.74,3.28,3.28,0,0,1-.05,1,3.15,3.15,0,0,1-.36.92,5.78,5.78,0,0,1-1.3,1.5,17.07,17.07,0,0,1-3.41,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.1-3.66,1.75a20.56,20.56,0,0,0-3.41,2.22,10.31,10.31,0,0,0-1.45,1.43,7.09,7.09,0,0,0-1.07,1.74,5.06,5.06,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.25,0,.26a9.94,9.94,0,0,0,0,2,15.24,15.24,0,0,0,1.06,3.93,27.36,27.36,0,0,0,1.86,3.61,51.33,51.33,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.79,13.6,24.83,20.8,4,3.61,8,7.31,11.73,11.16,3,3.05,5.86,6.2,8.53,9.51q-3.39.55-6.78,1.22a128.87,128.87,0,0,0-15.69,4.13,78.07,78.07,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.27-.74,1.91-.11.33-.22.65-.31,1s-.15.68-.2,1a9.85,9.85,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.56,27.56,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18,1,.15c.67.11,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68-.05,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,22.92,22.92,0,0,0,3.13-2.61,18,18,0,0,0,1.37-1.53,14.11,14.11,0,0,0,1.17-1.69,15.53,15.53,0,0,0,1.61-3.77,16.91,16.91,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.92,32.36-.76s21.59.66,32.35,1.45,21.52,1.89,32.23,3.25c5.35.68,10.7,1.44,16,2.24s10.67,1.66,16,2.6c10.63,1.86,21.22,4,31.63,6.87,5.2,1.42,10.35,3,15.42,4.84q3.81,1.37,7.54,2.91c2.49,1,5,2.14,7.37,3.32a112,112,0,0,1,14,8.05c2.22,1.51,4.38,3.11,6.46,4.82l.78.64.77.65c.51.43,1,.88,1.51,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.38,21.38,0,0,1-.55,7.88,33,33,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.34,22.51-3.77,3.87-7.44,7.86-10.86,12.06a95.36,95.36,0,0,0-9.25,13.38,56.3,56.3,0,0,0-6,15.13,70.94,70.94,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a59.58,59.58,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,63.6,63.6,0,0,0,7.09,14.63A78.58,78.58,0,0,0,544.15,610a100,100,0,0,0,12.39,10.5,124,124,0,0,0,13.78,8.6c.81.43,1.62.86,2.44,1.28ZM351.12,393.59c1.62,2.15,3.14,4.38,4.54,6.68a54.6,54.6,0,0,1,3.68,7.18,33.52,33.52,0,0,1,2.26,7.7,19,19,0,0,1-.35,8,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,23,23,0,0,1-3.08,2.56,31.37,31.37,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42.78,42.78,0,0,1-7.94,1.34c-.33,0-.66,0-1,.06l-1,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.67-.07-1.34-.14-2-.25-.34-.05-.67-.09-1-.15l-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.32,27.32,0,0,1-6.59-4.54,19.13,19.13,0,0,1-2.58-3,13.1,13.1,0,0,1-1.73-3.57,9,9,0,0,1-.37-3.89,7.4,7.4,0,0,1,.18-1c.09-.32.2-.64.3-.95.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.55,125.55,0,0,1,15.63-4.09q3.54-.7,7.08-1.27C350,392.13,350.57,392.86,351.12,393.59Z"/><polygon class="cls-3" points="349.03 390.9 349.45 390.83 349.84 391.35 349.42 391.42 349.03 390.9"/></g><g class="cls-1"><path class="cls-48" d="M571.38,633.92l-2.4-1.27a124.86,124.86,0,0,1-13.68-8.57A101.41,101.41,0,0,1,543,613.63a78.06,78.06,0,0,1-10.14-12.51,62.84,62.84,0,0,1-7-14.46,60.1,60.1,0,0,1-2-7.79,58.09,58.09,0,0,1-.88-8,63.21,63.21,0,0,1,1.42-16A55.46,55.46,0,0,1,530.35,540a94.48,94.48,0,0,1,9.17-13.25c3.39-4.17,7.05-8.14,10.82-12,7.54-7.71,15.55-15,23.32-22.47,3.89-3.77,7.71-7.6,11.3-11.67,1.79-2,3.52-4.12,5.14-6.31a56.4,56.4,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.4,22.4,0,0,0,.57-8.2,21.27,21.27,0,0,0-.91-4,22.3,22.3,0,0,0-1.65-3.78,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.77,113.77,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.28-7.41-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.09-2-32.27-3.22t-32.39-1.42c-10.8-.14-21.62.07-32.41.79-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.68-3.79-3.87-7.74-7.56-11.76-11.16-8.07-7.2-16.45-14-24.88-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.55-5.89a50,50,0,0,1-4.82-6.48,26.34,26.34,0,0,1-1.85-3.58,14.85,14.85,0,0,1-1.06-3.86,10.39,10.39,0,0,1,0-2l0-.25,0-.24,0-.25c0-.08,0-.16,0-.25a5.14,5.14,0,0,1,.3-.94,7.05,7.05,0,0,1,1-1.7,11.21,11.21,0,0,1,1.43-1.41,20.55,20.55,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.64-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1A9,9,0,0,0,277,277a16.46,16.46,0,0,0-2.59-3.12,27.47,27.47,0,0,0-3.12-2.59,53.84,53.84,0,0,0-7-4.17c-2.4-1.23-4.87-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.3-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.16,0-.29.07l.09,0a.93.93,0,0,1,.2,0l.25,0,.49.07c.34,0,.67.11,1,.18.66.13,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.61.72,5.19,1.52,7.75,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.32,53.32,0,0,1,6.92,4.16A28.37,28.37,0,0,1,274.3,274a16.5,16.5,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.3,3.3,0,0,1-.05,1,3,3,0,0,1-.36.91,5.67,5.67,0,0,1-1.3,1.51,17.07,17.07,0,0,1-3.41,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a22.4,22.4,0,0,0-3.41,2.22,11.6,11.6,0,0,0-1.45,1.44,6.91,6.91,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.25,0,.26a9.94,9.94,0,0,0,0,2,14.8,14.8,0,0,0,1.07,3.92,25.7,25.7,0,0,0,1.85,3.62,52.06,52.06,0,0,0,4.84,6.51c1.77,2,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,7.95,7.3,11.72,11.16,3,3.05,5.86,6.2,8.53,9.5-2.26.38-4.52.78-6.78,1.23a128.87,128.87,0,0,0-15.69,4.13,76.56,76.56,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.2,5.29,25.23,25.23,0,0,0-4.45,6.82c-.27.63-.52,1.26-.74,1.91-.11.33-.21.64-.31,1s-.15.68-.2,1a9.85,9.85,0,0,0,.39,4.11,14.2,14.2,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.11,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68-.05,1-.07a42.69,42.69,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.43,24.43,0,0,0,3.14-2.61,17.91,17.91,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.53,15.53,0,0,0,1.61-3.77,17.34,17.34,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23c-1.41-2.31-2.94-4.54-4.57-6.7q-.76-1-1.56-2c8.14-1.31,16.35-2.15,24.58-2.7,10.77-.71,21.57-.91,32.36-.76s21.59.67,32.36,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.64,1.87,21.22,4,31.63,6.88,5.2,1.42,10.35,3,15.43,4.83,2.53.91,5,1.89,7.53,2.92s4.95,2.14,7.37,3.32a112,112,0,0,1,14,8.05c2.22,1.51,4.38,3.11,6.46,4.81l.78.64.77.66c.51.43,1,.88,1.51,1.32,1,.9,2,1.83,2.88,2.81a31.11,31.11,0,0,1,4.71,6.42,22.18,22.18,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.4,21.4,0,0,1-.55,7.88,33.49,33.49,0,0,1-3,7.4,56.67,56.67,0,0,1-4.36,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.21,96.21,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.8,68.8,0,0,0-1.23,8.06c0,.34,0,.68-.08,1l-.07,1c0,.68,0,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a59.76,59.76,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,124.26,124.26,0,0,0,13.78,8.59c.82.45,1.65.88,2.48,1.3ZM349.47,397.74c1.62,2.15,3.14,4.38,4.54,6.68a55.79,55.79,0,0,1,3.69,7.17A33.57,33.57,0,0,1,360,419.3a19,19,0,0,1-.35,7.95,14.82,14.82,0,0,1-1.57,3.66,14,14,0,0,1-1.13,1.64,18.85,18.85,0,0,1-1.33,1.49,23.73,23.73,0,0,1-3.09,2.56,31.37,31.37,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0-1,0h-1c-1.34,0-2.69-.11-4-.24-.67-.08-1.34-.14-2-.25-.34-.05-.67-.09-1-.15l-1-.18c-1.33-.23-2.64-.53-3.93-.88a39.23,39.23,0,0,1-7.53-2.83,27,27,0,0,1-6.59-4.54,18.63,18.63,0,0,1-2.58-3,13.4,13.4,0,0,1-1.73-3.57,9,9,0,0,1-.37-3.89,6.4,6.4,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.86a24.63,24.63,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,51.84,51.84,0,0,1,7-3.91,75.48,75.48,0,0,1,7.5-3,126,126,0,0,1,15.63-4.09q3.54-.7,7.09-1.27C348.36,396.28,348.92,397,349.47,397.74Z"/><polygon class="cls-3" points="347.38 395.05 347.8 394.98 348.19 395.5 347.77 395.56 347.38 395.05"/></g><g class="cls-1"><path class="cls-49" d="M569.69,638.3,567.27,637a125,125,0,0,1-13.69-8.57A100.29,100.29,0,0,1,541.3,618a78,78,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.2,55.2,0,0,1,5.91-14.9,93.81,93.81,0,0,1,9.17-13.24c3.39-4.18,7.05-8.15,10.82-12,7.54-7.72,15.55-15,23.32-22.48,3.88-3.76,7.71-7.6,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a58,58,0,0,0,4.41-6.86,33.43,33.43,0,0,0,3-7.61,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,22.66,22.66,0,0,0-1.65-3.78,31.81,31.81,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.34l-.78-.65-.79-.65c-2.1-1.72-4.28-3.33-6.52-4.85a111.29,111.29,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.83-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.05-2.23q-16.1-2-32.27-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.78-2.73-3.39-5.67-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.63-10.14c-4.21-3.39-8.39-6.81-12.5-10.31s-8.16-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,15,15,0,0,1-1.06-3.87,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5.24,5.24,0,0,1,.3-1,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.43-1.41,20,20,0,0,1,3.37-2.21c1.18-.64,2.41-1.2,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.54,3.36,3.36,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,28.88,28.88,0,0,0-3.13-2.59,54.18,54.18,0,0,0-6.95-4.17c-2.41-1.22-4.88-2.32-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.15-1.31-.3-2-.43l-1-.19-.51-.07h-.25c-.09,0-.16-.05-.29.06l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.34,0,.67.12,1,.18.66.14,1.32.28,2,.44,1.32.31,2.62.65,3.92,1,2.6.73,5.19,1.52,7.74,2.39s5.1,1.79,7.6,2.81,5,2.12,7.36,3.35a52.83,52.83,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.63,16.63,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.15,3.15,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.2.59-2.45,1.12-3.69,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.15,20.15,0,0,0-3.41,2.22,10.31,10.31,0,0,0-1.45,1.43,7.09,7.09,0,0,0-1.07,1.74,5.06,5.06,0,0,0-.31,1,2.38,2.38,0,0,0-.05.26l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.24,15.24,0,0,0,1.06,3.93,27.36,27.36,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.77,2,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L300.57,358c8.41,6.78,16.79,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5q-3.39.56-6.78,1.23a125.32,125.32,0,0,0-15.69,4.13,75.52,75.52,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34.31,34.31,0,0,0-6.19,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.52,1.26-.74,1.9-.11.33-.22.65-.31,1s-.15.68-.2,1a9.84,9.84,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.77,19.77,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.35,2.63.66,4,.89l1,.18,1,.15c.67.11,1.34.18,2,.25,1.35.13,2.7.23,4.06.24h1l1,0,1,0c.34,0,.68,0,1-.07a42,42,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,30.2,30.2,0,0,0,3.48-2.12,22.92,22.92,0,0,0,3.13-2.61,16.61,16.61,0,0,0,1.37-1.53,14.11,14.11,0,0,0,1.17-1.69,15.62,15.62,0,0,0,1.61-3.76,17.39,17.39,0,0,0,.6-4.05,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.52,1.89,32.23,3.25q8,1,16,2.25t16,2.59c10.63,1.86,21.22,4,31.63,6.87,5.2,1.42,10.35,3,15.42,4.84q3.81,1.36,7.54,2.92c2.49,1,5,2.13,7.36,3.31A110.62,110.62,0,0,1,576,432c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.77.65c.51.43,1,.88,1.51,1.33,1,.9,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86A21.16,21.16,0,0,1,595,464a32.37,32.37,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.34,22.51-3.78,3.87-7.44,7.86-10.86,12.07a94.69,94.69,0,0,0-9.25,13.37,55.91,55.91,0,0,0-6,15.14,70.43,70.43,0,0,0-1.22,8c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.4,59.4,0,0,0,.91,8.1,61.29,61.29,0,0,0,2,7.89,63.6,63.6,0,0,0,7.09,14.63,78.15,78.15,0,0,0,10.26,12.6A100.93,100.93,0,0,0,553.18,629,123.89,123.89,0,0,0,567,637.6c.82.44,1.66.88,2.49,1.3ZM347.76,402.11c1.62,2.15,3.14,4.38,4.54,6.68A54.6,54.6,0,0,1,356,416a33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,22.26,22.26,0,0,1-3.08,2.56,29.89,29.89,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34l-1,.06-1,0c-.33,0-.67,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.67-.07-1.34-.14-2-.25-.34-.05-.67-.09-1-.15l-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.32,27.32,0,0,1-6.59-4.54,19.13,19.13,0,0,1-2.58-3,13.28,13.28,0,0,1-1.74-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.09-.31.2-.64.3-.95.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.55,125.55,0,0,1,339,401.21q3.54-.7,7.08-1.27C346.65,400.66,347.21,401.38,347.76,402.11Z"/><polygon class="cls-3" points="345.67 399.42 346.09 399.35 346.48 399.87 346.06 399.94 345.67 399.42"/></g><g class="cls-1"><path class="cls-50" d="M568.05,642.53c-.82-.42-1.63-.85-2.44-1.29a125,125,0,0,1-13.69-8.57,100.29,100.29,0,0,1-12.28-10.45,78,78,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.2,55.2,0,0,1,5.91-14.9,93.81,93.81,0,0,1,9.17-13.24c3.39-4.18,7.05-8.15,10.82-12,7.54-7.72,15.55-15,23.32-22.48,3.88-3.76,7.71-7.6,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a58,58,0,0,0,4.41-6.86,33.43,33.43,0,0,0,3-7.61,22.16,22.16,0,0,0,.58-8.19,21.37,21.37,0,0,0-.91-4,23.51,23.51,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.93-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.53-1.34l-.78-.65-.79-.65c-2.1-1.72-4.28-3.33-6.52-4.85a111.29,111.29,0,0,0-14.1-8.09c-2.43-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.09-1.83-10.27-3.42-15.49-4.84-10.44-2.83-21.05-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.69-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.62.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.78-2.73-3.38-5.67-6.59-8.71-9.69C332,390,328,386.33,324,382.73c-8.06-7.2-16.45-14-24.87-20.79L286.47,351.8c-4.21-3.39-8.39-6.81-12.5-10.31s-8.16-7.08-12-10.87c-1.92-1.89-3.78-3.85-5.55-5.89a50.54,50.54,0,0,1-4.82-6.47,24.76,24.76,0,0,1-1.85-3.58,15,15,0,0,1-1.06-3.87,9.57,9.57,0,0,1,0-2l0-.25,0-.25,0-.25a2,2,0,0,1,0-.24,5.24,5.24,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.43-1.41,20,20,0,0,1,3.37-2.21c1.18-.64,2.4-1.2,3.64-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.5-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.54,3.36,3.36,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,28.88,28.88,0,0,0-3.13-2.59,53,53,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5-2-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.15-1.31-.3-2-.43l-1-.19-.51-.06-.25,0c-.09,0-.16,0-.29.06l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18,2,.44c1.32.31,2.62.65,3.92,1,2.6.72,5.19,1.51,7.74,2.38s5.1,1.79,7.6,2.81,5,2.12,7.36,3.35a52.83,52.83,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.63,16.63,0,0,1,2.56,3.11,8.86,8.86,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.45,3.45,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5A17.15,17.15,0,0,1,269.7,295c-1.2.59-2.45,1.12-3.69,1.63-2.5,1-5,2-7.52,3-1.24.54-2.47,1.11-3.66,1.75a20.15,20.15,0,0,0-3.41,2.22,10.31,10.31,0,0,0-1.45,1.43,7.09,7.09,0,0,0-1.07,1.74,4.94,4.94,0,0,0-.31,1,1.84,1.84,0,0,0-.05.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.24,15.24,0,0,0,1.06,3.93,27.36,27.36,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.79,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5-2.26.37-4.53.78-6.78,1.23A125.32,125.32,0,0,0,321.53,409a75.52,75.52,0,0,0-7.55,3,51.57,51.57,0,0,0-7.11,4,34,34,0,0,0-6.19,5.29,25.12,25.12,0,0,0-4.45,6.83c-.27.62-.53,1.26-.74,1.9-.11.33-.22.65-.31,1s-.15.68-.2,1a9.84,9.84,0,0,0,.39,4.11,14.1,14.1,0,0,0,1.8,3.7,19.77,19.77,0,0,0,2.66,3.12,27.81,27.81,0,0,0,6.71,4.61,40,40,0,0,0,7.62,2.85c1.31.35,2.63.66,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.34.18,2,.25,1.35.13,2.7.23,4.06.24h1l1,0,1,0c.34,0,.68-.05,1-.07a42,42,0,0,0,8-1.36,37.84,37.84,0,0,0,7.58-3,31.08,31.08,0,0,0,3.48-2.12,22.92,22.92,0,0,0,3.13-2.61,16.61,16.61,0,0,0,1.37-1.53,15.37,15.37,0,0,0,1.17-1.69,15.62,15.62,0,0,0,1.61-3.76,17.39,17.39,0,0,0,.6-4,21.42,21.42,0,0,0-.26-4.08,33.12,33.12,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.35-2.15,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.52,1.89,32.23,3.25q8,1,16,2.25c5.33.8,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.87,5.21,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.92c2.49,1,4.95,2.13,7.36,3.31a111.33,111.33,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.47,4.82l.78.64.76.65c.52.43,1,.88,1.52,1.33,1,.9,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.5,20.5,0,0,1,.86,3.86,21.16,21.16,0,0,1-.56,7.88,32.37,32.37,0,0,1-3,7.4,55.37,55.37,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.09,6.24-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.34,22.51-3.78,3.87-7.44,7.86-10.86,12.07a94.69,94.69,0,0,0-9.25,13.37,55.91,55.91,0,0,0-6,15.14,70.77,70.77,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a58.28,58.28,0,0,0,2.94,16,63.6,63.6,0,0,0,7.09,14.63,78.22,78.22,0,0,0,10.26,12.61,101.74,101.74,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59c.83.45,1.67.88,2.51,1.32ZM346.1,406.33c1.62,2.16,3.14,4.38,4.54,6.68a54.6,54.6,0,0,1,3.68,7.18,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,7.94,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,22.86,22.86,0,0,1-3.08,2.56,29.89,29.89,0,0,1-3.43,2.09,37.86,37.86,0,0,1-7.49,2.91,42,42,0,0,1-7.94,1.34l-1,.06-1,.05h-2c-1.35,0-2.69-.11-4-.24-.66-.07-1.33-.14-2-.25l-1-.15-1-.17c-1.33-.24-2.64-.54-3.94-.89a40,40,0,0,1-7.52-2.82,27.32,27.32,0,0,1-6.59-4.54,19.73,19.73,0,0,1-2.59-3,13.56,13.56,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.09-.31.2-.64.3-.95.21-.64.46-1.26.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.55,125.55,0,0,1,15.63-4.09c2.35-.47,4.72-.89,7.08-1.27C345,404.88,345.55,405.6,346.1,406.33Z"/><polygon class="cls-3" points="344.01 403.64 344.43 403.57 344.82 404.09 344.4 404.16 344.01 403.64"/></g><g class="cls-1"><path class="cls-51" d="M566.43,646.7l-2.38-1.26a124.13,124.13,0,0,1-13.69-8.58,100.29,100.29,0,0,1-12.28-10.45,77,77,0,0,1-10.14-12.5,63.07,63.07,0,0,1-7-14.46,59.8,59.8,0,0,1-2-7.8,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.13,55.13,0,0,1,5.91-14.89,95.27,95.27,0,0,1,9.16-13.25c3.4-4.17,7.06-8.14,10.82-12,7.55-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.59,11.3-11.66,1.79-2,3.52-4.12,5.13-6.31a56.05,56.05,0,0,0,4.42-6.86,33.35,33.35,0,0,0,3-7.6,22,22,0,0,0,.57-8.2,20.6,20.6,0,0,0-.9-4,23.41,23.41,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.79-.64c-2.1-1.72-4.28-3.33-6.53-4.86a111.69,111.69,0,0,0-14.09-8.09c-2.43-1.18-4.91-2.29-7.41-3.32s-5-2-7.58-2.93c-5.09-1.82-10.27-3.41-15.49-4.83-10.44-2.84-21-5-31.7-6.85-5.33-.93-10.66-1.77-16-2.58s-10.69-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.62.07-32.41.8-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.71-9.69-3.78-3.86-7.73-7.55-11.76-11.16-8.06-7.19-16.45-14-24.87-20.78L284.9,356c-4.2-3.4-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.64,50.64,0,0,1-4.82-6.48,24.25,24.25,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.54,9.54,0,0,1,0-2l0-.25,0-.25,0-.24c0-.08,0-.17.05-.25a5.14,5.14,0,0,1,.3-.94,6.75,6.75,0,0,1,1-1.7A10.59,10.59,0,0,1,250,308a20.9,20.9,0,0,1,3.36-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.49-1.05,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,6,6,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,9,9,0,0,0-1.36-3.82,16.91,16.91,0,0,0-2.59-3.13,28.59,28.59,0,0,0-3.13-2.58,52,52,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.8-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.16-1.31-.31-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.17,0-.29.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.33.05.67.11,1,.18.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.36a52.77,52.77,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.56,16.56,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1,0,1,3.33,3.33,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,16.7,16.7,0,0,1-3.42,2.12c-1.2.6-2.45,1.13-3.7,1.64-2.49,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.77,6.77,0,0,0-1.08,1.74,6.57,6.57,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.26,0,.25,0,.26a10.7,10.7,0,0,0,.05,2A15.17,15.17,0,0,0,248,319a25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.77,2,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.15c8.41,6.78,16.79,13.61,24.83,20.81,4,3.61,8,7.3,11.73,11.16,3,3.05,5.86,6.19,8.53,9.5-2.26.38-4.53.78-6.78,1.23A127.07,127.07,0,0,0,320,413.2a74.64,74.64,0,0,0-7.55,3,51.51,51.51,0,0,0-7.11,4,34,34,0,0,0-6.19,5.3,25.07,25.07,0,0,0-4.45,6.82,19.3,19.3,0,0,0-.74,1.91c-.11.33-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.89,13.89,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1-.05,1-.06a42.83,42.83,0,0,0,8-1.36,38.12,38.12,0,0,0,7.57-3,31.81,31.81,0,0,0,3.49-2.12,23.75,23.75,0,0,0,3.13-2.62,16.49,16.49,0,0,0,1.37-1.52,14.88,14.88,0,0,0,1.16-1.69,15.33,15.33,0,0,0,1.62-3.77,17.39,17.39,0,0,0,.6-4,21.31,21.31,0,0,0-.26-4.07,33.68,33.68,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22c-1.41-2.31-2.94-4.55-4.57-6.71q-.77-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.46,21.52,1.89,32.23,3.25c5.35.67,10.7,1.43,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.22,4,31.62,6.88,5.21,1.42,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.48,1,4.94,2.14,7.36,3.32a111.26,111.26,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.78.64.76.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a30.85,30.85,0,0,1,4.72,6.43,22.67,22.67,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.12,21.12,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.1,6.25-3.56,4-7.38,7.85-11.24,11.61-7.76,7.51-15.77,14.76-23.34,22.5-3.78,3.87-7.45,7.86-10.86,12.07a94.78,94.78,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36,0,2a59.76,59.76,0,0,0,.91,8.1,58.18,58.18,0,0,0,2,7.89,63.6,63.6,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6A100.85,100.85,0,0,0,550,637.42,123.89,123.89,0,0,0,563.74,646q1.21.66,2.46,1.29ZM344.54,410.53c1.62,2.15,3.14,4.38,4.54,6.68a53.87,53.87,0,0,1,3.68,7.17,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,8,14.75,14.75,0,0,1-1.57,3.65,15.52,15.52,0,0,1-1.13,1.65,15.69,15.69,0,0,1-1.34,1.48,23.71,23.71,0,0,1-3.08,2.57,30.7,30.7,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.78,42.78,0,0,1-7.94,1.34l-1,.06-1,0h-2c-1.35,0-2.69-.11-4-.24-.66-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.36,39.36,0,0,1-7.52-2.82,26.77,26.77,0,0,1-6.59-4.54,18.83,18.83,0,0,1-2.59-3,13.49,13.49,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.2-.63.3-.95c.21-.63.46-1.25.72-1.86a24.66,24.66,0,0,1,4.38-6.68,33.42,33.42,0,0,1,6.1-5.21,50.84,50.84,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,127.36,127.36,0,0,1,15.63-4.1c2.35-.46,4.72-.88,7.08-1.27C343.42,409.07,344,409.79,344.54,410.53Z"/><polygon class="cls-3" points="342.45 407.84 342.87 407.77 343.26 408.29 342.84 408.35 342.45 407.84"/></g><g class="cls-1"><path class="cls-52" d="M564.74,651.08c-.81-.42-1.61-.84-2.4-1.27a124,124,0,0,1-13.69-8.57,99.55,99.55,0,0,1-12.28-10.45,78.12,78.12,0,0,1-10.15-12.51,63.25,63.25,0,0,1-7-14.46,60.07,60.07,0,0,1-2-7.79,58.11,58.11,0,0,1-.88-8,63.13,63.13,0,0,1,1.42-16,54.75,54.75,0,0,1,5.91-14.9,95.27,95.27,0,0,1,9.16-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-14.95,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.3a56.17,56.17,0,0,0,4.42-6.87,33.63,33.63,0,0,0,3-7.6,22.15,22.15,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86A112.33,112.33,0,0,0,557.43,436c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.57s-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.41.79c-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,25.31,25.31,0,0,1-1.84-3.59,14.85,14.85,0,0,1-1.06-3.86,10.31,10.31,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a5,5,0,0,1,.3-.95,6.75,6.75,0,0,1,1-1.7,10.44,10.44,0,0,1,1.42-1.4,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.21,3.65-1.74,2.48-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.25,17.25,0,0,0,3.44-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,0-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.68,28.68,0,0,0-3.13-2.59,53.06,53.06,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-2-7.6-2.81-5.15-1.65-7.75-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.3-2-.44l-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.67.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,30.84,30.84,0,0,1,3.11,2.58,16.63,16.63,0,0,1,2.56,3.11,8.68,8.68,0,0,1,1.33,3.74,3,3,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,6,6,0,0,1-1.3,1.5,17.15,17.15,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.54-2.47,1.1-3.67,1.74a21.18,21.18,0,0,0-3.4,2.23,10.31,10.31,0,0,0-1.45,1.43,6.19,6.19,0,0,0-1.39,2.72c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,.05,2,15.17,15.17,0,0,0,1.06,3.92,25.76,25.76,0,0,0,1.86,3.62,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.86,6.2,8.53,9.51q-3.41.55-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.5,25.5,0,0,0-4.46,6.82c-.27.63-.52,1.27-.73,1.91-.11.33-.22.65-.31,1a8.75,8.75,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.37,27.37,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.34.17,2,.25,1.36.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a42.72,42.72,0,0,0,8-1.36,37.37,37.37,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61A18,18,0,0,0,350.6,450a15.57,15.57,0,0,0,2.77-5.46,16.55,16.55,0,0,0,.61-4,22.26,22.26,0,0,0-.26-4.08,33.6,33.6,0,0,0-2.29-7.8,54.67,54.67,0,0,0-3.72-7.22,80.85,80.85,0,0,0-4.57-6.71c-.51-.68-1-1.35-1.56-2,8.14-1.3,16.35-2.15,24.57-2.69,10.78-.72,21.58-.92,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.23,3.25c5.35.68,10.7,1.44,16,2.24s10.67,1.66,16,2.6c10.63,1.86,21.22,4,31.62,6.87,5.21,1.42,10.36,3,15.43,4.84,2.54.9,5.05,1.88,7.54,2.91s4.94,2.14,7.36,3.32a111.33,111.33,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.39,21.39,0,0,1-.56,7.88,32.55,32.55,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06A96.15,96.15,0,0,0,523,556.73a56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6,99.26,99.26,0,0,0,12.39,10.5,124,124,0,0,0,13.78,8.6c.82.44,1.64.87,2.47,1.29ZM342.82,414.9a79.37,79.37,0,0,1,4.55,6.68,55.21,55.21,0,0,1,3.68,7.18,33,33,0,0,1,2.25,7.7,18.85,18.85,0,0,1-.34,8,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.77,37.77,0,0,1-7.48,2.91A42.78,42.78,0,0,1,327,460.1l-1,.06-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.66-.08-1.33-.14-2-.25l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a39.74,39.74,0,0,1-7.53-2.83,27.14,27.14,0,0,1-6.58-4.53,19.2,19.2,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.08-.32.19-.64.3-.95.21-.64.46-1.26.72-1.87a24.86,24.86,0,0,1,4.37-6.68,33.77,33.77,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.09,125.09,0,0,1,334.06,414q3.53-.71,7.08-1.27C341.71,413.44,342.27,414.17,342.82,414.9Z"/><polygon class="cls-3" points="340.74 412.21 341.16 412.14 341.55 412.66 341.13 412.73 340.74 412.21"/></g><g class="cls-1"><path class="cls-53" d="M563.1,655.31,560.68,654A124,124,0,0,1,547,645.46,100.38,100.38,0,0,1,534.7,635a78.6,78.6,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,59.66,59.66,0,0,1-2-7.79,58.11,58.11,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55,55,0,0,1,5.9-14.9,95.5,95.5,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.3a57.38,57.38,0,0,0,4.42-6.87,33.63,33.63,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.57s-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,25.74,25.74,0,0,1-1.84-3.58,15,15,0,0,1-1.06-3.87,10.31,10.31,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a5,5,0,0,1,.3-.95,6.93,6.93,0,0,1,1-1.7,10.44,10.44,0,0,1,1.42-1.4,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.68,28.68,0,0,0-3.13-2.59,53.06,53.06,0,0,0-7-4.17c-2.41-1.22-4.88-2.33-7.38-3.34s-5-1.95-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.3-2-.44l-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.33,0,.66.12,1,.18.67.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1q3.9,1.09,7.74,2.38c2.56.87,5.09,1.8,7.59,2.82s5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16A30.84,30.84,0,0,1,266,295.4a16.2,16.2,0,0,1,2.55,3.11,8.61,8.61,0,0,1,1.34,3.74,3,3,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,6,6,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.54-2.47,1.1-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,7,7,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,.05,2,14.85,14.85,0,0,0,1.06,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L294,375c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.31,11.73,11.16,3,3.05,5.85,6.2,8.53,9.51q-3.4.56-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.27-.73,1.91-.11.33-.22.65-.31,1a8.75,8.75,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.37,27.37,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a41.93,41.93,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,15.57,15.57,0,0,0,2.77-5.46,16.94,16.94,0,0,0,.43-2,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,78.58,78.58,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.66,16,2.6c10.63,1.86,21.22,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.91c2.48,1,4.94,2.14,7.36,3.32a111.33,111.33,0,0,1,14,8c2.22,1.51,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.6,21.6,0,0,1-.56,7.88,32.55,32.55,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61C557,520.51,549,527.77,541.4,535.51c-3.78,3.87-7.45,7.86-10.87,12.06A96.15,96.15,0,0,0,521.29,561a56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.08,2l0,1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78,78,0,0,0,10.26,12.6A99.26,99.26,0,0,0,546.59,646a124,124,0,0,0,13.78,8.6c.82.44,1.66.88,2.49,1.3ZM341.16,419.12a76.94,76.94,0,0,1,4.54,6.68,54.67,54.67,0,0,1,3.69,7.18,33,33,0,0,1,2.25,7.7,18.85,18.85,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.33-.14-2-.25l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,19.2,19.2,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.08-.32.19-.64.3-1,.21-.64.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.43,33.43,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C340.05,417.66,340.61,418.39,341.16,419.12Z"/><polygon class="cls-3" points="339.07 416.43 339.5 416.36 339.89 416.88 339.47 416.95 339.07 416.43"/></g><g class="cls-1"><path class="cls-54" d="M561.48,659.47c-.82-.42-1.64-.85-2.45-1.29a124,124,0,0,1-13.69-8.57,101.31,101.31,0,0,1-12.28-10.45,77.52,77.52,0,0,1-10.14-12.51,62.87,62.87,0,0,1-7-14.46,60.07,60.07,0,0,1-2-7.79,58.09,58.09,0,0,1-.88-8,63.21,63.21,0,0,1,1.42-16,54.81,54.81,0,0,1,5.91-14.89,95.27,95.27,0,0,1,9.16-13.25c3.4-4.17,7.05-8.14,10.82-12,7.55-7.71,15.56-14.95,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.31a55.3,55.3,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.19,22.19,0,0,0,.57-8.2,21.25,21.25,0,0,0-.9-4,24,24,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.65,113.65,0,0,0-14.09-8.09c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.05-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.69-1.55-16.06-2.22q-16.08-2-32.26-3.22T395.22,417c-10.81-.14-21.63.07-32.41.79-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a49,49,0,0,1-4.82-6.48,24.25,24.25,0,0,1-1.85-3.58,14.85,14.85,0,0,1-1.06-3.86,9.65,9.65,0,0,1,0-2l0-.25,0-.24,0-.25c0-.08,0-.16,0-.25a5.14,5.14,0,0,1,.3-.94,6.75,6.75,0,0,1,1-1.7A11.13,11.13,0,0,1,245,320.7a21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.61,17.61,0,0,0,3.45-2.15,6,6,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,0-1,8.88,8.88,0,0,0-1.37-3.82,16.41,16.41,0,0,0-2.58-3.12,27.58,27.58,0,0,0-3.13-2.59,53.06,53.06,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-2-7.6-2.81-5.15-1.65-7.75-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.31-.3-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.25,0c-.1,0-.17,0-.29.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.13,1.31.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.89,16.89,0,0,1,2.56,3.1,8.76,8.76,0,0,1,1.33,3.75,3,3,0,0,1,0,1,3.26,3.26,0,0,1-.36.91,5.85,5.85,0,0,1-1.3,1.51,17.15,17.15,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.19,6.19,0,0,0-1.39,2.72c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.17,15.17,0,0,0,1.06,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.79,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.86,6.2,8.53,9.5-2.27.38-4.53.78-6.78,1.23A128.39,128.39,0,0,0,315,425.94a75.76,75.76,0,0,0-7.56,3,52.05,52.05,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82,19.3,19.3,0,0,0-.74,1.91c-.11.33-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1,0c.34,0,.68-.05,1-.07a43,43,0,0,0,8-1.36,37.52,37.52,0,0,0,7.57-3,31.81,31.81,0,0,0,3.49-2.12,23.67,23.67,0,0,0,3.13-2.61,18,18,0,0,0,1.37-1.53,14.88,14.88,0,0,0,1.16-1.69,15.17,15.17,0,0,0,1.62-3.77,17.34,17.34,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.26-4.08,33.6,33.6,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23c-1.41-2.31-2.94-4.54-4.57-6.7q-.76-1-1.56-2c8.14-1.31,16.35-2.15,24.58-2.7,10.77-.71,21.57-.91,32.36-.76s21.59.67,32.35,1.46,21.51,1.89,32.23,3.25c5.35.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.22,4,31.62,6.88,5.21,1.42,10.36,3,15.43,4.83,2.54.91,5,1.89,7.54,2.92s4.94,2.14,7.36,3.32a111.33,111.33,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.47,4.81l.78.64.76.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.81a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.4,21.4,0,0,1-.56,7.88,32.55,32.55,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.1,6.24-3.56,4-7.38,7.85-11.24,11.61-7.76,7.51-15.77,14.76-23.34,22.51-3.78,3.87-7.45,7.86-10.86,12.06a95.36,95.36,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,64,64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,122.43,122.43,0,0,0,13.78,8.59c.83.46,1.68.9,2.53,1.33Zm-222-236.2c1.62,2.15,3.14,4.38,4.54,6.68a55.73,55.73,0,0,1,3.68,7.17,33.08,33.08,0,0,1,2.25,7.71,18.85,18.85,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,17.17,17.17,0,0,1-1.34,1.49,23.64,23.64,0,0,1-3.08,2.56,33.39,33.39,0,0,1-3.43,2.09,38.1,38.1,0,0,1-7.49,2.91,42.78,42.78,0,0,1-7.94,1.34l-1,.06-1,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.66-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.23-2.63-.53-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.71,13.71,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89c.05-.33.11-.65.19-1s.2-.63.3-.95c.21-.63.46-1.25.72-1.86a24.66,24.66,0,0,1,4.38-6.68,33.42,33.42,0,0,1,6.1-5.21,51.25,51.25,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,125.55,125.55,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C338.4,421.81,339,422.54,339.52,423.27Z"/><polygon class="cls-3" points="337.43 420.58 337.85 420.51 338.24 421.03 337.82 421.1 337.43 420.58"/></g><g class="cls-1"><path class="cls-55" d="M559.78,663.85c-.82-.42-1.65-.86-2.46-1.3A124,124,0,0,1,543.63,654a100.38,100.38,0,0,1-12.29-10.45A78.53,78.53,0,0,1,521.2,631a63.32,63.32,0,0,1-7-14.47,58.31,58.31,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,95.5,95.5,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a58.07,58.07,0,0,0,4.42-6.86,33.89,33.89,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.83-21.06-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.78-2.73-3.39-5.67-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,25.74,25.74,0,0,1-1.84-3.58,15,15,0,0,1-1.06-3.87,10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.81,5.81,0,0,0,1.34-1.54,3.36,3.36,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.88,29.88,0,0,0-3.13-2.59,55.59,55.59,0,0,0-7-4.17c-2.41-1.22-4.88-2.32-7.38-3.34s-5-2-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.15-1.32-.3-2-.43l-1-.19-.5-.07h-.26c-.09,0-.16-.05-.28.06l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.14,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.73,5.18,1.52,7.74,2.39s5.09,1.79,7.59,2.81,5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.2,16.2,0,0,1,2.55,3.11,8.6,8.6,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.25.54-2.47,1.11-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,7,7,0,0,0-.31,1c0,.09,0,.17,0,.26l0,.25,0,.26,0,.25a11.57,11.57,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.78,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.71,19.71,0,0,0,2.65,3.12,28,28,0,0,0,6.71,4.61,40.3,40.3,0,0,0,7.63,2.85c1.31.35,2.63.66,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.07.24h1l1,0,1,0c.34,0,.68-.05,1-.07a41.93,41.93,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.62,15.62,0,0,0,2.77-5.45,16.73,16.73,0,0,0,.61-4,22.26,22.26,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,78.58,78.58,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.86,21.22,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.31a111.33,111.33,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.9,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,32.37,32.37,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61C553.62,529,545.6,536.29,538,544c-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.27,66.27,0,0,0-1.22,8c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.35-.08,2l0,1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63A77.19,77.19,0,0,0,530.84,644a100.19,100.19,0,0,0,12.39,10.51A124.69,124.69,0,0,0,557,663.13l2.55,1.33Zm-222-236.21a78.5,78.5,0,0,1,4.54,6.68A55.92,55.92,0,0,1,346,441.5a33.08,33.08,0,0,1,2.25,7.71,18.81,18.81,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34l-1,.06-1,0c-.34,0-.67,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.33-.14-2-.25l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.25,13.25,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.08-.31.19-.64.3-.95.21-.64.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.43,33.43,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.09,125.09,0,0,1,329,426.74q3.52-.71,7.08-1.27C336.69,426.19,337.25,426.91,337.8,427.64Z"/><polygon class="cls-3" points="335.71 424.95 336.14 424.88 336.53 425.4 336.11 425.47 335.71 424.95"/></g><g class="cls-1"><path class="cls-56" d="M558.14,668.09c-.83-.44-1.66-.87-2.48-1.32A124,124,0,0,1,542,658.2a99.64,99.64,0,0,1-12.29-10.45,78,78,0,0,1-10.14-12.5,63.32,63.32,0,0,1-7-14.47A58.31,58.31,0,0,1,509.69,605a63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,95.5,95.5,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.52-4.13,5.14-6.31a58.07,58.07,0,0,0,4.42-6.86,33.89,33.89,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.83-21.06-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.78-2.73-3.38-5.68-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.42,15.42,0,0,1-1-3.87,10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-1,6.42,6.42,0,0,1,1-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.81,5.81,0,0,0,1.34-1.54,3.36,3.36,0,0,0,.37-1,3.25,3.25,0,0,0,0-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.88,29.88,0,0,0-3.13-2.59,54.34,54.34,0,0,0-6.95-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-1.95-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.15-1.32-.3-2-.43l-1-.19c-.16,0-.33-.05-.5-.06l-.26,0c-.09,0-.16-.05-.28.06l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.33,0,.66.12,1,.18l2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.2,16.2,0,0,1,2.55,3.11,8.6,8.6,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,3.12,3.12,0,0,1-.35.92,5.65,5.65,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.25.54-2.47,1.11-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,6.69,6.69,0,0,0-.31,1c0,.08,0,.16,0,.25l0,.25,0,.26,0,.25a11.57,11.57,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L289,387.71c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.71,19.71,0,0,0,2.65,3.12,28,28,0,0,0,6.71,4.61,40.3,40.3,0,0,0,7.63,2.85c1.31.35,2.63.66,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.07.24h1l1,0,1,0c.34,0,.68,0,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.62,15.62,0,0,0,2.77-5.45,18.14,18.14,0,0,0,.61-4.05,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,81,81,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.92c2.48,1,4.94,2.13,7.36,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.9,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,32.83,32.83,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.57,66.57,0,0,0-1.22,8c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.35-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a57.86,57.86,0,0,0,.91,8.1,60.2,60.2,0,0,0,2,7.9,63.76,63.76,0,0,0,7.1,14.62,77.69,77.69,0,0,0,10.26,12.61,101,101,0,0,0,12.39,10.5,124.69,124.69,0,0,0,13.77,8.59c.85.46,1.71.9,2.57,1.34Zm-222-236.23c1.62,2.16,3.15,4.38,4.54,6.68a55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34l-1,.06-1,.05h-2c-1.34,0-2.68-.11-4-.24-.67-.07-1.33-.14-2-.25l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.25,13.25,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.41,7.41,0,0,1,.19-1c.08-.31.19-.64.3-.95.21-.64.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.43,33.43,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.09,125.09,0,0,1,327.38,431q3.53-.7,7.08-1.27C335,430.41,335.59,431.13,336.14,431.86Z"/><polygon class="cls-3" points="334.05 429.17 334.48 429.1 334.87 429.62 334.45 429.69 334.05 429.17"/></g><g class="cls-1"><path class="cls-57" d="M556.53,672.26c-.84-.43-1.67-.87-2.5-1.32a123.49,123.49,0,0,1-13.69-8.57,100.29,100.29,0,0,1-12.28-10.45,77,77,0,0,1-10.14-12.5,62.94,62.94,0,0,1-7-14.47,59.25,59.25,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.13,55.13,0,0,1,5.91-14.89A95.27,95.27,0,0,1,524.56,565c3.4-4.18,7.06-8.14,10.82-12,7.55-7.71,15.56-15,23.33-22.48,3.88-3.76,7.71-7.59,11.3-11.66,1.79-2,3.52-4.13,5.14-6.31a57.19,57.19,0,0,0,4.41-6.86,33.35,33.35,0,0,0,3-7.6,22,22,0,0,0,.57-8.2,20.6,20.6,0,0,0-.9-4,23.51,23.51,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.53-1.34l-.78-.66-.79-.65c-2.1-1.71-4.28-3.32-6.52-4.85a112.52,112.52,0,0,0-14.1-8.09c-2.43-1.18-4.91-2.29-7.41-3.33s-5-2-7.58-2.92C529,449,523.86,447.42,518.64,446c-10.44-2.84-21.05-5-31.7-6.85q-8-1.4-16-2.58t-16.06-2.23q-16.08-2-32.26-3.22t-32.39-1.42c-10.81-.14-21.62.07-32.41.8-8.35.56-16.69,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.38-6.81-12.49-10.31s-8.16-7.09-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89A50.64,50.64,0,0,1,240,348a24.76,24.76,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.54,9.54,0,0,1,0-2l0-.25,0-.25,0-.24c0-.09,0-.17,0-.25a5.5,5.5,0,0,1,.3-.95,6.69,6.69,0,0,1,1-1.69,10,10,0,0,1,1.43-1.41,20.9,20.9,0,0,1,3.36-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.48-1.07,5-2,7.51-3,1.25-.52,2.49-1.05,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,6.18,6.18,0,0,0,1.33-1.55,3.41,3.41,0,0,0,.37-1,3,3,0,0,0,0-1,9,9,0,0,0-1.36-3.81,16.59,16.59,0,0,0-2.59-3.13,28.59,28.59,0,0,0-3.13-2.58,52,52,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.6-2.8-5.15-1.66-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.16-1.31-.31-2-.44l-1-.18-.51-.07-.25,0c-.09,0-.17,0-.29.07l.08,0a1,1,0,0,1,.2,0l.25,0c.17,0,.34,0,.5.06l1,.19c.66.13,1.32.28,2,.43,1.32.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.1,1.8,7.6,2.81,5,2.13,7.36,3.35a54,54,0,0,1,6.93,4.17,28.37,28.37,0,0,1,3.11,2.58,16.56,16.56,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.22,3.22,0,0,1-.05,1,3.45,3.45,0,0,1-.36.92,5.48,5.48,0,0,1-1.3,1.5,16.7,16.7,0,0,1-3.42,2.12c-1.2.6-2.45,1.13-3.7,1.64-2.49,1-5,1.95-7.51,3-1.24.53-2.47,1.1-3.66,1.74a20.78,20.78,0,0,0-3.41,2.22,10.89,10.89,0,0,0-1.45,1.43,7.31,7.31,0,0,0-1.08,1.75,5.3,5.3,0,0,0-.3,1,2.21,2.21,0,0,0,0,.25l0,.26,0,.25,0,.25a10.81,10.81,0,0,0,0,2.05,15.28,15.28,0,0,0,1.06,3.92,26.17,26.17,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.77,2.05,3.63,4,5.55,5.91,3.85,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.32l12.62,10.16c8.41,6.78,16.79,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.86,6.19,8.53,9.5-2.26.37-4.53.78-6.78,1.23A125.32,125.32,0,0,0,310,438.71a73.26,73.26,0,0,0-7.55,3,51.51,51.51,0,0,0-7.11,4,34,34,0,0,0-6.19,5.3,25.07,25.07,0,0,0-4.45,6.82,19.3,19.3,0,0,0-.74,1.91c-.11.32-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.89,13.89,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.34.17,2,.25,1.35.12,2.7.22,4.06.23h1c.34,0,.68,0,1,0l1,0,1-.06a43.66,43.66,0,0,0,8-1.36,38.12,38.12,0,0,0,7.57-3,31.81,31.81,0,0,0,3.49-2.12,23.75,23.75,0,0,0,3.13-2.62,16.49,16.49,0,0,0,1.37-1.52,17.55,17.55,0,0,0,1.17-1.69,15.69,15.69,0,0,0,1.61-3.77,17.39,17.39,0,0,0,.6-4.05,21.31,21.31,0,0,0-.26-4.07,33.68,33.68,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22c-1.41-2.31-2.94-4.55-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.45,21.52,1.9,32.23,3.25q8,1,16,2.25c5.33.81,10.67,1.66,16,2.59,10.63,1.87,21.22,4,31.62,6.88,5.21,1.42,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.49,1,5,2.14,7.36,3.32a111.26,111.26,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.78.64.76.65c.52.44,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.06,31.06,0,0,1,4.72,6.42,23.47,23.47,0,0,1,1.59,3.64,20.6,20.6,0,0,1,.86,3.87,21.12,21.12,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,53.87,53.87,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.09,6.25-3.57,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.34,22.5-3.78,3.87-7.45,7.86-10.86,12.07a95.26,95.26,0,0,0-9.25,13.37,56,56,0,0,0-6,15.14,70.6,70.6,0,0,0-1.22,8.06c0,.34-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.05,2a58.28,58.28,0,0,0,2.94,16,63.6,63.6,0,0,0,7.09,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59c.85.46,1.71.91,2.57,1.35ZM334.52,436c1.62,2.15,3.14,4.38,4.54,6.68a53.87,53.87,0,0,1,3.68,7.17A33.6,33.6,0,0,1,345,457.6a19,19,0,0,1-.35,7.94,14.66,14.66,0,0,1-1.57,3.66,15.39,15.39,0,0,1-1.13,1.64,15.81,15.81,0,0,1-1.34,1.49,22.86,22.86,0,0,1-3.08,2.56A29.35,29.35,0,0,1,334.1,477a37.29,37.29,0,0,1-7.49,2.92,42,42,0,0,1-7.94,1.33c-.33,0-.67.06-1,.07l-1,0h-2c-1.35,0-2.69-.11-4-.24-.66-.08-1.33-.15-2-.25l-1-.15-1-.18c-1.33-.24-2.64-.54-3.94-.89a39.36,39.36,0,0,1-7.52-2.82,26.77,26.77,0,0,1-6.59-4.54,18.83,18.83,0,0,1-2.59-3,13.65,13.65,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.2-.63.3-.95c.21-.63.46-1.25.72-1.87a24.82,24.82,0,0,1,4.38-6.68,33.7,33.7,0,0,1,6.1-5.2,50.84,50.84,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,127.36,127.36,0,0,1,15.63-4.1c2.35-.46,4.72-.88,7.08-1.27C333.4,434.58,334,435.3,334.52,436Z"/><polygon class="cls-3" points="332.43 433.35 332.85 433.28 333.24 433.8 332.82 433.86 332.43 433.35"/></g><g class="cls-1"><path class="cls-58" d="M554.83,676.64c-.84-.43-1.68-.87-2.51-1.32a124,124,0,0,1-13.69-8.57,101.31,101.31,0,0,1-12.28-10.45,78.12,78.12,0,0,1-10.15-12.51,63.25,63.25,0,0,1-7-14.46,60.07,60.07,0,0,1-2-7.79,58.09,58.09,0,0,1-.88-8,63.21,63.21,0,0,1,1.42-16,54.81,54.81,0,0,1,5.91-14.89,95.27,95.27,0,0,1,9.16-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.31a55.3,55.3,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.19,22.19,0,0,0,.57-8.2,21.25,21.25,0,0,0-.9-4,24,24,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.65,113.65,0,0,0-14.09-8.09c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.69-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.42c-10.81-.14-21.63.07-32.41.79-8.35.56-16.69,1.43-25,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50,50,0,0,1-4.83-6.48,25.19,25.19,0,0,1-1.84-3.58,14.85,14.85,0,0,1-1.06-3.86,9.65,9.65,0,0,1,0-2l0-.25,0-.24,0-.25c0-.08,0-.16.05-.25a5.14,5.14,0,0,1,.3-.94,6.75,6.75,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.25,17.25,0,0,0,3.44-2.15,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,8.88,8.88,0,0,0-1.37-3.82,16.41,16.41,0,0,0-2.58-3.12,27.58,27.58,0,0,0-3.13-2.59,53.06,53.06,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.31-.3-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.67.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.89,16.89,0,0,1,2.56,3.1,8.76,8.76,0,0,1,1.33,3.75,3,3,0,0,1,0,1,3.26,3.26,0,0,1-.36.91,5.85,5.85,0,0,1-1.3,1.51,17.15,17.15,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.19,6.19,0,0,0-1.39,2.72c0,.09,0,.17,0,.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.17,15.17,0,0,0,1.06,3.92,25.76,25.76,0,0,0,1.86,3.62A51.09,51.09,0,0,0,243,359c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9S268.8,382.7,273,386.1l12.62,10.16c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3,5.86,6.2,8.53,9.5-2.27.38-4.53.78-6.78,1.23a129,129,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,51.46,51.46,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.5,25.5,0,0,0-4.46,6.82c-.27.63-.52,1.26-.73,1.91-.11.33-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.34.17,2,.25,1.36.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a43,43,0,0,0,8-1.36,37.52,37.52,0,0,0,7.57-3,31.81,31.81,0,0,0,3.49-2.12,23.67,23.67,0,0,0,3.13-2.61,18,18,0,0,0,1.37-1.53,14.88,14.88,0,0,0,1.16-1.69,15.17,15.17,0,0,0,1.62-3.77,17.34,17.34,0,0,0,.42-2,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.26-4.08,33.6,33.6,0,0,0-2.29-7.8,55.42,55.42,0,0,0-3.72-7.23c-1.41-2.31-2.94-4.54-4.57-6.7q-.76-1-1.56-2c8.14-1.31,16.35-2.15,24.58-2.7,10.77-.71,21.57-.91,32.36-.76s21.59.67,32.35,1.46,21.51,1.89,32.23,3.25c5.35.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.22,4,31.62,6.88,5.21,1.42,10.36,3,15.43,4.83,2.54.91,5.05,1.89,7.54,2.92s4.94,2.14,7.36,3.32a111.33,111.33,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.47,4.81l.78.64.76.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.81a30.79,30.79,0,0,1,4.72,6.42,23.06,23.06,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.4,21.4,0,0,1-.56,7.88,32.55,32.55,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,64,64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5A122.43,122.43,0,0,0,552,675.89c.85.47,1.72.92,2.58,1.36Zm-222-236.23c1.62,2.15,3.14,4.38,4.54,6.68a55.73,55.73,0,0,1,3.68,7.17,33.08,33.08,0,0,1,2.25,7.71,18.85,18.85,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,24.46,24.46,0,0,1-3.08,2.56,31.63,31.63,0,0,1-3.43,2.08,37.52,37.52,0,0,1-7.49,2.92,42.78,42.78,0,0,1-7.94,1.34l-1,.06-1,0-1,0h-1c-1.35,0-2.69-.11-4-.24-.66-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.23-2.63-.53-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.35,9.35,0,0,1-.37-3.89c.05-.33.11-.65.19-1s.19-.63.3-.95c.21-.63.46-1.25.72-1.86a24.86,24.86,0,0,1,4.37-6.68,33.82,33.82,0,0,1,6.11-5.21,51.25,51.25,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3A127.36,127.36,0,0,1,324,439.5q3.52-.69,7.08-1.26C331.69,439,332.25,439.68,332.81,440.41Z"/><polygon class="cls-3" points="330.72 437.72 331.14 437.65 331.53 438.17 331.11 438.24 330.72 437.72"/></g><g class="cls-1"><path class="cls-59" d="M553.19,680.87c-.85-.43-1.69-.88-2.53-1.33A124,124,0,0,1,537,671a101.31,101.31,0,0,1-12.28-10.45A78.12,78.12,0,0,1,514.54,648a63.25,63.25,0,0,1-7-14.46,60.07,60.07,0,0,1-2-7.79,58.09,58.09,0,0,1-.88-8,63.21,63.21,0,0,1,1.42-16A54.81,54.81,0,0,1,512,586.88a95.27,95.27,0,0,1,9.16-13.25c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.31a55.3,55.3,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.15,22.15,0,0,0,.57-8.19,21.18,21.18,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.06-5-31.7-6.85-5.33-.93-10.67-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.77-2.73-3.38-5.67-6.58-8.71-9.68C317,428.32,313.05,424.63,309,421c-8.06-7.2-16.45-14-24.87-20.79L271.51,390.1c-4.2-3.39-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50,50,0,0,1-4.83-6.48A25.19,25.19,0,0,1,234.8,353a14.85,14.85,0,0,1-1.06-3.86,10.39,10.39,0,0,1-.05-2l0-.25,0-.24,0-.25c0-.08,0-.16.05-.25a5.14,5.14,0,0,1,.3-.94,6.75,6.75,0,0,1,1-1.7,11.13,11.13,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.25,17.25,0,0,0,3.44-2.15,5.86,5.86,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,0-1,8.88,8.88,0,0,0-1.37-3.82,16.41,16.41,0,0,0-2.58-3.12,27.58,27.58,0,0,0-3.13-2.59,53.06,53.06,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.3-2-.44-.33-.06-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.67.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.44,16.44,0,0,1,2.55,3.1,8.65,8.65,0,0,1,1.34,3.75,3,3,0,0,1,0,1,3.26,3.26,0,0,1-.36.91,5.85,5.85,0,0,1-1.3,1.51,17.15,17.15,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.19,6.19,0,0,0-1.39,2.72c0,.09,0,.17,0,.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,0,2,15.17,15.17,0,0,0,1.06,3.92,25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L284,400.48c8.41,6.77,16.78,13.6,24.83,20.8,4,3.61,8,7.3,11.73,11.16,3,3.05,5.86,6.2,8.53,9.51-2.27.37-4.53.77-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.5,25.5,0,0,0-4.46,6.82c-.27.63-.52,1.26-.73,1.91-.11.33-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.37,27.37,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.68.11,1.35.17,2,.25,1.36.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a42.72,42.72,0,0,0,8-1.36,37.37,37.37,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23.76,23.76,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,14.88,14.88,0,0,0,1.16-1.69,15.14,15.14,0,0,0,1.61-3.77,16.55,16.55,0,0,0,.61-4,22.26,22.26,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8A55.42,55.42,0,0,0,336,451.1c-1.41-2.31-2.94-4.54-4.57-6.7-.51-.68-1-1.35-1.56-2,8.13-1.31,16.35-2.15,24.57-2.7,10.77-.71,21.58-.91,32.37-.76s21.58.67,32.35,1.46,21.51,1.89,32.23,3.25c5.35.67,10.69,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.22,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.84,2.54.9,5,1.88,7.54,2.91s4.94,2.14,7.36,3.32a111.33,111.33,0,0,1,14,8.05c2.22,1.51,4.39,3.11,6.47,4.81l.77.64.77.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.81a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.61,19.61,0,0,1,.87,3.86,21.39,21.39,0,0,1-.56,7.88,32.55,32.55,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61C547,546,538.94,553.27,531.38,561c-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2l0,1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63A78.58,78.58,0,0,0,524.18,661a100.11,100.11,0,0,0,12.39,10.5,122.43,122.43,0,0,0,13.78,8.59c.86.47,1.73.92,2.6,1.37ZM331.14,444.63a79.37,79.37,0,0,1,4.55,6.68,55.73,55.73,0,0,1,3.68,7.17,33.08,33.08,0,0,1,2.25,7.71,18.85,18.85,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,42.54,42.54,0,0,1-7.93,1.34l-1,.06-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.23-2.63-.53-3.93-.88a39.74,39.74,0,0,1-7.53-2.83,26.9,26.9,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89c.05-.33.11-.65.19-1s.19-.63.3-1c.21-.63.46-1.25.72-1.86a24.63,24.63,0,0,1,4.37-6.68,33.82,33.82,0,0,1,6.11-5.21,51.25,51.25,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C330,443.17,330.59,443.9,331.14,444.63Z"/><polygon class="cls-3" points="329.06 441.94 329.48 441.87 329.87 442.39 329.45 442.46 329.06 441.94"/></g><g class="cls-1"><path class="cls-60" d="M551.57,685c-.85-.44-1.71-.89-2.56-1.35a124.13,124.13,0,0,1-13.69-8.58A99.55,99.55,0,0,1,523,664.66a77,77,0,0,1-10.14-12.5,63.07,63.07,0,0,1-7-14.46,59.8,59.8,0,0,1-2-7.8,57.77,57.77,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16A55.13,55.13,0,0,1,510.38,591a95.27,95.27,0,0,1,9.16-13.25c3.4-4.17,7.06-8.14,10.82-12,7.55-7.71,15.56-15,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.31a55.3,55.3,0,0,0,4.42-6.86,33.35,33.35,0,0,0,3-7.6,22,22,0,0,0,.57-8.2,20.6,20.6,0,0,0-.9-4,24.33,24.33,0,0,0-1.65-3.77,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.79-.64c-2.1-1.72-4.28-3.33-6.53-4.86a112.4,112.4,0,0,0-14.09-8.09c-2.44-1.18-4.91-2.28-7.41-3.32s-5-2-7.58-2.93c-5.1-1.82-10.27-3.41-15.49-4.83-10.45-2.84-21.05-5-31.7-6.85-5.33-.93-10.66-1.77-16-2.58s-10.69-1.55-16.06-2.22q-16.08-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.62.08-32.41.8-8.35.56-16.69,1.43-25,2.77-2.73-3.38-5.67-6.58-8.71-9.68-3.78-3.87-7.73-7.56-11.76-11.17-8.06-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.39-8.38-6.81-12.49-10.31s-8.16-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89A49.71,49.71,0,0,1,235,360.7a24.25,24.25,0,0,1-1.85-3.58,14.92,14.92,0,0,1-1.06-3.87,9.54,9.54,0,0,1,0-2l0-.25,0-.24,0-.25c0-.08,0-.17.05-.25a5.14,5.14,0,0,1,.3-.94,6.75,6.75,0,0,1,1-1.7,10.59,10.59,0,0,1,1.43-1.41,20.9,20.9,0,0,1,3.36-2.2c1.19-.64,2.41-1.21,3.65-1.74,2.48-1.08,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.65a17.11,17.11,0,0,0,3.45-2.14,6,6,0,0,0,1.33-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,8.88,8.88,0,0,0-1.37-3.82,16.79,16.79,0,0,0-2.58-3.13,28.59,28.59,0,0,0-3.13-2.58,52,52,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.38-3.34s-5-1.95-7.6-2.81-5.15-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.93-1-.65-.16-1.31-.31-2-.44l-1-.18-.51-.07-.25,0c-.1,0-.17,0-.29.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.33.05.67.11,1,.18.66.13,1.31.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,28.37,28.37,0,0,1,3.11,2.58,16.89,16.89,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,3.07,3.07,0,0,1-.41,1.9,5.67,5.67,0,0,1-1.3,1.51,16.66,16.66,0,0,1-3.42,2.11c-1.2.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.51,3-1.24.53-2.47,1.1-3.67,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.45,1.44,6.77,6.77,0,0,0-1.08,1.74,6.57,6.57,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.26,0,.25,0,.26a10.7,10.7,0,0,0,0,2A15.17,15.17,0,0,0,233,357.2a25.76,25.76,0,0,0,1.86,3.62,51.09,51.09,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.15c8.41,6.78,16.79,13.61,24.83,20.81,4,3.61,8,7.3,11.73,11.16,3,3.05,5.86,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a127.07,127.07,0,0,0-15.69,4.13,75.76,75.76,0,0,0-7.56,3,51,51,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.23,25.23,0,0,0-4.45,6.82,19.3,19.3,0,0,0-.74,1.91c-.11.33-.22.64-.31,1a8.92,8.92,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.34.17,2,.25,1.35.13,2.7.23,4.06.24h2l1-.05,1-.06a42.83,42.83,0,0,0,8-1.36,38.12,38.12,0,0,0,7.57-3,31.81,31.81,0,0,0,3.49-2.12,24.47,24.47,0,0,0,3.13-2.61,18,18,0,0,0,1.37-1.53,14.88,14.88,0,0,0,1.16-1.69,15.33,15.33,0,0,0,1.62-3.77,17.39,17.39,0,0,0,.6-4,21.31,21.31,0,0,0-.26-4.07,33.68,33.68,0,0,0-2.29-7.81,55.94,55.94,0,0,0-3.72-7.22c-1.41-2.31-2.94-4.55-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.36-.76s21.59.66,32.35,1.46,21.52,1.89,32.23,3.25c5.35.67,10.7,1.44,16,2.24s10.66,1.66,16,2.59c10.63,1.87,21.22,4,31.62,6.88,5.21,1.42,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.48,1,4.94,2.14,7.36,3.32a111.26,111.26,0,0,1,14,8c2.22,1.52,4.39,3.12,6.47,4.82l.78.64.76.66c.52.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a30.85,30.85,0,0,1,4.72,6.43,22.67,22.67,0,0,1,1.59,3.64,20.33,20.33,0,0,1,.86,3.86,21.12,21.12,0,0,1-.56,7.87,32.18,32.18,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.31,4.23-5.1,6.25-3.56,4-7.38,7.85-11.24,11.61-7.76,7.51-15.77,14.76-23.34,22.5C526,569,522.28,573,518.87,577.23a95.36,95.36,0,0,0-9.25,13.38,56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.08,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,64,64,0,0,0,7.1,14.63,78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,123.89,123.89,0,0,0,13.78,8.59c.87.48,1.75.93,2.64,1.39ZM329.5,448.78c1.62,2.15,3.14,4.38,4.54,6.68a55.73,55.73,0,0,1,3.68,7.17,33.6,33.6,0,0,1,2.26,7.71,19,19,0,0,1-.35,8,14.75,14.75,0,0,1-1.57,3.65,14.56,14.56,0,0,1-1.13,1.65,15.69,15.69,0,0,1-1.34,1.48,23.71,23.71,0,0,1-3.08,2.57,31.63,31.63,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.78,42.78,0,0,1-7.94,1.34l-1,.06-1,0h-2c-1.35,0-2.69-.11-4-.24-.66-.08-1.33-.14-2-.25l-1-.15-1-.18c-1.32-.24-2.63-.54-3.93-.88a40.07,40.07,0,0,1-7.52-2.83,26.77,26.77,0,0,1-6.59-4.54,18.34,18.34,0,0,1-2.59-3,13.49,13.49,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9c.05-.32.11-.64.19-1s.2-.63.3-.95c.21-.63.46-1.25.72-1.86a24.66,24.66,0,0,1,4.38-6.68,33.42,33.42,0,0,1,6.1-5.21,49.21,49.21,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,127.36,127.36,0,0,1,15.63-4.1q3.52-.69,7.08-1.26C328.38,447.32,329,448.05,329.5,448.78Z"/><polygon class="cls-3" points="327.41 446.09 327.83 446.02 328.22 446.54 327.8 446.6 327.41 446.09"/></g><g class="cls-1"><path class="cls-61" d="M549.88,689.42c-.87-.45-1.73-.9-2.58-1.36a124,124,0,0,1-13.69-8.57A99.55,99.55,0,0,1,521.33,669a78.12,78.12,0,0,1-10.15-12.51,63.25,63.25,0,0,1-7-14.46,59.66,59.66,0,0,1-2-7.79,57.94,57.94,0,0,1-.88-8,63.17,63.17,0,0,1,1.42-16,55.17,55.17,0,0,1,5.9-14.9,95.5,95.5,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.56-14.95,23.33-22.47,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.3a56.17,56.17,0,0,0,4.42-6.87,33.63,33.63,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.84-21.06-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.78-2.73-3.39-5.67-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,25.74,25.74,0,0,1-1.84-3.58,15,15,0,0,1-1.06-3.87,10.31,10.31,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.93,6.93,0,0,1,1-1.7,10.44,10.44,0,0,1,1.42-1.4,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3,3,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.68,28.68,0,0,0-3.13-2.59,53.06,53.06,0,0,0-7-4.17c-2.41-1.22-4.88-2.33-7.38-3.34s-5-2-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.16-1.32-.3-2-.44l-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18c.67.14,1.32.28,2,.44,1.31.31,2.62.65,3.92,1q3.9,1.1,7.74,2.38c2.56.87,5.09,1.8,7.59,2.82s5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,30.84,30.84,0,0,1,3.11,2.58,16.2,16.2,0,0,1,2.55,3.11,8.61,8.61,0,0,1,1.34,3.74,3,3,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,6,6,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.24.54-2.47,1.1-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,7,7,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a10.7,10.7,0,0,0,.05,2,14.85,14.85,0,0,0,1.06,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33L280.6,409c8.41,6.77,16.78,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.15,3,3.05,5.85,6.2,8.53,9.51q-3.4.55-6.78,1.22a129,129,0,0,0-15.7,4.13,79.11,79.11,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.27-.73,1.91-.11.33-.22.65-.31,1a8.75,8.75,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.26,19.26,0,0,0,2.66,3.11,27.37,27.37,0,0,0,6.71,4.62,40,40,0,0,0,7.62,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a41.93,41.93,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,15.57,15.57,0,0,0,2.77-5.46,16.94,16.94,0,0,0,.43-2,17.56,17.56,0,0,0,.18-2,22.26,22.26,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,78.58,78.58,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.22,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.91c2.48,1,4.94,2.14,7.36,3.32A111.33,111.33,0,0,1,556,483c2.22,1.51,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86A21.37,21.37,0,0,1,575,515a32.55,32.55,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.31,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06A96.15,96.15,0,0,0,507.91,595a56,56,0,0,0-6,15.13,68.77,68.77,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.08,2l0,1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,78,78,0,0,0,10.26,12.6A99.26,99.26,0,0,0,533.21,680a124,124,0,0,0,13.78,8.6l2.65,1.39ZM327.78,453.15a76.94,76.94,0,0,1,4.54,6.68A54.67,54.67,0,0,1,336,467a33,33,0,0,1,2.25,7.7,18.85,18.85,0,0,1-.34,8,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49A23.64,23.64,0,0,1,330.8,492a32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34l-1,.06-1,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.33-.14-2-.25l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,19.2,19.2,0,0,1-2.59-3,13.4,13.4,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.08-.32.19-.64.3-.95.21-.64.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.77,33.77,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3A125.09,125.09,0,0,1,319,452.25q3.53-.71,7.08-1.27C326.67,451.69,327.23,452.42,327.78,453.15Z"/><polygon class="cls-3" points="325.69 450.46 326.12 450.39 326.51 450.91 326.09 450.98 325.69 450.46"/></g><g class="cls-1"><path class="cls-62" d="M548.24,693.65c-.87-.45-1.74-.9-2.6-1.37A124,124,0,0,1,532,683.71a100.38,100.38,0,0,1-12.29-10.45,78.06,78.06,0,0,1-10.14-12.51,63.25,63.25,0,0,1-7-14.46,58.31,58.31,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,95.5,95.5,0,0,1,9.17-13.24c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.77,7.71-7.6,11.29-11.67,1.8-2,3.53-4.12,5.14-6.3a57.38,57.38,0,0,0,4.42-6.87,33.63,33.63,0,0,0,3-7.6,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.9-1.54-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113,113,0,0,0-14.09-8.08c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.84-21.06-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.78-2.73-3.39-5.67-6.59-8.71-9.69C312,441.07,308,437.37,304,433.77c-8.06-7.2-16.45-14-24.87-20.79l-12.64-10.14c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,25.74,25.74,0,0,1-1.84-3.58,15,15,0,0,1-1.06-3.87,10.31,10.31,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.93,6.93,0,0,1,1-1.7,10.44,10.44,0,0,1,1.42-1.4,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.7,5.7,0,0,0,1.34-1.55,3.3,3.3,0,0,0,.37-1,3.25,3.25,0,0,0,0-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,28.68,28.68,0,0,0-3.13-2.59,54.41,54.41,0,0,0-7-4.17c-2.41-1.22-4.88-2.33-7.38-3.34s-5-1.95-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1l-2-.44-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07c.33,0,.66.12,1,.18.66.14,1.32.28,2,.44,1.31.31,2.62.65,3.92,1q3.9,1.09,7.74,2.38c2.56.87,5.09,1.8,7.59,2.82s5,2.12,7.37,3.35a52.4,52.4,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.2,16.2,0,0,1,2.55,3.11,8.61,8.61,0,0,1,1.34,3.74,3,3,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,6,6,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.25.54-2.47,1.1-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,7,7,0,0,0-.31,1c0,.09,0,.17-.05.26l0,.25,0,.25,0,.26a11.59,11.59,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,26.2,26.2,0,0,0,1.86,3.61,50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.85,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.77,16.78,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.22a127.27,127.27,0,0,0-15.7,4.14,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.26,25.26,0,0,0-4.46,6.82c-.27.63-.52,1.27-.74,1.91-.1.33-.21.65-.3,1a7.07,7.07,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.2,19.2,0,0,0,2.65,3.11,27.76,27.76,0,0,0,6.71,4.62,40.3,40.3,0,0,0,7.63,2.85c1.31.35,2.63.65,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.17,2,.25,1.35.13,2.71.23,4.07.24h2l1,0c.34,0,.68-.05,1-.07a41.93,41.93,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,18,18,0,0,0,1.37-1.53,15.57,15.57,0,0,0,2.77-5.46,16.94,16.94,0,0,0,.43-2,17.56,17.56,0,0,0,.18-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,78.58,78.58,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25c5.36.68,10.7,1.44,16,2.24s10.67,1.67,16,2.6c10.63,1.86,21.22,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.36,7.54,2.91c2.48,1,4.94,2.14,7.36,3.32a111.33,111.33,0,0,1,14,8c2.22,1.51,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.89,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,32.55,32.55,0,0,1-3,7.4A56.59,56.59,0,0,1,566,533.4c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.67-.06,1.35-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,77.62,77.62,0,0,0,10.26,12.6,99.26,99.26,0,0,0,12.39,10.5,124.77,124.77,0,0,0,13.77,8.6l2.68,1.4ZM326.12,457.37a76.94,76.94,0,0,1,4.54,6.68,55.92,55.92,0,0,1,3.69,7.18,33,33,0,0,1,2.25,7.7,18.85,18.85,0,0,1-.34,7.95,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,23.64,23.64,0,0,1-3.08,2.56,32.49,32.49,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34l-1,.06-1,0c-.34,0-.67,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.33-.14-2-.25l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.25,13.25,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,9.59,9.59,0,0,1,.19-1c.08-.32.19-.64.3-1,.21-.64.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.43,33.43,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.52-.71,7.08-1.27C325,455.91,325.57,456.64,326.12,457.37Z"/><polygon class="cls-3" points="324.04 454.68 324.46 454.61 324.85 455.13 324.43 455.2 324.04 454.68"/></g><g class="cls-1"><path class="cls-63" d="M546.68,697.69c-.85-.44-1.68-.88-2.51-1.33a124,124,0,0,1-13.69-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63.32,63.32,0,0,1-7-14.47,58.31,58.31,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9,95.5,95.5,0,0,1,9.17-13.24c3.4-4.18,7-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.52-4.13,5.14-6.31a57.26,57.26,0,0,0,4.42-6.86,33.7,33.7,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6C565,500,564,499,563,498.09c-.51-.44-1-.9-1.54-1.33l-.77-.66-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85a111.87,111.87,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.83-21.06-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.57-16.68,1.44-24.94,2.78-2.73-3.38-5.68-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79L265,406.92c-4.2-3.39-8.38-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.79-3.85-5.55-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1.05-3.87,10.29,10.29,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a5.24,5.24,0,0,1,.3-.95,6.42,6.42,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.63,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.08,17.08,0,0,0,3.44-2.15,5.81,5.81,0,0,0,1.34-1.54,3.36,3.36,0,0,0,.37-1,3.23,3.23,0,0,0,0-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.88,29.88,0,0,0-3.13-2.59,54.34,54.34,0,0,0-7-4.16c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.15-1.32-.3-2-.43l-1-.19c-.16,0-.33-.05-.5-.06l-.26,0c-.09,0-.16-.05-.28.06l.08,0h.2l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.66,3.92,1q3.9,1.08,7.74,2.38c2.56.86,5.09,1.79,7.59,2.81s5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.2,16.2,0,0,1,2.55,3.11,8.6,8.6,0,0,1,1.34,3.75,2.69,2.69,0,0,1,0,1,3.12,3.12,0,0,1-.35.92,5.65,5.65,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.25.54-2.47,1.11-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,6.69,6.69,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.25,0,.26,0,.25a10.69,10.69,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.35,7.35,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.27,19.27,0,0,0,2.65,3.12,28,28,0,0,0,6.71,4.61,40.3,40.3,0,0,0,7.63,2.85c1.31.36,2.63.66,4,.9l1,.17c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.07.24h1l1,0,1,0c.34,0,.68,0,1-.07a41.89,41.89,0,0,0,8-1.36,38.17,38.17,0,0,0,7.58-2.95,31.76,31.76,0,0,0,3.48-2.13,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.53,15.53,0,0,0,3.19-7.46,15.63,15.63,0,0,0,.19-2,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.94,55.94,0,0,0-3.72-7.22,81,81,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.31a112,112,0,0,1,14,8.05c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.52.43,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8A31.42,31.42,0,0,1,570,508a22.51,22.51,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,32.83,32.83,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.6-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a57.86,57.86,0,0,0,.91,8.1,59.8,59.8,0,0,0,2,7.9,63.57,63.57,0,0,0,7.1,14.62,78.16,78.16,0,0,0,10.25,12.61,101.83,101.83,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.86.46,1.72.91,2.59,1.35Zm-222-236.24a79.42,79.42,0,0,1,4.54,6.69,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34c-.33,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.23-.67-.08-1.33-.15-2-.26l-1-.15-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.27,18.27,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.4,9.4,0,0,1-.37-3.9,7.76,7.76,0,0,1,.19-1c.08-.31.19-.64.3-.95.21-.63.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.43,33.43,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C323.54,460,324.1,460.72,324.65,461.45Z"/><polygon class="cls-3" points="322.56 458.76 322.99 458.69 323.38 459.21 322.96 459.28 322.56 458.76"/></g><g class="cls-1"><path class="cls-64" d="M545,702.07c-.85-.44-1.69-.88-2.53-1.34a123.36,123.36,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63.32,63.32,0,0,1-7-14.47A57.3,57.3,0,0,1,496.49,639a63.64,63.64,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89A95.34,95.34,0,0,1,513,594.83c3.4-4.18,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.26,57.26,0,0,0,4.42-6.86,34.29,34.29,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,20.62,20.62,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.92-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.65c-2.1-1.71-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09q-3.66-1.77-7.41-3.33c-2.51-1-5-2-7.58-2.92-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85q-8-1.4-16-2.58t-16.06-2.23q-16.08-2-32.26-3.22t-32.39-1.42c-10.81-.14-21.63.07-32.42.8-8.35.56-16.68,1.43-25,2.77-2.72-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L263.31,411.3c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1.05-3.87,10.27,10.27,0,0,1,0-2l0-.25,0-.25,0-.24c0-.09,0-.17,0-.25a6.49,6.49,0,0,1,.29-.95,6.73,6.73,0,0,1,1.05-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.52,2.49-1,3.7-1.65a16.83,16.83,0,0,0,3.45-2.14,6,6,0,0,0,1.34-1.55,3.41,3.41,0,0,0,.37-1,3.62,3.62,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.57,29.57,0,0,0-3.13-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5-1.94-7.61-2.8-5.14-1.66-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17,17,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2.05,15.3,15.3,0,0,0,1.07,3.92,25.11,25.11,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.32l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125,125,0,0,0-15.7,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34,34,0,0,0-6.19,5.3,25.11,25.11,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.85,9.85,0,0,0,.39,4.11,13.59,13.59,0,0,0,1.8,3.69,18.85,18.85,0,0,0,2.65,3.12,27.56,27.56,0,0,0,6.71,4.62A40.9,40.9,0,0,0,291,509.9c1.32.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0c.34,0,.67,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,16.49,16.49,0,0,0,1.37-1.52,17.45,17.45,0,0,0,1.16-1.69,15.6,15.6,0,0,0,2-5.78,19.57,19.57,0,0,0,.19-2,23.07,23.07,0,0,0-.26-4.07,34.17,34.17,0,0,0-2.29-7.81,54.77,54.77,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71c-.51-.68-1-1.34-1.56-2,8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.37,7.53,2.92c2.49,1,4.95,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.39,3.12,6.46,4.82l.78.64.77.65,1.52,1.33c1,.9,1.95,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,22.51,22.51,0,0,1,1.58,3.64,20.62,20.62,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96,96,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.42,59.42,0,0,0,.9,8.09,61,61,0,0,0,2,7.9,64,64,0,0,0,7.09,14.63A79.13,79.13,0,0,0,516,682.22a101,101,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.86.47,1.73.92,2.6,1.36Zm-222-236.24a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,15,15,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,29.47,29.47,0,0,1-3.44,2.09,37.29,37.29,0,0,1-7.49,2.92A41.71,41.71,0,0,1,307.1,511c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.7,39.7,0,0,1-7.53-2.82,26.9,26.9,0,0,1-6.58-4.54,17.88,17.88,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.3-.95.21-.63.45-1.25.72-1.87a24.78,24.78,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C321.83,464.37,322.39,465.09,322.94,465.83Z"/><polygon class="cls-3" points="320.85 463.13 321.27 463.07 321.67 463.59 321.25 463.65 320.85 463.13"/></g><g class="cls-1"><path class="cls-65" d="M543.34,706.3,540.79,705a123.36,123.36,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63,63,0,0,1-7-14.46,57.46,57.46,0,0,1-2.87-15.79,63.18,63.18,0,0,1,1.43-16,55.11,55.11,0,0,1,5.9-14.89,95.34,95.34,0,0,1,9.17-13.25c3.4-4.18,7.05-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.59,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,20.62,20.62,0,0,0-.91-4,23.86,23.86,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.92-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.65c-2.1-1.71-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.18-4.92-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21-5-31.7-6.85q-8-1.4-16-2.58t-16.06-2.23q-16.09-2-32.26-3.22T377,463.72c-10.81-.14-21.63.07-32.42.8-8.35.56-16.68,1.43-24.95,2.77-2.72-3.38-5.67-6.58-8.7-9.69-3.79-3.86-7.73-7.55-11.76-11.16-8.07-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1.05-3.87,10.27,10.27,0,0,1,0-2l0-.25,0-.25,0-.24c0-.09,0-.17.05-.25a6.49,6.49,0,0,1,.29-.95,6.91,6.91,0,0,1,1.05-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.52,2.49-1.05,3.7-1.65a16.83,16.83,0,0,0,3.45-2.14,6,6,0,0,0,1.34-1.55,4,4,0,0,0,.37-1,3.57,3.57,0,0,0,0-1,9,9,0,0,0-1.37-3.82,16.53,16.53,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-7-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8S216,331.66,213.4,331c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.06,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.81,5,2.13,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17,17,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.25a10,10,0,0,0,0,2.05,15.19,15.19,0,0,0,1.07,3.92,25.11,25.11,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.81,7.89,7.4,12,10.91s8.29,6.93,12.49,10.32l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a125,125,0,0,0-15.7,4.13,74.17,74.17,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34,34,0,0,0-6.19,5.3,25.11,25.11,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.69,9.69,0,0,0,.39,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0c.34,0,.67,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,15.06,15.06,0,0,0,1.36-1.52,15.92,15.92,0,0,0,1.17-1.69,15.6,15.6,0,0,0,2-5.78,17.18,17.18,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34.17,34.17,0,0,0-2.29-7.81,54.77,54.77,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.24q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.36,7.53,2.92c2.49,1,5,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.39,3.12,6.46,4.82l.78.64.77.65,1.52,1.33c1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.62,20.62,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a96,96,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.74,59.74,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63,79.13,79.13,0,0,0,10.26,12.6,100.21,100.21,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.87.47,1.75.92,2.62,1.37ZM321.28,470.05a79.26,79.26,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.14,19.14,0,0,1-.34,7.94,14.82,14.82,0,0,1-2.71,5.3,14.44,14.44,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,29.47,29.47,0,0,1-3.44,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a39.7,39.7,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.87a24.78,24.78,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C320.17,468.59,320.73,469.31,321.28,470.05Z"/><polygon class="cls-3" points="319.19 467.36 319.62 467.29 320.01 467.81 319.58 467.87 319.19 467.36"/></g><g class="cls-1"><path class="cls-66" d="M541.72,710.46c-.86-.44-1.72-.89-2.57-1.36a124,124,0,0,1-13.69-8.57,99.64,99.64,0,0,1-12.29-10.45A77.55,77.55,0,0,1,503,677.58a63.32,63.32,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55,55,0,0,1,5.9-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a57.26,57.26,0,0,0,4.42-6.86,33.81,33.81,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92q-7.65-2.73-15.5-4.83c-10.44-2.84-21.05-5-31.69-6.86q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.57-16.68,1.44-24.94,2.78-2.73-3.38-5.68-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L260,419.66c-4.2-3.39-8.38-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.79-3.84-5.55-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1.05-3.87,10.27,10.27,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a5.5,5.5,0,0,1,.3-.95,6.42,6.42,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.52,2.49-1,3.7-1.65a17.28,17.28,0,0,0,3.45-2.14,6,6,0,0,0,1.34-1.55,3.41,3.41,0,0,0,.37-1,3.31,3.31,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.57,29.57,0,0,0-3.13-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-1.94-7.61-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.54.54,0,0,1,.2,0h.25l.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.79,7.59,2.81,5,2.12,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.73,8.73,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7.27,7.27,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.25,0,.26,0,.25a10.81,10.81,0,0,0,0,2.05,15.3,15.3,0,0,0,1.07,3.92,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.48,10.33L272.45,430c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.79,9.79,0,0,0,.39,4.1,13.65,13.65,0,0,0,1.8,3.7,18.85,18.85,0,0,0,2.65,3.12,28,28,0,0,0,6.71,4.62,41.17,41.17,0,0,0,7.62,2.85c1.32.35,2.64.65,4,.89l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.07.23h1c.34,0,.68,0,1,0l1,0c.34,0,.68,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.83,38.83,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12A23.84,23.84,0,0,0,326,510.8a15.95,15.95,0,0,0,2.53-3.22,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,15.47,15.47,0,0,0,.19-2,23.07,23.07,0,0,0-.26-4.07,34,34,0,0,0-2.29-7.81,54.77,54.77,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65c.52.44,1,.89,1.52,1.33,1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,22.51,22.51,0,0,1,1.58,3.64,19.87,19.87,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07A95.46,95.46,0,0,0,499.76,616a56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,63.64,63.64,0,0,0,7.1,14.63,78.52,78.52,0,0,0,10.25,12.6,101,101,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.88.47,1.77.94,2.66,1.39ZM319.63,474.2a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.06,37.06,0,0,1-7.49,2.92,42.52,42.52,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.18,27.18,0,0,1-6.58-4.54,18.27,18.27,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.3-1,.21-.63.45-1.25.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C318.52,472.74,319.08,473.46,319.63,474.2Z"/><polygon class="cls-3" points="317.54 471.5 317.97 471.44 318.36 471.96 317.94 472.02 317.54 471.5"/></g><g class="cls-1"><path class="cls-67" d="M540,714.84c-.87-.44-1.74-.9-2.6-1.36a124.94,124.94,0,0,1-13.68-8.58,99.64,99.64,0,0,1-12.29-10.45A77.55,77.55,0,0,1,501.32,682a63,63,0,0,1-7-14.46,57.46,57.46,0,0,1-2.87-15.79,63.63,63.63,0,0,1,1.42-16,55.46,55.46,0,0,1,5.91-14.89A95.34,95.34,0,0,1,508,607.57c3.4-4.17,7-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.79-2,3.52-4.12,5.14-6.31a55.23,55.23,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.36,23.36,0,0,0-1.64-3.77,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.77-.66-.79-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.18-4.92-2.28-7.42-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.09-2-32.26-3.22t-32.39-1.43c-10.81-.14-21.63.08-32.42.8-8.35.56-16.68,1.43-24.95,2.77-2.72-3.38-5.67-6.58-8.7-9.68-3.79-3.87-7.73-7.56-11.76-11.17-8.07-7.19-16.45-14-24.87-20.78L258.29,424c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87C231.87,401,230,399,228.25,397a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.24c0-.08,0-.17.05-.25a6,6,0,0,1,.29-.94,6.79,6.79,0,0,1,1-1.7,10.52,10.52,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.74,2.47-1.08,5-2,7.5-3,1.26-.51,2.5-1,3.71-1.65a16.83,16.83,0,0,0,3.45-2.14,5.86,5.86,0,0,0,1.34-1.55,4,4,0,0,0,.37-1,3.57,3.57,0,0,0,.05-1,9,9,0,0,0-1.37-3.82,16.84,16.84,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.35s-5-1.94-7.6-2.8-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44l-1-.18-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a53.43,53.43,0,0,1,6.93,4.16,27.36,27.36,0,0,1,3.1,2.58,16.12,16.12,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.19,3.19,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17,17,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.44,6.74,6.74,0,0,0-1.07,1.74,5.58,5.58,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.26,0,.25,0,.26a9.94,9.94,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,52,52,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.61,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.78,1.23a126.76,126.76,0,0,0-15.7,4.13,76.56,76.56,0,0,0-7.55,3,50.82,50.82,0,0,0-7.1,4,34.42,34.42,0,0,0-6.19,5.3,24.88,24.88,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.69,9.69,0,0,0,.39,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12,27.56,27.56,0,0,0,6.71,4.62,40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18c.33.06.67.1,1,.15.67.1,1.35.17,2,.25,1.35.13,2.71.23,4.06.24h2l1-.05c.34,0,.67,0,1-.06a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.57,24.57,0,0,0,3.14-2.61,16.35,16.35,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.6,15.6,0,0,0,2-5.78,17.18,17.18,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34.17,34.17,0,0,0-2.29-7.81A56,56,0,0,0,322.8,485a80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.53.91,5.05,1.88,7.53,2.92s5,2.14,7.37,3.32a112,112,0,0,1,14,8c2.22,1.52,4.39,3.12,6.46,4.82l.78.64.77.66c.51.43,1,.88,1.52,1.32,1,.9,2,1.83,2.87,2.8a31.58,31.58,0,0,1,4.72,6.43,22.62,22.62,0,0,1,1.58,3.64,20.35,20.35,0,0,1,.87,3.86,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.5-3.78,3.88-7.45,7.86-10.87,12.07a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.74,59.74,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89,64,64,0,0,0,7.09,14.63A79.13,79.13,0,0,0,511,695a100.21,100.21,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.89.48,1.78.94,2.67,1.4ZM317.92,478.57a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.2,19.2,0,0,1-.34,7.95,15.54,15.54,0,0,1-1.57,3.65,14.64,14.64,0,0,1-1.14,1.65,15.59,15.59,0,0,1-1.33,1.48,23.71,23.71,0,0,1-3.08,2.57,30.83,30.83,0,0,1-3.44,2.08,37.29,37.29,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67.05-1,.06l-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.14-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.88a40.43,40.43,0,0,1-7.53-2.83,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.19,13.19,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-1,.22-.63.46-1.25.73-1.86a24.63,24.63,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,51,51,0,0,1,7-3.92,76.9,76.9,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.52-.69,7.08-1.26C316.81,477.11,317.37,477.84,317.92,478.57Z"/><polygon class="cls-3" points="315.83 475.88 316.25 475.81 316.65 476.33 316.23 476.39 315.83 475.88"/></g><g class="cls-1"><path class="cls-68" d="M538.39,719.08c-.88-.46-1.75-.91-2.62-1.38a124.94,124.94,0,0,1-13.68-8.58,100.44,100.44,0,0,1-12.29-10.44,78.06,78.06,0,0,1-10.14-12.51,62.84,62.84,0,0,1-7-14.46,57.46,57.46,0,0,1-2.87-15.79,63.17,63.17,0,0,1,1.42-16A55.46,55.46,0,0,1,497.14,625a95.34,95.34,0,0,1,9.17-13.25c3.4-4.17,7.05-8.14,10.82-12,7.54-7.71,15.56-15,23.33-22.47,3.88-3.77,7.7-7.6,11.29-11.67,1.79-2,3.52-4.12,5.14-6.31a55.23,55.23,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,21.37,21.37,0,0,0-.91-4,23.36,23.36,0,0,0-1.64-3.77,31.86,31.86,0,0,0-4.86-6.6c-.93-1-1.91-1.94-2.93-2.85-.51-.45-1-.9-1.53-1.34l-.78-.66-.78-.64c-2.1-1.72-4.29-3.33-6.53-4.86a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.18-4.92-2.28-7.42-3.32s-5-2-7.57-2.93c-5.1-1.82-10.28-3.41-15.5-4.83-10.44-2.84-21.05-5-31.7-6.85-5.32-.93-10.66-1.77-16-2.58s-10.7-1.55-16.06-2.22q-16.1-2-32.26-3.22T372,476.46c-10.81-.14-21.63.08-32.42.8-8.35.56-16.68,1.43-24.95,2.77-2.73-3.38-5.67-6.58-8.7-9.68-3.79-3.87-7.73-7.56-11.76-11.17-8.07-7.19-16.45-14-24.87-20.78l-12.64-10.14c-4.2-3.39-8.39-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.9-3.78-3.85-5.54-5.89a50.71,50.71,0,0,1-4.83-6.48,26.34,26.34,0,0,1-1.85-3.58,14.52,14.52,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.24,0-.25a2.21,2.21,0,0,1,0-.25,6,6,0,0,1,.29-.94,6.79,6.79,0,0,1,1-1.7,10.52,10.52,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.18-.64,2.41-1.21,3.65-1.74,2.47-1.08,5-2,7.5-3,1.25-.51,2.5-1,3.71-1.65a16.83,16.83,0,0,0,3.45-2.14,5.64,5.64,0,0,0,1.33-1.55,3.63,3.63,0,0,0,.38-1,3.57,3.57,0,0,0,.05-1,9.15,9.15,0,0,0-1.37-3.82,16.84,16.84,0,0,0-2.59-3.13,28.48,28.48,0,0,0-3.12-2.58,54.41,54.41,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.39-3.34s-5-1.95-7.6-2.81-5.14-1.65-7.75-2.37c-1.3-.36-2.61-.7-3.92-1-.66-.16-1.32-.31-2-.44l-1-.18L201,342l-.26,0c-.09,0-.16,0-.28.07l.08,0a.93.93,0,0,1,.2,0l.25,0,.5.07,1,.18c.66.13,1.32.28,2,.44,1.31.31,2.62.65,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.8,7.59,2.82,5,2.12,7.37,3.35a52.65,52.65,0,0,1,6.92,4.16,26.61,26.61,0,0,1,3.11,2.58,16.12,16.12,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.19,3.19,0,0,1-.35.92,6.05,6.05,0,0,1-1.3,1.51,16.93,16.93,0,0,1-3.42,2.11c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,2-7.52,3-1.24.53-2.47,1.1-3.66,1.74a21.82,21.82,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.44,6.74,6.74,0,0,0-1.07,1.74,5.86,5.86,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.26,0,.25,0,.26a9.94,9.94,0,0,0,0,2,15.19,15.19,0,0,0,1.07,3.92,25.76,25.76,0,0,0,1.86,3.62,52,52,0,0,0,4.83,6.51c1.77,2.05,3.64,4,5.56,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.15c8.41,6.78,16.78,13.61,24.83,20.81,4,3.61,7.95,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5-2.27.38-4.53.78-6.79,1.23a127.07,127.07,0,0,0-15.69,4.13,76.56,76.56,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25,25,0,0,0-4.46,6.82c-.27.63-.52,1.26-.74,1.91-.1.33-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.69,9.69,0,0,0,.39,4.11,13.86,13.86,0,0,0,1.79,3.69,18.91,18.91,0,0,0,2.66,3.12A27.56,27.56,0,0,0,276.7,524a40.64,40.64,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.18,1,.15c.67.1,1.35.17,2,.25,1.35.13,2.71.23,4.06.24h2l1,0c.34,0,.67,0,1-.06a42.69,42.69,0,0,0,8-1.36,38.2,38.2,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,24.57,24.57,0,0,0,3.14-2.61,16.35,16.35,0,0,0,1.36-1.53,15,15,0,0,0,1.17-1.69,15.6,15.6,0,0,0,2-5.78,17.18,17.18,0,0,0,.18-2,22.15,22.15,0,0,0-.25-4.07,34,34,0,0,0-2.29-7.8,56.75,56.75,0,0,0-3.73-7.23,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.35-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.46,21.51,1.89,32.22,3.25c5.36.67,10.7,1.44,16,2.24s10.67,1.66,16,2.59c10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83,2.53.91,5,1.89,7.53,2.92s5,2.14,7.37,3.32a113.24,113.24,0,0,1,14,8c2.22,1.52,4.38,3.12,6.46,4.82l.78.64.77.66c.51.43,1,.88,1.51,1.32,1,.9,2,1.83,2.88,2.8a31.58,31.58,0,0,1,4.72,6.43,22.62,22.62,0,0,1,1.58,3.64,21.15,21.15,0,0,1,.87,3.86,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,56.23,56.23,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.76-23.33,22.51-3.78,3.87-7.45,7.85-10.87,12.06a96.15,96.15,0,0,0-9.24,13.38,56,56,0,0,0-6,15.13,66.73,66.73,0,0,0-1.22,8.06c0,.34-.06.68-.09,1l-.06,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.74,59.74,0,0,0,.9,8.1,61.29,61.29,0,0,0,2,7.89A64,64,0,0,0,499,686.58a78.58,78.58,0,0,0,10.26,12.6,100.85,100.85,0,0,0,12.39,10.5,124.26,124.26,0,0,0,13.78,8.59c.89.48,1.79,1,2.69,1.41ZM316.26,482.79a79.26,79.26,0,0,1,4.54,6.68,55.79,55.79,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19.2,19.2,0,0,1-.34,7.95,15.54,15.54,0,0,1-1.57,3.65,14.64,14.64,0,0,1-1.14,1.65,15.59,15.59,0,0,1-1.33,1.48,23.15,23.15,0,0,1-3.09,2.57,29.81,29.81,0,0,1-3.43,2.08,37.29,37.29,0,0,1-7.49,2.92,42.54,42.54,0,0,1-7.93,1.34c-.34,0-.67,0-1,.06l-1,0h-2c-1.34,0-2.68-.11-4-.24-.67-.08-1.34-.14-2-.25-.33-.05-.67-.09-1-.15l-1-.18c-1.32-.24-2.64-.54-3.93-.88a39.48,39.48,0,0,1-7.53-2.83,27.15,27.15,0,0,1-6.59-4.54,18.29,18.29,0,0,1-2.58-3,13.19,13.19,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-.95.22-.63.46-1.25.73-1.86a24.63,24.63,0,0,1,4.37-6.68,33.75,33.75,0,0,1,6.1-5.21,50.89,50.89,0,0,1,7-3.91,74.52,74.52,0,0,1,7.5-3,126.89,126.89,0,0,1,15.63-4.1q3.53-.69,7.08-1.26C315.15,481.33,315.71,482.06,316.26,482.79Z"/><polygon class="cls-3" points="314.17 480.1 314.59 480.03 314.99 480.55 314.56 480.61 314.17 480.1"/></g><g class="cls-1"><path class="cls-69" d="M536.77,723.25c-.88-.45-1.75-.91-2.62-1.38a124,124,0,0,1-13.69-8.57,100.38,100.38,0,0,1-12.29-10.45A78,78,0,0,1,498,690.35a63.32,63.32,0,0,1-7-14.47,58.31,58.31,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55.17,55.17,0,0,1,5.9-14.9A95.5,95.5,0,0,1,504.68,616c3.4-4.18,7.05-8.15,10.82-12,7.54-7.72,15.56-15,23.33-22.48,3.88-3.76,7.71-7.6,11.29-11.66,1.8-2,3.53-4.13,5.14-6.31a58.07,58.07,0,0,0,4.42-6.86,33.89,33.89,0,0,0,3-7.61,22.37,22.37,0,0,0,.57-8.19,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.17,32.17,0,0,0-4.85-6.6c-.94-1-1.92-1.94-2.93-2.85-.51-.44-1-.9-1.54-1.34l-.77-.65-.79-.65c-2.1-1.72-4.29-3.33-6.53-4.85A111.87,111.87,0,0,0,529.24,508c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92c-5.1-1.83-10.27-3.42-15.49-4.84-10.45-2.83-21.06-5-31.7-6.85q-8-1.38-16-2.57c-5.34-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.34.56-16.68,1.43-24.94,2.78-2.73-3.38-5.67-6.59-8.71-9.69-3.78-3.86-7.73-7.56-11.76-11.16-8.06-7.2-16.45-14-24.87-20.79L255,432.43c-4.2-3.39-8.38-6.81-12.5-10.31s-8.15-7.08-12-10.87c-1.92-1.89-3.79-3.85-5.55-5.89a50.61,50.61,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.42,15.42,0,0,1-1.05-3.87,10.31,10.31,0,0,1,0-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a5.24,5.24,0,0,1,.3-.95,6.42,6.42,0,0,1,1-1.69,10,10,0,0,1,1.42-1.41,20.81,20.81,0,0,1,3.37-2.21c1.19-.64,2.41-1.2,3.65-1.74,2.47-1.07,5-2,7.51-3,1.25-.51,2.49-1,3.71-1.64a17.54,17.54,0,0,0,3.44-2.15,5.81,5.81,0,0,0,1.34-1.54,3.36,3.36,0,0,0,.37-1,3.25,3.25,0,0,0,.05-1,8.84,8.84,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.88,29.88,0,0,0-3.13-2.59,55.59,55.59,0,0,0-6.95-4.17c-2.41-1.22-4.88-2.32-7.38-3.34s-5-2-7.61-2.81-5.14-1.65-7.74-2.37c-1.31-.36-2.61-.7-3.93-1-.66-.15-1.32-.3-2-.43l-1-.19c-.16,0-.33-.05-.5-.06l-.26,0c-.09,0-.16,0-.28.06l.08,0a1,1,0,0,1,.2,0l.25,0,.5.07,1,.18,2,.44c1.31.31,2.62.65,3.92,1,2.6.73,5.18,1.52,7.74,2.39s5.09,1.79,7.59,2.81,5,2.12,7.37,3.35a53.5,53.5,0,0,1,6.93,4.17,29.46,29.46,0,0,1,3.11,2.57,16.2,16.2,0,0,1,2.55,3.11,8.6,8.6,0,0,1,1.34,3.75,2.93,2.93,0,0,1,0,1,3.45,3.45,0,0,1-.36.92,5.65,5.65,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.59-2.45,1.12-3.7,1.63-2.5,1-5,2-7.51,3-1.25.54-2.47,1.11-3.67,1.75a20.47,20.47,0,0,0-3.4,2.22,10.31,10.31,0,0,0-1.45,1.43,7.13,7.13,0,0,0-1.08,1.74,6.69,6.69,0,0,0-.31,1c0,.08,0,.16-.05.25l0,.25,0,.26,0,.25a11.57,11.57,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93A26.2,26.2,0,0,0,220,399a50.39,50.39,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.62,10.16c8.41,6.78,16.78,13.6,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125.47,125.47,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,50.89,50.89,0,0,0-7.1,4,34,34,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.9-.1.33-.21.65-.3,1a7.35,7.35,0,0,0-.2,1,9.84,9.84,0,0,0,.39,4.11,13.79,13.79,0,0,0,1.8,3.7,19.71,19.71,0,0,0,2.65,3.12,28,28,0,0,0,6.71,4.61A40.3,40.3,0,0,0,282.7,531c1.31.35,2.63.66,4,.89l1,.18c.33.06.67.1,1,.15.67.11,1.35.18,2,.25,1.35.13,2.71.23,4.07.24h1l1,0,1,0c.34,0,.68-.05,1-.07a41.89,41.89,0,0,0,8-1.36,37.6,37.6,0,0,0,7.58-3,29.37,29.37,0,0,0,3.48-2.12,23,23,0,0,0,3.14-2.61,16.61,16.61,0,0,0,1.37-1.53,15.62,15.62,0,0,0,2.77-5.45,16.73,16.73,0,0,0,.61-4.05,23.18,23.18,0,0,0-.26-4.08,34.09,34.09,0,0,0-2.29-7.8,55.3,55.3,0,0,0-3.72-7.22,81,81,0,0,0-4.58-6.71c-.51-.68-1-1.35-1.55-2,8.13-1.3,16.35-2.15,24.57-2.69,10.77-.71,21.58-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.89,32.22,3.25q8,1,16,2.25t16,2.59c10.63,1.87,21.21,4,31.62,6.87,5.2,1.42,10.36,3,15.43,4.84q3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.31a112,112,0,0,1,14,8c2.22,1.52,4.39,3.11,6.47,4.82l.77.64.77.65c.52.43,1,.88,1.52,1.33,1,.9,2,1.82,2.87,2.8a30.79,30.79,0,0,1,4.72,6.42,22.13,22.13,0,0,1,1.58,3.64,19.77,19.77,0,0,1,.87,3.86,21.59,21.59,0,0,1-.56,7.88,32.83,32.83,0,0,1-3,7.4,56.59,56.59,0,0,1-4.35,6.75c-1.6,2.15-3.32,4.23-5.1,6.24-3.56,4-7.38,7.85-11.25,11.61-7.75,7.51-15.77,14.77-23.33,22.51-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,55.91,55.91,0,0,0-6,15.14,66.57,66.57,0,0,0-1.22,8.05c0,.34-.06.68-.08,1l-.07,1c0,.68-.06,1.35-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a58.77,58.77,0,0,0,2.93,16,63.64,63.64,0,0,0,7.1,14.63,77.19,77.19,0,0,0,10.26,12.6,100.19,100.19,0,0,0,12.39,10.51,124.69,124.69,0,0,0,13.77,8.59l2.7,1.41ZM314.63,487c1.62,2.16,3.15,4.38,4.54,6.68a55.92,55.92,0,0,1,3.69,7.18,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,15.56,15.56,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.62,37.62,0,0,1-7.49,2.91,41.73,41.73,0,0,1-7.93,1.34l-1,.06-1,0c-.34,0-.67,0-1,0h-1c-1.34,0-2.68-.11-4-.24-.67-.07-1.33-.14-2-.25-.33,0-.66-.09-1-.15l-1-.17c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.46,27.46,0,0,1-6.58-4.54,18.69,18.69,0,0,1-2.59-3,13.25,13.25,0,0,1-1.73-3.57,9.34,9.34,0,0,1-.37-3.89,7.41,7.41,0,0,1,.19-1c.08-.31.19-.64.3-.95.21-.64.46-1.26.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.43,33.43,0,0,1,6.11-5.2,50.27,50.27,0,0,1,7-3.92,77,77,0,0,1,7.5-3,125.09,125.09,0,0,1,15.63-4.09q3.53-.71,7.08-1.27C313.52,485.51,314.08,486.23,314.63,487Z"/><polygon class="cls-3" points="312.55 484.27 312.97 484.2 313.36 484.72 312.94 484.79 312.55 484.27"/></g><g class="cls-1"><path class="cls-70" d="M535.07,727.63c-.88-.45-1.76-.91-2.63-1.39a124,124,0,0,1-13.69-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,63.32,63.32,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55,55,0,0,1,5.9-14.89A94.75,94.75,0,0,1,503,620.34c3.4-4.18,7-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31A57.26,57.26,0,0,0,558,561a34.29,34.29,0,0,0,3-7.6,22.42,22.42,0,0,0,.57-8.2,21.35,21.35,0,0,0-.9-4,24.44,24.44,0,0,0-1.65-3.78,32.38,32.38,0,0,0-4.85-6.59c-.94-1-1.92-1.94-2.93-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.41-3.33s-5-2-7.58-2.92q-7.65-2.73-15.5-4.83c-10.44-2.84-21.05-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.79c-8.35.57-16.68,1.44-24.95,2.78-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L253.29,436.8c-4.2-3.39-8.39-6.8-12.5-10.3s-8.15-7.09-12-10.88c-1.92-1.89-3.79-3.84-5.55-5.89a49.92,49.92,0,0,1-4.83-6.47,26.94,26.94,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16.05-.24a6.49,6.49,0,0,1,.29-.95,6.73,6.73,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.52,2.49-1.05,3.7-1.65a17.28,17.28,0,0,0,3.45-2.14,6,6,0,0,0,1.34-1.55,3.36,3.36,0,0,0,.37-1,3.23,3.23,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.57,29.57,0,0,0-3.13-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-1.94-7.61-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.7-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.54.54,0,0,1,.2,0h.25l.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.79,7.59,2.81,5,2.12,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.86,8.86,0,0,1,1.34,3.75,2.69,2.69,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17,0,.25l0,.25,0,.26,0,.25a9.93,9.93,0,0,0,0,2,15.26,15.26,0,0,0,1.07,3.93,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2.05,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.3,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,8,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.4.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.79,9.79,0,0,0,.39,4.1,13.65,13.65,0,0,0,1.8,3.7,18.85,18.85,0,0,0,2.65,3.12,27.84,27.84,0,0,0,6.71,4.62,40.9,40.9,0,0,0,7.62,2.85c1.32.35,2.64.65,4,.89l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0c.34,0,.67,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.83,38.83,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,15.95,15.95,0,0,0,2.53-3.22,15.08,15.08,0,0,0,1.61-3.76,15.26,15.26,0,0,0,.42-2,15.47,15.47,0,0,0,.19-2,23.07,23.07,0,0,0-.26-4.07,34,34,0,0,0-2.29-7.81,54.77,54.77,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.41,10.36,3,15.43,4.83q3.81,1.37,7.54,2.92c2.48,1,4.94,2.13,7.36,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.39,3.11,6.46,4.82l.78.64.77.65,1.52,1.33c1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,22.51,22.51,0,0,1,1.58,3.64,20.62,20.62,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9,64,64,0,0,0,7.09,14.63A79.13,79.13,0,0,0,506,707.73a101,101,0,0,0,12.4,10.5,124.69,124.69,0,0,0,13.77,8.59c.9.48,1.81,1,2.72,1.42ZM312.92,491.34a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,14.82,14.82,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09A37.06,37.06,0,0,1,305,535.2a42.52,42.52,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.18,27.18,0,0,1-6.58-4.54,18.27,18.27,0,0,1-2.59-3,13.34,13.34,0,0,1-1.73-3.56,9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.3-1,.21-.63.45-1.25.72-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.52-.69,7.08-1.27C311.81,489.88,312.37,490.6,312.92,491.34Z"/><polygon class="cls-3" points="310.83 488.64 311.25 488.57 311.65 489.1 311.23 489.16 310.83 488.64"/></g><g class="cls-1"><path class="cls-71" d="M533.43,731.86c-.89-.45-1.78-.92-2.66-1.4a124.86,124.86,0,0,1-13.68-8.57,99.64,99.64,0,0,1-12.29-10.45,77.55,77.55,0,0,1-10.14-12.5,62.91,62.91,0,0,1-7-14.47,57.3,57.3,0,0,1-2.87-15.78,63.64,63.64,0,0,1,1.43-16,55,55,0,0,1,5.9-14.89,94.75,94.75,0,0,1,9.17-13.25c3.4-4.18,7.05-8.15,10.82-12,7.54-7.71,15.56-15,23.33-22.48,3.88-3.76,7.7-7.6,11.29-11.66,1.79-2,3.52-4.13,5.14-6.31a56,56,0,0,0,4.41-6.86,33.84,33.84,0,0,0,3.05-7.6,22.42,22.42,0,0,0,.57-8.2,20.62,20.62,0,0,0-.91-4,23.47,23.47,0,0,0-1.64-3.78,32.06,32.06,0,0,0-4.86-6.59c-.93-1-1.91-1.94-2.92-2.85-.51-.45-1-.91-1.54-1.34l-.77-.66-.79-.65c-2.1-1.72-4.29-3.32-6.53-4.85a113.11,113.11,0,0,0-14.09-8.09c-2.44-1.19-4.91-2.29-7.42-3.33s-5-2-7.57-2.92c-5.1-1.82-10.28-3.42-15.5-4.83-10.44-2.84-21.05-5-31.7-6.86q-8-1.38-16-2.57c-5.35-.8-10.7-1.56-16.06-2.23q-16.08-2-32.26-3.22c-10.78-.78-21.58-1.28-32.39-1.42s-21.63.07-32.42.8c-8.35.56-16.68,1.43-24.95,2.77-2.72-3.38-5.67-6.59-8.7-9.69-3.79-3.86-7.73-7.56-11.76-11.16-8.07-7.2-16.45-14-24.87-20.78L251.63,441c-4.2-3.4-8.39-6.81-12.5-10.31s-8.15-7.09-12-10.88c-1.92-1.89-3.78-3.84-5.54-5.88a50.71,50.71,0,0,1-4.83-6.48,26.94,26.94,0,0,1-1.85-3.58,15.31,15.31,0,0,1-1-3.87,10.27,10.27,0,0,1-.05-2l0-.25,0-.25,0-.25c0-.08,0-.16,0-.24a6.49,6.49,0,0,1,.29-1,6.73,6.73,0,0,1,1-1.69,10.51,10.51,0,0,1,1.42-1.41,21.44,21.44,0,0,1,3.37-2.2c1.19-.64,2.41-1.21,3.65-1.75,2.47-1.07,5-2,7.51-3,1.25-.52,2.49-1.05,3.7-1.65a17.28,17.28,0,0,0,3.45-2.14,6,6,0,0,0,1.34-1.55,3.74,3.74,0,0,0,.37-1,3.64,3.64,0,0,0,.05-1,9,9,0,0,0-1.37-3.81,16.17,16.17,0,0,0-2.58-3.13,29.57,29.57,0,0,0-3.13-2.58,53.28,53.28,0,0,0-6.95-4.17c-2.41-1.23-4.88-2.33-7.38-3.35s-5.05-1.94-7.61-2.8-5.14-1.66-7.75-2.38c-1.3-.35-2.61-.69-3.92-1-.66-.15-1.32-.3-2-.43-.33-.07-.66-.13-1-.18l-.5-.07-.26,0c-.09,0-.16,0-.28.07l.08,0a.54.54,0,0,1,.2,0H196l.5.07,1,.19c.66.13,1.32.28,2,.43,1.31.32,2.62.66,3.92,1,2.6.72,5.18,1.52,7.74,2.38s5.09,1.79,7.59,2.81,5,2.12,7.37,3.35a54.64,54.64,0,0,1,6.93,4.17,27.36,27.36,0,0,1,3.1,2.58,15.82,15.82,0,0,1,2.56,3.1,8.91,8.91,0,0,1,1.34,3.75,2.93,2.93,0,0,1-.05,1,3.43,3.43,0,0,1-.35.92,5.84,5.84,0,0,1-1.3,1.5,17.44,17.44,0,0,1-3.42,2.12c-1.21.6-2.45,1.13-3.7,1.64-2.5,1-5,1.95-7.52,3-1.24.54-2.47,1.11-3.66,1.75a21.13,21.13,0,0,0-3.4,2.22,11,11,0,0,0-1.46,1.43,7,7,0,0,0-1.07,1.75,5.33,5.33,0,0,0-.31,1c0,.08,0,.17-.05.25l0,.25,0,.26,0,.25a10,10,0,0,0,0,2.05,15.3,15.3,0,0,0,1.07,3.92,25.64,25.64,0,0,0,1.86,3.61,49.71,49.71,0,0,0,4.84,6.51c1.76,2,3.63,4,5.55,5.91,3.84,3.8,7.89,7.39,12,10.9s8.29,6.93,12.49,10.33l12.63,10.16c8.41,6.78,16.78,13.61,24.83,20.81,4,3.6,7.95,7.3,11.73,11.16,3,3.05,5.85,6.19,8.53,9.5q-3.41.56-6.78,1.23a125,125,0,0,0-15.7,4.13,76.49,76.49,0,0,0-7.55,3,51.93,51.93,0,0,0-7.1,4,34.37,34.37,0,0,0-6.19,5.29,25.16,25.16,0,0,0-4.46,6.83c-.27.62-.52,1.26-.74,1.91-.1.32-.21.64-.3,1a7.21,7.21,0,0,0-.2,1,9.63,9.63,0,0,0,.39,4.1,13.65,13.65,0,0,0,1.8,3.7,18.85,18.85,0,0,0,2.65,3.12,27.84,27.84,0,0,0,6.71,4.62,40.9,40.9,0,0,0,7.62,2.85c1.31.35,2.64.65,4,.89l1,.17,1,.16c.67.1,1.35.17,2,.25,1.35.12,2.71.22,4.06.23h1c.34,0,.68,0,1,0l1,0c.34,0,.67,0,1-.06a43.51,43.51,0,0,0,8-1.36,38.83,38.83,0,0,0,7.58-3,31.67,31.67,0,0,0,3.48-2.12,23.84,23.84,0,0,0,3.14-2.62,15.4,15.4,0,0,0,1.37-1.53A16.17,16.17,0,0,0,320.2,529a15.6,15.6,0,0,0,2-5.78,19.83,19.83,0,0,0,.19-2,23.07,23.07,0,0,0-.26-4.07,34,34,0,0,0-2.29-7.81,54.77,54.77,0,0,0-3.73-7.22,80.08,80.08,0,0,0-4.57-6.71q-.76-1-1.56-2c8.14-1.3,16.36-2.14,24.58-2.69,10.77-.71,21.57-.91,32.37-.76s21.58.66,32.35,1.45,21.51,1.9,32.22,3.25q8,1,16,2.25c5.34.81,10.67,1.66,16,2.59,10.63,1.87,21.21,4,31.62,6.88,5.2,1.42,10.36,3,15.43,4.83q3.81,1.36,7.53,2.92c2.49,1,5,2.13,7.37,3.32a110.74,110.74,0,0,1,14,8c2.22,1.52,4.39,3.12,6.46,4.82l.78.64.77.65,1.52,1.33c1,.9,2,1.83,2.87,2.8a31.8,31.8,0,0,1,4.72,6.42,23.42,23.42,0,0,1,1.58,3.64,20.62,20.62,0,0,1,.87,3.87,21.55,21.55,0,0,1-.56,7.87,33.11,33.11,0,0,1-3,7.4,55,55,0,0,1-4.35,6.75c-1.6,2.16-3.32,4.23-5.1,6.25-3.56,4-7.38,7.85-11.25,11.61-7.75,7.5-15.77,14.76-23.33,22.5-3.78,3.87-7.45,7.86-10.87,12.07a95.46,95.46,0,0,0-9.24,13.37,56,56,0,0,0-6,15.14,66.43,66.43,0,0,0-1.22,8.06c0,.33-.06.67-.08,1l-.07,1c0,.68-.06,1.36-.09,2v1c0,.34,0,.68,0,1,0,.68,0,1.36.06,2a59.39,59.39,0,0,0,.9,8.1,61,61,0,0,0,2,7.9A64,64,0,0,0,494,699.35,79.13,79.13,0,0,0,504.29,712a101,101,0,0,0,12.4,10.5A124.69,124.69,0,0,0,530.46,731c.91.49,1.82,1,2.74,1.43ZM311.26,495.56a77.67,77.67,0,0,1,4.54,6.68,55.15,55.15,0,0,1,3.69,7.17,33.08,33.08,0,0,1,2.25,7.71,19,19,0,0,1-.34,7.94,15.61,15.61,0,0,1-1.57,3.66,14.13,14.13,0,0,1-1.14,1.64,14.44,14.44,0,0,1-1.33,1.49,22.86,22.86,0,0,1-3.08,2.56,30.91,30.91,0,0,1-3.44,2.09,37.29,37.29,0,0,1-7.49,2.92,41.71,41.71,0,0,1-7.93,1.33c-.34,0-.67.06-1,.07l-1,0h-2c-1.34,0-2.68-.12-4-.24-.67-.08-1.34-.15-2-.25-.33,0-.67-.09-1-.15l-1-.18c-1.32-.24-2.63-.54-3.93-.89a40.39,40.39,0,0,1-7.53-2.82,27.15,27.15,0,0,1-6.59-4.54,18.7,18.7,0,0,1-2.58-3A13.34,13.34,0,0,1,261,525.2a9.38,9.38,0,0,1-.37-3.9,8.14,8.14,0,0,1,.19-1c.08-.31.19-.63.29-1,.22-.63.46-1.25.73-1.87a24.63,24.63,0,0,1,4.37-6.68,33.7,33.7,0,0,1,6.1-5.2,51,51,0,0,1,7-3.92,74.46,74.46,0,0,1,7.5-3,125.13,125.13,0,0,1,15.63-4.1q3.53-.69,7.08-1.27C310.15,494.1,310.71,494.82,311.26,495.56Z"/><polygon class="cls-3" points="309.17 492.86 309.6 492.8 309.99 493.32 309.57 493.38 309.17 492.86"/></g><g class="cls-1"><path class="cls-72" d="M644.88,442.4c.67.18,1.35.36,2,.52a124.6,124.6,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.56A77.75,77.75,0,0,0,694.84,444a62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,94.06,94.06,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.15-.37-10.79-1.41-21.54-2.09-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8.05,34.29,34.29,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.41,21.41,0,0,1,3.39-2.36,23.49,23.49,0,0,1,3.76-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.35,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.09.81a112.8,112.8,0,0,1,15.86,3.52c2.6.77,5.18,1.62,7.72,2.54s5.07,1.9,7.57,2.94c5,2.09,9.89,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.24,9.36,26,19.36t24.9,20.78c8.08,7.18,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-1.95,10.42,10.42,0,0,0-.1-2,21.17,21.17,0,0,0-1-3.89c-.45-1.28-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.58-1.22-1.14-2.45-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.84,5.84,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.53,16.53,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.32,1.17.66,1.75,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.17.24l-.08,0s-.09-.1-.14-.14l-.2-.16-.42-.28c-.28-.19-.56-.36-.85-.54-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.29-3.58-1.9q-3.61-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,3,3,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1.05,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.08,2.48,1.53,3.75a20.56,20.56,0,0,1,1,3.94,10.65,10.65,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.21a11,11,0,0,1-1.41,1.48,15.57,15.57,0,0,1-3.43,2.18,27.25,27.25,0,0,1-3.81,1.42,52.56,52.56,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.25-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,74.6,74.6,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.43.93a10.13,10.13,0,0,1-.55.89,9.62,9.62,0,0,1-3.05,2.77A13.68,13.68,0,0,1,981,475a19.31,19.31,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.63-2.39-1.3-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.73a43.69,43.69,0,0,1-5-6.41,37.52,37.52,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,23,23,0,0,1-.55-4,15.57,15.57,0,0,1,0-2.05,15.39,15.39,0,0,1,.27-2,15.74,15.74,0,0,1,1.35-3.87,17.3,17.3,0,0,1,1-1.76,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83c2.59-.76,5.23-1.38,7.89-1.88.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.78-18.39-11.32-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.72-1.56-7.53-2.92c-2.54-.91-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.38,21.38,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.5,55.5,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11A56.22,56.22,0,0,1,733,415.89a68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76-.68.76c-.47.49-.93,1-1.42,1.47a58.85,58.85,0,0,1-12.94,9.84,64.39,64.39,0,0,1-15.1,6,79.38,79.38,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94l-2.12-.55ZM967.4,417.25c-2.65.5-5.28,1.12-7.86,1.88A54.93,54.93,0,0,0,952,422a33.39,33.39,0,0,0-6.86,4.18,18.93,18.93,0,0,0-5.09,6.1,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.67,16.67,0,0,0,0,2,22.31,22.31,0,0,0,.55,4,30.81,30.81,0,0,0,1.13,3.85,37.42,37.42,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.17,40.17,0,0,0,7.47,3,27.23,27.23,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63q.27-.4.51-.84c.14-.28.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.82,33.82,0,0,0-1-7.95,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.38-5.71C969.2,416.93,968.3,417.08,967.4,417.25Z"/><polygon class="cls-3" points="970.75 416.67 970.49 416.34 969.85 416.46 970.11 416.79 970.75 416.67"/></g><g class="cls-1"><path class="cls-73" d="M643.18,446.78l2.05.53a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.55,77.84,77.84,0,0,0,15.92-2.4,62.9,62.9,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.28,63.28,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.33-.33-5.39-.57-10.8-.49-16.22,0-2.71.18-5.43.46-8.13a54.88,54.88,0,0,1,1.36-8,33.46,33.46,0,0,1,2.87-7.67,22.45,22.45,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.52,32.52,0,0,1,8-1.61c1.36-.1,2.72-.14,4.09-.13.67,0,1.35,0,2,.05l1,0,1,.05c2.71.15,5.41.44,8.1.82A111.41,111.41,0,0,1,793,292.6c2.6.76,5.17,1.61,7.72,2.53s5.07,1.9,7.57,2.95c5,2.08,9.89,4.39,14.71,6.87,9.62,4.93,18.92,10.49,28,16.29q6.82,4.36,13.56,8.88c4.48,3,9,6.06,13.36,9.18q13.25,9.34,26,19.36t24.89,20.77c8.09,7.18,15.94,14.63,23.42,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1.05,13-1.29,5.39-.31,10.8-.38,16.21-.33,10.8.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a49.79,49.79,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.57,14.57,0,0,0,3.38-2.15,9.38,9.38,0,0,0,1.38-1.44l.16-.2.14-.21.14-.2c0-.07.09-.14.13-.22a4.63,4.63,0,0,0,.42-.9,6.74,6.74,0,0,0,.37-1.95,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.47-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.82,5.82,0,0,1,0-2,3.38,3.38,0,0,1,.38-1,3.12,3.12,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.45,16.45,0,0,1,4-.57,29,29,0,0,1,4.06.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.5s5,2,7.51,3.05,4.92,2.25,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.18.58.35.86.54l.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.07.17.24l-.08,0a1,1,0,0,0-.15-.15l-.19-.15-.42-.29-.86-.53c-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.61-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.52,52.52,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3,3,0,0,0-.62.75,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0-.05,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.27,20.27,0,0,1,1,3.93,10.7,10.7,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,6.63,6.63,0,0,1-.43.94l-.14.22-.14.21-.15.21-.16.2a10.31,10.31,0,0,1-1.4,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.42,50.42,0,0,1-8,1.55c-2.69.32-5.39.52-8.09.63-5.4.21-10.81.14-16.21,0s-10.79-.47-16.19-.79l-16.17-1c-10.78-.65-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.18.34-4.25.25-8.5.63-12.71,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.84,126.84,0,0,1,8.82,13.63,75.79,75.79,0,0,1,3.55,7.31,50.69,50.69,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.44.93a8.24,8.24,0,0,1-.54.9,9.89,9.89,0,0,1-3.06,2.77,14.12,14.12,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.38-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.66-3.16-2.56l-.39-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.49-.71-.73a42.52,42.52,0,0,1-5-6.41,38.05,38.05,0,0,1-3.61-7.29,31.74,31.74,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.53,17.53,0,0,1,0-2.05,15.48,15.48,0,0,1,.28-2,15.07,15.07,0,0,1,1.35-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.76,33.76,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83,79.49,79.49,0,0,1,7.9-1.87c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.1-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.76-14.66-6.83-2.48-1-5-2-7.53-2.92s-5.1-1.75-7.68-2.51A110.1,110.1,0,0,0,777,289.91c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0-2,0c-1.34,0-2.68,0-4,.14a31.45,31.45,0,0,0-7.82,1.56,23,23,0,0,0-3.62,1.63,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.41.2,10.83-.1,16.24a96.31,96.31,0,0,1-2.19,16.11,55.68,55.68,0,0,1-5.78,15.2,69,69,0,0,1-4.53,6.78c-.2.28-.41.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a57.89,57.89,0,0,1-6.13,5.37,59.56,59.56,0,0,1-6.81,4.47,64,64,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,125.61,125.61,0,0,1-16-2.93l-2.13-.56Zm322.53-25.14a78.59,78.59,0,0,0-7.85,1.88,54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,14.94,14.94,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,30.51,30.51,0,0,0,1.14,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.7c.24.24.49.46.74.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.08.79,1.65,1.16l.83.56.86.54c1.13.72,2.31,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27.35,27.35,0,0,0,7.93,1.09,18.93,18.93,0,0,0,4-.51,13.19,13.19,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,7.61,7.61,0,0,0,.5-.83c.15-.29.29-.6.42-.9.27-.62.51-1.24.73-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,49.88,49.88,0,0,0-2.55-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55c-1.42-1.93-2.89-3.83-4.38-5.71C967.52,421.31,966.62,421.47,965.71,421.64Z"/><polygon class="cls-3" points="969.07 421.06 968.81 420.72 968.16 420.84 968.43 421.18 969.07 421.06"/></g><g class="cls-1"><path class="cls-74" d="M641.54,451l2.08.54a124.1,124.1,0,0,0,15.88,2.88,99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,54.92,54.92,0,0,0,5.67-15,95.12,95.12,0,0,0,2.16-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.54-2.1-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05A33.59,33.59,0,0,1,739,304.6a22.16,22.16,0,0,1,5.1-6.45,20.88,20.88,0,0,1,3.38-2.36,23,23,0,0,1,3.76-1.68,31.63,31.63,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.09.81a114.68,114.68,0,0,1,15.87,3.52c2.59.77,5.17,1.62,7.71,2.54s5.08,1.9,7.57,2.94c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.18q13.25,9.34,26,19.35t24.89,20.78c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.79.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.19.14-.21.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.81,6.81,0,0,0,.38-1.95,11.13,11.13,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.22-1.14-2.45-1.63-3.71a17.77,17.77,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2.05,3.41,3.41,0,0,1,.37-1,3,3,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,27.41,27.41,0,0,1,4,.2,52.56,52.56,0,0,1,8,1.6c2.6.71,5.17,1.57,7.7,2.5s5,2,7.51,3.05,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.17.66,1.75,1,.29.17.58.35.86.54a4.43,4.43,0,0,1,.42.29l.2.15c.06.08.15.08.17.25l-.08,0a.86.86,0,0,0-.14-.14l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.46t-7.51-3c-2.53-.93-5.1-1.78-7.7-2.49a55,55,0,0,0-7.92-1.59,30.27,30.27,0,0,0-4-.18,16.2,16.2,0,0,0-4,.56,8.77,8.77,0,0,0-3.51,1.87,3,3,0,0,0-.63.76,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17,17,0,0,0,1.1,3.86c.49,1.26,1,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.09,2.48,1.54,3.75a21.3,21.3,0,0,1,1,3.94,9.9,9.9,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93,1.64,1.64,0,0,1-.14.22l-.14.21-.15.21-.15.21a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,51.35,51.35,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.25-32.36-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.71,1.27,1.43,1.81,2.82,3.63,4.19,5.48a125.77,125.77,0,0,1,8.81,13.63,74.74,74.74,0,0,1,3.56,7.31,52,52,0,0,1,2.57,7.71,33.89,33.89,0,0,1,1,8.09,25,25,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.43.93a8.84,8.84,0,0,1-.55.89,9.62,9.62,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,18.6,18.6,0,0,1-4.07.52,27.77,27.77,0,0,1-8.06-1.11,40.88,40.88,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.37-.35-.75-.69-.72-.72-.71-.73a42.45,42.45,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,33.22,33.22,0,0,1-1.15-3.92,23.93,23.93,0,0,1-.55-4,15.58,15.58,0,0,1,0-2.05,14.28,14.28,0,0,1,.28-2,15.11,15.11,0,0,1,1.34-3.86,16.41,16.41,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.39-14.06-24.88-20.72-17.18-13.1-26-19.32q-6.63-4.65-13.37-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.68-4.75-14.65-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,23.62,23.62,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,56.15,56.15,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1.05-1.31,1.56l-.68.77c-.22.25-.44.51-.68.75-.47.49-.93,1-1.42,1.47a60,60,0,0,1-6.12,5.37,61.54,61.54,0,0,1-6.82,4.47,64.22,64.22,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94l-2.16-.56ZM964.1,425.88a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.86,14.86,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.67,16.67,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.32,30.32,0,0,0,1.13,3.85,37.72,37.72,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71c.24.24.49.46.73.69l.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63q.27-.4.51-.84c.15-.28.28-.59.42-.9.27-.61.5-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.37,33.37,0,0,0-1-7.95,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.37-5.71C965.9,425.55,965,425.7,964.1,425.88Z"/><polygon class="cls-3" points="967.46 425.29 967.19 424.96 966.55 425.08 966.82 425.41 967.46 425.29"/></g><g class="cls-1"><path class="cls-75" d="M639.92,455.18c.71.18,1.41.37,2.12.54a124.28,124.28,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56A77.65,77.65,0,0,0,690,456.76a62.94,62.94,0,0,0,14.91-6,57.39,57.39,0,0,0,12.75-9.73,63.68,63.68,0,0,0,9.73-12.78,55.51,55.51,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23.05-2.71.18-5.42.45-8.13a56.51,56.51,0,0,1,1.37-8,33.34,33.34,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.14.68,0,1.36,0,2,0l1,0,1,.06c2.71.14,5.41.43,8.1.81A112,112,0,0,1,789.76,301c2.6.76,5.17,1.62,7.72,2.54s5.07,1.9,7.57,2.94c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88c4.49,3,9,6.06,13.37,9.17q13.24,9.35,26,19.36t24.89,20.78c8.08,7.17,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.6.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19.05c2.69-.1,5.39-.29,8.06-.61a50.49,50.49,0,0,0,7.93-1.53,27.11,27.11,0,0,0,3.78-1.4,15.33,15.33,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.37,10.37,0,0,0-.11-2,20.31,20.31,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.23-1.14-2.46-1.63-3.72a17,17,0,0,1-1.11-3.91,5.83,5.83,0,0,1,.06-2,3.74,3.74,0,0,1,.37-1,3.66,3.66,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.77,28.77,0,0,1,4,.19,52.58,52.58,0,0,1,8,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c0,.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.36-.86-.54c-.58-.34-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.45s-5-2.11-7.5-3-5.1-1.78-7.71-2.49a53.4,53.4,0,0,0-7.92-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0-.06,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.24,1.08,2.48,1.53,3.76a21.32,21.32,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,6.89,6.89,0,0,1-.39,2,5.33,5.33,0,0,1-.43.94l-.13.22-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50,50,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.14-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a125.11,125.11,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8.05c-.22.64-.47,1.28-.74,1.9-.14.32-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.88,9.88,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,40.07,40.07,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42,42,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,30.75,30.75,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.55,17.55,0,0,1,0-2,15.51,15.51,0,0,1,1.63-5.9,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63A21.24,21.24,0,0,1,940,438.6a34.34,34.34,0,0,1,6.95-4.23,54.88,54.88,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.54-7.48-7.79-15.33-15.21-23.41-22.37s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.93c-2.53-.9-5.09-1.75-7.67-2.51a112.09,112.09,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62A20.26,20.26,0,0,0,743,303a21.28,21.28,0,0,0-4.9,6.2,32.58,32.58,0,0,0-2.79,7.47,55.34,55.34,0,0,0-1.33,7.91c-.27,2.68-.4,5.36-.45,8.05-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78l-.63.8-.63.8c-.43.53-.88,1-1.31,1.56l-.68.76c-.23.25-.45.51-.69.76-.47.49-.93,1-1.41,1.46a60.2,60.2,0,0,1-6.13,5.38,61.54,61.54,0,0,1-6.82,4.47,63.59,63.59,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93l-2.19-.57Zm322.6-25.13c-2.65.5-5.27,1.12-7.86,1.88a54.33,54.33,0,0,0-7.55,2.82,32.82,32.82,0,0,0-6.86,4.17,18.89,18.89,0,0,0-5.1,6.11,14.33,14.33,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,14.69,14.69,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.25.46.5.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.08,40.08,0,0,0,7.46,3,27.3,27.3,0,0,0,7.93,1.08,18.74,18.74,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.15-2.9-4.38-5.71C964.32,429.72,963.42,429.88,962.52,430.05Z"/><polygon class="cls-3" points="965.88 429.47 965.61 429.13 964.97 429.26 965.24 429.59 965.88 429.47"/></g><g class="cls-1"><path class="cls-76" d="M638.23,459.56l2.13.55A123.94,123.94,0,0,0,656.25,463a99.79,99.79,0,0,0,16.12.56,77.74,77.74,0,0,0,15.91-2.4,63.4,63.4,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,55.27,55.27,0,0,0,5.68-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.54-2.09-32.33-.34-5.39-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05,33.59,33.59,0,0,1,2.88-7.66,22,22,0,0,1,5.1-6.44,20.33,20.33,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,31.71,31.71,0,0,1,8-1.61c1.37-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.09.81a114.68,114.68,0,0,1,15.87,3.52q3.9,1.16,7.72,2.54c2.54.92,5.07,1.9,7.56,2.95,5,2.08,9.9,4.39,14.71,6.86,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88T873,352.1q13.25,9.34,26,19.36t24.89,20.77c8.08,7.18,15.93,14.62,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.4.33,10.79.62,16.18.81s10.8.26,16.2.05c2.69-.11,5.39-.3,8.06-.62A49.58,49.58,0,0,0,1090,433a25.6,25.6,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.15-.19.14-.21.15-.21.13-.21a5.64,5.64,0,0,0,.41-.9,6.81,6.81,0,0,0,.38-1.95,10.28,10.28,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2.05,3.74,3.74,0,0,1,.37-1,3.16,3.16,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,27.41,27.41,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.6.72,5.17,1.57,7.71,2.5s5,2,7.5,3.05,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.41.29.21.15c.05.08.14.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.37-7.32-3.46s-5-2.1-7.51-3-5.09-1.77-7.7-2.48a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.7,8.7,0,0,0-3.51,1.86,3,3,0,0,0-.63.76,3.45,3.45,0,0,0-.36.92,6,6,0,0,0,0,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.82,21.82,0,0,1,1,3.93,10.69,10.69,0,0,1,.1,2,6.94,6.94,0,0,1-.38,2,5.23,5.23,0,0,1-.43.93c0,.08-.09.15-.13.22l-.15.21-.15.22-.15.2a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.41.22-10.81.15-16.21,0s-10.8-.47-16.19-.79l-16.18-1c-10.78-.66-21.56-1.25-32.36-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.27,1.42,1.81,2.82,3.63,4.18,5.48A126.75,126.75,0,0,1,977.19,453a74.74,74.74,0,0,1,3.56,7.31,52,52,0,0,1,2.57,7.71,33.89,33.89,0,0,1,1,8.09,25,25,0,0,1-1.3,8c-.23.65-.47,1.28-.74,1.91-.15.31-.28.62-.44.93a8.77,8.77,0,0,1-.54.89,9.91,9.91,0,0,1-3.06,2.78,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.79,27.79,0,0,1-8.07-1.11,41.16,41.16,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.37-.35-.75-.69-.72-.72-.71-.73a42.45,42.45,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,15.58,15.58,0,0,1,0-2.05,14,14,0,0,1,.28-2,15,15,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63A22.54,22.54,0,0,1,938.3,443a33.59,33.59,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37S907.13,378.65,898.64,372s-17.17-13.1-26-19.31Q866,348,859.27,343.52t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.69-4.75-14.66-6.82q-3.73-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.67-2.51a112,112,0,0,0-15.76-3.48c-2.66-.37-5.33-.65-8-.79l-1-.05-1,0c-.67,0-1.35,0-2,0-1.34,0-2.67,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,23.51,23.51,0,0,0-3.62,1.62,19.78,19.78,0,0,0-3.25,2.28,21.5,21.5,0,0,0-4.89,6.19,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.28,2.67-.41,5.36-.45,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.4.21,10.82-.1,16.24a95.4,95.4,0,0,1-2.18,16.11,56,56,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78l-.62.81-.64.79c-.43.53-.87,1.05-1.31,1.57l-.67.76c-.23.25-.45.51-.69.75-.47.49-.93,1-1.41,1.47a58.6,58.6,0,0,1-12.95,9.84,64.22,64.22,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94c-.74-.18-1.47-.37-2.21-.57Zm322.61-25.12a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.86,14.86,0,0,0-1.31,3.76,16.59,16.59,0,0,0-.28,4,23.27,23.27,0,0,0,.55,4,30.32,30.32,0,0,0,1.13,3.85,37.43,37.43,0,0,0,3.57,7.2,42.26,42.26,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71c.24.24.49.46.73.69l.37.34.38.34c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.77,39.77,0,0,0,7.47,3,26.94,26.94,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.05,8.05,0,0,0,.51-.83c.15-.29.28-.6.42-.91q.4-.92.72-1.86a24.6,24.6,0,0,0,1.27-7.89,33.37,33.37,0,0,0-1-7.95,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,126.57,126.57,0,0,0-8.78-13.56q-2.14-2.9-4.38-5.71C962.64,434.11,961.74,434.27,960.84,434.44Z"/><polygon class="cls-3" points="964.2 433.86 963.93 433.52 963.29 433.64 963.56 433.97 964.2 433.86"/></g><g class="cls-1"><path class="cls-77" d="M636.59,463.79c.71.19,1.43.38,2.15.55a124.28,124.28,0,0,0,15.89,2.89,99.79,99.79,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.72,63.72,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.15-.37-10.79-1.42-21.54-2.09-32.33-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,20.69,20.69,0,0,1,3.38-2.36,24,24,0,0,1,3.77-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81a112.8,112.8,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.57,8.88c4.48,3,9,6.06,13.36,9.17q13.25,9.36,26,19.36t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.61.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.59,50.59,0,0,0,7.92-1.53,25.9,25.9,0,0,0,3.78-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-1.95,11.29,11.29,0,0,0-.1-2,21.2,21.2,0,0,0-1-3.89c-.44-1.28-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.84,5.84,0,0,1,0-2,3.44,3.44,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9.1,9.1,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,54,54,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.76,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.29-3.58-1.9q-3.61-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.48,5.48,0,0,0-.05,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.55,1.23,1.08,2.48,1.53,3.75a21.32,21.32,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.64,15.64,0,0,1-3.44,2.18,25.89,25.89,0,0,1-3.8,1.41,50.32,50.32,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,52.2,52.2,0,0,1,2.58,7.72,34.92,34.92,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.47,1.28-.74,1.91-.14.31-.28.61-.44.93a8.11,8.11,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,19.22,19.22,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,17.51,17.51,0,0,1,0-2.05,15.49,15.49,0,0,1,1.63-5.91,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.12-5.78-18.4-11.32-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a112.12,112.12,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56L717,448c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47A58.6,58.6,0,0,1,702,460.08a64.14,64.14,0,0,1-15.09,6,79.47,79.47,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.6,123.87,123.87,0,0,1-16-2.93l-2.23-.58Zm322.63-25.12c-2.65.5-5.27,1.12-7.85,1.88a54.45,54.45,0,0,0-7.56,2.82,33.12,33.12,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32.6,32.6,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71.74.69.37.34.37.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.74,18.74,0,0,0,4-.5,13.25,13.25,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.6.42-.9.27-.61.51-1.24.72-1.87a24.78,24.78,0,0,0,1.28-7.88,34,34,0,0,0-1-8,49.56,49.56,0,0,0-2.56-7.63,75.76,75.76,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.14-2.9-4.38-5.71C961,438.35,960.12,438.5,959.22,438.67Z"/><polygon class="cls-3" points="962.58 438.09 962.31 437.76 961.67 437.88 961.94 438.21 962.58 438.09"/></g><g class="cls-1"><path class="cls-78" d="M635,468c.72.19,1.44.38,2.16.55A124.28,124.28,0,0,0,653,471.41a99.79,99.79,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.72,63.72,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.15-.37-10.79-1.42-21.54-2.09-32.33-.33-5.4-.58-10.81-.49-16.23.05-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.33,21.33,0,0,1,3.38-2.36,24,24,0,0,1,3.77-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81a112.8,112.8,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.57,8.88c4.48,3,8.95,6.06,13.36,9.17q13.25,9.36,26,19.36t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6.05,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.61.73,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.59,50.59,0,0,0,7.92-1.53,25.9,25.9,0,0,0,3.78-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a6.13,6.13,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.29,11.29,0,0,0-.1-2,21.2,21.2,0,0,0-1-3.89c-.44-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.72a17,17,0,0,1-1.1-3.91,5.84,5.84,0,0,1,.05-2,3.44,3.44,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9.1,9.1,0,0,1,3.58-1.89,16.6,16.6,0,0,1,4-.57,29,29,0,0,1,4.06.19,54,54,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.76,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.29-3.58-1.9q-3.62-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.63,16.63,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.55,1.23,1.08,2.48,1.53,3.75a21.32,21.32,0,0,1,1,3.94,11.53,11.53,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.64,15.64,0,0,1-3.44,2.18,27.13,27.13,0,0,1-3.8,1.42,52.68,52.68,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.49.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48A126.71,126.71,0,0,1,974,461.38a79.43,79.43,0,0,1,3.55,7.31,52.2,52.2,0,0,1,2.58,7.72,34.38,34.38,0,0,1,1,8.08,25,25,0,0,1-1.3,8.05c-.22.64-.47,1.28-.74,1.91-.14.31-.28.62-.44.93a8.11,8.11,0,0,1-.54.89A9.65,9.65,0,0,1,975,499a13.68,13.68,0,0,1-3.82,1.52,19.22,19.22,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.17-2.57l-.38-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.73a43,43,0,0,1-5-6.41,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,15.49,15.49,0,0,1,1.63-5.91,15.63,15.63,0,0,1,1-1.76,16.28,16.28,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,33.66,33.66,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.12-5.78-18.4-11.32-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a112.12,112.12,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13A30.93,30.93,0,0,0,745,311.9a22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.66,10.77,1.7,21.54,2.07,32.36.19,5.4.21,10.82-.1,16.23A95.13,95.13,0,0,1,729,426.28a55.89,55.89,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47a58.6,58.6,0,0,1-12.95,9.84,64.14,64.14,0,0,1-15.09,6,79.47,79.47,0,0,1-16.08,2.4,101.16,101.16,0,0,1-16.23-.59,125.31,125.31,0,0,1-16-2.94l-2.24-.58Zm322.64-25.12c-2.65.5-5.27,1.12-7.85,1.88a54.45,54.45,0,0,0-7.56,2.82,33.12,33.12,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32.6,32.6,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71.74.69.37.34.37.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.38,3.51,2a40.36,40.36,0,0,0,7.46,3,27.3,27.3,0,0,0,7.93,1.08,18.74,18.74,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.6.42-.9.27-.61.51-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.3,33.3,0,0,0-1-7.95A49.32,49.32,0,0,0,977,468.9a75.76,75.76,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.15-2.89-4.38-5.71C959.42,442.53,958.51,442.68,957.61,442.85Z"/><polygon class="cls-3" points="960.97 442.27 960.7 441.94 960.06 442.06 960.33 442.39 960.97 442.27"/></g><g class="cls-1"><path class="cls-79" d="M633.27,472.35l2.18.56a124.28,124.28,0,0,0,15.89,2.89,99.78,99.78,0,0,0,16.12.55,77.64,77.64,0,0,0,15.91-2.4,63,63,0,0,0,14.91-6,58.53,58.53,0,0,0,6.72-4.42,57.26,57.26,0,0,0,6-5.31,63.33,63.33,0,0,0,9.73-12.77,55.45,55.45,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.33-.34-5.39-.58-10.8-.49-16.22,0-2.71.18-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.11,22.11,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,23.54,23.54,0,0,1,3.77-1.68,32.43,32.43,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.44,8.09.82a111.85,111.85,0,0,1,15.87,3.52c2.6.76,5.17,1.61,7.72,2.53s5.07,1.9,7.57,2.95c5,2.08,9.89,4.39,14.7,6.87,9.63,4.93,18.92,10.49,28,16.29q6.84,4.37,13.56,8.88c4.49,3,9,6.06,13.37,9.18q13.25,9.35,26,19.36T919,405c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1.05,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.18,1c5.39.33,10.78.62,16.18.81s10.79.26,16.19.05c2.69-.11,5.39-.29,8.06-.62a49.37,49.37,0,0,0,7.93-1.53,25.19,25.19,0,0,0,3.78-1.4,14.63,14.63,0,0,0,3.39-2.15,10.44,10.44,0,0,0,1.38-1.44l.15-.2.15-.21.14-.2c0-.07.09-.14.13-.22a6.19,6.19,0,0,0,.42-.9,7.09,7.09,0,0,0,.37-1.95,10.28,10.28,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.47-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,5.83,5.83,0,0,1,.06-2,3.67,3.67,0,0,1,.37-1,3.6,3.6,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.77,28.77,0,0,1,4.05.2,53.81,53.81,0,0,1,7.95,1.6c2.6.72,5.17,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.42.29.2.16c0,.07.15.07.16.24l-.08,0a.57.57,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.16-.68-1.75-1-1.19-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.22,3.22,0,0,0-.63.75,3.43,3.43,0,0,0-.35.92,5.78,5.78,0,0,0-.06,2,17.59,17.59,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21,21,0,0,1,1,3.93,10.69,10.69,0,0,1,.1,2,6.62,6.62,0,0,1-.38,2,5.68,5.68,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a10.38,10.38,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.32-5.38.52-8.08.63-5.41.21-10.81.14-16.21,0s-10.8-.47-16.19-.79l-16.17-1c-10.78-.65-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47a125.24,125.24,0,0,1,8.81,13.63,75.87,75.87,0,0,1,3.56,7.31,50.65,50.65,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.93a8.24,8.24,0,0,1-.54.9,10,10,0,0,1-3.06,2.77,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3q-1.82-.93-3.54-2l-.86-.55c-.29-.18-.56-.38-.84-.56-.57-.38-1.11-.78-1.67-1.18-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.73-.72c-.24-.23-.47-.49-.7-.73a42.52,42.52,0,0,1-5-6.41,38.05,38.05,0,0,1-3.61-7.29,31.74,31.74,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.53,17.53,0,0,1,0-2.05,15.69,15.69,0,0,1,1.62-5.9,17.53,17.53,0,0,1,1.05-1.77,16.28,16.28,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,34,34,0,0,1,7-4.22,56.24,56.24,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14.05-24.88-20.72-17.17-13.1-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.69-4.76-14.66-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.67-2.51a110.7,110.7,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1,0-1,0-2,0c-1.34,0-2.67,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,22.64,22.64,0,0,0-3.62,1.63,20.81,20.81,0,0,0-3.25,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,56,56,0,0,1-5.79,15.2,67.21,67.21,0,0,1-4.53,6.78c-.2.28-.41.54-.62.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.49-.93,1-1.41,1.47a58.6,58.6,0,0,1-13,9.84,63.62,63.62,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93L633,473Zm322.66-25.11a78.78,78.78,0,0,0-7.86,1.88,54.28,54.28,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,14.45,14.45,0,0,0-1.3,3.76,13.45,13.45,0,0,0-.27,2,14.83,14.83,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.7c.24.24.49.46.73.69l.37.35.38.33c1,.89,2.06,1.72,3.14,2.53.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.72,2.31,1.38,3.51,2a39.37,39.37,0,0,0,7.46,3,27.31,27.31,0,0,0,7.93,1.09,18.75,18.75,0,0,0,3.95-.51,13.07,13.07,0,0,0,3.68-1.47,9.22,9.22,0,0,0,2.9-2.62,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.62.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51,51,0,0,0-2.56-7.63,75.93,75.93,0,0,0-3.53-7.26A126.53,126.53,0,0,0,963,452.48q-2.14-2.89-4.38-5.71C957.73,446.91,956.83,447.07,955.93,447.24Z"/><polygon class="cls-3" points="959.29 446.66 959.02 446.32 958.38 446.44 958.65 446.77 959.29 446.66"/></g><g class="cls-1"><path class="cls-80" d="M631.63,476.58c.73.2,1.47.38,2.2.57A124.26,124.26,0,0,0,649.72,480a99.82,99.82,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,59,59,0,0,0,6.72-4.42,59.75,59.75,0,0,0,6-5.31,63.56,63.56,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.54-2.09-32.33-.33-5.4-.57-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55.24,55.24,0,0,1,1.36-8.05,33.56,33.56,0,0,1,2.87-7.66,22.32,22.32,0,0,1,5.1-6.45,21.41,21.41,0,0,1,3.39-2.36,22.59,22.59,0,0,1,3.76-1.68,31.54,31.54,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.1.81a114.22,114.22,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54t7.57,2.94c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.5,28,16.3q6.84,4.35,13.57,8.88c4.48,3,9,6.06,13.36,9.18q13.25,9.35,26,19.35t24.89,20.78c8.08,7.18,15.94,14.62,23.42,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1.05,13-1.3,5.39-.3,10.8-.37,16.21-.32,10.8.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a49.79,49.79,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.38-1.45l.16-.19.14-.21.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.8,6.8,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.24,17.24,0,0,1-1.1-3.91,5.89,5.89,0,0,1,0-2.05,3.44,3.44,0,0,1,.38-1,3,3,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.45,16.45,0,0,1,4-.57,27.54,27.54,0,0,1,4.06.2,52.43,52.43,0,0,1,7.94,1.6c2.61.71,5.18,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.17.58.35.86.54l.42.29.2.15c.06.08.15.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.19-.15-.42-.29-.86-.53c-.57-.35-1.16-.68-1.75-1-1.18-.66-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46t-7.51-3c-2.53-.93-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,30.2,30.2,0,0,0-4-.18,16.62,16.62,0,0,0-4,.56,8.81,8.81,0,0,0-3.52,1.87,3.27,3.27,0,0,0-.63.76,3.43,3.43,0,0,0-.35.92,5.54,5.54,0,0,0,0,2,17.33,17.33,0,0,0,1.09,3.86c.5,1.26,1.06,2.49,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.08,2.48,1.53,3.76a20.27,20.27,0,0,1,1,3.93,11.53,11.53,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.27,5.27,0,0,1-.44.93c0,.08-.09.15-.13.22l-.14.21-.15.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.42,50.42,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.18.34-4.26.25-8.5.63-12.71,1.27,1.42,1.81,2.82,3.63,4.18,5.48A125.85,125.85,0,0,1,970.67,470a74.67,74.67,0,0,1,3.55,7.31A50.94,50.94,0,0,1,976.8,485a34.41,34.41,0,0,1,1,8.09,25.31,25.31,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.44.93a7.27,7.27,0,0,1-.54.89,9.65,9.65,0,0,1-3.06,2.77,13.45,13.45,0,0,1-3.82,1.52,18.51,18.51,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.54-2l-.85-.54c-.29-.18-.57-.38-.85-.57-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35-.74-.69-.72-.72c-.25-.24-.47-.49-.71-.73a42.52,42.52,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,15.87,15.87,0,0,1,.28-2,15.13,15.13,0,0,1,1.35-3.86,17.23,17.23,0,0,1,2.28-3.4,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.84-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37S900.6,395.68,892.11,389s-17.17-13.1-26-19.32q-6.61-4.65-13.36-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.4-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.1-1.76-7.68-2.51a111.81,111.81,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.14a31.45,31.45,0,0,0-7.82,1.56,23.51,23.51,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.54,21.54,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.07,32.35.19,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,55.8,55.8,0,0,1-5.78,15.2,70.15,70.15,0,0,1-4.53,6.78c-.2.27-.41.54-.63.8l-.63.8c-.43.53-.87,1.05-1.31,1.56l-.68.77c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a59,59,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64.14,64.14,0,0,1-15.09,6,78.78,78.78,0,0,1-16.07,2.4,101.24,101.24,0,0,1-16.24-.59,125.64,125.64,0,0,1-16-2.94l-2.27-.59Zm322.68-25.1a78.54,78.54,0,0,0-7.85,1.87,56.26,56.26,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4A30.36,30.36,0,0,0,927,482a36.58,36.58,0,0,0,3.57,7.2,41.49,41.49,0,0,0,5,6.34c.23.24.45.49.7.72l.71.71c.24.24.49.46.74.69l.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.54.39,1.08.79,1.65,1.16l.83.56.86.54c1.13.71,2.31,1.38,3.5,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.1,9.1,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.59.42-.9.27-.61.51-1.23.73-1.87a24.77,24.77,0,0,0,1.27-7.88,33.9,33.9,0,0,0-1-7.95,50.36,50.36,0,0,0-2.55-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.14-2.9-4.38-5.71C956.12,451.15,955.21,451.3,954.31,451.48Z"/><polygon class="cls-3" points="957.67 450.89 957.41 450.56 956.76 450.68 957.03 451.01 957.67 450.89"/></g><g class="cls-1"><path class="cls-81" d="M630,480.75c.74.2,1.49.39,2.23.57a124.6,124.6,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6A59.75,59.75,0,0,0,701.8,472a58.68,58.68,0,0,0,6-5.31,63.26,63.26,0,0,0,9.72-12.78,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.1-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.38,22.38,0,0,1,5.09-6.44,21.47,21.47,0,0,1,3.39-2.37,23.84,23.84,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.14.68,0,1.35,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81A111.41,111.41,0,0,1,780,326.61c2.6.76,5.18,1.62,7.72,2.54s5.07,1.9,7.57,2.94c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.24,9.35,26,19.36t24.9,20.78c8.08,7.17,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,28.08,28.08,0,0,0,3.78-1.4,15.56,15.56,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.23-1.14-2.46-1.63-3.72A17.47,17.47,0,0,1,1083,421a5.83,5.83,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,8.84,8.84,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,52.21,52.21,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.17.67,1.75,1l.86.53.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16c-.14-.1-.27-.19-.42-.28s-.56-.36-.85-.54l-1.76-1c-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a53.53,53.53,0,0,0-7.93-1.59,28.48,28.48,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.21,3.21,0,0,0-.36.92,5.72,5.72,0,0,0-.05,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,10.59,10.59,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,74.6,74.6,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.43.94s-.35.6-.55.89a9.73,9.73,0,0,1-3.05,2.77,13.68,13.68,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.07,40.07,0,0,1-7.55-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54-.85-.57c-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.24-.24-.47-.49-.71-.74a42.66,42.66,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,30.79,30.79,0,0,1-1.15-3.91,23.91,23.91,0,0,1-.55-4.05,15.51,15.51,0,0,1,1.64-7.95,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,21.31,21.31,0,0,1,2.94-2.84,33.8,33.8,0,0,1,6.95-4.23,54.41,54.41,0,0,1,7.62-2.82,78.88,78.88,0,0,1,7.9-1.88c.83-.16,1.66-.3,2.5-.44-5.14-6.44-10.64-12.6-16.35-18.54-7.48-7.79-15.32-15.21-23.4-22.37S899,399.86,890.54,393.19s-17.18-13.09-26-19.31q-6.63-4.67-13.37-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.76-7.68-2.52A111.48,111.48,0,0,0,764,323.92c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.25,21.25,0,0,0-4.89,6.2,32.58,32.58,0,0,0-2.79,7.47,55.36,55.36,0,0,0-1.34,7.91c-.27,2.68-.4,5.36-.44,8.05-.08,5.39.16,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76-.68.76c-.47.49-.93,1-1.42,1.46a59.14,59.14,0,0,1-6.13,5.38,60.5,60.5,0,0,1-6.81,4.47,63.76,63.76,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93c-.78-.19-1.55-.4-2.32-.6Zm322.72-25.1c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.35,33.35,0,0,0-6.86,4.17,19,19,0,0,0-5.09,6.11,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,22.06,22.06,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.25.46.5.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.49,9.49,0,0,0,2.9-2.63q.27-.4.51-.84c.14-.29.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.37-5.71C954.54,455.33,953.64,455.48,952.74,455.65Z"/><polygon class="cls-3" points="956.09 455.07 955.83 454.74 955.19 454.86 955.46 455.19 956.09 455.07"/></g><g class="cls-1"><path class="cls-82" d="M628.32,485.13l2.25.58a124.26,124.26,0,0,0,15.89,2.88,98.7,98.7,0,0,0,16.12.56,77.84,77.84,0,0,0,15.92-2.4,63.57,63.57,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,57.51,57.51,0,0,0,6-5.31,63.56,63.56,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.54-2.09-32.33-.33-5.39-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a56.62,56.62,0,0,1,1.36-8.05,33.56,33.56,0,0,1,2.87-7.66,22.32,22.32,0,0,1,5.1-6.44,20.83,20.83,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,31.63,31.63,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.67,0,1.35,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.1.81A114.22,114.22,0,0,1,778.29,331q3.9,1.15,7.72,2.54t7.57,3c5,2.08,9.89,4.39,14.71,6.86,9.62,4.94,18.92,10.5,28,16.3q6.82,4.35,13.56,8.88t13.36,9.18q13.26,9.35,26,19.36t24.9,20.77c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1.05,13-1.3,5.4-.3,10.8-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19,0c2.7-.11,5.39-.3,8.07-.62a49.79,49.79,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,9,9,0,0,0,1.38-1.45l.16-.19.14-.21.14-.21a2.39,2.39,0,0,0,.13-.21,4.92,4.92,0,0,0,.42-.9,6.48,6.48,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.89,5.89,0,0,1,0-2.05,3.44,3.44,0,0,1,.38-1,3,3,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.46,16.46,0,0,1,4-.57,27.47,27.47,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.5s5,2,7.51,3.05,4.92,2.25,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.6.33,1.18.66,1.76,1,.29.17.58.35.86.54l.42.29.2.15c.06.08.15.08.17.25l-.08,0-.14-.14-.2-.15-.42-.29-.85-.53c-.58-.35-1.17-.68-1.76-1-1.18-.66-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.77-7.7-2.48a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.67,8.67,0,0,0-3.52,1.86,3,3,0,0,0-.62.76,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.27,20.27,0,0,1,1,3.93,10.7,10.7,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,6,6,0,0,1-.43.93l-.14.22-.14.21-.15.22-.15.2a11,11,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.47-16.19-.79l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.39-.05-10.79,0-16.18.34-4.25.25-8.5.63-12.71,1.27,1.43,1.81,2.82,3.63,4.19,5.48a126.75,126.75,0,0,1,8.81,13.63,74.67,74.67,0,0,1,3.55,7.31,50.94,50.94,0,0,1,2.58,7.71,34.41,34.41,0,0,1,1,8.09,25.31,25.31,0,0,1-1.31,8c-.22.65-.46,1.28-.74,1.91-.14.31-.27.62-.44.93a7.27,7.27,0,0,1-.54.89,9.8,9.8,0,0,1-3.06,2.78,14.12,14.12,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.57-.37-1.11-.77-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.38-.35-.74-.69-.72-.72c-.25-.24-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,31.43,31.43,0,0,1-1.15-3.92,24,24,0,0,1-.56-4,17.43,17.43,0,0,1,.3-4.08,15.07,15.07,0,0,1,1.35-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.84-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.4-14.05-24.89-20.72-17.17-13.1-26-19.31q-6.61-4.66-13.36-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.75-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0-2,0c-1.34,0-2.68,0-4,.14a31.45,31.45,0,0,0-7.82,1.56,24,24,0,0,0-3.62,1.62,19.7,19.7,0,0,0-3.24,2.28,21.17,21.17,0,0,0-4.89,6.19,32.78,32.78,0,0,0-2.8,7.47,56.92,56.92,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.4.2,10.82-.1,16.24a96.45,96.45,0,0,1-2.19,16.11,55.68,55.68,0,0,1-5.78,15.2,70.15,70.15,0,0,1-4.53,6.78q-.3.41-.63.81l-.63.79c-.43.53-.87,1.05-1.31,1.57l-.68.76c-.23.25-.45.51-.68.75-.48.49-.93,1-1.42,1.47A59,59,0,0,1,700.6,477a60.93,60.93,0,0,1-6.81,4.47,64.39,64.39,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,125.16,125.16,0,0,1-16-2.94l-2.34-.6ZM951.06,460a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,14.72,14.72,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,23.29,23.29,0,0,0,.56,4,30.32,30.32,0,0,0,1.13,3.85,36.31,36.31,0,0,0,3.57,7.2,41.63,41.63,0,0,0,5,6.34c.23.24.46.49.7.72l.71.71c.24.24.49.46.74.69l.37.34.38.34c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16l.83.56.86.54c1.14.72,2.31,1.38,3.5,2a39.67,39.67,0,0,0,7.46,3,27,27,0,0,0,7.93,1.08,18.83,18.83,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63c.18-.27.35-.55.5-.83s.29-.6.42-.91c.27-.61.51-1.23.73-1.86a24.87,24.87,0,0,0,1.27-7.89,33.9,33.9,0,0,0-1-7.95,50.36,50.36,0,0,0-2.55-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56c-1.42-1.93-2.89-3.83-4.38-5.71Q952.41,459.79,951.06,460Z"/><polygon class="cls-3" points="954.41 459.45 954.15 459.12 953.5 459.24 953.77 459.57 954.41 459.45"/></g><g class="cls-1"><path class="cls-83" d="M626.68,489.36c.76.2,1.52.4,2.28.58a124,124,0,0,0,15.89,2.89,99.7,99.7,0,0,0,16.11.56A77.75,77.75,0,0,0,676.88,491a62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,54.74,54.74,0,0,0,5.67-15,94.08,94.08,0,0,0,2.16-16c.3-5.37.27-10.77.09-16.15-.38-10.79-1.42-21.54-2.1-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.18-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.27,20.27,0,0,1,3.38-2.36,23.89,23.89,0,0,1,3.76-1.69,32.14,32.14,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,0c2.71.14,5.41.43,8.09.81a113.25,113.25,0,0,1,15.87,3.52q3.9,1.15,7.72,2.54c2.54.91,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.25,9.36,26,19.36t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.42,5.78,6,11.36,12.3,16.56,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.2.05c2.69-.1,5.38-.29,8.06-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.15-.21a2.39,2.39,0,0,1,.13-.21,6.07,6.07,0,0,0,.41-.9,6.88,6.88,0,0,0,.38-1.95,11.3,11.3,0,0,0-.11-2,21.17,21.17,0,0,0-1-3.89c-.45-1.28-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.72a17.47,17.47,0,0,1-1.1-3.91,5.84,5.84,0,0,1,.06-2,3.74,3.74,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9.1,9.1,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.19,53.84,53.84,0,0,1,7.95,1.61c2.6.71,5.17,1.56,7.7,2.5s5,2,7.51,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.75,1,.29.17.58.35.86.54a4.38,4.38,0,0,1,.42.28l.2.16c.06.07.15.08.17.24l-.08,0a.86.86,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16l-.41-.28-.86-.54c-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.29-3.58-1.9-2.4-1.22-4.85-2.37-7.32-3.45s-5-2.11-7.51-3-5.09-1.78-7.7-2.49a54.71,54.71,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.77,8.77,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.33,3.33,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.31.55,1.23,1.08,2.48,1.53,3.75a21.3,21.3,0,0,1,1,3.94,9.84,9.84,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93,1.64,1.64,0,0,1-.14.22l-.14.21-.15.21-.15.21a10.38,10.38,0,0,1-1.41,1.48,15.57,15.57,0,0,1-3.43,2.18,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.38.52-8.09.63-5.4.22-10.8.15-16.2,0s-10.8-.46-16.19-.78l-16.18-1c-10.78-.66-21.57-1.25-32.36-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.71,1.27q2.15,2.7,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,52.16,52.16,0,0,1,2.57,7.72,33.87,33.87,0,0,1,1,8.08,25.05,25.05,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.91-.14.31-.27.61-.43.93s-.35.6-.54.89a9.76,9.76,0,0,1-3.06,2.77A13.68,13.68,0,0,1,963,522a19.23,19.23,0,0,1-4.07.52,27.77,27.77,0,0,1-8.06-1.11,40.88,40.88,0,0,1-7.56-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.37-.35-.75-.7-.72-.71c-.24-.24-.47-.49-.71-.74a42.37,42.37,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,23,23,0,0,1-.56-4,15.57,15.57,0,0,1,0-2.05,13.9,13.9,0,0,1,.28-2,15.31,15.31,0,0,1,1.34-3.87,17.3,17.3,0,0,1,1-1.76,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.16,1.67-.3,2.5-.43-5.13-6.45-10.63-12.61-16.35-18.55-7.47-7.78-15.32-15.21-23.4-22.37s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.78-18.39-11.32-28-16.23-4.81-2.45-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.67-2.51a112,112,0,0,0-15.76-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.81,1.57,23.1,23.1,0,0,0-3.63,1.62,20.72,20.72,0,0,0-3.24,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.08,5.38.17,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11A56.22,56.22,0,0,1,715,462.91a68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.22.26-.44.51-.68.76-.47.49-.93,1-1.42,1.47a60.14,60.14,0,0,1-6.12,5.37,61.54,61.54,0,0,1-6.82,4.47,64.22,64.22,0,0,1-15.1,6,79.38,79.38,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.6,123.25,123.25,0,0,1-16-2.93l-2.36-.61Zm322.76-25.09c-2.65.5-5.28,1.12-7.86,1.88A54.93,54.93,0,0,0,934,469a33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.72,14.72,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.82,14.82,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.81,30.81,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3A27.28,27.28,0,0,0,959,522a18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.94,8.94,0,0,0,.51-.84c.15-.28.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.37-5.71C951.24,464,950.34,464.1,949.44,464.27Z"/><polygon class="cls-3" points="952.8 463.69 952.53 463.36 951.89 463.48 952.16 463.81 952.8 463.69"/></g><g class="cls-1"><path class="cls-84" d="M625.12,493.39c.72.2,1.45.38,2.17.56a124.28,124.28,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56A77.85,77.85,0,0,0,675.22,495a62.87,62.87,0,0,0,14.9-6,57.39,57.39,0,0,0,12.76-9.74,63.28,63.28,0,0,0,9.72-12.77,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.49-16.23.05-2.71.18-5.42.46-8.13a55.11,55.11,0,0,1,1.36-8,33.81,33.81,0,0,1,2.87-7.67,22.42,22.42,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81A111.41,111.41,0,0,1,775,339.24c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,3c5,2.09,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.49,28,16.29q6.83,4.37,13.56,8.89c4.48,3,8.95,6.05,13.36,9.17q13.24,9.35,26,19.36t24.89,20.77c8.09,7.18,15.94,14.63,23.42,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.3,10.8-.38,16.21-.32,10.8.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a51,51,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,9.45,9.45,0,0,0,1.38-1.45l.16-.2.14-.21.14-.2.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,10.32,10.32,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,0-2,3.32,3.32,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.45,16.45,0,0,1,4-.57,30.59,30.59,0,0,1,4.06.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3.05,4.91,2.24,7.32,3.46c1.21.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0a1.1,1.1,0,0,0-.15-.14l-.19-.16-.42-.28c-.28-.19-.57-.37-.86-.54-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a53.79,53.79,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,2.94,2.94,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.16.2a9.81,9.81,0,0,1-1.4,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.42,50.42,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.25.24-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.5,13.5,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.81-.93-3.54-2l-.85-.55c-.29-.18-.57-.37-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.39-.34-.37-.34c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.55,17.55,0,0,1,0-2.05,15.48,15.48,0,0,1,.28-2,15.2,15.2,0,0,1,1.35-3.87,17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.26,21.26,0,0,1,2.94-2.83,33.8,33.8,0,0,1,7-4.23,54.76,54.76,0,0,1,7.61-2.82,79.53,79.53,0,0,1,7.9-1.88c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.2-23.4-22.37s-16.4-14.05-24.89-20.72-17.17-13.09-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.93s-5.1-1.75-7.68-2.51A111.48,111.48,0,0,0,759,336.55c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.82,1.57,22.11,22.11,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.08,32.35.18,5.41.2,10.83-.11,16.24a95.13,95.13,0,0,1-2.18,16.11,55.86,55.86,0,0,1-5.78,15.21,68.8,68.8,0,0,1-4.53,6.77c-.2.28-.41.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.5-.92,1-1.41,1.47a59.14,59.14,0,0,1-6.13,5.38,60.85,60.85,0,0,1-6.81,4.46,63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.1,100.1,0,0,1-16.24-.59,123.87,123.87,0,0,1-16-2.93l-2.25-.59Zm322.65-25.11c-2.64.5-5.27,1.12-7.85,1.88a56.21,56.21,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.11,15.09,15.09,0,0,0-1.3,3.76,14.58,14.58,0,0,0-.27,2,16.7,16.7,0,0,0,0,2,24,24,0,0,0,.55,4,30.51,30.51,0,0,0,1.14,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.71.74.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.08.8,1.65,1.17l.83.56.86.53c1.13.72,2.31,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.29,18.29,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.24,50.24,0,0,0-2.55-7.63,74.7,74.7,0,0,0-3.54-7.25,124.17,124.17,0,0,0-8.79-13.56c-1.42-1.93-2.89-3.83-4.38-5.71C949.58,468,948.67,468.11,947.77,468.28Z"/><polygon class="cls-3" points="951.13 467.7 950.87 467.36 950.22 467.49 950.49 467.82 951.13 467.7"/></g><g class="cls-1"><path class="cls-85" d="M623.42,497.77c.73.2,1.46.38,2.19.57a124.26,124.26,0,0,0,15.89,2.88,99.79,99.79,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.94,63.94,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.15-.37-10.78-1.42-21.54-2.09-32.33-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55.24,55.24,0,0,1,1.36-8.05,33.56,33.56,0,0,1,2.87-7.66,22.16,22.16,0,0,1,5.1-6.45,21.33,21.33,0,0,1,3.38-2.36,23.06,23.06,0,0,1,3.77-1.68,31.54,31.54,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.1.81a114.22,114.22,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54t7.57,2.94c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.57,8.88c4.48,3,9,6.06,13.36,9.18q13.25,9.35,26,19.35t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1.05,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.61.73,32.39,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a50.93,50.93,0,0,0,7.93-1.53,25.08,25.08,0,0,0,3.77-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.8,6.8,0,0,0,.37-2,11.13,11.13,0,0,0-.1-2,21.09,21.09,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.24,17.24,0,0,1-1.1-3.91,5.89,5.89,0,0,1,0-2,3.44,3.44,0,0,1,.38-1,3.12,3.12,0,0,1,.65-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.17,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.17.58.35.86.54l.42.29.2.15c.06.08.15.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.19-.15-.42-.29-.86-.53c-.58-.35-1.16-.69-1.75-1-1.18-.66-2.38-1.28-3.58-1.89q-3.62-1.83-7.33-3.46t-7.5-3c-2.54-.93-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.61,28.61,0,0,0-4-.18,16.13,16.13,0,0,0-4,.56,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.43,3.43,0,0,0-.35.92,5.54,5.54,0,0,0,0,2,17,17,0,0,0,1.09,3.86c.49,1.26,1.06,2.49,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.55,1.23,1.08,2.48,1.53,3.75a21.32,21.32,0,0,1,1,3.94,11.53,11.53,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.28,15.28,0,0,1-3.44,2.18,25.51,25.51,0,0,1-3.8,1.42,51.48,51.48,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.18.34-4.26.25-8.5.63-12.71,1.27,1.42,1.81,2.82,3.63,4.18,5.48a125.85,125.85,0,0,1,8.82,13.63,78,78,0,0,1,3.55,7.3,52.59,52.59,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.47,1.28-.74,1.91-.14.31-.28.62-.44.93a7.27,7.27,0,0,1-.54.89,9.65,9.65,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,18.59,18.59,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35-.74-.69-.73-.72c-.24-.24-.47-.49-.7-.73a42.52,42.52,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,15.63,15.63,0,0,1,.28-2,15.13,15.13,0,0,1,1.35-3.86,14.91,14.91,0,0,1,1-1.77,16.28,16.28,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31q-6.61-4.65-13.36-9.14c-4.49-3-9-6-13.56-8.86-9.12-5.78-18.4-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.73-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a111.81,111.81,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31.83,31.83,0,0,0-7.82,1.57,23.51,23.51,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.78,1.7,21.54,2.07,32.36.19,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,55.83,55.83,0,0,1-5.79,15.2,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1.05-1.31,1.56l-.68.76c-.23.26-.45.52-.69.76-.47.49-.92,1-1.41,1.47a60.1,60.1,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64.14,64.14,0,0,1-15.09,6,78.78,78.78,0,0,1-16.08,2.4,101.16,101.16,0,0,1-16.23-.59,125.64,125.64,0,0,1-16-2.94l-2.27-.59Zm322.67-25.11c-2.65.5-5.27,1.12-7.85,1.88a55.76,55.76,0,0,0-7.56,2.82,33.12,33.12,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32,32,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.19,42.19,0,0,0,5,6.34c.23.24.45.49.69.72l.72.71c.24.24.49.46.74.69l.37.34.37.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.38,3.51,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.31,13.31,0,0,0,3.67-1.47,9,9,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.59.42-.9.27-.61.51-1.23.72-1.87a24.78,24.78,0,0,0,1.28-7.88,33.9,33.9,0,0,0-1-7.95,50.36,50.36,0,0,0-2.55-7.64,78.3,78.3,0,0,0-3.54-7.25,126.66,126.66,0,0,0-8.79-13.56Q951,475,948.8,472.19C947.9,472.34,947,472.49,946.09,472.66Z"/><polygon class="cls-3" points="949.45 472.08 949.18 471.75 948.54 471.87 948.81 472.2 949.45 472.08"/></g><g class="cls-1"><path class="cls-86" d="M621.78,502l2.21.56a124.28,124.28,0,0,0,15.89,2.89A101,101,0,0,0,656,506a77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8,34.29,34.29,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.67,0,1.35,0,2,0l1,0,1,0c2.71.14,5.42.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.25,9.35,26,19.36t24.9,20.78c8.08,7.17,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.51-3.74-1.11-2.46-2.35-4.86-3.51-7.3-.58-1.23-1.14-2.46-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,8.84,8.84,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3,4.92,2.24,7.33,3.47c1.2.61,2.39,1.24,3.58,1.89.59.33,1.17.67,1.75,1l.86.53.42.29.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16-.42-.28c-.28-.19-.57-.36-.85-.54l-1.76-1c-1.18-.65-2.37-1.28-3.58-1.89q-3.61-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,2.94,2.94,0,0,0-.36.92,5.72,5.72,0,0,0-.05,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,10.59,10.59,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.43.94s-.35.6-.55.89a9.84,9.84,0,0,1-3.05,2.77,13.68,13.68,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.53,27.53,0,0,1-8.07-1.1,40.79,40.79,0,0,1-7.55-3c-1.2-.63-2.39-1.3-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a43.09,43.09,0,0,1-5-6.4,37.52,37.52,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,22.94,22.94,0,0,1-.55-4.05,16.83,16.83,0,0,1,.29-4.08,15.74,15.74,0,0,1,1.35-3.87,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,21.91,21.91,0,0,1,2.94-2.84,33.8,33.8,0,0,1,6.95-4.23,55.7,55.7,0,0,1,7.62-2.82,78.69,78.69,0,0,1,7.89-1.88c.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.32-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31C851.86,392,847.4,389,842.91,386s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.76-7.68-2.52a111.48,111.48,0,0,0-15.75-3.47c-2.66-.37-5.34-.66-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.21,21.21,0,0,0-4.89,6.2,32.58,32.58,0,0,0-2.79,7.47,55.5,55.5,0,0,0-1.34,7.92c-.27,2.67-.4,5.35-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11A56.22,56.22,0,0,1,710,475.54a68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76-.68.76c-.47.49-.93,1-1.42,1.47a58.85,58.85,0,0,1-12.94,9.84,63.93,63.93,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.14,100.14,0,0,1-16.24-.59,123.41,123.41,0,0,1-16-2.93c-.77-.19-1.53-.39-2.3-.6Zm322.7-25.11c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,18.82,18.82,0,0,0-5.09,6.1,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,14.68,14.68,0,0,0,0,2,22.06,22.06,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.25.46.5.7.73l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.23,27.23,0,0,0,7.92,1.08,18.83,18.83,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.37,9.37,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.43-.9.26-.61.5-1.24.72-1.87a24.77,24.77,0,0,0,1.27-7.88,34,34,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.38-5.71C946.28,476.58,945.38,476.73,944.48,476.9Z"/><polygon class="cls-3" points="947.83 476.32 947.57 475.99 946.93 476.11 947.19 476.44 947.83 476.32"/></g><g class="cls-1"><path class="cls-87" d="M620.17,506.17l2.25.58a124,124,0,0,0,15.89,2.89,99.7,99.7,0,0,0,16.11.55,77.73,77.73,0,0,0,15.92-2.4,63,63,0,0,0,14.91-6,59.41,59.41,0,0,0,6.72-4.42,57.26,57.26,0,0,0,6-5.31,62.92,62.92,0,0,0,9.72-12.77,55.15,55.15,0,0,0,5.68-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.33-.34-5.39-.58-10.8-.49-16.22,0-2.71.18-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.61,32.61,0,0,1,8-1.61c1.37-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81A111.85,111.85,0,0,1,770.14,352c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.56,2.95c5,2.08,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.88t13.37,9.18q13.24,9.35,26,19.36T906,438.87c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1.05,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.4.32,10.79.61,16.18.8s10.8.26,16.2.05c2.69-.11,5.39-.29,8.06-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,15.15,15.15,0,0,0,3.39-2.14,11.12,11.12,0,0,0,1.38-1.45l.15-.2.14-.21.15-.2.13-.22a5.26,5.26,0,0,0,.41-.9A6.75,6.75,0,0,0,1082,471a10.28,10.28,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.48,3.48,0,0,1,.37-1,3.39,3.39,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.6.72,5.17,1.57,7.71,2.5s5,2,7.5,3.05,4.92,2.25,7.33,3.47c1.2.62,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.28.18.57.35.85.54a4.43,4.43,0,0,1,.42.29l.21.16c0,.07.14.07.16.24l-.08,0a.57.57,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.37-7.32-3.46s-5-2.1-7.51-3-5.09-1.78-7.7-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3,3,0,0,0-.63.75,3.45,3.45,0,0,0-.36.92,6,6,0,0,0,0,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1.05,2.48,1.63,3.7,1.16,2.43,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a22,22,0,0,1,1,3.93,10.73,10.73,0,0,1,.1,2,6.94,6.94,0,0,1-.38,2,5.68,5.68,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.15.21-.15.2a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.21-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.18-1c-10.78-.66-21.56-1.26-32.36-1.36-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.75,126.75,0,0,1,8.81,13.63,75.87,75.87,0,0,1,3.56,7.31,51.77,51.77,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25.26,25.26,0,0,1-1.3,8c-.23.65-.47,1.29-.74,1.91-.15.31-.28.62-.44.93s-.35.61-.54.9a10,10,0,0,1-3.06,2.77,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,40.47,40.47,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.38-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.65-3.16-2.56l-.38-.34-.37-.34-.75-.7-.72-.72c-.24-.23-.47-.49-.71-.73a42.45,42.45,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,15.58,15.58,0,0,1,0-2.05,14,14,0,0,1,.28-2,15,15,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,34,34,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14-24.88-20.72-17.17-13.1-26-19.31q-6.63-4.67-13.37-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.69-4.75-14.66-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.67-2.51a111.92,111.92,0,0,0-15.76-3.47c-2.66-.38-5.33-.66-8-.8l-1-.05-1,0c-.67,0-1.35,0-2-.05-1.34,0-2.68,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,22.64,22.64,0,0,0-3.62,1.63,20.35,20.35,0,0,0-3.25,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.28,2.67-.41,5.36-.45,8-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.64.8-1.31,1.56-.67.76c-.23.25-.45.51-.69.75-.47.49-.93,1-1.42,1.47a57.79,57.79,0,0,1-6.12,5.37,58.82,58.82,0,0,1-6.82,4.47,63.37,63.37,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93l-2.33-.61ZM942.9,481.08A78.12,78.12,0,0,0,935,483a54.89,54.89,0,0,0-7.56,2.81,33.49,33.49,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,15.54,15.54,0,0,0-1.59,7.74,23.13,23.13,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.7c.24.24.49.46.73.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16.28.19.55.39.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.73,39.73,0,0,0,7.47,3,27.29,27.29,0,0,0,7.92,1.09,18.76,18.76,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.62.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51,51,0,0,0-2.56-7.63,76,76,0,0,0-3.54-7.26A126.44,126.44,0,0,0,950,486.32q-2.15-2.9-4.38-5.71C944.7,480.75,943.8,480.91,942.9,481.08Z"/><polygon class="cls-3" points="946.26 480.5 945.99 480.16 945.35 480.28 945.62 480.62 946.26 480.5"/></g><g class="cls-1"><path class="cls-88" d="M618.47,510.55c.75.2,1.51.4,2.27.58A124.13,124.13,0,0,0,636.62,514a99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31A63,63,0,0,0,706,483.68a55.06,55.06,0,0,0,5.67-15,94.2,94.2,0,0,0,2.15-16c.31-5.37.28-10.77.1-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,24.79,24.79,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.35,0,2,0l1,0,1,0c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.59.77,5.17,1.62,7.71,2.54s5.08,1.9,7.57,2.94c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.25,9.36,26,19.36t24.9,20.78c8.08,7.18,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,21.17,21.17,0,0,0-1-3.89c-.45-1.28-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.22-1.14-2.46-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9.1,9.1,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.32,1.17.66,1.75,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16c-.14-.09-.27-.19-.42-.28s-.56-.36-.85-.54c-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.29-3.58-1.9q-3.61-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.48,28.48,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.33,3.33,0,0,0-.36.92,5.72,5.72,0,0,0-.05,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.09,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,9.84,9.84,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93,1.64,1.64,0,0,1-.14.22l-.14.21-.15.21-.15.21a10.33,10.33,0,0,1-1.41,1.47,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.36-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48A126.62,126.62,0,0,1,957.57,504a77,77,0,0,1,3.56,7.31A52.16,52.16,0,0,1,963.7,519a34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.43.94a10.13,10.13,0,0,1-.55.89,9.73,9.73,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,19.31,19.31,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,41.07,41.07,0,0,1-7.55-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.38-.35-.74-.7-.72-.71c-.24-.24-.47-.49-.71-.74a43.09,43.09,0,0,1-5-6.4,38.69,38.69,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,23.93,23.93,0,0,1-.55-4,15.57,15.57,0,0,1,0-2.05,15.39,15.39,0,0,1,.27-2,15.74,15.74,0,0,1,1.35-3.87,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,54.46,54.46,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.16,1.66-.3,2.5-.43C938.51,478.2,933,472,927.3,466.1c-7.48-7.79-15.32-15.21-23.4-22.37S887.51,429.67,879,423s-17.18-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.78-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.65-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.68-2.51a110.13,110.13,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.35-.44,8.05-.08,5.38.17,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.22.26-.45.51-.68.76-.47.49-.93,1-1.42,1.47A58.85,58.85,0,0,1,684,506.87a64.22,64.22,0,0,1-15.1,6,79.38,79.38,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.6,123.25,123.25,0,0,1-16-2.93l-2.35-.61Zm322.75-25.09c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.05,19.05,0,0,0-5.09,6.1,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.67,16.67,0,0,0,0,2,22.31,22.31,0,0,0,.55,4,30.81,30.81,0,0,0,1.13,3.85,37.42,37.42,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63q.27-.4.51-.84c.14-.28.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.37-5.71C943,485.14,942.12,485.29,941.22,485.46Z"/><polygon class="cls-3" points="944.58 484.88 944.31 484.55 943.67 484.67 943.93 485 944.58 484.88"/></g><g class="cls-1"><path class="cls-89" d="M616.83,514.78l2.29.59A124.28,124.28,0,0,0,635,518.26a100.94,100.94,0,0,0,16.12.56A77.65,77.65,0,0,0,667,516.41a63.37,63.37,0,0,0,14.91-6,59.88,59.88,0,0,0,6.72-4.42,58.52,58.52,0,0,0,6-5.32,63.33,63.33,0,0,0,9.73-12.77,55.51,55.51,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,23.54,23.54,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.25,9.34,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.18,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19.05c2.69-.11,5.39-.29,8.06-.61a50.51,50.51,0,0,0,7.93-1.54,24.79,24.79,0,0,0,3.78-1.4,14.93,14.93,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.15-.21.14-.2.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.33,10.33,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,5.83,5.83,0,0,1,.06-2,3.61,3.61,0,0,1,.37-1,3.66,3.66,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.35,30.35,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.61.72,5.17,1.57,7.71,2.51s5,2,7.51,3.05,4.91,2.24,7.32,3.46c1.2.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.42.29.2.16c.05.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.37-.86-.54c-.58-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.24,3.24,0,0,0-.35.91,5.78,5.78,0,0,0-.06,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.43,21.43,0,0,1,1,3.93,10.73,10.73,0,0,1,.1,2,6.56,6.56,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,14.66,14.66,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.22-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.24-8.5.62-12.7,1.27,1.42,1.8,2.82,3.62,4.18,5.47A125.24,125.24,0,0,1,956,508.23a75.87,75.87,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.93a8.24,8.24,0,0,1-.54.9,9.88,9.88,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.82-.93-3.54-2l-.86-.55c-.29-.18-.56-.37-.84-.56-.57-.38-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.34-.37-.34c-.25-.23-.5-.46-.74-.7l-.73-.72c-.24-.23-.47-.48-.7-.73a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.55,17.55,0,0,1,0-2,15.69,15.69,0,0,1,1.62-5.9,17.88,17.88,0,0,1,2.29-3.4,21.76,21.76,0,0,1,2.93-2.83,34.34,34.34,0,0,1,7-4.23,54.88,54.88,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.2-23.41-22.37s-16.39-14-24.88-20.72-17.17-13.1-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.93t-7.67-2.51A112.09,112.09,0,0,0,750.86,358c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.5-.93,1-1.41,1.47a57.79,57.79,0,0,1-12.95,9.84,63.2,63.2,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59A123.56,123.56,0,0,1,619,516l-2.37-.62ZM939.6,489.7c-2.65.5-5.27,1.12-7.86,1.88a55.58,55.58,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,18.89,18.89,0,0,0-5.1,6.11,14.33,14.33,0,0,0-1.3,3.76,13.14,13.14,0,0,0-.27,2,14.85,14.85,0,0,0,0,2,23.13,23.13,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.73.68.37.35.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.53c1.14.72,2.31,1.38,3.51,2a39.37,39.37,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.12,18.12,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,75.93,75.93,0,0,0-3.53-7.26,126.53,126.53,0,0,0-8.79-13.55q-2.15-2.9-4.38-5.71C941.4,489.37,940.5,489.53,939.6,489.7Z"/><polygon class="cls-3" points="942.96 489.12 942.69 488.78 942.05 488.9 942.32 489.24 942.96 489.12"/></g><g class="cls-1"><path class="cls-90" d="M615.21,519l2.3.59a124.28,124.28,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,59.88,59.88,0,0,0,6.72-4.42,58.52,58.52,0,0,0,6-5.32,63.33,63.33,0,0,0,9.73-12.77,55.51,55.51,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,23.54,23.54,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.24,9.34,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.18,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19.05c2.69-.11,5.39-.29,8.06-.61a50.51,50.51,0,0,0,7.93-1.54,25.19,25.19,0,0,0,3.78-1.4,14.93,14.93,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.15-.21.14-.2.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.33,10.33,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,5.83,5.83,0,0,1,.06-2,3.61,3.61,0,0,1,.37-1,3.66,3.66,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.35,30.35,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.6.72,5.17,1.57,7.71,2.51s5,2,7.51,3.05,4.91,2.24,7.32,3.46c1.2.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.41.29.21.16c0,.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.37-.86-.54c-.58-.35-1.16-.68-1.75-1-1.19-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a53.4,53.4,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0-.06,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.43,21.43,0,0,1,1,3.93,10.73,10.73,0,0,1,.1,2,6.56,6.56,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,14.66,14.66,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.22-10.81.14-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.24-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a125.11,125.11,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.88,9.88,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.81-.93-3.54-2l-.86-.55c-.29-.18-.56-.37-.84-.56-.57-.38-1.11-.78-1.67-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.37-.34c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.55,17.55,0,0,1,0-2.05,14,14,0,0,1,.28-2,15.57,15.57,0,0,1,1.34-3.87,17.88,17.88,0,0,1,2.29-3.4,21.76,21.76,0,0,1,2.93-2.83,34.07,34.07,0,0,1,6.95-4.23,54.88,54.88,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.2-23.41-22.37s-16.39-14.05-24.88-20.72-17.17-13.09-26-19.31q-6.63-4.67-13.36-9.15t-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.93c-2.53-.9-5.09-1.75-7.67-2.51a112.09,112.09,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8.05-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.5-.93,1-1.41,1.47a57.79,57.79,0,0,1-12.95,9.84,63.2,63.2,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93l-2.38-.62ZM938,493.88c-2.65.5-5.27,1.12-7.86,1.88a55.58,55.58,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,18.89,18.89,0,0,0-5.1,6.11,14.72,14.72,0,0,0-1.31,3.76,14.55,14.55,0,0,0-.26,2,14.85,14.85,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.53c1.14.72,2.31,1.38,3.51,2a39.37,39.37,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.12,18.12,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46A9.38,9.38,0,0,0,958,547a7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.15-2.89-4.38-5.71C939.79,493.55,938.89,493.71,938,493.88Z"/><polygon class="cls-3" points="941.35 493.3 941.08 492.96 940.44 493.08 940.71 493.42 941.35 493.3"/></g><g class="cls-1"><path class="cls-91" d="M613.51,523.34c.77.21,1.54.4,2.32.6a123.94,123.94,0,0,0,15.89,2.88,99.7,99.7,0,0,0,16.11.56A77.75,77.75,0,0,0,663.75,525a62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,54.92,54.92,0,0,0,5.67-15,94.08,94.08,0,0,0,2.16-16c.3-5.37.27-10.76.09-16.15-.38-10.78-1.42-21.54-2.1-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05,33.59,33.59,0,0,1,2.88-7.66,22.16,22.16,0,0,1,5.1-6.45,20.88,20.88,0,0,1,3.38-2.36,23,23,0,0,1,3.76-1.68,31.71,31.71,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.09.81a114.68,114.68,0,0,1,15.87,3.52q3.9,1.15,7.72,2.54c2.54.92,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.18q13.25,9.35,26,19.35t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.43,5.78,6,11.36,12.3,16.56,18.86,4.29-.66,8.63-1.05,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.4.33,10.79.62,16.18.81s10.8.26,16.2.05c2.69-.11,5.38-.3,8.06-.62a50.71,50.71,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.15-.21a2.39,2.39,0,0,1,.13-.21,6.07,6.07,0,0,0,.41-.9,6.81,6.81,0,0,0,.38-1.95,11.13,11.13,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.71a17.77,17.77,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2.05,3.74,3.74,0,0,1,.37-1,3,3,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.84,53.84,0,0,1,8,1.61c2.6.71,5.17,1.57,7.71,2.5s5,2,7.5,3.05,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.75,1,.29.17.58.35.86.54a4.43,4.43,0,0,1,.42.29l.21.15c0,.08.14.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.69-1.76-1-1.18-.66-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.37-7.32-3.46s-5-2.1-7.51-3-5.09-1.78-7.7-2.49a54.71,54.71,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.18,16.2,16.2,0,0,0-4,.56,8.77,8.77,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17,17,0,0,0,1.1,3.86c.49,1.26,1,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.31.55,1.23,1.08,2.48,1.53,3.75a21.3,21.3,0,0,1,1,3.94,9.9,9.9,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93,1.64,1.64,0,0,1-.14.22l-.14.21-.15.21-.15.21a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,51.35,51.35,0,0,1-8,1.55c-2.69.32-5.38.51-8.08.62-5.41.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.18-1c-10.78-.66-21.57-1.25-32.36-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.27,1.42,1.81,2.82,3.63,4.18,5.48a125.77,125.77,0,0,1,8.81,13.63,75.7,75.7,0,0,1,3.56,7.3,52.55,52.55,0,0,1,2.57,7.72,33.87,33.87,0,0,1,1,8.08,25.05,25.05,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.43.93s-.35.61-.54.89a9.76,9.76,0,0,1-3.06,2.77A13.68,13.68,0,0,1,949.9,556a18.59,18.59,0,0,1-4.06.52,27.79,27.79,0,0,1-8.07-1.11,40.88,40.88,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.37-.35-.75-.69-.72-.72-.71-.73a42.45,42.45,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,15.58,15.58,0,0,1,0-2,14.28,14.28,0,0,1,.28-2,15.11,15.11,0,0,1,1.34-3.86,16.41,16.41,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.61-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14.06-24.88-20.72-17.17-13.1-26-19.32q-6.63-4.65-13.37-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.39-11.31-28-16.23-4.81-2.45-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.67-2.51a112,112,0,0,0-15.76-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31.85,31.85,0,0,0-7.81,1.57,24.06,24.06,0,0,0-3.63,1.62,20.72,20.72,0,0,0-3.24,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.08,5.38.17,10.77.49,16.15.67,10.78,1.71,21.54,2.08,32.36.18,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,56.15,56.15,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1.05-1.31,1.56l-.68.76c-.22.26-.44.52-.68.76-.47.49-.93,1-1.42,1.47a58.94,58.94,0,0,1-6.12,5.37,61.54,61.54,0,0,1-6.82,4.47,64.22,64.22,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94l-2.39-.62Zm322.8-25.07a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.86,14.86,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.82,14.82,0,0,0,0,2,23.27,23.27,0,0,0,.55,4A30.32,30.32,0,0,0,909,528.8a37.72,37.72,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71c.24.24.49.46.73.69l.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.45,40.45,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.94,8.94,0,0,0,.51-.84c.15-.28.28-.59.42-.9.27-.61.5-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.37,33.37,0,0,0-1-7.95,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.37-5.71C938.11,497.94,937.21,498.09,936.31,498.27Z"/><polygon class="cls-3" points="939.67 497.68 939.4 497.35 938.76 497.47 939.03 497.8 939.67 497.68"/></g><g class="cls-1"><path class="cls-92" d="M611.87,527.57q1.17.31,2.34.6a124.28,124.28,0,0,0,15.89,2.89,99.79,99.79,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,59.88,59.88,0,0,0,6.72-4.42,58.57,58.57,0,0,0,6-5.31,63.39,63.39,0,0,0,9.73-12.78,55.06,55.06,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81a111.72,111.72,0,0,1,15.86,3.52q3.9,1.16,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88c4.49,3,9,6.06,13.37,9.17q13.25,9.34,26,19.36t24.89,20.78c8.08,7.17,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.69-.1,5.39-.29,8.07-.61a50.59,50.59,0,0,0,7.92-1.53,25.9,25.9,0,0,0,3.78-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a6.13,6.13,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,11.22,11.22,0,0,0-.1-2,21.09,21.09,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.23-1.14-2.46-1.63-3.72a17.49,17.49,0,0,1-1.11-3.91,6.08,6.08,0,0,1,.06-2,3.44,3.44,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9,9,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,54,54,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.36-.86-.54c-.58-.34-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.61-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.26,1.06,2.48,1.63,3.7,1.17,2.44,2.41,4.84,3.52,7.3.55,1.24,1.08,2.48,1.53,3.76a21.32,21.32,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,6.57,6.57,0,0,1-.44.93l-.13.22-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.19,25.59,25.59,0,0,1-3.81,1.41,50,50,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.49.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48A126.71,126.71,0,0,1,951.05,521a79.43,79.43,0,0,1,3.55,7.31,52.2,52.2,0,0,1,2.58,7.72,34.31,34.31,0,0,1,1,8.08,25,25,0,0,1-1.3,8.05c-.22.64-.47,1.28-.74,1.9-.14.32-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.49,27.49,0,0,1-8.07-1.1,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54c-.28-.18-.56-.38-.84-.57-.57-.37-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.36,17.36,0,0,1,0-2,15.49,15.49,0,0,1,1.63-5.91,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.83,21.83,0,0,1,2.93-2.84,34.34,34.34,0,0,1,7-4.23,56.19,56.19,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.33-15.21-23.41-22.37S881,446.71,872.49,440s-17.17-13.09-26-19.31c-4.41-3.11-8.88-6.14-13.36-9.15s-9-6-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.49-1-5-2-7.53-2.92s-5.1-1.76-7.68-2.52A112.09,112.09,0,0,0,746,370.77c-2.67-.37-5.34-.66-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.58,32.58,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.44,8-.09,5.39.16,10.78.49,16.16.66,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24A95.13,95.13,0,0,1,706,485.93a55.89,55.89,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.25-.45.51-.69.76-.47.49-.92,1-1.41,1.47a58.6,58.6,0,0,1-13,9.84,63.69,63.69,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93c-.8-.2-1.61-.41-2.41-.63ZM934.69,502.5c-2.65.5-5.27,1.12-7.86,1.88a54.81,54.81,0,0,0-7.55,2.82,33.12,33.12,0,0,0-6.86,4.18,18.85,18.85,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.25.46.5.7.73l.72.71.74.69.36.34.38.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.08,40.08,0,0,0,7.46,3,27.3,27.3,0,0,0,7.93,1.08,18.74,18.74,0,0,0,3.95-.5,13.37,13.37,0,0,0,3.68-1.47,9.26,9.26,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,49.56,49.56,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.14-2.89-4.38-5.71C936.5,502.18,935.59,502.33,934.69,502.5Z"/><polygon class="cls-3" points="938.05 501.92 937.78 501.59 937.14 501.71 937.41 502.04 938.05 501.92"/></g><g class="cls-1"><path class="cls-93" d="M610.26,531.74l2.37.61a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.55,77.84,77.84,0,0,0,15.92-2.4,62.9,62.9,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.28,63.28,0,0,0,9.72-12.77,55.13,55.13,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.33-.33-5.39-.57-10.8-.48-16.22,0-2.71.17-5.43.45-8.13a56.25,56.25,0,0,1,1.36-8A33.46,33.46,0,0,1,708,385.4a22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.52,32.52,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.67,0,1.35,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.08,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.49,28,16.29q6.83,4.37,13.56,8.88t13.36,9.18q13.26,9.35,26,19.36t24.9,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1.05,13-1.29,5.4-.31,10.8-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.32,10.78.61,16.18.8s10.8.26,16.19.05c2.7-.11,5.39-.29,8.07-.61a51,51,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,9.45,9.45,0,0,0,1.38-1.45l.16-.2.14-.21.14-.2a1.59,1.59,0,0,0,.13-.22,4.63,4.63,0,0,0,.42-.9,6.42,6.42,0,0,0,.37-1.95,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.05-2,3.21,3.21,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,8.86,8.86,0,0,1,3.58-1.9,16.46,16.46,0,0,1,4-.57,28.92,28.92,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.5s5,2,7.51,3.05,4.92,2.25,7.32,3.47c1.21.62,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.07.17.24l-.08,0a1.55,1.55,0,0,0-.14-.15l-.2-.15-.42-.29-.86-.53c-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3,3,0,0,0-.62.75,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1.05,2.48,1.63,3.7,1.16,2.43,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.46,20.46,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,6.63,6.63,0,0,1-.43.94l-.14.22-.14.21-.15.21-.16.2a10.31,10.31,0,0,1-1.4,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.21-10.81.14-16.21,0s-10.79-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39-.05-10.8,0-16.18.34-4.25.25-8.5.63-12.71,1.28q2.13,2.7,4.19,5.47a128.3,128.3,0,0,1,8.81,13.63,75.79,75.79,0,0,1,3.55,7.31,50.69,50.69,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.44.93a8.24,8.24,0,0,1-.54.9,9.89,9.89,0,0,1-3.06,2.77,14.12,14.12,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.38-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.65-3.16-2.56l-.39-.34-.37-.34c-.24-.24-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.16,37.16,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,23.93,23.93,0,0,1-.56-4.05,17.43,17.43,0,0,1,.3-4.08,15.07,15.07,0,0,1,1.35-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.76,33.76,0,0,1,6.95-4.22,56.11,56.11,0,0,1,7.61-2.83,79.49,79.49,0,0,1,7.9-1.87c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14.05-24.89-20.72-17.17-13.1-26-19.31q-6.61-4.67-13.36-9.15T818,406.9c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.75-14.66-6.83-2.48-1-5-2-7.53-2.92s-5.09-1.75-7.68-2.51A111.48,111.48,0,0,0,744.37,375c-2.66-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.34,0-2-.05-1.34,0-2.68,0-4,.14a31.45,31.45,0,0,0-7.82,1.56,23,23,0,0,0-3.62,1.63,20.26,20.26,0,0,0-3.24,2.27,21.17,21.17,0,0,0-4.89,6.19,32.49,32.49,0,0,0-2.8,7.47,57.17,57.17,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.41.2,10.83-.1,16.24a96.31,96.31,0,0,1-2.19,16.11,55.86,55.86,0,0,1-5.78,15.21,68.8,68.8,0,0,1-4.53,6.77c-.2.28-.41.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.68.75-.48.49-.93,1-1.42,1.47a59.14,59.14,0,0,1-6.13,5.38,60.85,60.85,0,0,1-6.81,4.46,63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,123.87,123.87,0,0,1-16-2.93l-2.45-.64Zm322.85-25.06a78.59,78.59,0,0,0-7.85,1.88,54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.16,15.16,0,0,0-1.3,3.77,14.58,14.58,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,23.15,23.15,0,0,0,.56,4,30.46,30.46,0,0,0,1.13,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.7c.24.24.49.46.74.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.08.8,1.65,1.16.28.19.55.39.83.56l.86.54c1.13.72,2.31,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27.35,27.35,0,0,0,7.93,1.09,18.84,18.84,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.42-.9.27-.62.51-1.24.73-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,49.88,49.88,0,0,0-2.55-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55c-1.42-1.93-2.89-3.83-4.38-5.71C934.92,506.35,934,506.51,933.11,506.68Z"/><polygon class="cls-3" points="936.47 506.1 936.21 505.76 935.57 505.88 935.83 506.21 936.47 506.1"/></g><g class="cls-1"><path class="cls-94" d="M608.56,536.12c.8.21,1.59.42,2.39.61a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.35,63.35,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,95.22,95.22,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,20.35,20.35,0,0,1,3.39-2.36,23.49,23.49,0,0,1,3.76-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81A111.41,111.41,0,0,1,758.67,382q3.9,1.16,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.49,28,16.3q6.84,4.35,13.57,8.88c4.48,3,9,6.06,13.36,9.17q13.25,9.36,26,19.36t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.61.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.21,26.21,0,0,0,3.77-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.22,11.22,0,0,0-.1-2,20.43,20.43,0,0,0-1-3.89c-.44-1.28-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.84,5.84,0,0,1,0-2,3.44,3.44,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.57-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.76,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.29-3.58-1.9q-3.61-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,17.41,17.41,0,0,0,1.09,3.87c.5,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.41,15.41,0,0,1-3.44,2.18,25.47,25.47,0,0,1-3.8,1.41,50.32,50.32,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.9-.14.32-.28.62-.44.94a8.11,8.11,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,19.22,19.22,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.48-.49-.71-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,17.51,17.51,0,0,1,0-2,15.49,15.49,0,0,1,1.63-5.91,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,54.81,54.81,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.11-5.78-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a110.43,110.43,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62A20.26,20.26,0,0,0,712,384a21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11A55.57,55.57,0,0,1,697,509.7a68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47A60.25,60.25,0,0,1,681,528a61.54,61.54,0,0,1-6.82,4.47,64.14,64.14,0,0,1-15.09,6A79.47,79.47,0,0,1,643,540.9a101.17,101.17,0,0,1-16.23-.6,123.87,123.87,0,0,1-16-2.93l-2.46-.64Zm322.87-25.06c-2.65.5-5.27,1.12-7.85,1.88a54.93,54.93,0,0,0-7.56,2.82,33.12,33.12,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32.6,32.6,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.19,42.19,0,0,0,5,6.34c.23.24.45.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2,1.73,3.13,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.1,9.1,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.6.42-.9.27-.61.51-1.24.73-1.87a25.05,25.05,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.14-2.89-4.38-5.71C933.24,510.74,932.33,510.89,931.43,511.06Z"/><polygon class="cls-3" points="934.79 510.48 934.52 510.15 933.88 510.27 934.15 510.6 934.79 510.48"/></g><g class="cls-1"><path class="cls-95" d="M606.92,540.35l2.41.62a124.6,124.6,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56A77.75,77.75,0,0,0,657.26,542a62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,57.6,57.6,0,0,0,6-5.32,62.92,62.92,0,0,0,9.72-12.77,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.38.28-10.77.1-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.38,22.38,0,0,1,5.09-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.15,4.09-.14.68,0,1.35,0,2,0l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.18,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,9,6,13.37,9.17q13.25,9.35,26,19.36t24.9,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.31,10.8-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a50.73,50.73,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,10,10,0,0,0,1.39-1.45l.15-.2.14-.21.14-.2a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.32,10.32,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.86-3.51-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.3,3.3,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.53,16.53,0,0,1,4-.57,30.44,30.44,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3.05,4.92,2.24,7.33,3.46c1.2.62,2.4,1.25,3.58,1.9.59.33,1.17.67,1.75,1l.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16-.42-.28c-.28-.19-.56-.37-.85-.54-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,3.21,3.21,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.47-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.24-8.5.62-12.71,1.27,1.43,1.8,2.82,3.62,4.19,5.47a126.75,126.75,0,0,1,8.81,13.63,73.51,73.51,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.93a10.3,10.3,0,0,1-.55.9,9.73,9.73,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3c-1.2-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.37-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.38-.34c-.24-.23-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.48-.71-.73a43.17,43.17,0,0,1-5-6.41,37.16,37.16,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,22.94,22.94,0,0,1-.55-4.05,15.51,15.51,0,0,1,1.64-7.95,17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.83,21.83,0,0,1,2.94-2.83,33.8,33.8,0,0,1,7-4.23,54.41,54.41,0,0,1,7.62-2.82,79.34,79.34,0,0,1,7.89-1.88c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.2-23.4-22.37s-16.39-14.05-24.88-20.72-17.18-13.1-26-19.31q-6.63-4.66-13.37-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82q-3.72-1.56-7.53-2.93c-2.54-.91-5.09-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,21.84,21.84,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.33,21.33,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.74,55.74,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.39.16,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.64.8-1.31,1.56-.68.76c-.22.25-.45.51-.68.75-.47.5-.93,1-1.42,1.47a58,58,0,0,1-12.94,9.84,63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93l-2.49-.65Zm322.9-25.05c-2.65.5-5.28,1.12-7.86,1.88A56.21,56.21,0,0,0,914.4,520a33.83,33.83,0,0,0-6.86,4.18,18.86,18.86,0,0,0-5.09,6.11,14.72,14.72,0,0,0-1.31,3.76,16.36,16.36,0,0,0-.27,2,16.69,16.69,0,0,0,0,2,22.19,22.19,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.72.71.73.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.53c1.14.72,2.31,1.38,3.5,2a39.46,39.46,0,0,0,7.47,3,27,27,0,0,0,7.92,1.09,18.13,18.13,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63q.27-.4.51-.84l.42-.9c.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,34,34,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55q-2.13-2.89-4.38-5.71C931.62,515,930.72,515.13,929.82,515.3Z"/><polygon class="cls-3" points="933.17 514.72 932.91 514.38 932.27 514.5 932.53 514.84 933.17 514.72"/></g><g class="cls-1"><path class="cls-96" d="M605.4,544.28c.76.21,1.53.4,2.3.59a124.13,124.13,0,0,0,15.88,2.89,99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31A63,63,0,0,0,693,517.42a55.06,55.06,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.1-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8.05,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,24.79,24.79,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.35,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.59.77,5.17,1.62,7.71,2.54s5.08,1.9,7.57,2.94c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.25,9.36,26,19.36T891.28,477c8.08,7.18,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,21,21,0,0,0-1-3.89c-.45-1.28-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.22-1.14-2.46-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9.1,9.1,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.17.67,1.75,1l.86.53.42.29.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16c-.14-.09-.27-.19-.42-.28s-.56-.36-.85-.54c-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.29-3.58-1.9q-3.61-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.48,28.48,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.33,3.33,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.09,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,9.84,9.84,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.21a10.33,10.33,0,0,1-1.41,1.47,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.36-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,52.16,52.16,0,0,1,2.57,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.43.94a10.13,10.13,0,0,1-.55.89,9.73,9.73,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,20,20,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.38-.35-.74-.7-.72-.71c-.24-.24-.47-.49-.71-.74a43.09,43.09,0,0,1-5-6.4,38.69,38.69,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,23.93,23.93,0,0,1-.55-4,15.57,15.57,0,0,1,0-2.05,15.39,15.39,0,0,1,.27-2,15.74,15.74,0,0,1,1.35-3.87,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,54.46,54.46,0,0,1,7.62-2.83,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.66-.3,2.5-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.32-15.21-23.4-22.37S874.47,463.41,866,456.74s-17.18-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.65-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.68-2.51a110.13,110.13,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.35-.44,8-.08,5.38.17,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.22.26-.45.51-.68.76-.47.49-.93,1-1.42,1.47a58.85,58.85,0,0,1-12.94,9.84,64.22,64.22,0,0,1-15.1,6,79.38,79.38,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.6,123.25,123.25,0,0,1-16-2.93l-2.38-.62ZM928.18,519.2c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.05,19.05,0,0,0-5.09,6.1,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,22.06,22.06,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63q.27-.41.51-.84c.14-.28.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.37-5.71C930,518.88,929.08,519,928.18,519.2Z"/><polygon class="cls-3" points="931.53 518.62 931.27 518.29 930.63 518.41 930.89 518.74 931.53 518.62"/></g><g class="cls-1"><path class="cls-97" d="M603.7,548.66q1.15.32,2.31.6a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.55,77.73,77.73,0,0,0,15.92-2.4,63,63,0,0,0,14.91-6,58.41,58.41,0,0,0,6.71-4.42,57.51,57.51,0,0,0,6-5.31,63.28,63.28,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.54-2.09-32.33-.33-5.39-.57-10.8-.48-16.23,0-2.7.17-5.42.45-8.12a57.69,57.69,0,0,1,1.36-8,33.93,33.93,0,0,1,2.87-7.67,22.45,22.45,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.06,32.06,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13l2,0,1,0,1,0c2.71.15,5.41.43,8.1.82a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.61,7.72,2.53S766.52,399,769,400c5,2.08,9.89,4.39,14.71,6.86,9.62,4.94,18.92,10.5,28,16.3,4.55,2.9,9.07,5.88,13.56,8.88s8.95,6.06,13.36,9.18q13.26,9.35,26,19.36t24.9,20.77c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.4-.31,10.8-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a49.79,49.79,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.57,14.57,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.44l.15-.2.14-.21.14-.2a2.53,2.53,0,0,0,.13-.22,4.92,4.92,0,0,0,.42-.9,6.48,6.48,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.09,3.09,0,0,1,.37-1,3,3,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.46,16.46,0,0,1,4-.57,28.92,28.92,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.5s5,2,7.51,3,4.92,2.25,7.32,3.47c1.21.61,2.4,1.24,3.59,1.9.59.33,1.17.66,1.75,1,.29.18.58.35.86.54l.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.07.17.24l-.08,0-.14-.14-.2-.15-.42-.29-.85-.53c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.77-7.7-2.48a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.86,8.86,0,0,0-3.52,1.86,3,3,0,0,0-.62.76,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0-.05,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.27,20.27,0,0,1,1,3.93,10.7,10.7,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6,6,0,0,1-.43.93l-.14.22-.14.22-.15.21-.15.2a11,11,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.47-16.19-.79l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.39,0-10.79,0-16.18.34-4.25.25-8.5.63-12.71,1.27,1.43,1.81,2.82,3.63,4.19,5.48a126.75,126.75,0,0,1,8.81,13.63,74.67,74.67,0,0,1,3.55,7.31,50.94,50.94,0,0,1,2.58,7.71,34.47,34.47,0,0,1,1,8.09,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.28-.74,1.91-.14.31-.27.62-.44.93a7.27,7.27,0,0,1-.54.89,9.8,9.8,0,0,1-3.06,2.78,14.12,14.12,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51A27.88,27.88,0,0,1,928,580.7a40.1,40.1,0,0,1-7.55-3c-1.2-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.38-.85-.57-.57-.37-1.11-.77-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.38-.35-.74-.69-.72-.72c-.25-.23-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,31.43,31.43,0,0,1-1.15-3.92,22.83,22.83,0,0,1-.55-4,15.51,15.51,0,0,1,1.64-8,17.44,17.44,0,0,1,1-1.77A17.93,17.93,0,0,1,901,535a22.54,22.54,0,0,1,2.94-2.84,33.76,33.76,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83,78.64,78.64,0,0,1,7.89-1.87c.84-.16,1.67-.31,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.4-14.05-24.89-20.72-17.17-13.1-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.76-14.66-6.83-2.48-1-5-2-7.53-2.92s-5.09-1.75-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0-2,0c-1.34,0-2.68,0-4,.14a31.29,31.29,0,0,0-7.81,1.56,23.62,23.62,0,0,0-3.63,1.62,20.6,20.6,0,0,0-8.13,8.47,33,33,0,0,0-2.8,7.47,56.92,56.92,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.4.2,10.83-.1,16.24A97.48,97.48,0,0,1,697.84,507a56,56,0,0,1-5.79,15.2,67.21,67.21,0,0,1-4.53,6.78c-.2.28-.41.54-.62.81l-.64.79c-.43.53-.87,1-1.31,1.57l-.68.76c-.23.25-.45.51-.68.75-.47.49-.93,1-1.42,1.47a57.89,57.89,0,0,1-6.13,5.37,60.93,60.93,0,0,1-6.81,4.47,64,64,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,125.16,125.16,0,0,1-16-2.94c-.8-.2-1.6-.4-2.39-.62Zm322.8-25.07a78.12,78.12,0,0,0-7.86,1.88,54.89,54.89,0,0,0-7.56,2.81,33.39,33.39,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,14.94,14.94,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,23.29,23.29,0,0,0,.56,4,30.46,30.46,0,0,0,1.13,3.86,36.85,36.85,0,0,0,3.57,7.2,42,42,0,0,0,5,6.33c.23.24.46.49.7.72l.71.71c.24.24.49.46.74.69l.37.34.38.34c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.67,39.67,0,0,0,7.46,3,27,27,0,0,0,7.93,1.08,18.2,18.2,0,0,0,4-.5,13.19,13.19,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.7,8.7,0,0,0,.5-.83c.15-.29.29-.6.43-.91q.39-.91.72-1.86a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.36,50.36,0,0,0-2.55-7.64,75.84,75.84,0,0,0-3.54-7.25,126.12,126.12,0,0,0-8.79-13.56c-1.42-1.92-2.89-3.83-4.38-5.7C928.3,523.26,927.4,523.42,926.5,523.59Z"/><polygon class="cls-3" points="929.85 523.01 929.59 522.67 928.95 522.79 929.21 523.12 929.85 523.01"/></g><g class="cls-1"><path class="cls-98" d="M602.06,552.89l2.34.6a124,124,0,0,0,15.89,2.89,99.7,99.7,0,0,0,16.11.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,54.92,54.92,0,0,0,5.67-15,94.08,94.08,0,0,0,2.16-16c.3-5.37.27-10.77.09-16.15-.38-10.78-1.42-21.54-2.1-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.88,20.88,0,0,1,3.38-2.36,23.89,23.89,0,0,1,3.76-1.69,32.14,32.14,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.09.81a113.25,113.25,0,0,1,15.87,3.52q3.9,1.16,7.72,2.54c2.54.92,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.24,9.36,26,19.36T888,485.62c8.08,7.18,15.93,14.62,23.42,22.43,5.78,6,11.36,12.3,16.56,18.85,4.29-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.4.33,10.79.62,16.18.8s10.8.26,16.2,0c2.69-.1,5.39-.29,8.06-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.15-.21a2.39,2.39,0,0,1,.13-.21,6.07,6.07,0,0,0,.41-.9,6.81,6.81,0,0,0,.38-2,11.3,11.3,0,0,0-.11-2,21.17,21.17,0,0,0-1-3.89c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.72a17.54,17.54,0,0,1-1.1-3.9,5.89,5.89,0,0,1,.06-2.05,3.74,3.74,0,0,1,.37-1,3,3,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.84,53.84,0,0,1,8,1.61c2.6.71,5.17,1.56,7.71,2.5s5,2,7.5,3.05,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.75,1,.29.17.58.35.86.54a3.13,3.13,0,0,1,.42.29l.21.15c0,.08.14.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.2-.15-.41-.29-.86-.54c-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.38-7.32-3.46s-5-2.11-7.51-3-5.09-1.78-7.7-2.49a54.71,54.71,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.7,16.7,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.33,3.33,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17,17,0,0,0,1.1,3.86c.49,1.26,1.05,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.31.55,1.23,1.08,2.48,1.53,3.75a21.3,21.3,0,0,1,1,3.94,9.9,9.9,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93c0,.08-.09.15-.13.22l-.15.21-.15.21-.15.21a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,52.56,52.56,0,0,1-8,1.55c-2.69.32-5.38.51-8.08.62-5.41.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.18-1c-10.78-.66-21.57-1.25-32.36-1.35-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a125.77,125.77,0,0,1,8.81,13.63,75.7,75.7,0,0,1,3.56,7.3,52.55,52.55,0,0,1,2.57,7.72,33.87,33.87,0,0,1,1,8.08,25.32,25.32,0,0,1-1.3,8c-.23.64-.47,1.28-.75,1.91-.14.31-.27.62-.43.93s-.35.61-.54.89a9.76,9.76,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,18.59,18.59,0,0,1-4.06.52,27.79,27.79,0,0,1-8.07-1.11,40.88,40.88,0,0,1-7.56-3c-1.2-.63-2.38-1.29-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.37-.35-.75-.69-.72-.72-.71-.73a43,43,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29A31.38,31.38,0,0,1,896,554.6a24,24,0,0,1-.56-4,15.58,15.58,0,0,1,0-2,13.9,13.9,0,0,1,.28-2,15.11,15.11,0,0,1,1.34-3.86,16.41,16.41,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.61-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37S871.17,472,862.68,465.36s-17.17-13.09-26-19.31q-6.63-4.65-13.37-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.39-11.31-28-16.23-4.81-2.45-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.67-2.51a112,112,0,0,0-15.76-3.48c-2.66-.37-5.33-.65-8-.79l-1-.05-1,0c-.67,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31.85,31.85,0,0,0-7.81,1.57,22.59,22.59,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.08,5.38.17,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.36.18,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,56.15,56.15,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.22.26-.44.51-.68.76-.47.49-.93,1-1.42,1.47a58.94,58.94,0,0,1-6.12,5.37,61.54,61.54,0,0,1-6.82,4.47,64.22,64.22,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94c-.81-.2-1.61-.41-2.41-.63Zm322.82-25.07c-2.65.5-5.28,1.12-7.86,1.88a56.26,56.26,0,0,0-7.56,2.82,33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.72,14.72,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.82,14.82,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.81,30.81,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.45,40.45,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.94,8.94,0,0,0,.51-.84c.15-.28.28-.6.42-.9.27-.61.51-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.37,33.37,0,0,0-1-8,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25A125.14,125.14,0,0,0,932,533.06q-2.13-2.89-4.37-5.71C926.68,527.5,925.78,527.65,924.88,527.82Z"/><polygon class="cls-3" points="928.24 527.24 927.97 526.91 927.33 527.03 927.6 527.36 928.24 527.24"/></g><g class="cls-1"><path class="cls-99" d="M600.45,557.06c.79.21,1.58.42,2.37.61a124.28,124.28,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,59.88,59.88,0,0,0,6.72-4.42,58.57,58.57,0,0,0,6-5.31,63.68,63.68,0,0,0,9.73-12.78,55.18,55.18,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.13a56.51,56.51,0,0,1,1.37-8,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81A111.72,111.72,0,0,1,750.54,403c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.25,9.34,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.6.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.69-.11,5.39-.29,8.07-.61a50.61,50.61,0,0,0,7.92-1.54,24.79,24.79,0,0,0,3.78-1.4,14.71,14.71,0,0,0,3.39-2.14,10,10,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,11.18,11.18,0,0,0-.1-2,21.09,21.09,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,6.08,6.08,0,0,1,.06-2,3.32,3.32,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9.12,9.12,0,0,1,3.58-1.9,16.11,16.11,0,0,1,4-.56,28.77,28.77,0,0,1,4,.19,52.58,52.58,0,0,1,8,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.46c1.2.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.42.29.2.16c.06.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.36-.86-.54c-.58-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.33-3.46c-2.47-1.08-5-2.1-7.5-3s-5.1-1.78-7.71-2.49a53.4,53.4,0,0,0-7.92-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.25,1.06,2.48,1.63,3.7,1.17,2.44,2.41,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.43,21.43,0,0,1,1,3.93,11.63,11.63,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,6.2,6.2,0,0,1-.44.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,14.66,14.66,0,0,1-3.43,2.18,25.63,25.63,0,0,1-3.81,1.42,50,50,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.14-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.24-8.49.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,52.2,52.2,0,0,1,2.58,7.72,34.31,34.31,0,0,1,1,8.08,24.94,24.94,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.5,27.5,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.82-.93-3.54-2l-.86-.55L912,583c-.57-.38-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.34-.37-.34c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.55,17.55,0,0,1,0-2.05,15.48,15.48,0,0,1,.28-2,15.2,15.2,0,0,1,1.35-3.87,15.76,15.76,0,0,1,1-1.77,17.51,17.51,0,0,1,1.24-1.63,21.76,21.76,0,0,1,2.93-2.83,34.34,34.34,0,0,1,7-4.23,54.88,54.88,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.2-23.41-22.36s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.93c-2.54-.9-5.1-1.75-7.68-2.51a112.09,112.09,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,21.74,21.74,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.39.16,10.78.49,16.16.66,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,67,67,0,0,1-4.52,6.77c-.2.28-.42.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.5-.92,1-1.41,1.47a57.79,57.79,0,0,1-13,9.84,63.3,63.3,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93l-2.45-.64ZM923.3,532c-2.65.5-5.27,1.12-7.86,1.88a54.81,54.81,0,0,0-7.55,2.82,33.08,33.08,0,0,0-6.86,4.17,18.89,18.89,0,0,0-5.1,6.11,15.09,15.09,0,0,0-1.3,3.76,13.14,13.14,0,0,0-.27,2,16.7,16.7,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.74.69.36.34.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a39.37,39.37,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.74,18.74,0,0,0,3.95-.5,13.69,13.69,0,0,0,3.68-1.47,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,49.2,49.2,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.14-2.9-4.38-5.71C925.11,531.67,924.2,531.83,923.3,532Z"/><polygon class="cls-3" points="926.66 531.42 926.39 531.08 925.75 531.21 926.02 531.54 926.66 531.42"/></g><g class="cls-1"><path class="cls-100" d="M598.75,561.44l2.39.62A123.94,123.94,0,0,0,617,564.94a99.79,99.79,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,57.39,57.39,0,0,0,12.75-9.73,63.61,63.61,0,0,0,9.73-12.77,55.58,55.58,0,0,0,5.67-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.76.09-16.15-.38-10.78-1.42-21.54-2.09-32.33-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05,33.59,33.59,0,0,1,2.88-7.66,22.16,22.16,0,0,1,5.1-6.45A21.33,21.33,0,0,1,705,406.3a23,23,0,0,1,3.76-1.68,31.7,31.7,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.09.81a114.68,114.68,0,0,1,15.87,3.52q3.9,1.16,7.72,2.54c2.54.92,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.18q13.24,9.34,26,19.35t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1.05,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.18,1c5.39.33,10.78.62,16.18.81s10.79.26,16.19,0c2.69-.11,5.39-.3,8.06-.62a50.49,50.49,0,0,0,7.93-1.53,25.19,25.19,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.19.15-.21.14-.21.13-.21a7.36,7.36,0,0,0,.42-.9,7.16,7.16,0,0,0,.37-2,10.28,10.28,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.71a17.77,17.77,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2.05,3.74,3.74,0,0,1,.37-1,3.38,3.38,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,27.41,27.41,0,0,1,4,.2,52.56,52.56,0,0,1,8,1.6c2.6.71,5.17,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.17.57.35.86.54l.41.29.21.15c0,.08.14.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.2-.15-.41-.29-.86-.53c-.58-.35-1.16-.68-1.75-1-1.19-.66-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a54.71,54.71,0,0,0-7.92-1.59,30.27,30.27,0,0,0-4-.18,16.2,16.2,0,0,0-4,.56,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.43,3.43,0,0,0-.35.92,5.78,5.78,0,0,0-.06,2,17.51,17.51,0,0,0,1.1,3.86c.49,1.26,1.05,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.31.55,1.23,1.08,2.48,1.53,3.75a22.14,22.14,0,0,1,1,3.94,10.65,10.65,0,0,1,.1,2,6.62,6.62,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.38,10.38,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,51.35,51.35,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.41.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.79-.66-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.27,1.42,1.81,2.82,3.63,4.18,5.48A124.28,124.28,0,0,1,938,554.92a75.7,75.7,0,0,1,3.56,7.3,51.39,51.39,0,0,1,2.57,7.72,33.87,33.87,0,0,1,1,8.08,25,25,0,0,1-1.3,8.05c-.22.64-.47,1.28-.74,1.91-.14.31-.28.62-.44.93a7.27,7.27,0,0,1-.54.89,9.76,9.76,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,18.59,18.59,0,0,1-4.06.52,27.79,27.79,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.54-2l-.86-.54c-.29-.18-.56-.38-.84-.57-.57-.37-1.12-.78-1.67-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.37-.35-.74-.69-.73-.72c-.24-.24-.47-.49-.7-.73a41.89,41.89,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,14.28,14.28,0,0,1,.28-2,15.5,15.5,0,0,1,1.34-3.86,15,15,0,0,1,1-1.77,16.28,16.28,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,33.59,33.59,0,0,1,6.95-4.22,56.24,56.24,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14.06-24.88-20.72-17.17-13.1-26-19.32q-6.63-4.65-13.37-9.14c-4.48-3-9-6-13.55-8.86-9.12-5.78-18.4-11.31-28-16.23-4.8-2.45-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.67-2.51a112.12,112.12,0,0,0-15.75-3.48c-2.67-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,23.51,23.51,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.19,5.4.21,10.82-.1,16.23A95.38,95.38,0,0,1,693,519.82a56.15,56.15,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.63.8c-.43.53-.88,1.05-1.31,1.56l-.68.77c-.23.25-.45.51-.69.75-.47.49-.93,1-1.41,1.47a60.1,60.1,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64,64,0,0,1-15.1,6,78.58,78.58,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125.31,125.31,0,0,1-16-2.94c-.82-.2-1.65-.42-2.47-.64Zm322.87-25.05a78.73,78.73,0,0,0-7.86,1.87,55.63,55.63,0,0,0-7.55,2.82,32.86,32.86,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,14.86,14.86,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.82,14.82,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.32,30.32,0,0,0,1.13,3.85,37.72,37.72,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71c.24.24.49.46.73.69l.37.34.38.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.38,3.51,2a40.08,40.08,0,0,0,7.46,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.28-.59.42-.9.27-.61.51-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.37,33.37,0,0,0-1-7.95,51.53,51.53,0,0,0-2.56-7.64,75.76,75.76,0,0,0-3.53-7.25,128.22,128.22,0,0,0-8.79-13.56q-2.15-2.89-4.38-5.71C923.42,536.06,922.52,536.21,921.62,536.39Z"/><polygon class="cls-3" points="924.98 535.8 924.71 535.47 924.07 535.59 924.34 535.92 924.98 535.8"/></g><g class="cls-1"><path class="cls-101" d="M597.11,565.67c.8.22,1.61.42,2.41.62a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.35,63.35,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23.05-2.71.18-5.42.46-8.12A55,55,0,0,1,692,427a33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52q3.9,1.16,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.49,28,16.3q6.84,4.35,13.57,8.88c4.48,3,8.95,6.06,13.36,9.17q13.24,9.36,26,19.36t24.89,20.78c8.08,7.17,15.94,14.62,23.42,22.42,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.3,10.8-.37,16.2-.32,10.81.11,21.61.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.21,26.21,0,0,0,3.77-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.22,11.22,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.83,5.83,0,0,1,0-2,3.44,3.44,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,8.86,8.86,0,0,1,3.57-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.45c-2.48-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,17.41,17.41,0,0,0,1.09,3.87c.5,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93l-.13.22-.14.21-.15.21-.16.2a9.81,9.81,0,0,1-1.4,1.48A15.1,15.1,0,0,1,1053,538a25.47,25.47,0,0,1-3.8,1.41,50.32,50.32,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.9-.14.32-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,19.89,19.89,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.18-1.09-.81-2.15-1.65-3.16-2.56l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.48-.49-.71-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,17.51,17.51,0,0,1,0-2.05,15.49,15.49,0,0,1,1.63-5.91,16.27,16.27,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,54.81,54.81,0,0,1,7.61-2.83,79.53,79.53,0,0,1,7.9-1.88c.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.11-5.79-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.49-1-5-2-7.53-2.92s-5.1-1.76-7.68-2.52a111.78,111.78,0,0,0-15.75-3.47c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.58,32.58,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.57,55.57,0,0,1-5.79,15.21A68.27,68.27,0,0,1,681,546c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.25-.45.51-.69.76-.47.49-.92,1-1.41,1.47a60.25,60.25,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,63.69,63.69,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.59,123.87,123.87,0,0,1-16-2.93l-2.48-.65Zm322.89-25c-2.64.5-5.27,1.12-7.85,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,24,24,0,0,0,.55,4,32.2,32.2,0,0,0,1.13,3.86,37.47,37.47,0,0,0,3.58,7.2,41.49,41.49,0,0,0,5,6.34c.23.24.45.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.54.39,1.08.79,1.65,1.16l.83.56.86.54c1.13.71,2.3,1.37,3.5,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.22,9.22,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87a24.77,24.77,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.15-2.9-4.38-5.71C921.81,540.3,920.9,540.45,920,540.62Z"/><polygon class="cls-3" points="923.36 540.04 923.1 539.71 922.45 539.83 922.72 540.16 923.36 540.04"/></g><g class="cls-1"><path class="cls-102" d="M595.49,569.85l2.42.62a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73A63.72,63.72,0,0,0,683.22,543a55.06,55.06,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23.05-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24.9,24.9,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.49,28,16.3q6.84,4.35,13.57,8.88c4.48,3,8.95,6.06,13.36,9.17q13.24,9.36,26,19.36t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.61.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.21,26.21,0,0,0,3.77-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.22,11.22,0,0,0-.1-2,20.24,20.24,0,0,0-1-3.89c-.44-1.28-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.05-2,3.44,3.44,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.57-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.29-3.58-1.9q-3.61-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,17.41,17.41,0,0,0,1.09,3.87c.5,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a9.74,9.74,0,0,1-1.4,1.47,15.1,15.1,0,0,1-3.44,2.19,25.47,25.47,0,0,1-3.8,1.41,50.32,50.32,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78L983,544c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.47,1.28-.74,1.9-.14.32-.28.62-.44.94a8.11,8.11,0,0,1-.54.89A9.77,9.77,0,0,1,935.8,601a13.56,13.56,0,0,1-3.82,1.52,19.89,19.89,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.18-1.09-.81-2.15-1.65-3.16-2.56l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.48-.49-.71-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,17.51,17.51,0,0,1,0-2,15.49,15.49,0,0,1,1.63-5.91,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,54.81,54.81,0,0,1,7.61-2.83,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73S839,469.25,830.19,463c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.11-5.78-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a110.43,110.43,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.57,55.57,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47a60.25,60.25,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64.14,64.14,0,0,1-15.09,6,79.47,79.47,0,0,1-16.08,2.4,101.17,101.17,0,0,1-16.23-.6,123.87,123.87,0,0,1-16-2.93l-2.49-.65Zm322.9-25.05c-2.65.5-5.27,1.12-7.85,1.88A54.93,54.93,0,0,0,903,549.5a33.12,33.12,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,24,24,0,0,0,.55,4,32.2,32.2,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.19,42.19,0,0,0,5,6.34c.23.24.45.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.05,1.73,3.13,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.1,9.1,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.6.42-.9.27-.61.51-1.24.73-1.87a25.05,25.05,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,75.84,75.84,0,0,0-3.54-7.25A125.14,125.14,0,0,0,925.48,550q-2.15-2.89-4.38-5.71C920.2,544.48,919.29,544.63,918.39,544.8Z"/><polygon class="cls-3" points="921.75 544.22 921.49 543.89 920.84 544.01 921.11 544.34 921.75 544.22"/></g><g class="cls-1"><path class="cls-103" d="M593.79,574.23c.81.22,1.63.43,2.44.63a124.28,124.28,0,0,0,15.89,2.89,99.78,99.78,0,0,0,16.12.55,77.84,77.84,0,0,0,15.92-2.4,63.07,63.07,0,0,0,14.9-6,57.39,57.39,0,0,0,12.75-9.73,63.33,63.33,0,0,0,9.73-12.77,55.25,55.25,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.54-2.09-32.33-.33-5.39-.58-10.8-.49-16.23,0-2.7.18-5.42.45-8.12a56.27,56.27,0,0,1,1.37-8,33,33,0,0,1,2.87-7.67,22.11,22.11,0,0,1,5.1-6.44A21.39,21.39,0,0,1,700,419.1a24,24,0,0,1,3.77-1.68,32,32,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13l2,0,1,0,1,.05c2.71.15,5.41.43,8.1.82A111.72,111.72,0,0,1,744,420.15c2.6.76,5.17,1.61,7.72,2.53s5.07,1.9,7.57,2.95c5,2.08,9.89,4.39,14.7,6.86,9.63,4.94,18.92,10.5,28,16.3,4.56,2.9,9.08,5.88,13.56,8.88s9,6.06,13.37,9.18q13.25,9.34,26,19.36T879.81,507c8.08,7.18,15.93,14.62,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.39,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.79.26,16.19,0c2.69-.11,5.39-.3,8.07-.62a49.46,49.46,0,0,0,7.92-1.53,24.79,24.79,0,0,0,3.78-1.4,14.63,14.63,0,0,0,3.39-2.15,9.89,9.89,0,0,0,1.38-1.44l.15-.2.15-.21.14-.2c0-.08.09-.14.13-.22a6.73,6.73,0,0,0,.42-.9,7.16,7.16,0,0,0,.37-1.95,10.28,10.28,0,0,0-.11-2,20.31,20.31,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,6.07,6.07,0,0,1,.06-2,3.38,3.38,0,0,1,.38-1,3.12,3.12,0,0,1,.65-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.77,28.77,0,0,1,4.05.2,53.81,53.81,0,0,1,7.95,1.6c2.61.72,5.17,1.57,7.71,2.5s5,2,7.51,3,4.91,2.25,7.32,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.42.29.2.16c.06.07.15.07.16.24l-.08,0a.57.57,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.77-7.71-2.48a52.15,52.15,0,0,0-7.92-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.82,8.82,0,0,0-3.51,1.86,3.27,3.27,0,0,0-.63.76,3.43,3.43,0,0,0-.35.92,5.54,5.54,0,0,0-.05,2,17,17,0,0,0,1.09,3.87c.49,1.25,1.06,2.48,1.63,3.7,1.17,2.43,2.41,4.83,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21,21,0,0,1,1,3.93,11.58,11.58,0,0,1,.11,2,7,7,0,0,1-.39,2,5.23,5.23,0,0,1-.43.93c0,.08-.09.15-.13.22l-.15.22-.14.21-.16.2a10.38,10.38,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50,50,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.63-5.4.21-10.81.14-16.21,0s-10.8-.47-16.19-.79l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.27,1.42,1.81,2.82,3.63,4.18,5.48a126.84,126.84,0,0,1,8.82,13.63,77,77,0,0,1,3.55,7.31,50.9,50.9,0,0,1,2.57,7.71,34,34,0,0,1,1,8.09,25,25,0,0,1-1.3,8c-.22.65-.47,1.28-.74,1.91-.14.31-.28.62-.44.93a7.27,7.27,0,0,1-.54.89,9.8,9.8,0,0,1-3.06,2.78,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.79,27.79,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3q-1.82-.93-3.54-2l-.86-.55-.84-.57c-.57-.37-1.11-.77-1.66-1.17-1.09-.82-2.16-1.66-3.17-2.56l-.38-.34-.37-.35c-.25-.23-.5-.45-.74-.69l-.73-.72c-.24-.23-.47-.49-.7-.73a42.52,42.52,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,23.81,23.81,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,15.48,15.48,0,0,1,.28-2A15.07,15.07,0,0,1,889,564a15.76,15.76,0,0,1,1-1.77,16.28,16.28,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,34.3,34.3,0,0,1,7-4.22,56.24,56.24,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.31,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.41-22.37S863,493.4,854.51,486.73s-17.17-13.1-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.69-4.76-14.66-6.83q-3.73-1.56-7.54-2.92t-7.67-2.51A112.12,112.12,0,0,0,728,417.45c-2.67-.37-5.34-.65-8-.79l-1-.05-1,0-2,0c-1.34,0-2.67,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,23.51,23.51,0,0,0-3.62,1.62,21,21,0,0,0-3.24,2.28,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.66,10.77,1.7,21.53,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.4,95.4,0,0,1-2.18,16.11,55.7,55.7,0,0,1-5.79,15.2,67.12,67.12,0,0,1-4.52,6.78c-.2.28-.42.54-.63.81l-.63.79c-.43.53-.87,1-1.31,1.57l-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a58.9,58.9,0,0,1-6.13,5.37,60.15,60.15,0,0,1-6.82,4.47,63.72,63.72,0,0,1-15.09,6,78.78,78.78,0,0,1-16.08,2.4,101.12,101.12,0,0,1-16.23-.59,125.31,125.31,0,0,1-16-2.94l-2.51-.65Zm322.92-25a78.78,78.78,0,0,0-7.86,1.88,54.76,54.76,0,0,0-7.55,2.81,32.86,32.86,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,14.45,14.45,0,0,0-1.3,3.76,13.45,13.45,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.69,42.69,0,0,0,5,6.33c.24.24.46.49.7.72l.72.71c.24.24.49.46.74.69l.36.34.38.34c1,.89,2.06,1.72,3.14,2.53.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.72,2.31,1.38,3.51,2a39.41,39.41,0,0,0,7.46,3,27,27,0,0,0,7.93,1.08,18.11,18.11,0,0,0,3.95-.5,13.07,13.07,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,7.11,7.11,0,0,0,.51-.83c.15-.29.28-.6.42-.91q.4-.92.72-1.86a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,50.4,50.4,0,0,0-2.56-7.64,75.76,75.76,0,0,0-3.53-7.25,127.67,127.67,0,0,0-8.79-13.56c-1.43-1.92-2.89-3.83-4.38-5.7C918.51,548.86,917.61,549,916.71,549.19Z"/><polygon class="cls-3" points="920.07 548.61 919.8 548.27 919.16 548.39 919.43 548.72 920.07 548.61"/></g><g class="cls-1"><path class="cls-104" d="M592.15,578.46l2.46.63A124.28,124.28,0,0,0,610.5,582a99.82,99.82,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,62.87,62.87,0,0,0,14.9-6,59,59,0,0,0,6.72-4.42,59.75,59.75,0,0,0,6-5.31,63.56,63.56,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.06,94.06,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.15-.37-10.78-1.41-21.54-2.09-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a56.62,56.62,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.41,21.41,0,0,1,3.39-2.36,23.49,23.49,0,0,1,3.76-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.09-.13.67,0,1.35,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.1.81a114.22,114.22,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54t7.57,2.94c5,2.09,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.5,28,16.3q6.82,4.35,13.56,8.88t13.36,9.17q13.25,9.36,26,19.36t24.9,20.78c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.67,8.62-1,13-1.3,5.39-.3,10.8-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,9.45,9.45,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.48,6.48,0,0,0,.37-1.95,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.72a17,17,0,0,1-1.1-3.9,5.89,5.89,0,0,1,0-2,3.44,3.44,0,0,1,.38-1,3,3,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.45,16.45,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.57,7.71,2.5s5,2,7.51,3.05,4.92,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.17.58.35.86.54s.28.18.42.29l.2.15c.06.08.15.08.17.25l-.08,0s-.09-.1-.15-.14l-.19-.15-.42-.29-.86-.53c-.57-.35-1.16-.69-1.75-1-1.18-.66-2.38-1.28-3.58-1.89-2.41-1.22-4.85-2.38-7.32-3.46s-5-2.11-7.51-3-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.7,16.7,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,3,3,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17,17,0,0,0,1.1,3.86c.49,1.26,1,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.08,2.48,1.53,3.75a20.56,20.56,0,0,1,1,3.94,10.65,10.65,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,52.56,52.56,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4,0-10.8,0-16.18.34-4.25.25-8.5.63-12.71,1.27q2.13,2.7,4.19,5.48A127.3,127.3,0,0,1,931.45,572a75.62,75.62,0,0,1,3.55,7.3,51.43,51.43,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.44.93a7.27,7.27,0,0,1-.54.89,9.65,9.65,0,0,1-3.06,2.77,13.5,13.5,0,0,1-3.81,1.52,18.68,18.68,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.29-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.57-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35-.74-.69-.72-.72c-.25-.24-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,29.82,29.82,0,0,1-1.15-3.92,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,17.26,17.26,0,0,1,.28-2,15.13,15.13,0,0,1,1.35-3.86,16.41,16.41,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.84-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31q-6.61-4.65-13.36-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31.93,31.93,0,0,0-7.82,1.57,23,23,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.77,1.7,21.54,2.08,32.36.18,5.4.2,10.82-.1,16.23a96.42,96.42,0,0,1-2.19,16.12,55.8,55.8,0,0,1-5.78,15.2,70.15,70.15,0,0,1-4.53,6.78c-.2.27-.41.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47a59,59,0,0,1-6.13,5.37,62.36,62.36,0,0,1-6.81,4.47,64.39,64.39,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,125.64,125.64,0,0,1-16-2.94c-.84-.21-1.69-.43-2.53-.66Zm322.94-25c-2.64.5-5.27,1.12-7.85,1.88a56.26,56.26,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,30.85,30.85,0,0,0,1.14,3.85,36.85,36.85,0,0,0,3.57,7.2,42.12,42.12,0,0,0,5,6.34c.23.24.46.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.08.79,1.65,1.16l.83.56.86.54c1.13.71,2.31,1.38,3.5,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.28.29-.6.42-.9.27-.61.51-1.23.73-1.87a24.77,24.77,0,0,0,1.27-7.88,33.9,33.9,0,0,0-1-7.95,50.36,50.36,0,0,0-2.55-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56c-1.42-1.93-2.89-3.83-4.38-5.71C916.9,553.1,916,553.25,915.09,553.42Z"/><polygon class="cls-3" points="918.45 552.84 918.19 552.51 917.54 552.63 917.81 552.96 918.45 552.84"/></g><g class="cls-1"><path class="cls-105" d="M590.54,582.63c.83.22,1.66.44,2.5.64a124.13,124.13,0,0,0,15.88,2.89,101,101,0,0,0,16.12.56A77.75,77.75,0,0,0,641,584.31a62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.26,63.26,0,0,0,9.72-12.78,54.86,54.86,0,0,0,5.67-15,95.37,95.37,0,0,0,2.16-16c.3-5.37.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.15,4.09-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.59.76,5.17,1.62,7.71,2.53s5.08,1.9,7.57,3c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,8.95,6.05,13.37,9.17q13.24,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.11,5.39-.29,8.07-.61a51.89,51.89,0,0,0,7.93-1.53,26.83,26.83,0,0,0,3.78-1.41,15.15,15.15,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.86-3.51-7.31-.57-1.22-1.14-2.45-1.63-3.71a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.3,3.3,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16,16,0,0,1,4-.56,28.84,28.84,0,0,1,4,.19,52.58,52.58,0,0,1,8,1.61c2.6.71,5.17,1.56,7.7,2.5s5,2,7.51,3,4.92,2.24,7.33,3.46c1.2.62,2.4,1.25,3.58,1.9.59.33,1.17.67,1.75,1l.86.54c.15.1.29.19.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16c-.13-.1-.27-.19-.41-.28l-.86-.54c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a53.66,53.66,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.77,8.77,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.21,3.21,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.09,2.48,1.54,3.76a21.4,21.4,0,0,1,1,3.93,10,10,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.36-1.36-5.4,0-10.8,0-16.19.35-4.25.24-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,52.16,52.16,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.94s-.35.6-.55.89a9.73,9.73,0,0,1-3.05,2.77,13.68,13.68,0,0,1-3.82,1.52,19.21,19.21,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,39.71,39.71,0,0,1-7.55-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.37-.85-.56-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.37-.35-.75-.7-.72-.71c-.24-.24-.47-.49-.71-.74a43.17,43.17,0,0,1-5-6.41,38.31,38.31,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,23.91,23.91,0,0,1-.55-4,15.6,15.6,0,0,1,0-2.05,14,14,0,0,1,.28-2,15.18,15.18,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77A19.44,19.44,0,0,1,888,569a21.83,21.83,0,0,1,2.94-2.83,33.8,33.8,0,0,1,6.95-4.23,54.41,54.41,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.66-.3,2.5-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.2-23.4-22.36s-16.39-14.06-24.88-20.73-17.18-13.09-26-19.31q-6.63-4.66-13.37-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.65-6.82q-3.74-1.56-7.54-2.93c-2.53-.9-5.09-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.81,1.57,21.84,21.84,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,57.2,57.2,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24A95.13,95.13,0,0,1,684.86,541a56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.53-.62.8l-.64.8L672,566.18l-.68.76c-.22.25-.45.51-.68.75-.47.5-.93,1-1.42,1.47A57.44,57.44,0,0,1,656.25,579a63.37,63.37,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93l-2.57-.67Zm323-25c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.35,33.35,0,0,0-6.86,4.17,19,19,0,0,0-5.09,6.11,14.72,14.72,0,0,0-1.31,3.76,16.36,16.36,0,0,0-.27,2,16.69,16.69,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a39.46,39.46,0,0,0,7.47,3,27,27,0,0,0,7.92,1.09,18.75,18.75,0,0,0,4-.5,13.82,13.82,0,0,0,3.68-1.47,9.49,9.49,0,0,0,2.9-2.63q.27-.4.51-.84l.42-.9c.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.37-5.71C915.32,557.27,914.42,557.43,913.52,557.6Z"/><polygon class="cls-3" points="916.88 557.02 916.61 556.68 915.97 556.81 916.24 557.14 916.88 557.02"/></g><g class="cls-1"><path class="cls-106" d="M588.84,587l2.51.65a124.26,124.26,0,0,0,15.89,2.88,99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.54-2.09-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05,34,34,0,0,1,2.87-7.66,22.49,22.49,0,0,1,5.1-6.45,21.41,21.41,0,0,1,3.39-2.36,22.59,22.59,0,0,1,3.76-1.68,31.63,31.63,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.67,0,1.35,0,2,0l1,0,1,.05c2.71.15,5.42.43,8.1.81a114.22,114.22,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54t7.57,2.94c5,2.09,9.89,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88T824,479.65Q837.29,489,850,499t24.9,20.78c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1.05,13-1.3,5.4-.3,10.8-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.79.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.45l.15-.19.14-.21.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.48,6.48,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.52-1.51-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.77,17.77,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2.05,3.41,3.41,0,0,1,.37-1,3,3,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.53,16.53,0,0,1,4-.57,27.41,27.41,0,0,1,4,.2,52.18,52.18,0,0,1,7.94,1.6c2.61.71,5.18,1.57,7.71,2.5s5,2,7.51,3,4.92,2.25,7.33,3.47c1.2.61,2.39,1.24,3.58,1.9.59.33,1.17.66,1.75,1,.29.17.58.35.86.54l.42.29.2.15c.06.08.15.08.17.25l-.08,0-.14-.14-.2-.15-.42-.29-.85-.53c-.58-.35-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.47-1.09-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,30.12,30.12,0,0,0-4-.18,16.2,16.2,0,0,0-4,.56,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17,17,0,0,0,1.1,3.86c.49,1.26,1,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.08,2.48,1.53,3.75a20.56,20.56,0,0,1,1,3.94,10.65,10.65,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.21a11,11,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,51.35,51.35,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.39,0-10.79,0-16.18.34-4.25.25-8.5.63-12.71,1.27,1.43,1.81,2.82,3.63,4.19,5.48a125.77,125.77,0,0,1,8.81,13.63,74.67,74.67,0,0,1,3.55,7.31,50.94,50.94,0,0,1,2.58,7.71,34.41,34.41,0,0,1,1,8.09,25.31,25.31,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.43.93a8.84,8.84,0,0,1-.55.89,9.72,9.72,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,18.68,18.68,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.62-2.39-1.29-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.38-.35-.74-.69-.72-.72c-.25-.24-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,31.43,31.43,0,0,1-1.15-3.92,23,23,0,0,1-.55-4,15.58,15.58,0,0,1,0-2.05,15.84,15.84,0,0,1,.27-2,15.53,15.53,0,0,1,1.35-3.86,16.41,16.41,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.59-.76,5.23-1.38,7.89-1.88.84-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.4-14.06-24.89-20.72-17.17-13.1-26-19.32q-6.61-4.65-13.36-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.14a31.29,31.29,0,0,0-7.81,1.56,23.62,23.62,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.21,21.21,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.5,55.5,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.4.2,10.82-.1,16.23a96.41,96.41,0,0,1-2.18,16.12,56.15,56.15,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.77c-.23.25-.45.51-.68.75-.47.49-.93,1-1.42,1.47a59,59,0,0,1-6.13,5.37,60.5,60.5,0,0,1-6.81,4.47,64.39,64.39,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,125.16,125.16,0,0,1-16-2.94c-.87-.21-1.73-.44-2.59-.67Zm323-25a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,18.93,18.93,0,0,0-5.09,6.1,14.86,14.86,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,14.82,14.82,0,0,0,0,2,22.31,22.31,0,0,0,.55,4,30.32,30.32,0,0,0,1.13,3.85,36.58,36.58,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.17,40.17,0,0,0,7.47,3,27.23,27.23,0,0,0,7.92,1.08,18.83,18.83,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.28.29-.59.43-.9.26-.61.5-1.23.72-1.87a24.77,24.77,0,0,0,1.27-7.88,33.88,33.88,0,0,0-1-8,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.38-5.71C913.64,561.66,912.74,561.81,911.84,562Z"/><polygon class="cls-3" points="915.19 561.4 914.93 561.07 914.29 561.19 914.55 561.52 915.19 561.4"/></g><g class="cls-1"><path class="cls-107" d="M587.2,591.24l2.54.65a124,124,0,0,0,15.89,2.89,99.79,99.79,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31A63,63,0,0,0,675,564.44a55.08,55.08,0,0,0,5.68-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8.05,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.14,32.14,0,0,1,8-1.6c1.37-.11,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52q3.9,1.15,7.72,2.54c2.54.91,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.25,9.36,26,19.36T873.32,524c8.08,7.17,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.4.32,10.79.62,16.18.8s10.8.26,16.2.05c2.69-.1,5.39-.29,8.06-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.15-.21.13-.21a6.07,6.07,0,0,0,.41-.9,6.88,6.88,0,0,0,.38-2,10.37,10.37,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.64-3.72a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.74,3.74,0,0,1,.37-1,3.39,3.39,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.19,53.84,53.84,0,0,1,7.95,1.61c2.6.71,5.17,1.56,7.71,2.5s5,2,7.5,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.41.29.21.16c0,.07.14.08.16.24l-.08,0a.86.86,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.36-.86-.54l-1.76-1c-1.18-.65-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.37-7.32-3.45s-5-2.11-7.51-3-5.09-1.78-7.7-2.49a54.71,54.71,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.21,3.21,0,0,0-.36.92,6,6,0,0,0-.05,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.24,1.08,2.48,1.53,3.76a22.14,22.14,0,0,1,1,3.94,10.59,10.59,0,0,1,.1,2,6.94,6.94,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93l-.13.22-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.18-1c-10.78-.66-21.56-1.26-32.36-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.62,126.62,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,52.16,52.16,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.23.64-.47,1.28-.74,1.9-.15.32-.28.62-.44.94a10,10,0,0,1-.54.89,9.88,9.88,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.89,19.89,0,0,1-4.06.52,27.79,27.79,0,0,1-8.07-1.11,41.16,41.16,0,0,1-7.56-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.37-.35-.75-.7-.72-.71c-.24-.24-.47-.49-.71-.74a42.37,42.37,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,15.57,15.57,0,0,1,0-2.05,13.9,13.9,0,0,1,.28-2,15.31,15.31,0,0,1,1.34-3.87,16.27,16.27,0,0,1,1-1.76,18.38,18.38,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.59,33.59,0,0,1,7-4.22,54.46,54.46,0,0,1,7.62-2.83,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.43C907.52,559,902,552.8,896.31,546.86c-7.48-7.79-15.33-15.21-23.41-22.37S856.51,510.43,848,503.76s-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82-2.49-1-5-2-7.54-2.92s-5.09-1.76-7.67-2.52a111.92,111.92,0,0,0-15.76-3.47c-2.66-.37-5.33-.65-8-.79l-1-.06-1,0c-.67,0-1.35,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,22.59,22.59,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.28,2.67-.41,5.35-.45,8-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.63.8-1.32,1.56-.67.76c-.23.25-.45.51-.69.76-.47.49-.93,1-1.41,1.47A58.6,58.6,0,0,1,653,587.63a64.22,64.22,0,0,1-15.1,6,78.67,78.67,0,0,1-16.07,2.39,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93l-2.61-.68Zm323-25c-2.65.5-5.28,1.12-7.86,1.88a54.33,54.33,0,0,0-7.55,2.82A32.86,32.86,0,0,0,888,575.1a18.85,18.85,0,0,0-5.1,6.1,14.72,14.72,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.69,14.69,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.45,40.45,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,126.57,126.57,0,0,0-8.78-13.56q-2.14-2.9-4.38-5.71C912,565.9,911.12,566.05,910.22,566.22Z"/><polygon class="cls-3" points="913.58 565.64 913.31 565.31 912.67 565.43 912.94 565.76 913.58 565.64"/></g><g class="cls-1"><path class="cls-108" d="M585.64,595.27q1.22.33,2.43.63A124.28,124.28,0,0,0,604,598.79a101,101,0,0,0,16.12.56A77.85,77.85,0,0,0,636,596.94a63.37,63.37,0,0,0,14.91-6,61.17,61.17,0,0,0,6.71-4.42,57.6,57.6,0,0,0,6-5.32,63.28,63.28,0,0,0,9.72-12.77,55.13,55.13,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8A33.46,33.46,0,0,1,683.4,449a22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.52,32.52,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.67,0,1.35,0,2,0l1,0,1,.06c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.49,28,16.29q6.82,4.37,13.56,8.89c4.49,3,9,6,13.36,9.17q13.26,9.35,26,19.36T871.66,528c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.4-.31,10.8-.38,16.21-.32,10.81.11,21.6.72,32.38,1.39l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.11,5.39-.29,8.07-.61a51,51,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,10,10,0,0,0,1.39-1.45l.15-.2.14-.21.14-.2a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3,3,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.46,16.46,0,0,1,4-.57,30.52,30.52,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3,4.92,2.25,7.32,3.47c1.21.62,2.4,1.25,3.59,1.9.59.33,1.17.67,1.75,1l.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.15-.2-.15-.42-.28c-.28-.19-.57-.37-.85-.54-.58-.35-1.17-.68-1.76-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,3,3,0,0,0-.36.91,5.78,5.78,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.34-4.25.25-8.5.63-12.71,1.28,1.43,1.8,2.82,3.62,4.19,5.47a126.75,126.75,0,0,1,8.81,13.63,75.79,75.79,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.44.93a8.24,8.24,0,0,1-.54.9,9.77,9.77,0,0,1-3.06,2.77,13.81,13.81,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.37-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.38-.34c-.24-.24-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.16,37.16,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,22.94,22.94,0,0,1-.55-4,14,14,0,0,1,0-2.05,15.46,15.46,0,0,1,.27-2A15.2,15.2,0,0,1,880.8,585a17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.83,21.83,0,0,1,2.94-2.83,33.37,33.37,0,0,1,7-4.23,56.11,56.11,0,0,1,7.61-2.83,79.49,79.49,0,0,1,7.9-1.87c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.2-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.1-26-19.31q-6.61-4.66-13.36-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.75-14.66-6.83-2.48-1-5-2-7.53-2.92s-5.09-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.82,1.57,22.11,22.11,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.17,21.17,0,0,0-4.89,6.19,33,33,0,0,0-2.8,7.47,57.17,57.17,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.41.2,10.83-.1,16.24a96.17,96.17,0,0,1-2.19,16.11,55.86,55.86,0,0,1-5.78,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.63.81l-.63.8L667,578.81l-.68.76c-.23.25-.45.51-.68.75-.47.49-.93,1-1.42,1.47a59.14,59.14,0,0,1-6.13,5.38,60.85,60.85,0,0,1-6.81,4.46,63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.14,100.14,0,0,1-16.24-.59,123.41,123.41,0,0,1-16-2.93c-.84-.21-1.68-.43-2.51-.66Zm322.92-25c-2.65.5-5.28,1.12-7.86,1.88a54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.11,15.09,15.09,0,0,0-1.3,3.76,14.58,14.58,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,23.15,23.15,0,0,0,.56,4,30.46,30.46,0,0,0,1.13,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.71.74.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.53c1.14.72,2.31,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.21,18.21,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.43-.9.26-.61.5-1.24.72-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.24,50.24,0,0,0-2.55-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55c-1.42-1.93-2.89-3.83-4.38-5.71C910.36,569.9,909.46,570.06,908.56,570.23Z"/><polygon class="cls-3" points="911.91 569.65 911.65 569.31 911 569.43 911.27 569.77 911.91 569.65"/></g><g class="cls-1"><path class="cls-109" d="M583.94,599.65c.82.22,1.63.43,2.45.63a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,59,59,0,0,0,6.72-4.42,59.75,59.75,0,0,0,6-5.31,63.35,63.35,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.15-.37-10.78-1.41-21.54-2.09-32.33-.33-5.4-.57-10.81-.49-16.23.05-2.71.18-5.42.46-8.12a55.24,55.24,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.41,21.41,0,0,1,3.39-2.36,23.49,23.49,0,0,1,3.76-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.1.81a112.8,112.8,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.5,28,16.3q6.84,4.35,13.57,8.88c4.48,3,8.95,6.06,13.36,9.17q13.24,9.36,26,19.36T870,532.41c8.08,7.18,15.94,14.62,23.42,22.42,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.3,10.8-.37,16.2-.32,10.81.11,21.61.73,32.39,1.4l16.17,1c5.39.33,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.21,26.21,0,0,0,3.77-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.29,11.29,0,0,0-.1-2,20.43,20.43,0,0,0-1-3.89c-.44-1.27-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.72a17,17,0,0,1-1.1-3.9,5.89,5.89,0,0,1,.05-2.05,3.44,3.44,0,0,1,.38-1,3,3,0,0,1,.66-.79,8.88,8.88,0,0,1,3.57-1.9,16.6,16.6,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.76,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.15-.42-.29-.86-.54c-.57-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.28-3.58-1.9-2.41-1.21-4.85-2.37-7.32-3.45s-5-2.11-7.51-3-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.63,16.63,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.49,5.49,0,0,0,0,2,17.41,17.41,0,0,0,1.09,3.87c.5,1.26,1.06,2.49,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.08,2.48,1.53,3.75a20.56,20.56,0,0,1,1,3.94,11.53,11.53,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.14.21-.15.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.41,15.41,0,0,1-3.44,2.18,25.51,25.51,0,0,1-3.8,1.42,52.68,52.68,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4,0-10.8,0-16.18.34-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a125.85,125.85,0,0,1,8.82,13.63,75.62,75.62,0,0,1,3.55,7.3,51.06,51.06,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.91-.14.31-.28.62-.44.93a7.27,7.27,0,0,1-.54.89,9.65,9.65,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,18.59,18.59,0,0,1-4.06.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.73a43,43,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2.05,15.49,15.49,0,0,1,1.63-5.91,17.3,17.3,0,0,1,1-1.76A16.28,16.28,0,0,1,881.4,586a21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.84-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.14s-9-6-13.56-8.86c-9.11-5.78-18.4-11.32-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a111.81,111.81,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31.38,31.38,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.15.67,10.77,1.7,21.54,2.07,32.36.19,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,55.92,55.92,0,0,1-5.78,15.2A70.15,70.15,0,0,1,667.9,580c-.2.27-.41.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47a60.25,60.25,0,0,1-6.13,5.37A61.54,61.54,0,0,1,649.6,596a64.14,64.14,0,0,1-15.09,6,79.47,79.47,0,0,1-16.08,2.4,101.16,101.16,0,0,1-16.23-.59,125.64,125.64,0,0,1-16-2.94q-1.26-.31-2.52-.66Zm322.93-25c-2.64.5-5.27,1.12-7.85,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32.6,32.6,0,0,0,1.13,3.85,37.47,37.47,0,0,0,3.58,7.2,41.49,41.49,0,0,0,5,6.34c.23.24.45.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.54.39,1.08.79,1.65,1.16l.83.56.86.54c1.13.71,2.3,1.38,3.5,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.1,9.1,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.6.42-.9.27-.61.51-1.23.73-1.87a24.77,24.77,0,0,0,1.27-7.88,33.83,33.83,0,0,0-1-8,50.36,50.36,0,0,0-2.55-7.64,75.84,75.84,0,0,0-3.54-7.25A125.14,125.14,0,0,0,914,579.85q-2.15-2.9-4.38-5.71C908.68,574.29,907.77,574.44,906.87,574.61Z"/><polygon class="cls-3" points="910.23 574.03 909.97 573.7 909.32 573.82 909.59 574.15 910.23 574.03"/></g><g class="cls-1"><path class="cls-110" d="M582.3,603.89l2.47.63a124.6,124.6,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63.26,63.26,0,0,0,9.72-12.78,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.1-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.38,22.38,0,0,1,5.09-6.44,21.47,21.47,0,0,1,3.39-2.37,23.84,23.84,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.15,4.09-.14.68,0,1.35,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.18,1.62,7.72,2.53s5.07,1.91,7.57,3c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,8.95,6.05,13.37,9.17q13.24,9.35,26,19.36t24.9,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.11,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.83,26.83,0,0,0,3.78-1.41,15.15,15.15,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.86-3.51-7.31-.57-1.22-1.14-2.45-1.63-3.71a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.3,3.3,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,8.84,8.84,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,52.21,52.21,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.17.67,1.75,1l.86.53.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16-.42-.28c-.28-.19-.56-.36-.85-.54-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a53.53,53.53,0,0,0-7.93-1.59,28.48,28.48,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.21,3.21,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,74.6,74.6,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.22,25.22,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.32-.27.62-.43.94s-.35.6-.55.89a9.73,9.73,0,0,1-3.05,2.77,13.68,13.68,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.07,40.07,0,0,1-7.55-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.55c-.29-.18-.57-.37-.85-.56-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.24-.24-.47-.49-.71-.74a42.66,42.66,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,23.91,23.91,0,0,1-.55-4,15.51,15.51,0,0,1,1.64-8,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,21.31,21.31,0,0,1,2.94-2.84,33.8,33.8,0,0,1,6.95-4.23,54.41,54.41,0,0,1,7.62-2.82,79.34,79.34,0,0,1,7.89-1.88c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.54-7.48-7.79-15.32-15.21-23.4-22.37s-16.39-14.06-24.88-20.73-17.18-13.09-26-19.31q-6.63-4.66-13.37-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82q-3.72-1.56-7.53-2.93c-2.53-.9-5.09-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,21.84,21.84,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.25,21.25,0,0,0-4.89,6.2,32.67,32.67,0,0,0-2.79,7.46,55.74,55.74,0,0,0-1.34,7.92c-.27,2.68-.4,5.36-.44,8.05-.08,5.39.16,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8-1.31,1.56-.68.76-.68.76c-.47.49-.93,1-1.42,1.46A58,58,0,0,1,648,600.25a63.37,63.37,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93c-.86-.21-1.7-.44-2.55-.67Zm323-25c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.35,33.35,0,0,0-6.86,4.17,19,19,0,0,0-5.09,6.11,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,22.06,22.06,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.25.46.5.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.49,9.49,0,0,0,2.9-2.63q.27-.4.51-.84l.42-.9c.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.37-5.71C907.06,578.52,906.16,578.68,905.26,578.85Z"/><polygon class="cls-3" points="908.61 578.27 908.35 577.93 907.71 578.06 907.98 578.39 908.61 578.27"/></g><g class="cls-1"><path class="cls-111" d="M580.69,608.05l2.51.65a124,124,0,0,0,15.89,2.89,99.78,99.78,0,0,0,16.12.55,77.64,77.64,0,0,0,15.91-2.4,63,63,0,0,0,14.91-6,59.41,59.41,0,0,0,6.72-4.42,57.26,57.26,0,0,0,6-5.31,63.33,63.33,0,0,0,9.73-12.77,55.58,55.58,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.54-2.09-32.33-.34-5.39-.58-10.8-.49-16.22,0-2.71.18-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.11,22.11,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.59,32.59,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13l2,0,1,0,1,0c2.71.15,5.41.44,8.09.82A111.85,111.85,0,0,1,730.92,454c2.6.76,5.17,1.61,7.72,2.53s5.07,1.9,7.56,3c5,2.08,9.9,4.39,14.71,6.86,9.63,4.94,18.92,10.5,28,16.3q6.84,4.37,13.56,8.88t13.37,9.18q13.25,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.62,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1.05,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.18,1c5.39.33,10.78.62,16.18.81s10.79.26,16.19,0c2.69-.11,5.39-.3,8.06-.62a49.37,49.37,0,0,0,7.93-1.53,25.19,25.19,0,0,0,3.78-1.4,14.84,14.84,0,0,0,3.39-2.15,10.44,10.44,0,0,0,1.38-1.44l.15-.2.15-.21.14-.2c0-.08.09-.14.13-.22a6.19,6.19,0,0,0,.42-.9,7.09,7.09,0,0,0,.37-1.95,10.28,10.28,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.67,3.67,0,0,1,.37-1,3.6,3.6,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.2,53.81,53.81,0,0,1,7.95,1.6c2.6.72,5.17,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.41.29.21.16c0,.07.14.07.16.24l-.08,0a.57.57,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1q-1.77-1-3.57-1.89c-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.72,8.72,0,0,0-3.51,1.87,3,3,0,0,0-.63.75,3.82,3.82,0,0,0-.36.92,6,6,0,0,0,0,2,17.59,17.59,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.82,21.82,0,0,1,1,3.93,10.69,10.69,0,0,1,.1,2,6.62,6.62,0,0,1-.38,2,5.68,5.68,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a10.38,10.38,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.63-5.41.21-10.81.14-16.21,0s-10.8-.47-16.19-.79l-16.17-1c-10.79-.65-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47A126.75,126.75,0,0,1,920,601.56a75.87,75.87,0,0,1,3.56,7.31,50.9,50.9,0,0,1,2.57,7.71,34,34,0,0,1,1,8.09,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.15.31-.28.62-.44.93a7.27,7.27,0,0,1-.54.89,9.91,9.91,0,0,1-3.06,2.78,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,40.47,40.47,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.38-.84-.56-.57-.38-1.12-.78-1.67-1.18-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.73-.72c-.24-.23-.47-.49-.7-.73a41.89,41.89,0,0,1-5-6.41,38.05,38.05,0,0,1-3.61-7.29,31.74,31.74,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,14,14,0,0,1,.28-2,15.44,15.44,0,0,1,1.34-3.87A15.84,15.84,0,0,1,877,596a16.28,16.28,0,0,1,1.24-1.63,21.85,21.85,0,0,1,2.93-2.84,34,34,0,0,1,7-4.22,56.24,56.24,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14-24.88-20.72-17.17-13.1-26-19.31q-6.63-4.67-13.37-9.15t-13.55-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.69-4.76-14.66-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.67-2.51a110.7,110.7,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0-2,0c-1.34,0-2.67,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,22.64,22.64,0,0,0-3.62,1.63,20.35,20.35,0,0,0-3.25,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.19,5.41.21,10.83-.1,16.24A95.26,95.26,0,0,1,675,566.46a56,56,0,0,1-5.79,15.2,67.21,67.21,0,0,1-4.53,6.78c-.2.28-.41.54-.62.81l-.63.8c-.43.52-.88,1-1.32,1.56l-.67.76c-.23.25-.45.51-.69.75-.47.49-.93,1-1.41,1.47a58.9,58.9,0,0,1-6.13,5.37,60.15,60.15,0,0,1-6.82,4.47,63.62,63.62,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125.31,125.31,0,0,1-16-2.94c-.86-.21-1.73-.44-2.59-.67Zm323-25a78.78,78.78,0,0,0-7.86,1.88,54.28,54.28,0,0,0-7.55,2.81,32.86,32.86,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.54,15.54,0,0,0-1.59,7.74,23.27,23.27,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.7c.24.24.49.46.73.69l.37.35.38.33c1,.89,2.06,1.72,3.14,2.53.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.72,2.31,1.38,3.5,2a40.41,40.41,0,0,0,7.47,3,27.29,27.29,0,0,0,7.92,1.09,18.76,18.76,0,0,0,4-.51,13.07,13.07,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,6.36,6.36,0,0,0,.51-.83c.15-.29.28-.6.42-.9.27-.62.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51,51,0,0,0-2.56-7.63,74.79,74.79,0,0,0-3.53-7.26,128.09,128.09,0,0,0-8.79-13.55c-1.43-1.93-2.89-3.84-4.38-5.71C905.48,582.7,904.58,582.86,903.68,583Z"/><polygon class="cls-3" points="907.04 582.45 906.77 582.11 906.13 582.23 906.4 582.56 907.04 582.45"/></g><g class="cls-1"><path class="cls-112" d="M579,612.43c.84.23,1.68.44,2.53.65A124.13,124.13,0,0,0,597.4,616a101,101,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.26,63.26,0,0,0,9.72-12.78,54.74,54.74,0,0,0,5.67-15,95.37,95.37,0,0,0,2.16-16c.3-5.37.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.1-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.18-5.42.45-8.12A57.83,57.83,0,0,1,674,473.8a33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.14,32.14,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52q3.9,1.15,7.71,2.54c2.55.91,5.08,1.9,7.57,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.24,9.34,26,19.36t24.89,20.78c8.08,7.17,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.15-.21.12-.21a5.24,5.24,0,0,0,.42-.9,6.88,6.88,0,0,0,.38-2,11.23,11.23,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.23-1.14-2.46-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.84,53.84,0,0,1,8,1.61c2.6.71,5.17,1.56,7.7,2.5s5,2,7.51,3.05,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.17.67,1.75,1l.86.53c.15.1.29.19.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28l-.86-.54-1.76-1c-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a53.66,53.66,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.77,8.77,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.21,3.21,0,0,0-.36.92,5.72,5.72,0,0,0-.05,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.09,2.48,1.54,3.76a21.3,21.3,0,0,1,1,3.94,9.84,9.84,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.2a9.88,9.88,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.38.52-8.09.63-5.4.22-10.81.15-16.2,0s-10.8-.46-16.19-.78l-16.18-1c-10.78-.66-21.57-1.26-32.36-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,52.16,52.16,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25.05,25.05,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.43.94s-.35.6-.55.89a9.73,9.73,0,0,1-3.05,2.77,13.68,13.68,0,0,1-3.82,1.52,19.21,19.21,0,0,1-4.07.51,27.42,27.42,0,0,1-8.06-1.1,40.88,40.88,0,0,1-7.56-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.37-.35-.75-.7-.72-.71c-.24-.24-.47-.49-.71-.74a42.37,42.37,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,23,23,0,0,1-.56-4.05,15.43,15.43,0,0,1,0-2,13.9,13.9,0,0,1,.28-2,15.31,15.31,0,0,1,1.34-3.87,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,21.91,21.91,0,0,1,2.94-2.84,33.8,33.8,0,0,1,6.95-4.23,55.7,55.7,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.43-5.13-6.45-10.63-12.61-16.35-18.55-7.48-7.79-15.32-15.21-23.4-22.37S848.29,531.62,839.8,525s-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.65-6.82-2.49-1-5-2-7.54-2.92s-5.09-1.76-7.68-2.52a111.48,111.48,0,0,0-15.75-3.47c-2.66-.37-5.34-.66-8-.79l-1-.06-1,0c-.67,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.81,1.57,23.1,23.1,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.55,21.55,0,0,0-4.89,6.2,32.58,32.58,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.35-.44,8-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.22.25-.44.51-.68.76-.47.49-.93,1-1.42,1.46a59,59,0,0,1-6.12,5.38,61.54,61.54,0,0,1-6.82,4.47,63.76,63.76,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93l-2.6-.68Zm323-25c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.45,33.45,0,0,0-6.85,4.17,19,19,0,0,0-5.1,6.11,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.25.46.5.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.37,9.37,0,0,0,2.9-2.63,8.94,8.94,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.37-5.71C903.8,587.09,902.9,587.24,902,587.41Z"/><polygon class="cls-3" points="905.36 586.83 905.09 586.5 904.45 586.62 904.72 586.95 905.36 586.83"/></g><g class="cls-1"><path class="cls-113" d="M577.35,616.66l2.55.66a124.28,124.28,0,0,0,15.89,2.89,99.78,99.78,0,0,0,16.12.55,77.15,77.15,0,0,0,15.92-2.4,63.47,63.47,0,0,0,14.9-6,61.3,61.3,0,0,0,6.72-4.42,58.52,58.52,0,0,0,6-5.32,63.33,63.33,0,0,0,9.73-12.77,55.13,55.13,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.33-.33-5.39-.58-10.8-.49-16.22.05-2.71.18-5.42.45-8.13a56.27,56.27,0,0,1,1.37-8,33.46,33.46,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32.43,32.43,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81a111.72,111.72,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.24,9.34,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.32,10.81.11,21.6.72,32.39,1.39l16.17,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19,0c2.69-.11,5.39-.29,8.07-.61a50.61,50.61,0,0,0,7.92-1.54,24.79,24.79,0,0,0,3.78-1.4,14.93,14.93,0,0,0,3.39-2.14,10,10,0,0,0,1.38-1.45l.15-.2.15-.21.14-.2.13-.21a6.86,6.86,0,0,0,.42-.91,7.09,7.09,0,0,0,.37-1.95,10.28,10.28,0,0,0-.11-2,20.31,20.31,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,6.08,6.08,0,0,1,.06-2,3.32,3.32,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.35,30.35,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.61.72,5.17,1.57,7.71,2.51s5,2,7.51,3,4.91,2.25,7.32,3.47c1.2.62,2.4,1.25,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.42.29.2.16c.06.07.15.08.16.24l-.08,0a.79.79,0,0,0-.14-.15l-.2-.15c-.13-.1-.27-.19-.41-.28s-.57-.37-.86-.54c-.58-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a52.15,52.15,0,0,0-7.92-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.24,3.24,0,0,0-.35.91,5.54,5.54,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.25,1.06,2.48,1.63,3.7,1.17,2.43,2.41,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.43,21.43,0,0,1,1,3.93,11.63,11.63,0,0,1,.11,2,6.89,6.89,0,0,1-.39,2,5.33,5.33,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,25.63,25.63,0,0,1-3.81,1.42,50,50,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.21-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.84,126.84,0,0,1,8.82,13.63,78.2,78.2,0,0,1,3.55,7.31,50.65,50.65,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.93a8.24,8.24,0,0,1-.54.9,9.77,9.77,0,0,1-3.06,2.77,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3q-1.81-.93-3.54-2l-.86-.55-.84-.56c-.57-.38-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.73-.72c-.24-.23-.47-.49-.7-.73a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,15.48,15.48,0,0,1,.28-2,15.2,15.2,0,0,1,1.35-3.87,15.76,15.76,0,0,1,1-1.77,17.51,17.51,0,0,1,1.24-1.63,21.76,21.76,0,0,1,2.93-2.83,33.9,33.9,0,0,1,6.95-4.23,56.24,56.24,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14-24.88-20.72-17.17-13.1-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.69-4.75-14.66-6.83-2.49-1-5-2-7.53-2.92s-5.1-1.75-7.68-2.51a112.09,112.09,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2-.05-1.34,0-2.67,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,22.64,22.64,0,0,0-3.62,1.63,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.66,10.77,1.7,21.53,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,67,67,0,0,1-4.52,6.77c-.2.28-.42.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a57.79,57.79,0,0,1-12.95,9.84,63.3,63.3,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93c-.88-.22-1.75-.45-2.62-.69Zm323-25c-2.65.5-5.27,1.12-7.86,1.88a54.76,54.76,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,14.52,14.52,0,0,0-1.3,3.77,13.14,13.14,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,23.13,23.13,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.7c.24.24.49.46.74.69l.36.35.38.33c1,.9,2.06,1.72,3.14,2.53.54.39,1.08.8,1.64,1.16.28.19.56.39.84.56l.85.54c1.14.72,2.31,1.38,3.51,2a39.37,39.37,0,0,0,7.46,3,27.31,27.31,0,0,0,7.93,1.09,18.75,18.75,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,49.2,49.2,0,0,0-2.56-7.63,75.93,75.93,0,0,0-3.53-7.26,126.53,126.53,0,0,0-8.79-13.55q-2.15-2.89-4.38-5.71C902.19,591.32,901.28,591.48,900.38,591.65Z"/><polygon class="cls-3" points="903.74 591.07 903.47 590.73 902.83 590.85 903.1 591.19 903.74 591.07"/></g><g class="cls-1"><path class="cls-114" d="M575.73,620.84c.85.23,1.71.45,2.56.66a124.28,124.28,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,63.37,63.37,0,0,0,14.91-6,61.3,61.3,0,0,0,6.72-4.42,58.52,58.52,0,0,0,6-5.32,63.33,63.33,0,0,0,9.73-12.77,55.18,55.18,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23.05-2.71.18-5.42.45-8.13a56.51,56.51,0,0,1,1.37-8,33.17,33.17,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32.43,32.43,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81A111.72,111.72,0,0,1,726,466.79c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.24,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.32,10.81.11,21.6.72,32.39,1.39l16.17,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19.05c2.69-.11,5.39-.29,8.07-.61a50.61,50.61,0,0,0,7.92-1.54,24.79,24.79,0,0,0,3.78-1.4,14.93,14.93,0,0,0,3.39-2.14,10,10,0,0,0,1.38-1.45l.15-.2.15-.21.14-.2.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.28,10.28,0,0,0-.11-2,20.31,20.31,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.12,17.12,0,0,1-1.11-3.91,6.08,6.08,0,0,1,.06-2,3.32,3.32,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.35,30.35,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.61.72,5.17,1.57,7.71,2.51s5,2,7.51,3,4.91,2.25,7.32,3.47c1.2.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.42.29.2.16c.06.07.15.08.16.24l-.08,0a.79.79,0,0,0-.14-.15l-.2-.15c-.13-.1-.27-.19-.41-.28s-.57-.37-.86-.54c-.58-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a52.15,52.15,0,0,0-7.92-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.24,3.24,0,0,0-.35.91,5.54,5.54,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.25,1,2.48,1.63,3.7,1.17,2.44,2.41,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.43,21.43,0,0,1,1,3.93,11.63,11.63,0,0,1,.11,2,6.89,6.89,0,0,1-.39,2,5.33,5.33,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,14.66,14.66,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50,50,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.84,126.84,0,0,1,8.82,13.63,78.2,78.2,0,0,1,3.55,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.93a8.24,8.24,0,0,1-.54.9,9.77,9.77,0,0,1-3.06,2.77,14,14,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.81-.93-3.54-2l-.86-.55-.84-.56c-.57-.38-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.73-.72c-.24-.23-.47-.48-.7-.73a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.53,17.53,0,0,1,0-2,15.48,15.48,0,0,1,.28-2,15.2,15.2,0,0,1,1.35-3.87,15.76,15.76,0,0,1,1-1.77,17.51,17.51,0,0,1,1.24-1.63,21.76,21.76,0,0,1,2.93-2.83,33.9,33.9,0,0,1,6.95-4.23,54.88,54.88,0,0,1,7.62-2.82,76.84,76.84,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.2-23.41-22.37S845.06,540,836.57,533.37s-17.17-13.1-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.69-4.75-14.66-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.67-2.51A112.09,112.09,0,0,0,710,464.1c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.78.48,16.16.67,10.77,1.71,21.53,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,67,67,0,0,1-4.52,6.77c-.2.28-.42.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a57.79,57.79,0,0,1-13,9.84,63.2,63.2,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93c-.88-.22-1.76-.46-2.63-.69Zm323-25c-2.65.5-5.27,1.12-7.86,1.88a54.76,54.76,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,18.89,18.89,0,0,0-5.1,6.11,14.33,14.33,0,0,0-1.3,3.76,13.14,13.14,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,23.13,23.13,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.74.68.36.35.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.53c1.14.72,2.31,1.38,3.51,2a39.37,39.37,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.12,18.12,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,75.93,75.93,0,0,0-3.53-7.26,126.53,126.53,0,0,0-8.79-13.55q-2.15-2.9-4.38-5.71C900.57,595.5,899.67,595.66,898.77,595.83Z"/><polygon class="cls-3" points="902.13 595.25 901.86 594.91 901.22 595.03 901.49 595.37 902.13 595.25"/></g><g class="cls-1"><path class="cls-115" d="M574,625.22c.85.23,1.71.45,2.57.66a124,124,0,0,0,15.89,2.89,99.79,99.79,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,55.08,55.08,0,0,0,5.68-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.15-.38-10.78-1.42-21.54-2.09-32.33-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.88,20.88,0,0,1,3.38-2.36,23.89,23.89,0,0,1,3.76-1.69,32.13,32.13,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,0c2.71.15,5.41.43,8.09.81a113.25,113.25,0,0,1,15.87,3.52q3.9,1.15,7.72,2.54c2.54.92,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.25,9.36,26,19.36T860.19,558c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6.05,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.73,32.38,1.4l16.18,1c5.39.33,10.78.62,16.18.8s10.79.26,16.19.05c2.69-.1,5.39-.29,8.06-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.15-.21.13-.21a6.07,6.07,0,0,0,.41-.9,6.88,6.88,0,0,0,.38-2,10.43,10.43,0,0,0-.11-2,21.17,21.17,0,0,0-1-3.89c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.64-3.72a17.54,17.54,0,0,1-1.1-3.9,5.89,5.89,0,0,1,.06-2.05,3.74,3.74,0,0,1,.37-1,3.16,3.16,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.84,53.84,0,0,1,8,1.61c2.6.71,5.17,1.56,7.71,2.5s5,2,7.5,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.76,1l.86.54a3.81,3.81,0,0,1,.41.29l.21.15c.05.07.14.08.16.24l-.08,0a.86.86,0,0,0-.14-.14,1.49,1.49,0,0,0-.2-.15l-.41-.29-.86-.54c-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.9-2.4-1.21-4.85-2.37-7.32-3.45s-5-2.11-7.51-3-5.09-1.78-7.7-2.49a54.71,54.71,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.7,16.7,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.33,3.33,0,0,0-.36.92,6,6,0,0,0,0,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.26,1,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.31.55,1.23,1.08,2.48,1.53,3.75a22.14,22.14,0,0,1,1,3.94,10.65,10.65,0,0,1,.1,2,6.62,6.62,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.38,10.38,0,0,1-1.41,1.48,15.57,15.57,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,52.56,52.56,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.41.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.18-1c-10.78-.66-21.56-1.25-32.36-1.35-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a125.77,125.77,0,0,1,8.81,13.63,75.7,75.7,0,0,1,3.56,7.3,51,51,0,0,1,2.57,7.72,33.87,33.87,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.23.64-.47,1.28-.74,1.91-.15.31-.28.62-.44.93a8.77,8.77,0,0,1-.54.89,9.76,9.76,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,18.59,18.59,0,0,1-4.06.52,27.79,27.79,0,0,1-8.07-1.11,41.16,41.16,0,0,1-7.56-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.56-.38-.84-.57-.57-.37-1.12-.78-1.67-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.37-.35-.75-.7-.72-.71c-.24-.24-.47-.49-.7-.73a42.38,42.38,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,15.58,15.58,0,0,1,0-2.05,13.9,13.9,0,0,1,.28-2,15.11,15.11,0,0,1,1.34-3.86,16.41,16.41,0,0,1,1-1.77,18,18,0,0,1,1.25-1.63,21.85,21.85,0,0,1,2.93-2.84,33.59,33.59,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.61-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.14s-9-6-13.56-8.86c-9.11-5.78-18.39-11.32-28-16.23-4.8-2.45-9.69-4.75-14.66-6.82q-3.73-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.67-2.51a112.12,112.12,0,0,0-15.75-3.48c-2.67-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.35,0-2,0-1.34,0-2.67,0-4,.13a31.85,31.85,0,0,0-7.81,1.57,22.59,22.59,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.55,21.55,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.28,2.67-.4,5.36-.45,8.05-.08,5.38.17,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.36.18,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,56.28,56.28,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.63.8-1.32,1.56-.67.76c-.23.26-.45.51-.69.76-.47.49-.93,1-1.41,1.47a60.1,60.1,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64.22,64.22,0,0,1-15.1,6,79.38,79.38,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94c-.89-.22-1.77-.45-2.65-.69Zm323.05-25c-2.65.5-5.27,1.12-7.86,1.88a55.63,55.63,0,0,0-7.55,2.82,32.86,32.86,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,14.72,14.72,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.82,14.82,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.81,30.81,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.45,40.45,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.28-.6.42-.9.27-.61.51-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.3,33.3,0,0,0-1-8,51.53,51.53,0,0,0-2.56-7.64A78.21,78.21,0,0,0,913,619a128.22,128.22,0,0,0-8.79-13.56q-2.14-2.9-4.38-5.71C898.89,599.89,898,600,897.09,600.21Z"/><polygon class="cls-3" points="900.45 599.63 900.18 599.3 899.54 599.42 899.81 599.75 900.45 599.63"/></g><g class="cls-1"><path class="cls-116" d="M572.4,629.45c.86.23,1.72.46,2.59.67A124.28,124.28,0,0,0,590.88,633a100.94,100.94,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,64,64,0,0,0,9.72-12.78,55.18,55.18,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.37-10.78-1.42-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.46-8.13a55.11,55.11,0,0,1,1.36-8,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.54s5.07,1.9,7.57,2.94c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.57,8.89c4.48,3,9,6,13.36,9.17q13.25,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.61.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.11,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,27.46,27.46,0,0,0,3.77-1.4,15.1,15.1,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.22,11.22,0,0,0-.1-2,21.09,21.09,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.23-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.83,5.83,0,0,1,0-2,3.32,3.32,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,8.86,8.86,0,0,1,3.57-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,52.45,52.45,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c.06.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.61-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a53.79,53.79,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.48,5.48,0,0,0-.05,2,17.41,17.41,0,0,0,1.09,3.87c.49,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.3.55,1.24,1.08,2.48,1.53,3.76a21.43,21.43,0,0,1,1,3.93,11.63,11.63,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,5.37,5.37,0,0,1-.44.94l-.13.22-.15.21-.14.21-.16.2a9.81,9.81,0,0,1-1.4,1.48,15.1,15.1,0,0,1-3.44,2.19,25.47,25.47,0,0,1-3.8,1.41,50.32,50.32,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.14-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48A126.71,126.71,0,0,1,911.83,623a79.43,79.43,0,0,1,3.55,7.31A52.2,52.2,0,0,1,918,638a34.32,34.32,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.47,1.28-.74,1.9-.14.32-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.54,27.54,0,0,1-8.07-1.11,40.07,40.07,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2L885,656l-.84-.56c-.57-.37-1.11-.78-1.66-1.18-1.09-.81-2.15-1.65-3.16-2.56l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42,42,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.55,17.55,0,0,1,0-2,15.51,15.51,0,0,1,1.63-5.9,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,20.76,20.76,0,0,1,2.94-2.84,33.8,33.8,0,0,1,6.95-4.23A54.76,54.76,0,0,1,887.5,606a79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.54-7.48-7.79-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31q-6.62-4.66-13.36-9.15t-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.93c-2.54-.9-5.1-1.75-7.68-2.51a111.78,111.78,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,21.74,21.74,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.28,21.28,0,0,0-4.9,6.2,32.67,32.67,0,0,0-2.79,7.46A55.72,55.72,0,0,0,667,499c-.27,2.68-.4,5.36-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11A55.89,55.89,0,0,1,661,603.09a68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.25-.45.51-.69.76-.47.49-.92,1-1.41,1.46a59.14,59.14,0,0,1-6.13,5.38,61.54,61.54,0,0,1-6.82,4.47,63.69,63.69,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.59,123.87,123.87,0,0,1-16-2.93c-.89-.22-1.78-.46-2.67-.7Zm323.07-25c-2.65.5-5.27,1.12-7.85,1.88a54.93,54.93,0,0,0-7.56,2.82,33.08,33.08,0,0,0-6.86,4.17,19,19,0,0,0-5.1,6.11,15.09,15.09,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,24,24,0,0,0,.55,4,32.2,32.2,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,41.61,41.61,0,0,0,5,6.33c.23.25.45.5.69.73l.72.71.74.69.37.34.38.33c1,.9,2,1.73,3.13,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.31,13.31,0,0,0,3.67-1.47,9.27,9.27,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.72-1.87a24.82,24.82,0,0,0,1.28-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,77.08,77.08,0,0,0-3.54-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.14-2.9-4.38-5.71C897.28,604.12,896.37,604.28,895.47,604.45Z"/><polygon class="cls-3" points="898.83 603.87 898.57 603.53 897.92 603.66 898.19 603.99 898.83 603.87"/></g><g class="cls-1"><path class="cls-117" d="M570.78,633.62l2.63.68a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.55,77.73,77.73,0,0,0,15.92-2.4,63,63,0,0,0,14.91-6,58.41,58.41,0,0,0,6.71-4.42,56.38,56.38,0,0,0,6-5.31,62.92,62.92,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.54-2.09-32.33-.33-5.39-.57-10.8-.48-16.22,0-2.71.17-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.93,33.93,0,0,1,2.87-7.67,22.45,22.45,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.52,32.52,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13l2,0,1,0,1,.05c2.71.15,5.42.44,8.1.82a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.61,7.72,2.53s5.07,1.9,7.57,2.95c5,2.08,9.89,4.39,14.71,6.86,9.63,4.94,18.92,10.5,28,16.3q6.83,4.37,13.56,8.88t13.37,9.18q13.24,9.35,26,19.36T857,566.42c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1.05,13-1.29,5.4-.31,10.8-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19,0c2.7-.11,5.39-.3,8.07-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.57,14.57,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.44l.15-.2.14-.21.14-.2a1.59,1.59,0,0,0,.13-.22,4.63,4.63,0,0,0,.42-.9,6.42,6.42,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.47-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.36,3.36,0,0,1,.37-1,3.12,3.12,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.53,16.53,0,0,1,4-.57,28.84,28.84,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.5s5,2,7.51,3,4.92,2.25,7.33,3.47c1.2.61,2.39,1.24,3.58,1.9.59.33,1.17.66,1.75,1,.29.18.58.35.86.54l.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.07.17.24l-.08,0a1.55,1.55,0,0,0-.14-.15l-.2-.15-.42-.29-.85-.53c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.38-1.28-3.58-1.89q-3.61-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.75,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1.05,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.27,20.27,0,0,1,1,3.93,10.7,10.7,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.63,6.63,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a11,11,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.63-5.4.21-10.81.14-16.21,0s-10.79-.47-16.19-.79l-16.17-1c-10.78-.65-21.57-1.25-32.37-1.35-5.39-.05-10.79,0-16.18.34-4.25.25-8.5.63-12.71,1.28,1.43,1.8,2.82,3.62,4.19,5.47a126.75,126.75,0,0,1,8.81,13.63,75.79,75.79,0,0,1,3.55,7.31,50.69,50.69,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.93a8.84,8.84,0,0,1-.55.89,9.88,9.88,0,0,1-3.05,2.78,14.32,14.32,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3c-1.2-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.38-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.38-.34c-.24-.24-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.44,37.44,0,0,1-3.6-7.29,31.78,31.78,0,0,1-1.15-3.91,22.94,22.94,0,0,1-.55-4,15.51,15.51,0,0,1,1.64-8,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.76,33.76,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83,78.64,78.64,0,0,1,7.89-1.87c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.1-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.76-14.66-6.83-2.48-1-5-2-7.53-2.92s-5.09-1.75-7.68-2.51a110.1,110.1,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0-2,0c-1.34,0-2.68,0-4,.14a31.29,31.29,0,0,0-7.81,1.56,22.74,22.74,0,0,0-3.63,1.63,20.26,20.26,0,0,0-3.24,2.27,21.17,21.17,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.74,55.74,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.41.2,10.83-.1,16.24a97.34,97.34,0,0,1-2.18,16.11,56,56,0,0,1-5.79,15.2,67.21,67.21,0,0,1-4.53,6.78c-.2.28-.41.54-.62.81l-.64.8-1.31,1.56-.68.76c-.23.25-.45.51-.68.75-.47.49-.93,1-1.42,1.47a57.89,57.89,0,0,1-6.13,5.37,58.7,58.7,0,0,1-6.81,4.47,64,64,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,101.29,101.29,0,0,1-16.24-.59,126.91,126.91,0,0,1-16-2.93l-2.71-.71Zm323.12-25a78.12,78.12,0,0,0-7.86,1.88,54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,15.94,15.94,0,0,0-.29,4,23.29,23.29,0,0,0,.56,4,30.46,30.46,0,0,0,1.13,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.7c.24.24.5.46.74.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a40.32,40.32,0,0,0,7.46,3,27.35,27.35,0,0,0,7.93,1.09,18.84,18.84,0,0,0,4-.51,13.19,13.19,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,7.61,7.61,0,0,0,.5-.83c.15-.29.29-.6.43-.9.26-.62.5-1.24.72-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,51,51,0,0,0-2.56-7.63,76,76,0,0,0-3.54-7.26A125,125,0,0,0,901,613.87c-1.42-1.93-2.88-3.84-4.38-5.71C895.7,608.3,894.8,608.46,893.9,608.63Z"/><polygon class="cls-3" points="897.25 608.05 896.99 607.71 896.35 607.83 896.61 608.16 897.25 608.05"/></g><g class="cls-1"><path class="cls-118" d="M569.09,638l2.64.68a124.28,124.28,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,62.87,62.87,0,0,0,14.9-6,59,59,0,0,0,6.72-4.42,59.75,59.75,0,0,0,6-5.31A63.35,63.35,0,0,0,657,611.23a55.06,55.06,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8.05,33.81,33.81,0,0,1,2.87-7.67,22.42,22.42,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.1.81A111.41,111.41,0,0,1,719.45,484q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.49,28,16.3q6.84,4.35,13.57,8.88c4.48,3,9,6.06,13.36,9.17q13.25,9.35,26,19.36t24.89,20.78c8.09,7.17,15.94,14.62,23.42,22.42,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.3,10.8-.37,16.21-.32,10.8.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.23-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.05-2,3.44,3.44,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,8.84,8.84,0,0,1,3.58-1.89,16,16,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c.06.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.57-.34-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.61-1.83-7.32-3.45c-2.48-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,10.59,10.59,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93l-.13.22-.14.21-.15.21-.16.2a9.81,9.81,0,0,1-1.4,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.42,50.42,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.45,13.45,0,0,1-3.82,1.52,19.12,19.12,0,0,1-4.06.51,27.53,27.53,0,0,1-8.07-1.1,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.85-.54c-.29-.18-.57-.38-.85-.57-.57-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.36,17.36,0,0,1,0-2,15.49,15.49,0,0,1,1.63-5.91,16.27,16.27,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.33,21.33,0,0,1,2.94-2.84,33.8,33.8,0,0,1,7-4.23,56.06,56.06,0,0,1,7.61-2.82,79.53,79.53,0,0,1,7.9-1.88c.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.33-15.21-23.4-22.37S838.5,557.22,830,550.55s-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.1-1.76-7.68-2.52a111.78,111.78,0,0,0-15.75-3.47c-2.66-.37-5.34-.66-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.58,32.58,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.86,55.86,0,0,1-5.78,15.21,70.15,70.15,0,0,1-4.53,6.78c-.2.27-.41.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.25-.45.51-.69.76-.47.49-.92,1-1.41,1.47a60.25,60.25,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,63.69,63.69,0,0,1-15.09,6,78.1,78.1,0,0,1-16.07,2.4,100.1,100.1,0,0,1-16.24-.59,123.87,123.87,0,0,1-16-2.93l-2.72-.71Zm323.12-25c-2.64.5-5.27,1.12-7.85,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,24,24,0,0,0,.55,4,30.51,30.51,0,0,0,1.14,3.86,36.85,36.85,0,0,0,3.57,7.2,40.93,40.93,0,0,0,5,6.33c.23.25.45.5.7.73l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.54.39,1.08.79,1.65,1.16l.83.56.86.54c1.13.71,2.31,1.37,3.5,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.37,9.37,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87a24.77,24.77,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56c-1.42-1.93-2.89-3.83-4.38-5.71C894,612.69,893.11,612.84,892.21,613Z"/><polygon class="cls-3" points="895.57 612.43 895.31 612.1 894.66 612.22 894.93 612.55 895.57 612.43"/></g><g class="cls-1"><path class="cls-119" d="M567.45,642.23q1.32.36,2.67.69A124.13,124.13,0,0,0,586,645.81a99.82,99.82,0,0,0,16.12.55A77.05,77.05,0,0,0,618,644,63.37,63.37,0,0,0,633,638a61.17,61.17,0,0,0,6.71-4.42,57.6,57.6,0,0,0,6-5.32,62.92,62.92,0,0,0,9.72-12.77,54.8,54.8,0,0,0,5.67-15,95.12,95.12,0,0,0,2.16-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.1-32.33-.33-5.39-.57-10.8-.48-16.22,0-2.71.17-5.42.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.52,32.52,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.35,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.59.76,5.17,1.62,7.71,2.53s5.08,1.9,7.57,2.95c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.89t13.37,9.17q13.25,9.35,26,19.36T853.7,575c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.39l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a50.73,50.73,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,15.15,15.15,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.21.14-.2a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.87-3.51-7.31-.57-1.22-1.14-2.45-1.63-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.3,3.3,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16.53,16.53,0,0,1,4-.57,30.44,30.44,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3,4.92,2.25,7.33,3.47c1.2.62,2.4,1.25,3.58,1.9.59.33,1.17.67,1.75,1l.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.15-.2-.15c-.13-.1-.27-.19-.41-.28-.29-.19-.57-.37-.86-.54-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.28,52.28,0,0,0-7.93-1.59,28.48,28.48,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.26,3.26,0,0,0-.36.91,5.78,5.78,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.09,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10,10,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.21-10.81.14-16.21,0s-10.79-.47-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.36-1.36-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.71,1.28,1.43,1.8,2.82,3.62,4.19,5.47A126.75,126.75,0,0,1,907,635.78a75.87,75.87,0,0,1,3.56,7.31,51.77,51.77,0,0,1,2.57,7.72,34.32,34.32,0,0,1,1,8.08,25,25,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.93a10.3,10.3,0,0,1-.55.9,9.73,9.73,0,0,1-3,2.77,14,14,0,0,1-3.82,1.52,19.21,19.21,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.38,40.38,0,0,1-7.55-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.37-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.38-.34c-.24-.24-.49-.46-.74-.7l-.72-.72c-.24-.23-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,38.31,38.31,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,23.91,23.91,0,0,1-.55-4,15.51,15.51,0,0,1,1.64-8,17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.83,21.83,0,0,1,2.94-2.83,33.37,33.37,0,0,1,7-4.23,55.75,55.75,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.66-.3,2.5-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.2-23.4-22.37s-16.39-14-24.88-20.72-17.18-13.1-26-19.31q-6.63-4.66-13.37-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.75-14.65-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a31.38,31.38,0,0,0-7.81,1.56,22.74,22.74,0,0,0-3.63,1.63,20.26,20.26,0,0,0-3.24,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,57.2,57.2,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.29,96.29,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.64.8-1.31,1.56-.68.76c-.22.25-.45.51-.68.75-.47.49-.93,1-1.42,1.47a58,58,0,0,1-12.94,9.84,63.37,63.37,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93c-.92-.23-1.84-.48-2.75-.72Zm323.15-25c-2.65.5-5.28,1.12-7.86,1.88a54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19.05,19.05,0,0,0-5.09,6.1,14.93,14.93,0,0,0-1.31,3.77,16.36,16.36,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,22.19,22.19,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.72.71.73.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.55.39,1.09.8,1.65,1.16.28.19.55.39.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.46,39.46,0,0,0,7.47,3,27,27,0,0,0,7.92,1.09,18.76,18.76,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63q.27-.4.51-.84l.42-.9c.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8A51.41,51.41,0,0,0,910,643.3a76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55q-2.13-2.9-4.37-5.71C892.4,616.92,891.5,617.08,890.6,617.25Z"/><polygon class="cls-3" points="893.96 616.67 893.69 616.33 893.05 616.45 893.32 616.79 893.96 616.67"/></g><g class="cls-1"><path class="cls-120" d="M565.83,646.4c.87.23,1.74.46,2.61.67A124.28,124.28,0,0,0,584.33,650a101,101,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,62.87,62.87,0,0,0,14.9-6,59,59,0,0,0,6.72-4.42,59.75,59.75,0,0,0,6-5.31,63.63,63.63,0,0,0,9.72-12.78,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.49-16.23,0-2.71.18-5.42.46-8.13a55.11,55.11,0,0,1,1.36-8,33.81,33.81,0,0,1,2.87-7.67,22.42,22.42,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.49,28,16.29q6.84,4.37,13.57,8.89c4.48,3,9,6.05,13.36,9.17q13.25,9.35,26,19.36T852,579.19c8.08,7.18,15.94,14.63,23.42,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.3,10.8-.38,16.21-.32,10.8.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.83,26.83,0,0,0,3.78-1.41,14.87,14.87,0,0,0,3.38-2.14,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17,17,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.05-2,3.32,3.32,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16,16,0,0,1,4-.56,29,29,0,0,1,4.06.19,52.45,52.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.46c1.21.62,2.4,1.25,3.58,1.9.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c.06.07.15.08.16.24l-.08,0a.58.58,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.61-1.83-7.32-3.45c-2.48-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a53.79,53.79,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0-.05,2,17.41,17.41,0,0,0,1.09,3.87c.5,1.25,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,11.63,11.63,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,5.37,5.37,0,0,1-.44.94c0,.07-.09.14-.13.22l-.14.21-.15.21-.16.2a9.81,9.81,0,0,1-1.4,1.48,15.25,15.25,0,0,1-3.43,2.19,27.21,27.21,0,0,1-3.81,1.41,50.42,50.42,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.35-4.25.24-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.22,25.22,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.32-.27.62-.44.94a9.18,9.18,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.45,13.45,0,0,1-3.82,1.52,19.12,19.12,0,0,1-4.06.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.82-.93-3.54-2l-.85-.55c-.29-.18-.57-.37-.85-.56-.57-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.55,17.55,0,0,1,0-2,15.48,15.48,0,0,1,.28-2,15.2,15.2,0,0,1,1.35-3.87,17.23,17.23,0,0,1,2.28-3.4,21.26,21.26,0,0,1,2.94-2.83,33.8,33.8,0,0,1,7-4.23A54.76,54.76,0,0,1,881,622.9a79.53,79.53,0,0,1,7.9-1.88c.84-.16,1.67-.3,2.51-.44C886.22,614.14,880.72,608,875,602c-7.48-7.78-15.33-15.2-23.4-22.36s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.85c-9.11-5.79-18.4-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.93s-5.1-1.75-7.68-2.51a111.78,111.78,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.82,1.57,21.74,21.74,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11A55.86,55.86,0,0,1,654.48,620a70.15,70.15,0,0,1-4.53,6.78c-.2.27-.41.53-.63.8l-.63.8L647.38,630l-.68.76c-.23.25-.45.51-.69.75-.47.5-.92,1-1.41,1.47a59.14,59.14,0,0,1-6.13,5.38,60.07,60.07,0,0,1-6.82,4.46,63.3,63.3,0,0,1-15.09,6,78.1,78.1,0,0,1-16.07,2.4,100.1,100.1,0,0,1-16.24-.59,123.87,123.87,0,0,1-16-2.93c-.89-.23-1.79-.46-2.68-.71Zm323.09-25c-2.64.5-5.27,1.12-7.85,1.88a54.93,54.93,0,0,0-7.56,2.82,33.35,33.35,0,0,0-6.86,4.17,19,19,0,0,0-5.1,6.11,15.09,15.09,0,0,0-1.3,3.76,14.58,14.58,0,0,0-.27,2,16.7,16.7,0,0,0,0,2,24,24,0,0,0,.55,4,30.51,30.51,0,0,0,1.14,3.86,36.85,36.85,0,0,0,3.57,7.2,40.93,40.93,0,0,0,5,6.33c.23.24.45.49.7.73l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.53.54.4,1.08.8,1.65,1.17l.83.56.86.54c1.13.71,2.31,1.37,3.5,2a39.64,39.64,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.91,18.91,0,0,0,4-.5,13.82,13.82,0,0,0,3.68-1.47,9.34,9.34,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87A24.81,24.81,0,0,0,911.9,663a34,34,0,0,0-1-8,50.24,50.24,0,0,0-2.55-7.63,74.7,74.7,0,0,0-3.54-7.25A125.14,125.14,0,0,0,896,626.64q-2.14-2.89-4.38-5.71C890.73,621.07,889.82,621.23,888.92,621.4Z"/><polygon class="cls-3" points="892.28 620.82 892.02 620.48 891.37 620.61 891.64 620.94 892.28 620.82"/></g><g class="cls-1"><path class="cls-121" d="M564.13,650.78l2.63.68a124.26,124.26,0,0,0,15.89,2.88,99.79,99.79,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73A63.94,63.94,0,0,0,652.07,624a55.25,55.25,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.37-10.78-1.42-21.54-2.09-32.33-.33-5.4-.58-10.81-.49-16.23.05-2.71.18-5.42.46-8.12a55.24,55.24,0,0,1,1.36-8.05,33.56,33.56,0,0,1,2.87-7.66,22.16,22.16,0,0,1,5.1-6.45,21.33,21.33,0,0,1,3.38-2.36,23.06,23.06,0,0,1,3.77-1.68,31.54,31.54,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.1.81a114.55,114.55,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54t7.57,2.94c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.57,8.88c4.48,3,8.95,6.06,13.36,9.18q13.24,9.34,26,19.35t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.39,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19,0c2.69-.11,5.39-.3,8.07-.62a49.46,49.46,0,0,0,7.92-1.53,24.79,24.79,0,0,0,3.78-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.15-.19.15-.21.14-.21.13-.21a6.13,6.13,0,0,0,.42-.9,7.16,7.16,0,0,0,.37-1.95,11.13,11.13,0,0,0-.1-2,21.09,21.09,0,0,0-1-3.9c-.44-1.27-1-2.52-1.52-3.75-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.24,17.24,0,0,1-1.1-3.91,5.89,5.89,0,0,1,0-2,3.44,3.44,0,0,1,.38-1,3.12,3.12,0,0,1,.65-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,27.54,27.54,0,0,1,4.06.2,52.68,52.68,0,0,1,7.94,1.6c2.61.71,5.17,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.17.58.35.86.54l.42.29.2.15c.06.08.15.08.16.25l-.08,0a.86.86,0,0,0-.14-.14l-.19-.15-.42-.29-.86-.53c-.58-.35-1.16-.68-1.75-1-1.18-.66-2.38-1.28-3.58-1.89q-3.62-1.83-7.33-3.46t-7.5-3c-2.54-.93-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,30.2,30.2,0,0,0-4-.18,16.62,16.62,0,0,0-4,.56,8.81,8.81,0,0,0-3.52,1.87,3.27,3.27,0,0,0-.63.76,3.43,3.43,0,0,0-.35.92,5.54,5.54,0,0,0,0,2,16.81,16.81,0,0,0,1.09,3.86c.49,1.26,1.06,2.49,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.55,1.23,1.08,2.48,1.53,3.76a21,21,0,0,1,1,3.93,11.53,11.53,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.27,5.27,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.38,10.38,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,25.93,25.93,0,0,1-3.8,1.42,50.32,50.32,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.62-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.49.63-12.7,1.27,1.42,1.81,2.82,3.63,4.18,5.48a125.85,125.85,0,0,1,8.82,13.63,77,77,0,0,1,3.55,7.31,52.08,52.08,0,0,1,2.58,7.71,34.4,34.4,0,0,1,1,8.09,25,25,0,0,1-1.3,8c-.22.64-.47,1.28-.74,1.91-.14.31-.28.62-.44.93a7.27,7.27,0,0,1-.54.89,9.65,9.65,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,18.59,18.59,0,0,1-4.06.52,27.83,27.83,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.17-2.57l-.38-.33-.37-.35-.74-.69-.73-.72c-.24-.24-.47-.49-.7-.73a42.52,42.52,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,24,24,0,0,1-.56-4,17.53,17.53,0,0,1,0-2,15.87,15.87,0,0,1,.28-2,15.13,15.13,0,0,1,1.35-3.86,14.91,14.91,0,0,1,1-1.77,16.28,16.28,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,33.66,33.66,0,0,1,7-4.22,55.62,55.62,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.41-22.37S833.53,570,825,563.33s-17.17-13.1-26-19.32c-4.41-3.1-8.88-6.14-13.36-9.14s-9-6-13.56-8.86c-9.12-5.78-18.4-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a112.12,112.12,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.14a31.36,31.36,0,0,0-7.82,1.56,23.51,23.51,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.54,21.54,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8.05-.09,5.38.16,10.77.49,16.16.66,10.77,1.7,21.53,2.07,32.35.19,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12,55.83,55.83,0,0,1-5.79,15.2,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1.05-1.31,1.56l-.68.77c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a60.1,60.1,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64.14,64.14,0,0,1-15.09,6,78.78,78.78,0,0,1-16.08,2.4,101.16,101.16,0,0,1-16.23-.59,125.31,125.31,0,0,1-16-2.94c-.9-.22-1.8-.46-2.7-.71Zm323.11-25a77.89,77.89,0,0,0-7.85,1.87,55.76,55.76,0,0,0-7.56,2.82,33.12,33.12,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32,32,0,0,0,1.13,3.85,37.72,37.72,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71c.24.24.49.46.74.69l.37.34.37.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.38,3.51,2a40.36,40.36,0,0,0,7.46,3,27.3,27.3,0,0,0,7.93,1.08,18.74,18.74,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.59.42-.9.27-.61.51-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.37,33.37,0,0,0-1-7.95,49.32,49.32,0,0,0-2.56-7.64,75.76,75.76,0,0,0-3.53-7.25A126.66,126.66,0,0,0,894.33,631q-2.15-2.89-4.38-5.71C889.05,625.46,888.14,625.61,887.24,625.79Z"/><polygon class="cls-3" points="890.6 625.2 890.33 624.87 889.69 624.99 889.96 625.32 890.6 625.2"/></g><g class="cls-1"><path class="cls-122" d="M562.49,655l2.65.68A124.28,124.28,0,0,0,581,658.58a99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8.05,34.29,34.29,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.67,0,1.35,0,2,0l1,0,1,0c2.71.14,5.41.43,8.1.81A111.41,111.41,0,0,1,712.86,501q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.49,28,16.3q6.83,4.35,13.56,8.88t13.36,9.17q13.26,9.36,26,19.36t24.9,20.78c8.08,7.18,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.4-.3,10.8-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.63-3.72a17,17,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.13,3.13,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,8.84,8.84,0,0,1,3.58-1.89,16,16,0,0,1,4-.57,28.91,28.91,0,0,1,4,.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.92,2.24,7.32,3.47c1.21.61,2.4,1.24,3.59,1.89.59.33,1.17.67,1.75,1l.86.53.42.29.2.16c.06.07.15.08.17.24l-.08,0s-.09-.1-.14-.14l-.2-.16-.42-.28c-.28-.19-.57-.36-.85-.54-.58-.34-1.17-.68-1.76-1-1.18-.66-2.38-1.29-3.58-1.9q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,3,3,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,10.59,10.59,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.2a9.9,9.9,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48A126.62,126.62,0,0,1,902,648.55a76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8.05c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.44.94a8.11,8.11,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.5,13.5,0,0,1-3.81,1.52,20,20,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.63-2.39-1.3-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.57-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a43.09,43.09,0,0,1-5-6.4,37.52,37.52,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,23,23,0,0,1-.55-4,15.57,15.57,0,0,1,0-2,15.39,15.39,0,0,1,.27-2,15.74,15.74,0,0,1,1.35-3.87,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,54.46,54.46,0,0,1,7.62-2.83,78.69,78.69,0,0,1,7.89-1.88c.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.32-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.76-7.68-2.51a110.13,110.13,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.21,21.21,0,0,0-4.89,6.2,32.78,32.78,0,0,0-2.8,7.47,56.92,56.92,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.08,32.35.18,5.41.2,10.83-.1,16.24A97.19,97.19,0,0,1,657,613.45a56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76-.68.76c-.47.49-.93,1-1.42,1.47a60.25,60.25,0,0,1-6.13,5.37,62.36,62.36,0,0,1-6.81,4.47,64.39,64.39,0,0,1-15.1,6,78.67,78.67,0,0,1-16.07,2.39,100.14,100.14,0,0,1-16.24-.59,123.41,123.41,0,0,1-16-2.93l-2.73-.71Zm323.14-25c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,14.5,14.5,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,23,23,0,0,0,.56,4,30.46,30.46,0,0,0,1.13,3.86,36.85,36.85,0,0,0,3.57,7.2,42.12,42.12,0,0,0,5,6.34c.23.24.46.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.83,18.83,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.28.29-.6.43-.9.26-.61.5-1.24.72-1.87a24.77,24.77,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56c-1.42-1.93-2.89-3.83-4.38-5.71C887.43,629.7,886.53,629.85,885.63,630Z"/><polygon class="cls-3" points="888.98 629.44 888.72 629.11 888.08 629.23 888.34 629.56 888.98 629.44"/></g><g class="cls-1"><path class="cls-123" d="M560.88,659.17c.89.24,1.79.48,2.69.7a124,124,0,0,0,15.89,2.89,99.7,99.7,0,0,0,16.11.55,77.05,77.05,0,0,0,15.92-2.4,63.37,63.37,0,0,0,14.91-6,60.89,60.89,0,0,0,6.72-4.43,57.26,57.26,0,0,0,6-5.31,62.92,62.92,0,0,0,9.72-12.77,54.8,54.8,0,0,0,5.67-15,94.1,94.1,0,0,0,2.16-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.1-32.33-.33-5.39-.57-10.8-.48-16.22,0-2.71.18-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.61,32.61,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.56,2.95c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.88t13.37,9.18q13.25,9.35,26,19.36T847.15,592c8.08,7.18,15.93,14.63,23.42,22.43,5.78,6,11.36,12.3,16.56,18.86,4.29-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.2.05c2.69-.11,5.38-.29,8.06-.61a50.73,50.73,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,15.15,15.15,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.21.15-.2a2.39,2.39,0,0,1,.13-.21,5.74,5.74,0,0,0,.41-.91,6.75,6.75,0,0,0,.38-2,11.13,11.13,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.48,3.48,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.44,30.44,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.6.72,5.17,1.57,7.71,2.51s5,2,7.5,3,4.92,2.25,7.33,3.47c1.2.62,2.4,1.24,3.58,1.9.59.33,1.18.66,1.75,1l.86.54a4.43,4.43,0,0,1,.42.29l.21.16c0,.07.14.08.16.24l-.08,0a.79.79,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.37-7.32-3.46s-5-2.1-7.51-3-5.09-1.78-7.7-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.77,8.77,0,0,0-3.51,1.87,3,3,0,0,0-.63.75,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0-.05,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1.05,2.48,1.63,3.7,1.16,2.43,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a21.4,21.4,0,0,1,1,3.93,10,10,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.38.52-8.08.63-5.41.21-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.18-1c-10.78-.66-21.57-1.26-32.36-1.36-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.75,126.75,0,0,1,8.81,13.63A75.87,75.87,0,0,1,904,660a51.77,51.77,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.93s-.35.61-.54.9a10,10,0,0,1-3.06,2.77,14.32,14.32,0,0,1-3.82,1.52,19.21,19.21,0,0,1-4.07.51,27.43,27.43,0,0,1-8.06-1.11,40.2,40.2,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.38-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.65-3.16-2.56l-.38-.34-.37-.34-.75-.7-.72-.72c-.24-.23-.47-.49-.71-.73a42.45,42.45,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23,23,0,0,1-.56-4.05,15.58,15.58,0,0,1,0-2,14,14,0,0,1,.28-2,15,15,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.76,33.76,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.21-23.41-22.37s-16.39-14.05-24.88-20.72-17.17-13.1-26-19.31q-6.63-4.66-13.37-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.81-2.46-9.69-4.75-14.66-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.67-2.51a111.92,111.92,0,0,0-15.76-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.35,0-2,0-1.34,0-2.68,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,23.15,23.15,0,0,0-3.63,1.63,20.72,20.72,0,0,0-3.24,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,57.2,57.2,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.64.8-1.31,1.56-.68.76c-.22.25-.44.51-.68.75-.47.49-.93,1-1.42,1.47a59,59,0,0,1-6.12,5.38,60.07,60.07,0,0,1-6.82,4.46,63.37,63.37,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93c-.93-.23-1.85-.48-2.76-.73Zm323.17-25c-2.65.5-5.28,1.12-7.86,1.88a54.89,54.89,0,0,0-7.56,2.81,33.49,33.49,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.79,14.79,0,0,0-1.31,3.77,14.55,14.55,0,0,0-.26,2,14.83,14.83,0,0,0,0,2,23.13,23.13,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.72.7c.24.24.49.46.73.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.8,1.65,1.16.28.19.55.39.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.73,39.73,0,0,0,7.47,3,27.29,27.29,0,0,0,7.92,1.09,18.76,18.76,0,0,0,4-.51A13.35,13.35,0,0,0,901.2,690a9.49,9.49,0,0,0,2.9-2.63,8.94,8.94,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55q-2.13-2.9-4.37-5.71C885.85,633.87,885,634,884.05,634.2Z"/><polygon class="cls-3" points="887.41 633.62 887.14 633.28 886.5 633.4 886.77 633.74 887.41 633.62"/></g><g class="cls-1"><path class="cls-124" d="M559.18,663.55c.9.25,1.8.48,2.7.7a124.6,124.6,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,94.06,94.06,0,0,0,2.15-16c.31-5.37.28-10.77.1-16.15-.38-10.79-1.42-21.54-2.1-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.38,22.38,0,0,1,5.09-6.44,20.77,20.77,0,0,1,3.39-2.36,23.89,23.89,0,0,1,3.76-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.35,0,2,0l1,0,1,0c2.71.14,5.41.43,8.09.81a112.8,112.8,0,0,1,15.86,3.52c2.6.77,5.18,1.62,7.72,2.54s5.07,1.9,7.57,2.94c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.24,9.36,26,19.36t24.9,20.78c8.08,7.18,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19.05c2.7-.1,5.39-.29,8.07-.61a50.71,50.71,0,0,0,7.93-1.53,26.79,26.79,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.42,10.42,0,0,0-.1-2,21.17,21.17,0,0,0-1-3.89c-.45-1.28-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.22-1.14-2.45-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.84,5.84,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3,4.92,2.24,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.32,1.17.66,1.75,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16L1062,612c-.28-.19-.56-.36-.85-.54-.58-.34-1.17-.68-1.76-1-1.18-.66-2.37-1.29-3.58-1.9q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.48,28.48,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,3,3,0,0,0-.62.76,3.33,3.33,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.08,2.48,1.53,3.75a20.56,20.56,0,0,1,1,3.94,10.59,10.59,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93,1.64,1.64,0,0,1-.14.22l-.14.21-.15.21-.15.21a11,11,0,0,1-1.41,1.48,15.57,15.57,0,0,1-3.43,2.18,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.25-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,74.6,74.6,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.91-.14.31-.27.61-.43.93a10.13,10.13,0,0,1-.55.89,9.62,9.62,0,0,1-3.05,2.77,13.68,13.68,0,0,1-3.82,1.52,19.31,19.31,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.63-2.38-1.3-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.57l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.24-.24-.47-.49-.71-.74a43.09,43.09,0,0,1-5-6.4,38.09,38.09,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,23.93,23.93,0,0,1-.55-4,15.57,15.57,0,0,1,0-2.05,15.39,15.39,0,0,1,.27-2,15.74,15.74,0,0,1,1.35-3.87,17.3,17.3,0,0,1,1-1.76,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.23-1.38,7.89-1.88.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.39-14.06-24.88-20.73S803,563,794.17,556.81c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.78-18.39-11.32-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.72-1.56-7.53-2.92c-2.54-.91-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.38,21.38,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.5,55.5,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.08,5.38.16,10.77.49,16.15.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24A96.15,96.15,0,0,1,653.71,622a56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.22.26-.45.51-.68.76-.47.49-.93,1-1.42,1.47A58.85,58.85,0,0,1,625.1,660a64.22,64.22,0,0,1-15.1,6,79.38,79.38,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.6,123.25,123.25,0,0,1-16-2.93c-.93-.23-1.86-.48-2.78-.73Zm323.19-25c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,19.05,19.05,0,0,0-5.09,6.1,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.67,16.67,0,0,0,0,2,22.31,22.31,0,0,0,.55,4,30.81,30.81,0,0,0,1.13,3.85,37.42,37.42,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63q.27-.4.51-.84c.14-.28.28-.6.42-.9.27-.61.5-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.37-5.71C884.17,638.26,883.27,638.41,882.37,638.58Z"/><polygon class="cls-3" points="885.72 638 885.46 637.67 884.82 637.79 885.09 638.12 885.72 638"/></g><g class="cls-1"><path class="cls-125" d="M557.54,667.79c.91.24,1.82.48,2.73.7a124,124,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,59.88,59.88,0,0,0,6.72-4.42,58.52,58.52,0,0,0,6-5.32A63.33,63.33,0,0,0,645.58,641a55.51,55.51,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.13,32.13,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81A111.85,111.85,0,0,1,708,513.78c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.56,3c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,8.95,6.05,13.37,9.17q13.24,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.18,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19,0c2.69-.11,5.39-.29,8.06-.61a50.51,50.51,0,0,0,7.93-1.54,25.19,25.19,0,0,0,3.78-1.4,14.93,14.93,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.15-.21.14-.2.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.33,10.33,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.61,3.61,0,0,1,.37-1,3.66,3.66,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.44,30.44,0,0,1,4.05.2,53.81,53.81,0,0,1,8,1.6c2.6.72,5.17,1.57,7.71,2.51s5,2,7.51,3,4.91,2.24,7.32,3.46c1.2.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.41.29.21.16c0,.07.14.08.16.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.37-.86-.54c-.58-.35-1.16-.68-1.75-1-1.19-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.46s-5-2.1-7.5-3-5.1-1.78-7.71-2.49a53.4,53.4,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0-.06,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a22.26,22.26,0,0,1,1,3.93,10.73,10.73,0,0,1,.1,2,6.56,6.56,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,14.66,14.66,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.22-10.81.14-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.79-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.24-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a125.11,125.11,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.88,9.88,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.81-.93-3.54-2l-.86-.55c-.29-.18-.56-.37-.84-.56-.57-.38-1.12-.78-1.67-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.37-.34c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a41.89,41.89,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.55,17.55,0,0,1,0-2,14,14,0,0,1,.28-2A15.57,15.57,0,0,1,853,657.6a15.84,15.84,0,0,1,1-1.77,17.51,17.51,0,0,1,1.24-1.63,21.76,21.76,0,0,1,2.93-2.83,34.07,34.07,0,0,1,6.95-4.23,54.88,54.88,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.2-23.41-22.37S827,587,818.55,580.36s-17.17-13.09-26-19.31q-6.63-4.66-13.37-9.15t-13.55-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.93c-2.53-.9-5.09-1.75-7.67-2.51A112.09,112.09,0,0,0,692,511.09c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.5-.93,1-1.41,1.47a57.79,57.79,0,0,1-12.95,9.84,63.2,63.2,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93c-.94-.24-1.87-.48-2.8-.74Zm323.21-25c-2.65.5-5.27,1.12-7.86,1.88a55.58,55.58,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,18.89,18.89,0,0,0-5.1,6.11,14.72,14.72,0,0,0-1.31,3.76,14.55,14.55,0,0,0-.26,2,14.85,14.85,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.53c1.14.72,2.31,1.38,3.51,2a39.37,39.37,0,0,0,7.46,3,27,27,0,0,0,7.92,1.09,18.13,18.13,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,127.2,127.2,0,0,0-8.79-13.56q-2.15-2.89-4.38-5.71C882.55,642.49,881.65,642.65,880.75,642.82Z"/><polygon class="cls-3" points="884.11 642.24 883.84 641.9 883.2 642.02 883.47 642.36 884.11 642.24"/></g><g class="cls-1"><path class="cls-126" d="M555.92,672c.91.25,1.82.49,2.74.71a124,124,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31A63.68,63.68,0,0,0,644,645.22a55.51,55.51,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.13,32.13,0,0,1,8-1.6c1.36-.11,2.72-.15,4.08-.14.68,0,1.36,0,2,0l1,0,1,.06c2.71.14,5.41.43,8.09.81A111.85,111.85,0,0,1,706.38,518c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.56,3c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.36,13.56,8.89c4.49,3,8.95,6,13.37,9.17q13.24,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.18,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19,0c2.69-.11,5.39-.29,8.06-.61a50.49,50.49,0,0,0,7.93-1.53,26.38,26.38,0,0,0,3.78-1.41,15.15,15.15,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.37,10.37,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.64-3.71a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.61,3.61,0,0,1,.37-1,3.66,3.66,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.19,52.58,52.58,0,0,1,7.95,1.61c2.6.71,5.17,1.56,7.71,2.5s5,2,7.51,3.05,4.91,2.24,7.32,3.46c1.2.62,2.4,1.25,3.58,1.9.59.33,1.18.67,1.76,1l.86.53.41.29.21.16c0,.07.14.08.16.24l-.08,0a.58.58,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.36-.86-.54c-.58-.35-1.17-.68-1.76-1q-1.77-1-3.57-1.89c-2.41-1.22-4.86-2.37-7.33-3.45s-5-2.11-7.5-3-5.1-1.78-7.71-2.49a53.4,53.4,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0-.06,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.24,1.08,2.48,1.53,3.76a22.26,22.26,0,0,1,1,3.93,10.73,10.73,0,0,1,.1,2,6.56,6.56,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94l-.13.22-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.19,27.21,27.21,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.22-10.81.14-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.79-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.24-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.62,126.62,0,0,1,8.81,13.62,77,77,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,24.94,24.94,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.15.32-.28.62-.44.94a9.18,9.18,0,0,1-.54.89,9.88,9.88,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,39.8,39.8,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.37-.84-.56-.57-.37-1.12-.78-1.67-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a41.41,41.41,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,17.55,17.55,0,0,1,0-2.05,14,14,0,0,1,.28-2,15.57,15.57,0,0,1,1.34-3.87,14.86,14.86,0,0,1,1-1.76,16.4,16.4,0,0,1,1.24-1.64,21.18,21.18,0,0,1,2.93-2.83,34.07,34.07,0,0,1,6.95-4.23,54.88,54.88,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.2-23.41-22.36s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31q-6.63-4.66-13.37-9.15T764,547.23c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82q-3.74-1.56-7.54-2.93c-2.53-.9-5.09-1.75-7.67-2.51a112.09,112.09,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.41,21.41,0,0,0-4.89,6.2A32.67,32.67,0,0,0,652,533.6a55.72,55.72,0,0,0-1.33,7.92c-.27,2.68-.4,5.36-.45,8.05-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.53-.62.8l-.63.8c-.43.52-.88,1-1.32,1.56l-.67.76c-.23.25-.45.51-.69.76-.47.49-.93,1-1.41,1.46a57.79,57.79,0,0,1-13,9.84,63.2,63.2,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93l-2.81-.74Zm323.22-25c-2.65.5-5.27,1.12-7.86,1.88a54.33,54.33,0,0,0-7.55,2.82,32.82,32.82,0,0,0-6.86,4.17,18.89,18.89,0,0,0-5.1,6.11,14.72,14.72,0,0,0-1.31,3.76,14.55,14.55,0,0,0-.26,2,14.85,14.85,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.14,2.53.54.4,1.08.8,1.64,1.17l.84.56.85.54c1.14.71,2.31,1.37,3.5,2a39.73,39.73,0,0,0,7.47,3,27,27,0,0,0,7.92,1.09,18.75,18.75,0,0,0,4-.5,13.69,13.69,0,0,0,3.68-1.47,9.38,9.38,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63A74.62,74.62,0,0,0,895,665.8a128.22,128.22,0,0,0-8.79-13.56q-2.15-2.9-4.38-5.71C880.94,646.67,880,646.83,879.14,647Z"/><polygon class="cls-3" points="882.5 646.42 882.23 646.08 881.59 646.21 881.86 646.54 882.5 646.42"/></g><g class="cls-1"><path class="cls-127" d="M554.23,676.34c.91.25,1.83.49,2.75.72a124.1,124.1,0,0,0,15.88,2.88,99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,60.8,60.8,0,0,0,6.72-4.42,59.64,59.64,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,54.92,54.92,0,0,0,5.67-15,95.12,95.12,0,0,0,2.16-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.54-2.1-32.33-.33-5.4-.57-10.81-.48-16.23,0-2.71.18-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8.05,33.59,33.59,0,0,1,2.88-7.66,22.16,22.16,0,0,1,5.1-6.45,20.88,20.88,0,0,1,3.38-2.36,23,23,0,0,1,3.76-1.68,31.71,31.71,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,0l1,0,1,0c2.71.15,5.41.43,8.09.81a114.68,114.68,0,0,1,15.87,3.52q3.9,1.15,7.71,2.54c2.55.92,5.08,1.9,7.57,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.18q13.25,9.35,26,19.35t24.89,20.78c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1.05,13-1.3,5.4-.3,10.81-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.79.62,16.18.81s10.8.26,16.19,0c2.7-.11,5.39-.3,8.07-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,15.19,15.19,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.19.14-.21.15-.21.12-.21a4.92,4.92,0,0,0,.42-.9,6.81,6.81,0,0,0,.38-2,11.13,11.13,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.57-1.22-1.14-2.45-1.63-3.71a17.77,17.77,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3,3,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,27.41,27.41,0,0,1,4,.2,52.56,52.56,0,0,1,7.95,1.6c2.6.71,5.17,1.57,7.7,2.5s5,2,7.51,3.05,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.17.66,1.75,1,.29.17.58.35.86.54a4.43,4.43,0,0,1,.42.29l.2.15c.06.08.15.08.17.25l-.08,0a.86.86,0,0,0-.14-.14l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.89q-3.61-1.83-7.32-3.46t-7.51-3c-2.53-.93-5.1-1.78-7.7-2.49a55,55,0,0,0-7.92-1.59,30.27,30.27,0,0,0-4-.18,16.69,16.69,0,0,0-4,.56,8.77,8.77,0,0,0-3.51,1.87,3,3,0,0,0-.63.76,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,16.84,16.84,0,0,0,1.1,3.86c.49,1.26,1.05,2.49,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.31.56,1.23,1.09,2.48,1.54,3.76a21,21,0,0,1,1,3.93,9.9,9.9,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.23,5.23,0,0,1-.43.93,1.64,1.64,0,0,1-.14.22l-.14.21-.15.21-.15.21a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.38.51-8.09.62-5.4.22-10.81.15-16.2,0s-10.8-.47-16.19-.79l-16.18-1c-10.78-.66-21.57-1.25-32.36-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.71,1.27,1.43,1.81,2.82,3.63,4.19,5.48a125.77,125.77,0,0,1,8.81,13.63,74.74,74.74,0,0,1,3.56,7.31,52,52,0,0,1,2.57,7.71,33.89,33.89,0,0,1,1,8.09,25,25,0,0,1-1.31,8c-.22.64-.46,1.28-.74,1.91-.14.31-.27.62-.43.93a8.84,8.84,0,0,1-.55.89,9.62,9.62,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,18.6,18.6,0,0,1-4.07.52,27.77,27.77,0,0,1-8.06-1.11,40.88,40.88,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.54c-.29-.18-.56-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.37-.35-.75-.69-.72-.72-.71-.73a42.45,42.45,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.38,31.38,0,0,1-1.14-3.92,23,23,0,0,1-.56-4,15.58,15.58,0,0,1,0-2,14.28,14.28,0,0,1,.28-2,15.11,15.11,0,0,1,1.34-3.86,16.41,16.41,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.15,1.67-.3,2.5-.43-5.13-6.45-10.63-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.39-14.06-24.88-20.72-17.17-13.1-26-19.32q-6.63-4.65-13.37-9.14c-4.49-3-9-6-13.56-8.86-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.68-4.75-14.65-6.82q-3.73-1.56-7.54-2.92c-2.53-.91-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.67,0-1.35,0-2,0-1.34,0-2.68,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,24.06,24.06,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.68,21.68,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.4.21,10.82-.1,16.23a95.38,95.38,0,0,1-2.18,16.12A56,56,0,0,1,643,650a68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1.05-1.31,1.56l-.68.77c-.22.25-.44.51-.68.75-.47.49-.93,1-1.42,1.47a58.94,58.94,0,0,1-6.12,5.37,61.54,61.54,0,0,1-6.82,4.47,64.22,64.22,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94c-1-.23-1.89-.48-2.83-.74Zm323.23-25a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.86,14.86,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.67,16.67,0,0,0,0,2,23.27,23.27,0,0,0,.55,4,30.32,30.32,0,0,0,1.13,3.85,37.72,37.72,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71c.24.24.49.46.73.69l.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.71,2.31,1.38,3.5,2a40.17,40.17,0,0,0,7.47,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,8.94,8.94,0,0,0,.51-.84c.15-.28.28-.59.42-.9.27-.61.5-1.23.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.37,33.37,0,0,0-1-7.95,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.37-5.71C879.26,651.06,878.36,651.21,877.46,651.39Z"/><polygon class="cls-3" points="880.82 650.8 880.55 650.47 879.91 650.59 880.18 650.92 880.82 650.8"/></g><g class="cls-1"><path class="cls-128" d="M552.59,680.58l2.77.71a124.28,124.28,0,0,0,15.89,2.89,99.79,99.79,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63,63,0,0,0,14.9-6,57.39,57.39,0,0,0,12.75-9.73,63.39,63.39,0,0,0,9.73-12.78,55.06,55.06,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.12a56.41,56.41,0,0,1,1.37-8,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24.9,24.9,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,0c2.71.14,5.41.43,8.1.81a111.72,111.72,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88c4.49,3,9,6.06,13.37,9.17q13.25,9.36,26,19.36t24.89,20.78c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19.05c2.69-.1,5.39-.29,8.07-.61a50.59,50.59,0,0,0,7.92-1.53,25.9,25.9,0,0,0,3.78-1.4,15,15,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.37,10.37,0,0,0-.11-2,20.5,20.5,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.46-1.63-3.72a17,17,0,0,1-1.11-3.91,6.08,6.08,0,0,1,.06-2,3.44,3.44,0,0,1,.38-1,3.35,3.35,0,0,1,.65-.8,9.1,9.1,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.77,28.77,0,0,1,4,.19,53.84,53.84,0,0,1,8,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3,4.91,2.24,7.32,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.42.29.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16l-.41-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.29-3.58-1.9-2.41-1.22-4.86-2.37-7.33-3.45s-5-2.11-7.5-3-5.1-1.78-7.71-2.49a54.71,54.71,0,0,0-7.92-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.26,1.06,2.48,1.63,3.7,1.17,2.44,2.41,4.84,3.52,7.3.55,1.24,1.08,2.48,1.53,3.76a21.32,21.32,0,0,1,1,3.94,11.47,11.47,0,0,1,.11,2,7,7,0,0,1-.39,2,5.58,5.58,0,0,1-.43.93l-.13.22-.15.21-.14.21-.16.2a9.42,9.42,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.19,25.59,25.59,0,0,1-3.81,1.41,50,50,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.64-.47,1.28-.74,1.9-.14.32-.28.62-.44.94a8.11,8.11,0,0,1-.54.89,9.77,9.77,0,0,1-3.06,2.77,13.68,13.68,0,0,1-3.82,1.52,19.89,19.89,0,0,1-4.06.52,27.79,27.79,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.18-1.09-.81-2.16-1.65-3.17-2.56l-.38-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3A30.75,30.75,0,0,1,847,682.4a24,24,0,0,1-.56-4,17.51,17.51,0,0,1,0-2.05,15.49,15.49,0,0,1,1.63-5.91,14.79,14.79,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,33.85,33.85,0,0,1,7-4.22,54.93,54.93,0,0,1,7.62-2.83,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.33-15.21-23.41-22.37s-16.39-14.06-24.88-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.88-6.14-13.36-9.15s-9-6-13.56-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82q-3.73-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a110.73,110.73,0,0,0-15.75-3.48c-2.67-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.44,8.05-.09,5.38.16,10.77.49,16.15.66,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47A58.6,58.6,0,0,1,618.57,677a64.14,64.14,0,0,1-15.09,6,79.47,79.47,0,0,1-16.08,2.4,101.12,101.12,0,0,1-16.23-.6,123.56,123.56,0,0,1-16-2.93q-1.43-.36-2.85-.75Zm323.25-25c-2.65.5-5.27,1.12-7.86,1.88a54.81,54.81,0,0,0-7.55,2.82,32.86,32.86,0,0,0-6.86,4.18,18.85,18.85,0,0,0-5.1,6.1,14.33,14.33,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.24.24.46.49.7.72l.72.71.74.69.36.34.38.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.08,40.08,0,0,0,7.46,3,27.3,27.3,0,0,0,7.93,1.08,18.74,18.74,0,0,0,3.95-.5,13.37,13.37,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,49.56,49.56,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.14-2.9-4.38-5.71C877.65,655.3,876.74,655.45,875.84,655.62Z"/><polygon class="cls-3" points="879.2 655.04 878.93 654.71 878.29 654.83 878.56 655.16 879.2 655.04"/></g><g class="cls-1"><path class="cls-129" d="M551,684.74c.94.25,1.87.5,2.81.73a124.28,124.28,0,0,0,15.89,2.89,99.82,99.82,0,0,0,16.12.55,77.15,77.15,0,0,0,15.92-2.4,63.29,63.29,0,0,0,14.9-6,60.36,60.36,0,0,0,6.72-4.42,58.63,58.63,0,0,0,6-5.32A63.28,63.28,0,0,0,639.09,658a55.13,55.13,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.33-.33-5.39-.57-10.8-.49-16.22.05-2.71.18-5.42.46-8.13a54.88,54.88,0,0,1,1.36-8,33.46,33.46,0,0,1,2.87-7.67,22.42,22.42,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.52,32.52,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,3c5,2.09,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.49,28,16.29q6.83,4.36,13.56,8.88c4.48,3,8.95,6.06,13.36,9.18q13.24,9.35,26,19.36t24.89,20.77c8.09,7.18,15.94,14.63,23.42,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.31,10.8-.38,16.21-.33,10.8.12,21.6.73,32.38,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a51,51,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,9.45,9.45,0,0,0,1.38-1.45l.16-.2.14-.21.14-.2.13-.21a5,5,0,0,0,.42-.91,6.74,6.74,0,0,0,.37-1.95,10.28,10.28,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,0-2,3.21,3.21,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.45,16.45,0,0,1,4-.57,30.59,30.59,0,0,1,4.06.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3,4.92,2.25,7.32,3.47c1.21.62,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1l.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.15-.15-.19-.15-.42-.29-.86-.53c-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.52,52.52,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3,3,0,0,0-.62.75,3.15,3.15,0,0,0-.36.92,5.78,5.78,0,0,0-.05,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.16.2a10.31,10.31,0,0,1-1.4,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.42,50.42,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.21-10.81.14-16.21,0s-10.79-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4-.05-10.8,0-16.18.34-4.25.25-8.5.63-12.71,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.84,126.84,0,0,1,8.82,13.63,75.79,75.79,0,0,1,3.55,7.31,50.69,50.69,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.44.93a8.24,8.24,0,0,1-.54.9,9.77,9.77,0,0,1-3.06,2.77,14.12,14.12,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3q-1.81-.93-3.54-2l-.85-.55c-.29-.18-.57-.38-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.65-3.16-2.56l-.39-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.49-.71-.73a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.53,17.53,0,0,1,0-2,15.48,15.48,0,0,1,.28-2,15.07,15.07,0,0,1,1.35-3.87,17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.76,33.76,0,0,1,6.95-4.22,56.11,56.11,0,0,1,7.61-2.83,79.49,79.49,0,0,1,7.9-1.87c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.1-26-19.31q-6.62-4.66-13.36-9.15T759.14,560c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.75-14.66-6.83-2.48-1-5-2-7.53-2.92s-5.1-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.34,0-2-.05-1.34,0-2.68,0-4,.14a31.45,31.45,0,0,0-7.82,1.56,23,23,0,0,0-3.62,1.63,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.08,32.35.18,5.41.2,10.83-.1,16.24a96.31,96.31,0,0,1-2.19,16.11,55.86,55.86,0,0,1-5.78,15.21,68.8,68.8,0,0,1-4.53,6.77c-.2.28-.41.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a59.14,59.14,0,0,1-6.13,5.38A60.85,60.85,0,0,1,617,681.2a63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.14,100.14,0,0,1-16.24-.59,123.87,123.87,0,0,1-16-2.93l-2.88-.76ZM874.26,659.8c-2.64.5-5.27,1.12-7.85,1.88a54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.16,15.16,0,0,0-1.3,3.77,14.58,14.58,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,24.16,24.16,0,0,0,.55,4,30.51,30.51,0,0,0,1.14,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.7c.24.24.49.46.74.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.08.8,1.65,1.16.28.19.55.39.83.56l.86.54c1.13.72,2.31,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27.35,27.35,0,0,0,7.93,1.09,18.93,18.93,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.24,50.24,0,0,0-2.55-7.63,76,76,0,0,0-3.54-7.26A125,125,0,0,0,881.35,665c-1.42-1.93-2.89-3.83-4.38-5.71C876.07,659.47,875.17,659.63,874.26,659.8Z"/><polygon class="cls-3" points="877.62 659.22 877.36 658.88 876.71 659 876.98 659.34 877.62 659.22"/></g><g class="cls-1"><path class="cls-130" d="M549.28,689.12c.94.25,1.88.5,2.82.73A124.28,124.28,0,0,0,568,692.74a99.79,99.79,0,0,0,16.12.56A77.85,77.85,0,0,0,600,690.89a63,63,0,0,0,14.9-6,57.75,57.75,0,0,0,12.76-9.73,63.72,63.72,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,95.08,95.08,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.15-.37-10.79-1.42-21.54-2.09-32.33-.33-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.46-8.12a55,55,0,0,1,1.36-8,33.81,33.81,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,20.69,20.69,0,0,1,3.38-2.36,24,24,0,0,1,3.77-1.69,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,0c2.71.14,5.41.43,8.1.81a112.8,112.8,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.57,8.88c4.48,3,9,6.06,13.36,9.17q13.25,9.36,26,19.36T835.68,622c8.08,7.18,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.61.72,32.39,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61a50.93,50.93,0,0,0,7.93-1.53,26.21,26.21,0,0,0,3.77-1.4,14.75,14.75,0,0,0,3.39-2.15,10,10,0,0,0,1.38-1.45l.16-.2.14-.2.14-.21.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-1.95,11.29,11.29,0,0,0-.1-2,21.2,21.2,0,0,0-1-3.89c-.44-1.28-1-2.52-1.52-3.75-1.1-2.46-2.34-4.86-3.5-7.3-.58-1.22-1.14-2.45-1.63-3.72a17,17,0,0,1-1.1-3.91,5.84,5.84,0,0,1,.05-2,3.44,3.44,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.57-1.89,16.12,16.12,0,0,1,4-.57,29,29,0,0,1,4.06.19,53.71,53.71,0,0,1,7.94,1.61c2.61.71,5.17,1.56,7.71,2.5s5,2,7.51,3,4.91,2.24,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.32,1.18.66,1.76,1,.29.17.58.35.86.54l.42.28.2.16c.06.07.15.08.16.24l-.08,0a.86.86,0,0,0-.14-.14l-.19-.16-.42-.28c-.28-.19-.57-.36-.86-.54-.58-.34-1.16-.68-1.75-1-1.18-.66-2.38-1.29-3.58-1.9q-3.62-1.83-7.33-3.45c-2.47-1.09-5-2.11-7.5-3s-5.1-1.78-7.7-2.49a55.11,55.11,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.3,3.3,0,0,0-.35.92,5.48,5.48,0,0,0,0,2,16.89,16.89,0,0,0,1.09,3.87c.49,1.26,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.31.55,1.23,1.08,2.48,1.53,3.75a21.32,21.32,0,0,1,1,3.94,11.53,11.53,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.63,5.63,0,0,1-.44.93c0,.08-.09.15-.13.22l-.15.21-.14.21-.16.21a10.31,10.31,0,0,1-1.4,1.48,15.64,15.64,0,0,1-3.44,2.18,26.67,26.67,0,0,1-3.8,1.42,51.45,51.45,0,0,1-8,1.54c-2.68.33-5.38.52-8.08.63-5.4.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.25-32.37-1.36-5.4,0-10.8,0-16.18.35-4.26.25-8.5.63-12.71,1.27,1.42,1.8,2.82,3.63,4.18,5.48a126.71,126.71,0,0,1,8.82,13.62,79.43,79.43,0,0,1,3.55,7.31,52.2,52.2,0,0,1,2.58,7.72,34.39,34.39,0,0,1,1,8.08,25.33,25.33,0,0,1-1.31,8c-.22.64-.47,1.28-.74,1.91-.14.31-.28.61-.44.93a8.11,8.11,0,0,1-.54.89,9.65,9.65,0,0,1-3.06,2.77,13.56,13.56,0,0,1-3.82,1.52,19.22,19.22,0,0,1-4.06.52A27.88,27.88,0,0,1,874,721.3a40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54-.84-.57c-.57-.37-1.11-.78-1.66-1.17-1.09-.82-2.15-1.66-3.16-2.57l-.39-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a42.44,42.44,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,24,24,0,0,1-.56-4,17.51,17.51,0,0,1,0-2,15.49,15.49,0,0,1,1.63-5.91,15.63,15.63,0,0,1,1-1.76,16.28,16.28,0,0,1,1.24-1.63,21.93,21.93,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,56.11,56.11,0,0,1,7.61-2.83c2.6-.76,5.24-1.38,7.9-1.88.83-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.78-15.33-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.41-3.11-8.87-6.14-13.36-9.15s-9-6-13.56-8.85c-9.12-5.78-18.4-11.32-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.74-1.56-7.53-2.92c-2.54-.91-5.1-1.76-7.68-2.51a111.81,111.81,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.93,30.93,0,0,0-7.82,1.57,22.59,22.59,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.41,21.41,0,0,0-4.9,6.2,32.75,32.75,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.77.49,16.15.67,10.77,1.7,21.54,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.13,95.13,0,0,1-2.18,16.11,55.89,55.89,0,0,1-5.79,15.21,68.27,68.27,0,0,1-4.52,6.78c-.2.27-.42.54-.63.8l-.63.8c-.43.53-.87,1-1.31,1.56l-.68.76c-.23.26-.45.51-.69.76-.47.49-.92,1-1.41,1.47a60.25,60.25,0,0,1-6.13,5.37,61.54,61.54,0,0,1-6.82,4.47,64.14,64.14,0,0,1-15.09,6,79.47,79.47,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.6,123.87,123.87,0,0,1-16-2.93c-1-.24-1.93-.5-2.9-.76Zm323.3-24.94c-2.65.5-5.27,1.12-7.85,1.88a54.45,54.45,0,0,0-7.56,2.82,33.12,33.12,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.09,15.09,0,0,0-1.3,3.76,13.1,13.1,0,0,0-.27,2,16.66,16.66,0,0,0,0,2,24.31,24.31,0,0,0,.55,4,32.6,32.6,0,0,0,1.13,3.85,38,38,0,0,0,3.57,7.2,42.19,42.19,0,0,0,5,6.34c.23.24.45.49.69.72l.72.71.74.69.37.34.37.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.38,3.51,2a40.36,40.36,0,0,0,7.46,3,27.34,27.34,0,0,0,7.93,1.08,18.91,18.91,0,0,0,4-.5,13.31,13.31,0,0,0,3.67-1.47,9,9,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.28.29-.6.42-.9.27-.61.51-1.24.72-1.87a24.78,24.78,0,0,0,1.28-7.88,34,34,0,0,0-1-8,50.61,50.61,0,0,0-2.55-7.63,78.3,78.3,0,0,0-3.54-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.14-2.89-4.38-5.71C874.39,663.86,873.48,664,872.58,664.18Z"/><polygon class="cls-3" points="875.94 663.6 875.67 663.27 875.03 663.39 875.3 663.72 875.94 663.6"/></g><g class="cls-1"><path class="cls-131" d="M547.64,693.35c.94.26,1.89.51,2.84.74A124.6,124.6,0,0,0,566.37,697a101,101,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,57.6,57.6,0,0,0,6-5.32,62.92,62.92,0,0,0,9.72-12.77,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,34.29,34.29,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.15,4.09-.14.67,0,1.35,0,2,.05l1,0,1,.06c2.71.14,5.42.43,8.1.81a111.41,111.41,0,0,1,15.86,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,3c5,2.09,9.89,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.25,9.34,26,19.36t24.9,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a50.73,50.73,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,10,10,0,0,0,1.39-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.32,10.32,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.51-3.74-1.11-2.46-2.35-4.86-3.51-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.3,3.3,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.53,16.53,0,0,1,4-.57,30.44,30.44,0,0,1,4,.2,52.21,52.21,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.92,2.24,7.33,3.46c1.2.62,2.39,1.25,3.58,1.9.59.33,1.17.67,1.75,1l.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16-.42-.28c-.28-.19-.56-.36-.85-.54-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.61-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a53.53,53.53,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,2.94,2.94,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,6.88,6.88,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.46-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.24-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48A126.62,126.62,0,0,1,887.32,687a76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.94s-.35.6-.55.89a9.84,9.84,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3c-1.2-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.37-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.38-.34c-.24-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a43.17,43.17,0,0,1-5-6.41,37.16,37.16,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,22.94,22.94,0,0,1-.55-4.05,15.51,15.51,0,0,1,1.64-7.95,17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.83,21.83,0,0,1,2.94-2.83,33.8,33.8,0,0,1,7-4.23,54.41,54.41,0,0,1,7.62-2.82,78.69,78.69,0,0,1,7.89-1.88c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.2-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.09-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.93s-5.09-1.75-7.68-2.51a111.48,111.48,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,21.84,21.84,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.17,21.17,0,0,0-4.89,6.19A32.93,32.93,0,0,0,643.8,555a55.74,55.74,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.64.8L629.42,677l-.68.76c-.23.25-.45.51-.68.75-.47.5-.93,1-1.42,1.47a58,58,0,0,1-12.94,9.84,63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.14,100.14,0,0,1-16.24-.59,123.41,123.41,0,0,1-16-2.93L547.4,694ZM871,668.42c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.35,33.35,0,0,0-6.86,4.17,18.86,18.86,0,0,0-5.09,6.11,14.72,14.72,0,0,0-1.31,3.76,16.36,16.36,0,0,0-.27,2,16.69,16.69,0,0,0,0,2,22.06,22.06,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a39.46,39.46,0,0,0,7.47,3,26.91,26.91,0,0,0,7.92,1.09,18.83,18.83,0,0,0,4-.5,13.82,13.82,0,0,0,3.68-1.47,9.49,9.49,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.43-.9.27-.61.5-1.24.72-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.38-5.71C872.77,668.09,871.87,668.25,871,668.42Z"/><polygon class="cls-3" points="874.32 667.84 874.06 667.5 873.42 667.63 873.68 667.96 874.32 667.84"/></g><g class="cls-1"><path class="cls-132" d="M546.07,697.39l2.75.71A124.28,124.28,0,0,0,564.71,701a99.78,99.78,0,0,0,16.12.55,77.84,77.84,0,0,0,15.92-2.4,63.07,63.07,0,0,0,14.9-6,58.53,58.53,0,0,0,6.72-4.42,57.37,57.37,0,0,0,6-5.31,63.65,63.65,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.37-10.78-1.42-21.53-2.09-32.33-.33-5.39-.58-10.8-.49-16.22,0-2.71.18-5.43.46-8.13a54.88,54.88,0,0,1,1.36-8,33.46,33.46,0,0,1,2.87-7.67,22.11,22.11,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,24,24,0,0,1,3.77-1.68,32.43,32.43,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13l2,0,1,0,1,0c2.71.15,5.41.44,8.1.82a111.72,111.72,0,0,1,15.86,3.52c2.6.76,5.17,1.61,7.72,2.53s5.07,1.9,7.57,3c5,2.08,9.89,4.39,14.7,6.87,9.63,4.93,18.92,10.49,28,16.29q6.84,4.37,13.56,8.88c4.49,3,9,6.06,13.37,9.18q13.25,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.39,1.4l16.17,1c5.39.33,10.78.62,16.18.81s10.8.26,16.19,0c2.69-.11,5.39-.3,8.07-.62a49.46,49.46,0,0,0,7.92-1.53,24.79,24.79,0,0,0,3.78-1.4,14.42,14.42,0,0,0,3.39-2.15A9.89,9.89,0,0,0,1007,666l.15-.2.15-.21.14-.2c0-.07.09-.14.13-.22a5.3,5.3,0,0,0,.42-.9,7.09,7.09,0,0,0,.37-1.95,11.13,11.13,0,0,0-.1-2,21.09,21.09,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.11-2.47-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.82,5.82,0,0,1,.05-2,3.38,3.38,0,0,1,.38-1,3.3,3.3,0,0,1,.65-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,29,29,0,0,1,4.06.2,54,54,0,0,1,7.94,1.6c2.61.72,5.17,1.57,7.71,2.5s5,2,7.51,3.05,4.91,2.25,7.32,3.47c1.21.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.76,1,.29.18.58.35.86.54l.42.29.2.16c.06.07.15.07.16.24l-.08,0a.57.57,0,0,0-.14-.15l-.19-.15-.42-.29-.86-.53c-.58-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.33-3.46c-2.47-1.08-5-2.1-7.5-3s-5.1-1.78-7.7-2.49a52.52,52.52,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.29,16.29,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,3.22,3.22,0,0,0-.63.75,3.43,3.43,0,0,0-.35.92,5.54,5.54,0,0,0-.05,2,17,17,0,0,0,1.09,3.87c.49,1.25,1.06,2.48,1.64,3.7,1.16,2.43,2.4,4.83,3.51,7.3.55,1.23,1.08,2.48,1.53,3.76a21,21,0,0,1,1,3.93,11.58,11.58,0,0,1,.11,2,7.29,7.29,0,0,1-.38,2,5.73,5.73,0,0,1-.44.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a10.38,10.38,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.18,25.93,25.93,0,0,1-3.8,1.42,50.32,50.32,0,0,1-8,1.55c-2.68.32-5.38.51-8.08.63-5.4.21-10.81.14-16.21,0s-10.8-.47-16.19-.79l-16.17-1c-10.78-.65-21.57-1.25-32.37-1.35-5.4,0-10.8,0-16.19.34-4.25.25-8.49.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47A126.84,126.84,0,0,1,885.66,691a78.2,78.2,0,0,1,3.55,7.31,51.81,51.81,0,0,1,2.58,7.72,34.31,34.31,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.65-.47,1.29-.74,1.91-.14.31-.28.62-.44.93a8.24,8.24,0,0,1-.54.9,9.89,9.89,0,0,1-3.06,2.77,14.32,14.32,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.5,27.5,0,0,1-8.07-1.11,40.1,40.1,0,0,1-7.55-3q-1.82-.93-3.54-2l-.86-.55-.84-.56c-.57-.38-1.11-.78-1.66-1.18-1.09-.82-2.16-1.66-3.17-2.56l-.38-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.73-.72c-.24-.23-.47-.49-.7-.73a42.52,42.52,0,0,1-5-6.41,38.05,38.05,0,0,1-3.61-7.29,31.74,31.74,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.53,17.53,0,0,1,0-2,15.48,15.48,0,0,1,.28-2,15.07,15.07,0,0,1,1.35-3.87,15.76,15.76,0,0,1,1-1.77,16.28,16.28,0,0,1,1.24-1.63,22.47,22.47,0,0,1,2.93-2.84,34.3,34.3,0,0,1,7-4.22,56.24,56.24,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.21-23.41-22.37S815.59,616.64,807.1,610s-17.17-13.1-26-19.31c-4.41-3.11-8.88-6.15-13.36-9.15s-9-6-13.56-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.68-4.76-14.66-6.83-2.49-1-5-2-7.53-2.92s-5.1-1.75-7.68-2.51a110.7,110.7,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1,0-1,0-2,0c-1.34,0-2.68,0-4,.14a31.36,31.36,0,0,0-7.82,1.56,22.64,22.64,0,0,0-3.62,1.63,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47A55.72,55.72,0,0,0,640.8,567c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.77.49,16.16.66,10.77,1.7,21.53,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,55.7,55.7,0,0,1-5.79,15.2,67.12,67.12,0,0,1-4.52,6.78c-.2.28-.42.54-.63.81l-.63.8L627.76,681l-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a58.6,58.6,0,0,1-13,9.84,63.72,63.72,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,101.16,101.16,0,0,1-16.23-.59,127.06,127.06,0,0,1-16-2.93l-2.82-.75Zm323.23-25a78.78,78.78,0,0,0-7.86,1.88,54.76,54.76,0,0,0-7.55,2.81A33.56,33.56,0,0,0,847,681.3a19,19,0,0,0-5.1,6.1,15.23,15.23,0,0,0-1.3,3.76,13.45,13.45,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,24.31,24.31,0,0,0,.55,4A30.46,30.46,0,0,0,842,703a38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.7c.24.24.49.46.74.69l.37.35.37.33c1,.89,2.06,1.72,3.14,2.53.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.72,2.31,1.38,3.51,2a40,40,0,0,0,7.46,3,27.31,27.31,0,0,0,7.93,1.09,18.75,18.75,0,0,0,3.95-.51,13.07,13.07,0,0,0,3.68-1.47,9.14,9.14,0,0,0,2.9-2.63,6.36,6.36,0,0,0,.51-.83c.15-.29.29-.6.42-.9.27-.62.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,48.85,48.85,0,0,0-2.56-7.63,75.93,75.93,0,0,0-3.53-7.26,126.53,126.53,0,0,0-8.79-13.55q-2.14-2.89-4.38-5.71C871.11,672.1,870.2,672.26,869.3,672.43Z"/><polygon class="cls-3" points="872.66 671.85 872.39 671.51 871.75 671.63 872.02 671.96 872.66 671.85"/></g><g class="cls-1"><path class="cls-133" d="M544.38,701.77l2.76.71A124,124,0,0,0,563,705.37a100.94,100.94,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,62.94,62.94,0,0,0,14.91-6,57.39,57.39,0,0,0,12.75-9.73A63.39,63.39,0,0,0,632.45,675a55.39,55.39,0,0,0,5.67-15,95.36,95.36,0,0,0,2.15-16c.3-5.37.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.32-.34-5.4-.58-10.81-.49-16.23,0-2.71.18-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8,33.84,33.84,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,21.39,21.39,0,0,1,3.38-2.37,23.54,23.54,0,0,1,3.77-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.72-.14,4.08-.13.68,0,1.36,0,2,0l1,0,1,.05c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52q3.9,1.15,7.72,2.54c2.54.91,5.07,1.9,7.56,2.94,5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88t13.37,9.17q13.24,9.35,26,19.36t24.89,20.78c8.08,7.17,15.93,14.62,23.42,22.42,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.3,10.81-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.18,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19,0c2.69-.1,5.39-.29,8.06-.61a50.49,50.49,0,0,0,7.93-1.53,26.34,26.34,0,0,0,3.78-1.4,15,15,0,0,0,3.39-2.15,10.52,10.52,0,0,0,1.38-1.45l.15-.2.15-.2.14-.21.13-.21a7.36,7.36,0,0,0,.42-.9,7.23,7.23,0,0,0,.37-2,10.37,10.37,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.86-3.5-7.3-.58-1.23-1.14-2.46-1.63-3.72a17,17,0,0,1-1.11-3.91,5.83,5.83,0,0,1,.06-2,3.74,3.74,0,0,1,.37-1,3.66,3.66,0,0,1,.66-.8,9,9,0,0,1,3.58-1.89,16.12,16.12,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.19,53.84,53.84,0,0,1,7.95,1.61c2.6.71,5.17,1.56,7.71,2.5s5,2,7.51,3,4.91,2.24,7.32,3.47c1.2.61,2.4,1.24,3.58,1.89.59.33,1.18.67,1.76,1l.86.53.41.29.21.16c0,.07.14.08.16.24l-.08,0a.86.86,0,0,0-.14-.14,1.56,1.56,0,0,0-.2-.16c-.13-.1-.27-.19-.41-.28s-.57-.36-.86-.54c-.58-.34-1.16-.68-1.75-1-1.19-.65-2.38-1.28-3.58-1.89-2.41-1.22-4.86-2.37-7.33-3.45s-5-2.11-7.5-3-5.1-1.78-7.71-2.49a54.71,54.71,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.19,3.19,0,0,0-.35.92,5.72,5.72,0,0,0-.06,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.26,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.24,1.08,2.48,1.53,3.76a22.14,22.14,0,0,1,1,3.94,10.59,10.59,0,0,1,.1,2,6.63,6.63,0,0,1-.38,2,5.58,5.58,0,0,1-.43.93l-.13.22-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,15,15,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.22-10.81.15-16.21,0s-10.8-.46-16.19-.78l-16.17-1c-10.79-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.19.35-4.25.25-8.5.63-12.7,1.27,1.42,1.8,2.82,3.63,4.18,5.48A125.11,125.11,0,0,1,884,695.34a77,77,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.22.64-.47,1.28-.74,1.9-.14.32-.28.62-.44.94a9.18,9.18,0,0,1-.54.89A9.88,9.88,0,0,1,885,733a13.68,13.68,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.44,27.44,0,0,1-8.07-1.1,40.79,40.79,0,0,1-7.55-3c-1.21-.63-2.39-1.3-3.54-2l-.86-.54c-.29-.18-.56-.38-.84-.57-.57-.37-1.12-.78-1.67-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.37-.35c-.25-.23-.5-.46-.74-.7l-.73-.71c-.24-.24-.47-.49-.7-.74a41.81,41.81,0,0,1-5-6.4,38.14,38.14,0,0,1-3.61-7.3,30.75,30.75,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.36,17.36,0,0,1,0-2,13.9,13.9,0,0,1,.28-2,15.72,15.72,0,0,1,1.34-3.87,14.86,14.86,0,0,1,1-1.76,15.21,15.21,0,0,1,1.24-1.63,21.83,21.83,0,0,1,2.93-2.84,34.07,34.07,0,0,1,6.95-4.23,56.19,56.19,0,0,1,7.62-2.82,79.53,79.53,0,0,1,7.9-1.88c.83-.16,1.67-.3,2.5-.43-5.13-6.45-10.63-12.61-16.34-18.55-7.48-7.79-15.33-15.21-23.41-22.37S813.91,621,805.42,614.35s-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.55-8.85c-9.12-5.79-18.4-11.32-28-16.23-4.8-2.46-9.69-4.75-14.66-6.82-2.49-1-5-2-7.54-2.92s-5.09-1.76-7.67-2.52a112.09,112.09,0,0,0-15.75-3.47c-2.67-.37-5.34-.66-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,22.59,22.59,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.55,21.55,0,0,0-4.89,6.2,32.58,32.58,0,0,0-2.79,7.47,55.48,55.48,0,0,0-1.33,7.92c-.27,2.67-.4,5.35-.45,8-.08,5.39.17,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.19,5.41.21,10.83-.1,16.24A95.13,95.13,0,0,1,639,660.24a56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.63.8c-.43.53-.88,1-1.31,1.56l-.68.76c-.23.25-.45.51-.69.76-.47.49-.93,1-1.41,1.47a58.6,58.6,0,0,1-12.95,9.84,63.59,63.59,0,0,1-15.1,6,77.9,77.9,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.56,123.56,0,0,1-16-2.93c-1-.24-1.89-.49-2.84-.75Zm323.24-25c-2.65.5-5.27,1.12-7.86,1.88a54.33,54.33,0,0,0-7.55,2.82,32.86,32.86,0,0,0-6.86,4.18,18.85,18.85,0,0,0-5.1,6.1,14.72,14.72,0,0,0-1.31,3.76,14.49,14.49,0,0,0-.26,2,14.69,14.69,0,0,0,0,2,23,23,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.25.46.5.7.73l.72.71.73.69.37.34.38.33c1,.9,2.06,1.73,3.14,2.54.54.39,1.08.79,1.64,1.16l.84.56.85.54c1.14.71,2.31,1.37,3.51,2a40.08,40.08,0,0,0,7.46,3,27.28,27.28,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.37,13.37,0,0,0,3.68-1.47,9.26,9.26,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.49,24.49,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.62,74.62,0,0,0-3.53-7.25,126.66,126.66,0,0,0-8.79-13.56q-2.15-2.89-4.38-5.71C869.42,676.49,868.52,676.64,867.62,676.81Z"/><polygon class="cls-3" points="870.98 676.23 870.71 675.9 870.07 676.02 870.34 676.35 870.98 676.23"/></g><g class="cls-1"><path class="cls-134" d="M542.74,706c.92.25,1.85.49,2.78.72a124.28,124.28,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,63.47,63.47,0,0,0,14.9-6,60.36,60.36,0,0,0,6.72-4.42,58.63,58.63,0,0,0,6-5.32,63.28,63.28,0,0,0,9.72-12.77,55.13,55.13,0,0,0,5.67-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.33-.33-5.39-.57-10.8-.49-16.22.05-2.71.18-5.42.46-8.13a55.11,55.11,0,0,1,1.36-8,33.46,33.46,0,0,1,2.87-7.67,22.25,22.25,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32.43,32.43,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.1.81A111.41,111.41,0,0,1,693.24,552c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,3c5,2.09,9.89,4.4,14.7,6.87,9.63,4.94,18.93,10.49,28,16.29q6.84,4.36,13.57,8.89c4.48,3,8.95,6.05,13.36,9.17q13.24,9.35,26,19.36t24.89,20.77c8.08,7.18,15.94,14.63,23.42,22.43,5.79,6,11.36,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.39-.31,10.8-.38,16.21-.32,10.8.11,21.6.72,32.38,1.39l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.61a51,51,0,0,0,7.93-1.54,25.08,25.08,0,0,0,3.77-1.4,14.71,14.71,0,0,0,3.39-2.14,10,10,0,0,0,1.38-1.45l.16-.2.14-.21.14-.2.13-.21a5.24,5.24,0,0,0,.42-.9,6.87,6.87,0,0,0,.37-2,11.13,11.13,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71a17.1,17.1,0,0,1-1.1-3.91,5.83,5.83,0,0,1,0-2,3.32,3.32,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.57-1.9,16.6,16.6,0,0,1,4-.57,30.59,30.59,0,0,1,4.06.2,53.68,53.68,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3,4.91,2.25,7.32,3.47c1.21.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.42.29.2.16c.06.07.15.08.16.24l-.08,0a.79.79,0,0,0-.14-.15l-.19-.15-.42-.28c-.28-.19-.57-.37-.86-.54-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.52,52.52,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.14,16.14,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,3.08,3.08,0,0,0-.63.76,3.24,3.24,0,0,0-.35.91,5.54,5.54,0,0,0,0,2,17.41,17.41,0,0,0,1.09,3.87c.5,1.25,1.06,2.48,1.64,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,11.63,11.63,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,5.37,5.37,0,0,1-.44.94c0,.07-.09.14-.13.22l-.14.21-.15.21-.16.2a9.81,9.81,0,0,1-1.4,1.48,15.06,15.06,0,0,1-3.44,2.18,25.51,25.51,0,0,1-3.8,1.42,50.42,50.42,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.21-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.4,0-10.8,0-16.18.34-4.26.25-8.5.63-12.71,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.84,126.84,0,0,1,8.82,13.63,75.79,75.79,0,0,1,3.55,7.31,50.69,50.69,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.28.62-.44.93a8.24,8.24,0,0,1-.54.9,9.77,9.77,0,0,1-3.06,2.77,13.87,13.87,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3q-1.81-.93-3.54-2l-.86-.55-.84-.56c-.57-.38-1.11-.78-1.66-1.18-1.09-.81-2.15-1.65-3.16-2.56l-.39-.34-.37-.34c-.25-.24-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.49-.71-.73a42.52,42.52,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4.05,17.53,17.53,0,0,1,0-2,15.48,15.48,0,0,1,.28-2,15.2,15.2,0,0,1,1.35-3.87,17.23,17.23,0,0,1,2.28-3.4,21.26,21.26,0,0,1,2.94-2.83,33.37,33.37,0,0,1,6.95-4.23,56.11,56.11,0,0,1,7.61-2.83,79.49,79.49,0,0,1,7.9-1.87c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.2-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.1-26-19.31q-6.62-4.66-13.36-9.15t-13.56-8.86c-9.11-5.78-18.4-11.31-28-16.22-4.8-2.46-9.68-4.75-14.66-6.83-2.49-1-5-2-7.53-2.92s-5.1-1.75-7.68-2.51a111.78,111.78,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.82,1.57,21.74,21.74,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.37,21.37,0,0,0-4.9,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.77.49,16.16.67,10.77,1.7,21.53,2.07,32.35.19,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,55.86,55.86,0,0,1-5.78,15.21,68.8,68.8,0,0,1-4.53,6.77c-.2.28-.41.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.69.75-.47.49-.92,1-1.41,1.47a59.14,59.14,0,0,1-6.13,5.38,60.07,60.07,0,0,1-6.82,4.46,63.3,63.3,0,0,1-15.09,6,78.09,78.09,0,0,1-16.08,2.4,100,100,0,0,1-16.23-.59,123.87,123.87,0,0,1-16-2.93l-2.86-.75Zm323.26-25c-2.64.5-5.27,1.12-7.85,1.88a54.89,54.89,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19.08,19.08,0,0,0-5.1,6.1,15.31,15.31,0,0,0-1.3,3.77,14.58,14.58,0,0,0-.27,2,16.68,16.68,0,0,0,0,2,24.16,24.16,0,0,0,.55,4,32.2,32.2,0,0,0,1.13,3.86,37.47,37.47,0,0,0,3.58,7.2,40.93,40.93,0,0,0,5,6.33c.23.24.45.49.7.73l.71.71.74.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.54.39,1.08.8,1.65,1.17.28.18.55.38.83.55l.86.54c1.13.72,2.3,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.93,18.93,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.34,9.34,0,0,0,2.89-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.24,50.24,0,0,0-2.55-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55q-2.15-2.89-4.38-5.71C867.81,680.72,866.9,680.88,866,681.05Z"/><polygon class="cls-3" points="869.36 680.47 869.1 680.13 868.45 680.25 868.72 680.59 869.36 680.47"/></g><g class="cls-1"><path class="cls-135" d="M541.12,710.17l2.82.73a124.57,124.57,0,0,0,15.89,2.88,99.82,99.82,0,0,0,16.12.56,77.73,77.73,0,0,0,15.92-2.4,63.4,63.4,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63.2,63.2,0,0,0,9.72-12.77,55.25,55.25,0,0,0,5.67-15,94.08,94.08,0,0,0,2.15-16c.31-5.38.28-10.77.1-16.16-.38-10.78-1.42-21.54-2.1-32.33-.33-5.39-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a58.08,58.08,0,0,1,1.36-8,33.59,33.59,0,0,1,2.88-7.66,22.12,22.12,0,0,1,5.09-6.44,20.83,20.83,0,0,1,3.39-2.37,22.59,22.59,0,0,1,3.76-1.68,31.63,31.63,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.35,0,2,0l1,0,1,.05c2.71.15,5.41.43,8.09.81a114.22,114.22,0,0,1,15.86,3.52c2.6.77,5.18,1.62,7.72,2.54s5.07,1.9,7.57,2.95c5,2.08,9.89,4.39,14.71,6.86,9.63,4.94,18.92,10.5,28,16.3q6.84,4.35,13.56,8.88t13.37,9.18q13.25,9.35,26,19.36T827.53,643c8.08,7.18,15.93,14.62,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.3,5.4-.3,10.8-.37,16.21-.32,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.79.62,16.18.81s10.8.26,16.19.05c2.7-.11,5.39-.3,8.07-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,9.54,9.54,0,0,0,1.39-1.45l.15-.19.14-.21.14-.21a2.39,2.39,0,0,0,.13-.21,4.92,4.92,0,0,0,.42-.9,6.48,6.48,0,0,0,.37-2,10.28,10.28,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.51-7.3-.58-1.22-1.14-2.45-1.63-3.71a17.62,17.62,0,0,1-1.1-3.91,5.89,5.89,0,0,1,.06-2.05,3.41,3.41,0,0,1,.37-1,3,3,0,0,1,.66-.79,8.86,8.86,0,0,1,3.58-1.9,16.53,16.53,0,0,1,4-.57,27.41,27.41,0,0,1,4,.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.5s5,2,7.51,3,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.17.66,1.75,1,.29.17.58.35.86.54l.42.29.2.15c.06.08.15.08.17.25l-.08,0-.14-.14-.2-.15-.42-.29c-.28-.18-.56-.36-.85-.53-.58-.35-1.17-.68-1.76-1-1.18-.66-2.37-1.28-3.58-1.89q-3.61-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.77-7.7-2.48a52.28,52.28,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.73,8.73,0,0,0-3.52,1.86,3.23,3.23,0,0,0-.62.76,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0-.05,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1.05,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.27,20.27,0,0,1,1,3.93,10.7,10.7,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6,6,0,0,1-.43.93l-.14.22-.14.21-.15.22-.15.2a11,11,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.39.51-8.09.62-5.4.22-10.81.15-16.21,0s-10.79-.47-16.18-.79l-16.18-1c-10.78-.66-21.57-1.25-32.37-1.35-5.39,0-10.79,0-16.18.34-4.25.25-8.5.63-12.71,1.27,1.43,1.81,2.82,3.63,4.19,5.48a126.75,126.75,0,0,1,8.81,13.63,72.46,72.46,0,0,1,3.55,7.31,50.94,50.94,0,0,1,2.58,7.71,34.41,34.41,0,0,1,1,8.09,25.31,25.31,0,0,1-1.31,8c-.22.65-.46,1.28-.74,1.91-.14.31-.27.62-.43.93a8.84,8.84,0,0,1-.55.89,9.77,9.77,0,0,1-3,2.78,14.32,14.32,0,0,1-3.82,1.52,19.3,19.3,0,0,1-4.07.51,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.56-.37-1.11-.78-1.66-1.17-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.38-.35-.74-.69-.72-.72c-.25-.24-.47-.49-.71-.73a43.17,43.17,0,0,1-5-6.41,37.72,37.72,0,0,1-3.6-7.29,31.43,31.43,0,0,1-1.15-3.92,23,23,0,0,1-.55-4,15.51,15.51,0,0,1,1.64-8,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.33,33.33,0,0,1,7-4.22,55.75,55.75,0,0,1,7.62-2.83c2.6-.76,5.23-1.38,7.89-1.88.84-.15,1.67-.3,2.51-.43-5.14-6.45-10.64-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.39-14-24.88-20.72-17.18-13.1-26-19.32q-6.63-4.65-13.37-9.14t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.23-4.8-2.45-9.68-4.75-14.66-6.82q-3.72-1.56-7.53-2.92c-2.54-.91-5.09-1.76-7.68-2.51a111.51,111.51,0,0,0-15.75-3.48c-2.66-.37-5.34-.65-8-.79l-1-.05-1,0c-.68,0-1.35,0-2,0-1.34,0-2.68,0-4,.14a31.29,31.29,0,0,0-7.81,1.56,23.62,23.62,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.51,21.51,0,0,0-4.89,6.2,32.75,32.75,0,0,0-2.79,7.47,55.5,55.5,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.38.16,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.4.21,10.82-.1,16.24a96.43,96.43,0,0,1-2.18,16.11,56,56,0,0,1-5.79,15.2,68.36,68.36,0,0,1-4.53,6.78l-.62.81-.64.79c-.43.53-.87,1-1.31,1.57l-.68.76c-.22.25-.45.51-.68.75-.47.49-.93,1-1.42,1.47a58.85,58.85,0,0,1-12.94,9.84,64.39,64.39,0,0,1-15.1,6,78.68,78.68,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94c-1-.24-1.94-.5-2.9-.76Zm323.31-24.94a78.08,78.08,0,0,0-7.86,1.87,56.26,56.26,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,18.93,18.93,0,0,0-5.09,6.1,14.86,14.86,0,0,0-1.31,3.76,15.33,15.33,0,0,0-.28,4,22.31,22.31,0,0,0,.55,4,30.32,30.32,0,0,0,1.13,3.85,36.86,36.86,0,0,0,3.57,7.2,42.26,42.26,0,0,0,5,6.34c.23.24.46.49.7.72l.72.71c.24.24.49.46.73.69l.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.5,39.5,0,0,0,7.47,3,26.94,26.94,0,0,0,7.92,1.08,18.75,18.75,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63c.18-.27.35-.55.51-.83s.28-.6.42-.91c.27-.61.5-1.23.72-1.86a24.6,24.6,0,0,0,1.27-7.89,33.37,33.37,0,0,0-1-8,51.53,51.53,0,0,0-2.56-7.64A75.84,75.84,0,0,0,880.3,704a125.14,125.14,0,0,0-8.79-13.56q-2.13-2.9-4.37-5.71C866.23,684.9,865.33,685.06,864.43,685.23Z"/><polygon class="cls-3" points="867.78 684.64 867.52 684.31 866.88 684.43 867.14 684.76 867.78 684.64"/></g><g class="cls-1"><path class="cls-136" d="M539.43,714.55c.94.25,1.88.5,2.83.73a124.28,124.28,0,0,0,15.89,2.89,101,101,0,0,0,16.12.56,77.85,77.85,0,0,0,15.92-2.41,62.87,62.87,0,0,0,14.9-6,57.39,57.39,0,0,0,12.76-9.74,63.28,63.28,0,0,0,9.72-12.77,55.18,55.18,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.38.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.13a56.49,56.49,0,0,1,1.36-8,33.81,33.81,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.15,4.09-.14.67,0,1.35,0,2,0l1,0,1,.06c2.71.14,5.41.43,8.1.81A111.41,111.41,0,0,1,690,560.57c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.57,2.95c5,2.09,9.89,4.4,14.71,6.87,9.62,4.94,18.92,10.49,28,16.29q6.83,4.37,13.56,8.89c4.49,3,8.95,6,13.36,9.17q13.24,9.35,26,19.36t24.9,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.62-1,13-1.29,5.4-.31,10.8-.38,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.78.62,16.18.8s10.8.26,16.19.05c2.7-.11,5.39-.29,8.07-.61a51,51,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,14.87,14.87,0,0,0,3.38-2.14,9.45,9.45,0,0,0,1.38-1.45l.16-.2.14-.21.14-.2.13-.21a5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.32,10.32,0,0,0-.1-2,20.33,20.33,0,0,0-1-3.9c-.44-1.27-1-2.51-1.52-3.74-1.1-2.46-2.34-4.86-3.5-7.31-.58-1.22-1.14-2.45-1.63-3.71A17.1,17.1,0,0,1,993,655a5.83,5.83,0,0,1,0-2,3.32,3.32,0,0,1,.38-1,3.17,3.17,0,0,1,.66-.8,9,9,0,0,1,3.58-1.9,16.45,16.45,0,0,1,4-.57,30.59,30.59,0,0,1,4.06.2,53.43,53.43,0,0,1,7.94,1.6c2.61.72,5.18,1.57,7.71,2.51s5,2,7.51,3,4.92,2.24,7.32,3.46c1.21.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.42.29a1.56,1.56,0,0,1,.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16-.42-.28c-.28-.19-.57-.37-.86-.54-.57-.35-1.16-.68-1.75-1-1.18-.65-2.38-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.48-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.28,52.28,0,0,0-7.93-1.59,28.62,28.62,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.81,8.81,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,3,3,0,0,0-.36.91,5.78,5.78,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.23,1.08,2.48,1.53,3.76a20.65,20.65,0,0,1,1,3.93,10.74,10.74,0,0,1,.11,2,7.22,7.22,0,0,1-.38,2,6.16,6.16,0,0,1-.43.94l-.14.22-.14.21-.15.21-.16.2a9.81,9.81,0,0,1-1.4,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.14-16.21,0s-10.79-.47-16.19-.78l-16.17-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.8,0-16.18.35-4.25.24-8.5.62-12.71,1.27q2.13,2.7,4.19,5.47a128.3,128.3,0,0,1,8.81,13.63,75.79,75.79,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08,25.27,25.27,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.44.93a8.24,8.24,0,0,1-.54.9,9.77,9.77,0,0,1-3.06,2.77,13.5,13.5,0,0,1-3.81,1.52,19.3,19.3,0,0,1-4.07.51,27.54,27.54,0,0,1-8.07-1.11,39.44,39.44,0,0,1-7.55-3c-1.21-.62-2.39-1.29-3.53-2l-.86-.55c-.29-.18-.57-.37-.85-.56-.57-.38-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.39-.34-.37-.34c-.24-.23-.5-.46-.74-.7l-.72-.72c-.25-.23-.47-.48-.71-.73a43.17,43.17,0,0,1-5-6.41,37.16,37.16,0,0,1-3.6-7.29,31.28,31.28,0,0,1-1.15-3.91,23.93,23.93,0,0,1-.56-4,17.43,17.43,0,0,1,.3-4.08,15.2,15.2,0,0,1,1.35-3.87,17.44,17.44,0,0,1,1-1.77,19.44,19.44,0,0,1,1.24-1.63,21.26,21.26,0,0,1,2.94-2.83,33.8,33.8,0,0,1,6.95-4.23,54.76,54.76,0,0,1,7.61-2.82,79.53,79.53,0,0,1,7.9-1.88c.84-.16,1.67-.3,2.51-.44-5.14-6.44-10.64-12.6-16.35-18.55-7.48-7.78-15.33-15.2-23.4-22.37s-16.4-14-24.89-20.72-17.17-13.1-26-19.31q-6.62-4.67-13.36-9.15t-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.93s-5.09-1.75-7.68-2.51A111.48,111.48,0,0,0,674,557.88c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a31,31,0,0,0-7.82,1.57,22.11,22.11,0,0,0-3.62,1.62,20.26,20.26,0,0,0-3.24,2.27,21.17,21.17,0,0,0-4.89,6.19,32.49,32.49,0,0,0-2.8,7.47,57.17,57.17,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.7,21.54,2.08,32.35.18,5.41.2,10.83-.1,16.24A96.17,96.17,0,0,1,634.08,673a55.86,55.86,0,0,1-5.78,15.21,68.8,68.8,0,0,1-4.53,6.77c-.2.28-.41.54-.63.81l-.63.8-1.31,1.56-.68.76c-.23.25-.45.51-.68.75-.48.5-.93,1-1.42,1.47a59.14,59.14,0,0,1-6.13,5.38,60.85,60.85,0,0,1-6.81,4.46,63.54,63.54,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.14,100.14,0,0,1-16.24-.59,123.87,123.87,0,0,1-16-2.93c-1-.25-1.94-.5-2.91-.77Zm323.31-24.94c-2.64.5-5.27,1.12-7.85,1.88a56.21,56.21,0,0,0-7.56,2.81,33.83,33.83,0,0,0-6.86,4.18,19,19,0,0,0-5.1,6.11,15.09,15.09,0,0,0-1.3,3.76,14.58,14.58,0,0,0-.27,2,16.7,16.7,0,0,0,0,2,23.15,23.15,0,0,0,.56,4,28.9,28.9,0,0,0,1.13,3.86,36.85,36.85,0,0,0,3.57,7.2,41.55,41.55,0,0,0,5,6.33c.23.24.46.49.7.73l.71.71.74.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.08.8,1.65,1.17l.83.56.86.53c1.13.72,2.31,1.38,3.5,2a39.64,39.64,0,0,0,7.46,3,27,27,0,0,0,7.93,1.09,18.29,18.29,0,0,0,4-.51,13.47,13.47,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,8.85,8.85,0,0,0,.5-.84c.15-.29.29-.6.42-.9.27-.61.51-1.24.73-1.87a24.81,24.81,0,0,0,1.27-7.88,34,34,0,0,0-1-8,50.24,50.24,0,0,0-2.55-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55c-1.42-1.93-2.89-3.83-4.38-5.71C864.55,689.28,863.65,689.44,862.74,689.61Z"/><polygon class="cls-3" points="866.1 689.03 865.84 688.69 865.2 688.82 865.46 689.15 866.1 689.03"/></g><g class="cls-1"><path class="cls-137" d="M537.79,718.78l2.86.74a124.13,124.13,0,0,0,15.88,2.89,99.82,99.82,0,0,0,16.12.55,77.73,77.73,0,0,0,15.92-2.4,63,63,0,0,0,14.91-6,59.41,59.41,0,0,0,6.72-4.42,57.26,57.26,0,0,0,6-5.31A62.92,62.92,0,0,0,626,692.07a54.92,54.92,0,0,0,5.67-15,95.12,95.12,0,0,0,2.16-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.54-2.1-32.33-.33-5.39-.57-10.8-.48-16.22,0-2.71.18-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.11,22.11,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.61,32.61,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13l2,0,1,0,1,.05c2.71.15,5.41.43,8.09.82a111.85,111.85,0,0,1,15.87,3.52c2.6.76,5.17,1.61,7.71,2.53s5.08,1.9,7.57,2.95c5,2.08,9.9,4.39,14.71,6.86,9.63,4.94,18.92,10.5,28,16.3q6.84,4.37,13.56,8.88t13.37,9.18q13.24,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.62,23.42,22.43,5.78,6,11.36,12.3,16.56,18.86,4.29-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.79.62,16.18.81s10.8.26,16.2.05c2.69-.11,5.38-.3,8.06-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.84,14.84,0,0,0,3.39-2.15,10.44,10.44,0,0,0,1.38-1.44l.15-.2.14-.21.15-.2.12-.22a4.63,4.63,0,0,0,.42-.9,6.75,6.75,0,0,0,.38-2,11.13,11.13,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.52-1.52-3.75-1.11-2.46-2.35-4.86-3.5-7.3-.58-1.22-1.15-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.36,3.36,0,0,1,.37-1,3.12,3.12,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.2,53.81,53.81,0,0,1,7.95,1.6c2.6.72,5.17,1.57,7.7,2.5s5,2,7.51,3,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.18.66,1.75,1,.29.18.58.35.86.54a4.43,4.43,0,0,1,.42.29,1.56,1.56,0,0,1,.2.16c.06.07.15.07.17.24l-.08,0a.57.57,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.65,8.65,0,0,0-3.51,1.87,3,3,0,0,0-.63.75,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0,0,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.09,2.48,1.54,3.76a21,21,0,0,1,1,3.93,9.94,9.94,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.23,5.23,0,0,1-.43.93c0,.08-.09.15-.14.23l-.14.21-.15.21-.15.2a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.38.51-8.09.63-5.4.21-10.81.14-16.2,0s-10.8-.47-16.19-.79l-16.18-1c-10.78-.65-21.57-1.25-32.36-1.35-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.71,1.28q2.14,2.7,4.19,5.47a126.75,126.75,0,0,1,8.81,13.63,74.74,74.74,0,0,1,3.56,7.31,52,52,0,0,1,2.57,7.71,34,34,0,0,1,1,8.09,25,25,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.93s-.35.61-.54.89a9.91,9.91,0,0,1-3.06,2.78,14.32,14.32,0,0,1-3.82,1.52,19.21,19.21,0,0,1-4.07.51,27.43,27.43,0,0,1-8.06-1.11,40.2,40.2,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.38-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.37-.35-.75-.69-.72-.72c-.24-.23-.47-.49-.71-.73a42.45,42.45,0,0,1-5-6.41,38.34,38.34,0,0,1-3.61-7.29,31.74,31.74,0,0,1-1.14-3.91,23,23,0,0,1-.56-4,15.58,15.58,0,0,1,0-2.05,14,14,0,0,1,.28-2,15,15,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.76,33.76,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.31,2.5-.44-5.13-6.44-10.63-12.6-16.35-18.55-7.47-7.78-15.32-15.21-23.4-22.37s-16.39-14.05-24.88-20.72-17.17-13.1-26-19.31q-6.63-4.67-13.37-9.15T746,594.07c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.76-14.65-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.68-2.51a110.1,110.1,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1-.05-1,0-2,0c-1.34,0-2.68,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,24.06,24.06,0,0,0-3.63,1.62,21,21,0,0,0-3.24,2.28,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,56.94,56.94,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,56,56,0,0,1-5.79,15.2,67.21,67.21,0,0,1-4.53,6.78c-.2.28-.41.54-.62.81l-.64.8-1.31,1.56-.68.76c-.22.25-.44.51-.68.75-.47.49-.93,1-1.42,1.47a57.79,57.79,0,0,1-6.12,5.37,60.15,60.15,0,0,1-6.82,4.47,63.79,63.79,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.94c-1-.24-2-.5-2.94-.77Zm323.34-24.93a78.12,78.12,0,0,0-7.86,1.88,54.89,54.89,0,0,0-7.56,2.81,33.05,33.05,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,15.54,15.54,0,0,0-1.59,7.74,23.27,23.27,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.72.7c.24.24.49.46.73.69l.37.34.38.34c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a40.14,40.14,0,0,0,7.47,3,26.94,26.94,0,0,0,7.92,1.08,18.12,18.12,0,0,0,4-.5,13.07,13.07,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,7.67,7.67,0,0,0,.51-.83c.15-.29.28-.6.42-.9.27-.62.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.53,51.53,0,0,0-2.56-7.64,75.84,75.84,0,0,0-3.54-7.25,125,125,0,0,0-8.79-13.55c-1.42-1.93-2.88-3.84-4.37-5.71C862.93,693.52,862,693.68,861.13,693.85Z"/><polygon class="cls-3" points="864.49 693.27 864.22 692.93 863.58 693.05 863.85 693.38 864.49 693.27"/></g><g class="cls-1"><path class="cls-138" d="M536.17,723c1,.26,1.91.51,2.87.75a124.13,124.13,0,0,0,15.88,2.89,99.82,99.82,0,0,0,16.12.55,77.73,77.73,0,0,0,15.92-2.4,63,63,0,0,0,14.91-6,59.41,59.41,0,0,0,6.72-4.42,57.26,57.26,0,0,0,6-5.31,62.92,62.92,0,0,0,9.72-12.77,54.92,54.92,0,0,0,5.67-15,95.12,95.12,0,0,0,2.16-16c.3-5.38.27-10.77.09-16.16-.38-10.78-1.42-21.53-2.1-32.33-.33-5.39-.57-10.8-.48-16.22,0-2.71.18-5.43.45-8.13a57.69,57.69,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.11,22.11,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.61,32.61,0,0,1,8-1.61c1.36-.1,2.73-.14,4.09-.13.68,0,1.36,0,2,.05l1,0,1,0c2.71.15,5.41.44,8.09.82A111.85,111.85,0,0,1,686.76,569c2.6.76,5.17,1.61,7.71,2.53s5.08,1.9,7.57,3c5,2.08,9.9,4.39,14.71,6.87,9.63,4.93,18.92,10.49,28,16.29q6.84,4.36,13.56,8.88t13.37,9.18q13.24,9.34,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.41,22.43,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1.05,13-1.29,5.4-.31,10.81-.38,16.21-.33,10.81.12,21.6.73,32.38,1.4l16.17,1c5.39.33,10.79.62,16.18.81s10.8.26,16.19,0c2.7-.11,5.39-.29,8.07-.62a49.58,49.58,0,0,0,7.93-1.53,25.6,25.6,0,0,0,3.78-1.4,14.84,14.84,0,0,0,3.39-2.15,10.44,10.44,0,0,0,1.38-1.44l.15-.2.14-.21.15-.2.12-.22a4.63,4.63,0,0,0,.42-.9,6.75,6.75,0,0,0,.38-1.95,11.13,11.13,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.47-2.35-4.87-3.51-7.31-.57-1.22-1.14-2.45-1.63-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.36,3.36,0,0,1,.37-1,3.12,3.12,0,0,1,.66-.79,9,9,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,28.84,28.84,0,0,1,4.05.2,53.81,53.81,0,0,1,7.95,1.6c2.6.72,5.17,1.57,7.7,2.5s5,2,7.51,3.05,4.92,2.25,7.33,3.47c1.2.61,2.4,1.24,3.58,1.9.59.33,1.17.66,1.75,1,.29.18.58.35.86.54a4.43,4.43,0,0,1,.42.29,1.56,1.56,0,0,1,.2.16c.06.07.15.07.17.24l-.08,0a.57.57,0,0,0-.14-.15l-.2-.15-.41-.29-.86-.53c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.46c-2.47-1.08-5-2.1-7.51-3s-5.1-1.78-7.7-2.49a52.4,52.4,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.77,8.77,0,0,0-3.51,1.87,3,3,0,0,0-.63.75,3.45,3.45,0,0,0-.36.92,5.78,5.78,0,0,0-.05,2,17.06,17.06,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.43,2.4,4.83,3.51,7.3.56,1.23,1.09,2.48,1.54,3.76a21,21,0,0,1,1,3.93,9.94,9.94,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,5.68,5.68,0,0,1-.43.94l-.14.22-.14.21-.15.21-.15.2a10.38,10.38,0,0,1-1.41,1.48,15.21,15.21,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.69.32-5.39.52-8.09.63-5.4.21-10.81.14-16.21,0s-10.79-.47-16.18-.79l-16.18-1c-10.78-.65-21.57-1.25-32.36-1.35-5.4-.05-10.8,0-16.19.34-4.25.25-8.5.63-12.71,1.28,1.43,1.8,2.82,3.62,4.19,5.47a126.75,126.75,0,0,1,8.81,13.63,75.87,75.87,0,0,1,3.56,7.31,51.77,51.77,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.31,8c-.22.65-.46,1.29-.74,1.91-.14.31-.27.62-.43.93a10.3,10.3,0,0,1-.55.9,9.86,9.86,0,0,1-3.05,2.77,14.32,14.32,0,0,1-3.82,1.52,19.21,19.21,0,0,1-4.07.51,27.43,27.43,0,0,1-8.06-1.11,40.2,40.2,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.38-.85-.56-.56-.38-1.11-.78-1.66-1.18-1.08-.82-2.15-1.66-3.16-2.56l-.38-.34-.37-.34-.75-.7-.72-.72c-.24-.23-.47-.49-.71-.73a42.45,42.45,0,0,1-5-6.41,38.05,38.05,0,0,1-3.61-7.29,33.63,33.63,0,0,1-1.15-3.91,23.91,23.91,0,0,1-.55-4,15.58,15.58,0,0,1,0-2,14,14,0,0,1,.28-2,15,15,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77,17.93,17.93,0,0,1,1.24-1.63,22.54,22.54,0,0,1,2.94-2.84,33.76,33.76,0,0,1,6.95-4.22,55.75,55.75,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.35-18.55-7.48-7.78-15.32-15.21-23.4-22.37s-16.39-14-24.88-20.72-17.18-13.1-26-19.31q-6.63-4.66-13.37-9.15t-13.56-8.86c-9.11-5.78-18.39-11.31-28-16.22-4.8-2.46-9.68-4.76-14.65-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.68-2.51a110.1,110.1,0,0,0-15.75-3.47c-2.66-.38-5.34-.66-8-.8l-1,0-1,0-2,0c-1.34,0-2.68,0-4,.14a31.38,31.38,0,0,0-7.81,1.56,22.74,22.74,0,0,0-3.63,1.63A20.26,20.26,0,0,0,640,571a21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,57.2,57.2,0,0,0-1.34,7.92c-.27,2.67-.4,5.36-.44,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.18,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,56,56,0,0,1-5.79,15.2,67.21,67.21,0,0,1-4.53,6.78c-.2.28-.41.54-.62.81l-.64.8L618,706.61l-.68.76c-.22.25-.44.51-.68.75-.47.49-.93,1-1.42,1.47a58.23,58.23,0,0,1-12.94,9.84,63.79,63.79,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,101.12,101.12,0,0,1-16.23-.59,125,125,0,0,1-16-2.93c-1-.25-2-.51-3-.78ZM859.52,698a78.12,78.12,0,0,0-7.86,1.88,54.89,54.89,0,0,0-7.56,2.81,33.49,33.49,0,0,0-6.85,4.18,19,19,0,0,0-5.1,6.1,14.86,14.86,0,0,0-1.31,3.76,15.33,15.33,0,0,0-.28,4,23.27,23.27,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.23.24.46.49.7.73l.72.7c.24.24.49.46.73.69l.37.35.38.33c1,.89,2.06,1.72,3.13,2.53.55.39,1.09.79,1.65,1.16.28.19.55.38.84.56l.85.54c1.14.72,2.31,1.38,3.5,2a39.46,39.46,0,0,0,7.47,3,27.29,27.29,0,0,0,7.92,1.09,18.76,18.76,0,0,0,4-.51,13.07,13.07,0,0,0,3.68-1.47,9.24,9.24,0,0,0,2.9-2.63,7.67,7.67,0,0,0,.51-.83c.15-.29.28-.6.42-.9.27-.62.5-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51,51,0,0,0-2.56-7.63,76,76,0,0,0-3.54-7.26,125,125,0,0,0-8.79-13.55q-2.13-2.89-4.37-5.71C861.32,697.7,860.42,697.86,859.52,698Z"/><polygon class="cls-3" points="862.88 697.45 862.61 697.11 861.97 697.23 862.24 697.57 862.88 697.45"/></g><g class="cls-1"><path class="cls-139" d="M534.47,727.33l2.88.75A124.6,124.6,0,0,0,553.24,731a99.82,99.82,0,0,0,16.12.56,77.75,77.75,0,0,0,15.92-2.41,62.94,62.94,0,0,0,14.91-6,59.75,59.75,0,0,0,6.71-4.42,58.68,58.68,0,0,0,6-5.31,63,63,0,0,0,9.72-12.78,55.06,55.06,0,0,0,5.67-15,94.33,94.33,0,0,0,2.15-16c.31-5.37.28-10.77.09-16.16-.37-10.78-1.41-21.53-2.09-32.32-.33-5.4-.57-10.81-.48-16.23,0-2.71.17-5.42.45-8.12a57.83,57.83,0,0,1,1.36-8.05,34.29,34.29,0,0,1,2.87-7.67,22.59,22.59,0,0,1,5.1-6.44,21.47,21.47,0,0,1,3.39-2.37,23.44,23.44,0,0,1,3.76-1.68,32,32,0,0,1,8-1.6c1.36-.11,2.73-.14,4.09-.13.68,0,1.35,0,2,0l1,0,1,0c2.71.14,5.41.43,8.09.81a111.41,111.41,0,0,1,15.86,3.52q3.9,1.15,7.72,2.54c2.55.91,5.07,1.9,7.57,2.94,5,2.09,9.89,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.3q6.84,4.35,13.56,8.88T770,620.07q13.25,9.36,26,19.36t24.9,20.78c8.08,7.17,15.93,14.62,23.41,22.42,5.79,6,11.37,12.3,16.57,18.86,4.29-.66,8.63-1,13-1.29,5.4-.3,10.8-.37,16.21-.32,10.81.11,21.6.72,32.38,1.4l16.17,1c5.39.32,10.79.62,16.18.8s10.8.26,16.19,0c2.7-.1,5.39-.29,8.07-.61A50.71,50.71,0,0,0,987,701a26.79,26.79,0,0,0,3.78-1.4,14.91,14.91,0,0,0,3.38-2.15,10,10,0,0,0,1.39-1.45l.15-.2.14-.2.14-.21a2.39,2.39,0,0,0,.13-.21,5.24,5.24,0,0,0,.42-.9,6.54,6.54,0,0,0,.37-2,10.36,10.36,0,0,0-.1-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.35-4.86-3.51-7.3-.58-1.22-1.14-2.46-1.63-3.72a17.47,17.47,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.41,3.41,0,0,1,.37-1,3.17,3.17,0,0,1,.66-.8,8.84,8.84,0,0,1,3.58-1.89,16.05,16.05,0,0,1,4-.57,28.84,28.84,0,0,1,4,.19,53.45,53.45,0,0,1,7.94,1.61c2.61.71,5.18,1.56,7.71,2.5s5,2,7.51,3.05,4.92,2.24,7.33,3.47c1.2.61,2.39,1.24,3.58,1.89.59.33,1.17.67,1.75,1l.86.53.42.29.2.16c.06.07.15.08.17.24l-.08,0-.14-.14-.2-.16-.42-.28c-.28-.19-.56-.36-.85-.54l-1.76-1c-1.18-.65-2.37-1.28-3.58-1.89q-3.62-1.83-7.32-3.45c-2.47-1.09-5-2.11-7.51-3s-5.1-1.78-7.7-2.49a54.84,54.84,0,0,0-7.93-1.59,28.55,28.55,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.88,8.88,0,0,0-3.52,1.87,2.83,2.83,0,0,0-.62.76,2.94,2.94,0,0,0-.36.92,5.72,5.72,0,0,0,0,2,16.92,16.92,0,0,0,1.1,3.87c.49,1.26,1.05,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.51,7.3.56,1.24,1.08,2.48,1.53,3.76a20.56,20.56,0,0,1,1,3.94,10.59,10.59,0,0,1,.11,2,6.94,6.94,0,0,1-.38,2,6.52,6.52,0,0,1-.43.93l-.14.22-.14.21-.15.21-.15.2a10.41,10.41,0,0,1-1.41,1.48,15.25,15.25,0,0,1-3.43,2.19,26,26,0,0,1-3.81,1.41,50.2,50.2,0,0,1-8,1.55c-2.69.33-5.39.52-8.09.63-5.4.22-10.81.15-16.21,0s-10.79-.46-16.18-.78l-16.18-1c-10.78-.66-21.57-1.26-32.37-1.36-5.39,0-10.79,0-16.18.35-4.25.25-8.5.63-12.71,1.27,1.43,1.8,2.82,3.63,4.19,5.48a126.62,126.62,0,0,1,8.81,13.62,76.94,76.94,0,0,1,3.55,7.31,51.06,51.06,0,0,1,2.58,7.72,34.32,34.32,0,0,1,1,8.08A25.33,25.33,0,0,1,880,752.1c-.22.64-.46,1.28-.74,1.9-.14.32-.27.62-.43.94s-.35.6-.55.89a9.84,9.84,0,0,1-3,2.77,13.68,13.68,0,0,1-3.82,1.52,20,20,0,0,1-4.07.52,27.88,27.88,0,0,1-8.07-1.11,40.79,40.79,0,0,1-7.55-3c-1.2-.63-2.39-1.3-3.53-2l-.86-.54c-.29-.18-.57-.38-.85-.57-.56-.37-1.11-.78-1.66-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.33-.38-.35c-.24-.23-.5-.46-.74-.7l-.72-.71c-.25-.24-.47-.49-.71-.74a43.09,43.09,0,0,1-5-6.4,37.52,37.52,0,0,1-3.6-7.3,30.79,30.79,0,0,1-1.15-3.91,23,23,0,0,1-.55-4,15.57,15.57,0,0,1,0-2,15.39,15.39,0,0,1,.27-2,15.74,15.74,0,0,1,1.35-3.87,16.27,16.27,0,0,1,1-1.76,16.64,16.64,0,0,1,1.24-1.63A21.91,21.91,0,0,1,835.3,711a33.8,33.8,0,0,1,7-4.23,55.7,55.7,0,0,1,7.62-2.82,78.69,78.69,0,0,1,7.89-1.88c.84-.16,1.67-.3,2.51-.43-5.14-6.45-10.64-12.61-16.35-18.55-7.48-7.79-15.32-15.21-23.4-22.37s-16.4-14.06-24.89-20.73-17.17-13.09-26-19.31c-4.42-3.11-8.88-6.14-13.37-9.15s-9-6-13.56-8.85c-9.11-5.79-18.39-11.32-28-16.23-4.8-2.46-9.68-4.75-14.66-6.82-2.48-1-5-2-7.53-2.92s-5.09-1.76-7.68-2.52a111.48,111.48,0,0,0-15.75-3.47c-2.66-.37-5.34-.66-8-.79l-1-.06-1,0c-.67,0-1.34,0-2,0-1.34,0-2.68,0-4,.13a30.86,30.86,0,0,0-7.81,1.57,22.7,22.7,0,0,0-3.63,1.62,20.26,20.26,0,0,0-3.24,2.27,21.38,21.38,0,0,0-4.89,6.2,32.58,32.58,0,0,0-2.79,7.47,55.5,55.5,0,0,0-1.34,7.92c-.27,2.67-.4,5.35-.44,8-.09,5.39.16,10.78.49,16.16.67,10.77,1.71,21.54,2.08,32.35.18,5.41.21,10.83-.1,16.24a96.15,96.15,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,68.36,68.36,0,0,1-4.53,6.78c-.2.27-.41.54-.62.8l-.64.8c-.43.53-.87,1-1.31,1.56l-.68.76-.68.76c-.47.49-.93,1-1.42,1.47a58.85,58.85,0,0,1-12.94,9.84,63.93,63.93,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100.14,100.14,0,0,1-16.24-.59,123.41,123.41,0,0,1-16-2.93l-3-.78Zm323.37-24.92c-2.65.5-5.28,1.12-7.86,1.88a54.93,54.93,0,0,0-7.56,2.82,33.39,33.39,0,0,0-6.86,4.18,18.82,18.82,0,0,0-5.09,6.1,14.72,14.72,0,0,0-1.31,3.76,16.25,16.25,0,0,0-.27,2,16.52,16.52,0,0,0,0,2,22.06,22.06,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,37.42,37.42,0,0,0,3.57,7.2,42.78,42.78,0,0,0,5,6.34c.23.24.46.49.7.72l.71.71.74.69.37.34.38.33c1,.9,2.06,1.73,3.13,2.54.55.39,1.09.79,1.65,1.16.28.18.55.38.84.56l.85.54c1.14.71,2.31,1.37,3.5,2a40.17,40.17,0,0,0,7.47,3,27.23,27.23,0,0,0,7.92,1.08,18.83,18.83,0,0,0,4-.5,13.5,13.5,0,0,0,3.68-1.47,9.37,9.37,0,0,0,2.9-2.63q.27-.4.51-.84l.42-.9c.27-.61.5-1.24.72-1.87a24.77,24.77,0,0,0,1.27-7.88,34,34,0,0,0-1-8,51.8,51.8,0,0,0-2.56-7.63,74.7,74.7,0,0,0-3.54-7.25,125.14,125.14,0,0,0-8.79-13.56q-2.13-2.89-4.38-5.71C859.64,702.09,858.74,702.24,857.84,702.41Z"/><polygon class="cls-3" points="861.19 701.83 860.93 701.5 860.29 701.62 860.55 701.95 861.19 701.83"/></g><g class="cls-1"><path class="cls-140" d="M532.83,731.57l2.91.75a124,124,0,0,0,15.89,2.89,100.94,100.94,0,0,0,16.12.56,77.65,77.65,0,0,0,15.91-2.41,63.37,63.37,0,0,0,14.91-6,62.27,62.27,0,0,0,6.72-4.42,58.52,58.52,0,0,0,6-5.32A62.92,62.92,0,0,0,621,704.87a55.15,55.15,0,0,0,5.68-15,95.1,95.1,0,0,0,2.15-16c.3-5.38.28-10.77.09-16.16-.38-10.78-1.42-21.53-2.09-32.33-.34-5.39-.58-10.8-.49-16.22,0-2.71.18-5.42.45-8.13a57.94,57.94,0,0,1,1.36-8,33.49,33.49,0,0,1,2.88-7.67,22.25,22.25,0,0,1,5.1-6.44,20.94,20.94,0,0,1,3.38-2.37,23.84,23.84,0,0,1,3.76-1.68,32.59,32.59,0,0,1,8-1.61c1.36-.1,2.72-.14,4.08-.13.68,0,1.36,0,2,.05l1,0,1,.06c2.71.14,5.41.43,8.09.81a111.85,111.85,0,0,1,15.87,3.52c2.6.76,5.17,1.62,7.72,2.53s5.07,1.9,7.56,3c5,2.09,9.9,4.4,14.71,6.87,9.63,4.94,18.92,10.49,28,16.29q6.84,4.37,13.56,8.89c4.49,3,9,6.05,13.37,9.17q13.25,9.35,26,19.36t24.89,20.77c8.08,7.18,15.93,14.63,23.42,22.43,5.79,6,11.36,12.3,16.56,18.86,4.3-.66,8.63-1,13-1.29,5.4-.31,10.81-.38,16.21-.32,10.81.11,21.6.72,32.38,1.39l16.18,1c5.39.32,10.78.62,16.18.8s10.79.26,16.19,0c2.69-.11,5.39-.29,8.06-.61a50.73,50.73,0,0,0,7.93-1.54,25.6,25.6,0,0,0,3.78-1.4,15.15,15.15,0,0,0,3.39-2.14,10.52,10.52,0,0,0,1.38-1.45l.15-.2.14-.21.15-.2.13-.21a6.07,6.07,0,0,0,.41-.9,6.88,6.88,0,0,0,.38-2,10.28,10.28,0,0,0-.11-2,21.07,21.07,0,0,0-1-3.9c-.45-1.27-1-2.51-1.52-3.74-1.11-2.46-2.34-4.87-3.5-7.31-.58-1.22-1.14-2.45-1.64-3.71a17.62,17.62,0,0,1-1.1-3.91,5.83,5.83,0,0,1,.06-2,3.61,3.61,0,0,1,.37-1,3.39,3.39,0,0,1,.66-.8,9.12,9.12,0,0,1,3.58-1.9,16.6,16.6,0,0,1,4-.57,30.44,30.44,0,0,1,4,.2,53.81,53.81,0,0,1,8,1.6c2.6.72,5.17,1.57,7.71,2.51s5,2,7.5,3,4.92,2.25,7.33,3.47c1.2.62,2.4,1.25,3.58,1.9l1.76,1,.86.54.41.29.21.16c0,.07.14.08.16.24l-.08,0a.79.79,0,0,0-.14-.15l-.2-.15c-.13-.1-.27-.19-.41-.28s-.57-.37-.86-.54c-.58-.35-1.17-.68-1.76-1-1.18-.65-2.37-1.28-3.58-1.89-2.4-1.22-4.85-2.37-7.32-3.46s-5-2.1-7.51-3-5.09-1.78-7.7-2.49a52.15,52.15,0,0,0-7.92-1.59,28.69,28.69,0,0,0-4-.19,16.21,16.21,0,0,0-4,.57,8.84,8.84,0,0,0-3.51,1.87,2.87,2.87,0,0,0-.63.76,3.26,3.26,0,0,0-.36.91,6,6,0,0,0,0,2,17.44,17.44,0,0,0,1.1,3.87c.49,1.25,1,2.48,1.63,3.7,1.16,2.44,2.4,4.84,3.52,7.3.55,1.23,1.08,2.48,1.53,3.76a22.26,22.26,0,0,1,1,3.93,10.73,10.73,0,0,1,.1,2,6.56,6.56,0,0,1-.38,2,5.33,5.33,0,0,1-.43.94c0,.07-.09.14-.13.22l-.15.21-.14.21-.16.2a9.88,9.88,0,0,1-1.41,1.48,14.87,14.87,0,0,1-3.43,2.18,26.05,26.05,0,0,1-3.81,1.42,50.2,50.2,0,0,1-8,1.55c-2.68.33-5.38.52-8.08.63-5.41.21-10.81.14-16.21,0s-10.8-.47-16.19-.78l-16.18-1c-10.78-.66-21.56-1.26-32.36-1.36-5.4,0-10.8,0-16.19.34-4.25.25-8.5.63-12.7,1.28,1.42,1.8,2.82,3.62,4.18,5.47a126.75,126.75,0,0,1,8.81,13.63,75.87,75.87,0,0,1,3.56,7.31,51,51,0,0,1,2.57,7.72,33.81,33.81,0,0,1,1,8.08,25,25,0,0,1-1.3,8c-.23.65-.47,1.29-.74,1.91-.15.31-.28.62-.44.93a10.2,10.2,0,0,1-.54.9,9.88,9.88,0,0,1-3.06,2.77,14,14,0,0,1-3.82,1.52,19.2,19.2,0,0,1-4.06.51,27.45,27.45,0,0,1-8.07-1.11,39.8,39.8,0,0,1-7.56-3c-1.2-.62-2.38-1.29-3.53-2l-.86-.55c-.29-.18-.56-.37-.84-.56-.57-.38-1.12-.78-1.67-1.18-1.08-.81-2.15-1.65-3.16-2.56l-.38-.34-.37-.34-.75-.7-.72-.72c-.24-.23-.47-.49-.7-.73a41.89,41.89,0,0,1-5-6.41,37.76,37.76,0,0,1-3.61-7.29,31.24,31.24,0,0,1-1.14-3.91,23.93,23.93,0,0,1-.56-4,15.58,15.58,0,0,1,0-2,14,14,0,0,1,.28-2,15.57,15.57,0,0,1,1.34-3.87,17.44,17.44,0,0,1,1-1.77,19.56,19.56,0,0,1,1.25-1.63,21.18,21.18,0,0,1,2.93-2.83,33.63,33.63,0,0,1,7-4.23,55.75,55.75,0,0,1,7.62-2.83,79.49,79.49,0,0,1,7.9-1.87c.83-.16,1.67-.3,2.5-.44-5.13-6.44-10.63-12.6-16.34-18.55-7.48-7.78-15.33-15.2-23.41-22.37s-16.39-14-24.88-20.72-17.17-13.1-26-19.31q-6.63-4.67-13.37-9.15t-13.55-8.86c-9.12-5.78-18.4-11.31-28-16.22-4.8-2.46-9.69-4.75-14.66-6.83-2.49-1-5-2-7.54-2.92s-5.09-1.75-7.67-2.51a112.09,112.09,0,0,0-15.75-3.47c-2.67-.38-5.34-.66-8-.8l-1,0-1,0c-.67,0-1.35,0-2,0-1.34,0-2.67,0-4,.13a31,31,0,0,0-7.81,1.57,21.74,21.74,0,0,0-3.62,1.62,20.35,20.35,0,0,0-3.25,2.27,21.5,21.5,0,0,0-4.89,6.19,32.93,32.93,0,0,0-2.79,7.47,55.72,55.72,0,0,0-1.33,7.92c-.27,2.67-.4,5.36-.45,8.05-.08,5.38.17,10.77.49,16.16.67,10.77,1.71,21.53,2.08,32.35.19,5.41.21,10.83-.1,16.24a95.26,95.26,0,0,1-2.18,16.11,56.22,56.22,0,0,1-5.79,15.21,67.07,67.07,0,0,1-4.53,6.77c-.2.28-.41.54-.62.81l-.63.8c-.43.52-.88,1-1.32,1.56L614,716c-.23.25-.45.51-.69.75-.47.49-.93,1-1.41,1.47A57.79,57.79,0,0,1,599,728.05a63.37,63.37,0,0,1-15.1,6,78,78,0,0,1-16.07,2.4,100,100,0,0,1-16.23-.59,123.25,123.25,0,0,1-16-2.93c-1-.25-2-.52-3-.79Zm323.39-24.92c-2.65.5-5.27,1.12-7.86,1.88a54.28,54.28,0,0,0-7.55,2.81,33.29,33.29,0,0,0-6.86,4.18,18.89,18.89,0,0,0-5.1,6.11,14.72,14.72,0,0,0-1.31,3.76,14.55,14.55,0,0,0-.26,2,14.83,14.83,0,0,0,0,2,23.13,23.13,0,0,0,.55,4,30.46,30.46,0,0,0,1.13,3.86,38,38,0,0,0,3.57,7.2,42.18,42.18,0,0,0,5,6.33c.24.24.46.49.7.73l.72.71.73.68.37.35.38.33c1,.9,2.06,1.73,3.13,2.53.55.4,1.09.8,1.65,1.17.28.18.55.38.84.56l.85.53c1.14.72,2.31,1.38,3.5,2a39.73,39.73,0,0,0,7.47,3,27,27,0,0,0,7.92,1.09,18.76,18.76,0,0,0,4-.51,13.35,13.35,0,0,0,3.68-1.46,9.49,9.49,0,0,0,2.9-2.63,7.23,7.23,0,0,0,.51-.84c.15-.29.28-.6.42-.9.27-.61.51-1.24.72-1.87a24.54,24.54,0,0,0,1.27-7.88,33.45,33.45,0,0,0-1-8,51.41,51.41,0,0,0-2.56-7.63,78.39,78.39,0,0,0-3.53-7.26,128.09,128.09,0,0,0-8.79-13.55q-2.14-2.89-4.38-5.71C858,706.32,857.12,706.48,856.22,706.65Z"/><polygon class="cls-3" points="859.58 706.07 859.31 705.73 858.67 705.85 858.94 706.19 859.58 706.07"/></g></svg>'))));var i=this;n.onload=function(){e.drawImage(n,0,0);var a=new B(t);a.needsUpdate=!0,a.minFilter=o,i.onLoaded(a)}}onLoaded(t){this.geometry=new wn(32,32,3),this.material=new hn({vertexShader:oc(),fragmentShader:lc(),uniforms:{uTime:{value:0},uTexture:{value:t}},transparent:!0,side:2}),this.mesh=new an(this.geometry,this.material),this.scene.add(this.mesh),this.addEvents()}addEvents(){window.requestAnimationFrame(this.run.bind(this)),window.addEventListener("resize",this.onResize.bind(this),!1)}run(){requestAnimationFrame(this.run.bind(this)),this.render()}render(){this.material.uniforms.uTime.value=this.clock.getElapsedTime(),this.renderer.render(this.scene,this.camera)}onResize(){const t=$(".wave-canvas").parent().width(),e=$(".wave-canvas").parent().height();this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,e)}};function uc(){return hc}})(),WaveCanvas=i})();