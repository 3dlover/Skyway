/*! For license information please see main.js.LICENSE.txt */
var WaveCanvas;(()=>{var t={28:(t,e,n)=>{"use strict";var i=n(645);n.n(i)()((function(t){return t[1]})).push([t.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n}\n",""])},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,i){"string"==typeof t&&(t=[[null,t,""]]);var r={};if(i)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(r[s]=!0)}for(var o=0;o<t.length;o++){var c=[].concat(t[o]);i&&r[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},270:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n\nvoid main() {\n  vec4 texture = texture2D(uTexture, vUv);\n  gl_FragColor = texture;\n}"},343:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform float uTime;\nuniform float uFreq;\nuniform float uAmp;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v) {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n  \n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n  \n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n  \n  // Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n           \n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n  \n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  \n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main() {\n  vUv = uv;\n\n  vec3 pos = position;\n  float noiseFreq = uFreq;\n  float noiseAmp = uAmp; \n  vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n  pos.z += snoise(noisePos) * noiseAmp;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);\n}"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return t[i](a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};(()=>{"use strict";n.r(i),n.d(i,{getScene:()=>uc}),n(28);const t=100,e=1e3,r=1001,a=1002,s=1003,o=1006,c=1008,l=1012,h=1014,u=1015,d=1016,p=1020,f=1022,m=1023,g=1026,v=1027,y=2300,x=2301,_=2302,b=2400,M=2401,w=2402,S=3e3,T=7680,E=35044,A=35048,L="300 es";function C(){}Object.assign(C.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}});const R=[];for(let t=0;t<256;t++)R[t]=(t<16?"0":"")+t.toString(16);let P=1234567;const D={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(R[255&t]+R[t>>8&255]+R[t>>16&255]+R[t>>24&255]+"-"+R[255&e]+R[e>>8&255]+"-"+R[e>>16&15|64]+R[e>>24&255]+"-"+R[63&n|128]+R[n>>8&255]+"-"+R[n>>16&255]+R[n>>24&255]+R[255&i]+R[i>>8&255]+R[i>>16&255]+R[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return D.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(D.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(P=t%2147483647),P=16807*P%2147483647,(P-1)/2147483646},degToRad:function(t){return t*D.DEG2RAD},radToDeg:function(t){return t*D.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const a=Math.cos,s=Math.sin,o=a(n/2),c=s(n/2),l=a((e+i)/2),h=s((e+i)/2),u=a((e-i)/2),d=s((e-i)/2),p=a((i-e)/2),f=s((i-e)/2);switch(r){case"XYX":t.set(o*h,c*u,c*d,o*l);break;case"YZY":t.set(c*d,o*h,c*u,o*l);break;case"ZXZ":t.set(c*u,c*d,o*h,o*l);break;case"XZX":t.set(o*h,c*f,c*p,o*l);break;case"YXY":t.set(c*p,o*h,c*f,o*l);break;case"ZYZ":t.set(c*f,c*p,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class I{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}I.prototype.isVector2=!0;class N{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=r,l[5]=o,l[6]=n,l[7]=a,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],b=i[5],M=i[8];return r[0]=a*f+s*v+o*_,r[3]=a*m+s*y+o*b,r[6]=a*g+s*x+o*M,r[1]=c*f+l*v+h*_,r[4]=c*m+l*y+h*b,r[7]=c*g+l*x+h*M,r[2]=u*f+d*v+p*_,r[5]=u*m+d*y+p*b,r[8]=u*g+d*x+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],c=t[7],l=t[8];return e*a*l-e*s*c-n*r*l+n*s*o+i*r*c-i*a*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=l*a-s*c,u=s*o-l*r,d=c*r-a*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*c-l*n)*f,t[2]=(s*n-i*a)*f,t[3]=u*f,t[4]=(l*e-i*o)*f,t[5]=(i*r-s*e)*f,t[6]=d*f,t[7]=(n*o-c*e)*f,t[8]=(a*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),c=Math.sin(r);return this.set(n*o,n*c,-n*(o*a+c*s)+a+t,-i*c,i*o,-i*(-c*a+o*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],c=i[4],l=i[7];return i[0]=e*r+n*o,i[3]=e*a+n*c,i[6]=e*s+n*l,i[1]=-n*r+e*o,i[4]=-n*a+e*c,i[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let O;N.prototype.isMatrix3=!0;const z={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===O&&(O=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),O.width=t.width,O.height=t.height;const n=O.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=O}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}};let H=0;class B extends C{constructor(t=B.DEFAULT_IMAGE,e=B.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,o=1009,c=1,l=3e3){super(),Object.defineProperty(this,"id",{value:H++}),this.uuid=D.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=o,this.offset=new I(0,0),this.repeat=new I(1,1),this.center=new I(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new N,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=D.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(F(i[t].image)):e.push(F(i[t]))}else e=F(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case e:t.x=t.x-Math.floor(t.x);break;case r:t.x=t.x<0?0:1;break;case a:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case e:t.y=t.y-Math.floor(t.y);break;case r:t.y=t.y<0?0:1;break;case a:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function F(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?z.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}B.DEFAULT_IMAGE=void 0,B.DEFAULT_MAPPING=300,B.prototype.isTexture=!0;class G{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=.01,s=.1,o=t.elements,c=o[0],l=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(l-u)<a&&Math.abs(h-f)<a&&Math.abs(p-m)<a){if(Math.abs(l+u)<s&&Math.abs(h+f)<s&&Math.abs(p+m)<s&&Math.abs(c+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(c+1)/2,o=(d+1)/2,v=(g+1)/2,y=(l+u)/4,x=(h+f)/4,_=(p+m)/4;return t>o&&t>v?t<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=y/n,r=x/n):o>v?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=y/i,r=_/i):v<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=x/r,i=_/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-l)*(u-l));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-l)/v,this.w=Math.acos((c+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}G.prototype.isVector4=!0;class U extends C{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new G(0,0,t,e),this.scissorTest=!1,this.viewport=new G(0,0,t,e),n=n||{},this.texture=new B(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:o,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}U.prototype.isWebGLRenderTarget=!0,class extends U{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}.prototype.isWebGLMultisampleRenderTarget=!0;class q{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s)return t[e+0]=o,t[e+1]=c,t[e+2]=l,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||c!==d||l!==p){let t=1-s;const e=o*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+u*r,c=c*t+d*r,l=l*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(o*o+c*c+l*l+h*h);o*=t,c*=t,l*=t,h*=t}}t[e]=o,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],c=n[i+2],l=n[i+3],h=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return t[e]=s*p+l*h+o*d-c*u,t[e+1]=o*p+l*u+c*h-s*d,t[e+2]=c*p+l*d+s*u-o*h,t[e+3]=l*p-s*h-o*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,c=s(n/2),l=s(i/2),h=s(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],c=e[2],l=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-o)*t,this._y=(r-c)*t,this._z=(a-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(l-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+c)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-c)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+l)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(a-i)/t,this._x=(r+c)/t,this._y=(o+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(D.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,c=e._z,l=e._w;return this._x=n*l+a*s+i*c-r*o,this._y=i*l+a*o+r*s-n*c,this._z=r*l+a*c+n*o-i*s,this._w=a*l-n*s-i*o-r*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(o),l=Math.atan2(c,s),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}q.prototype.isQuaternion=!0;class k{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(W.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(W.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,c=o*e+a*i-s*n,l=o*n+s*e-r*i,h=o*i+r*n-a*e,u=-r*e-a*n-s*i;return this.x=c*o+u*-r+l*-s-h*-a,this.y=l*o+u*-a+h*-r-c*-s,this.z=h*o+u*-s+c*-a-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return V.copy(this).projectOnVector(t),this.sub(V)}reflect(t){return this.sub(V.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(D.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}k.prototype.isVector3=!0;const V=new k,W=new q;class j{constructor(t=new k(1/0,1/0,1/0),e=new k(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,c=t.length;o<c;o+=3){const c=t[o],l=t[o+1],h=t[o+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>a&&(a=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,c=t.count;o<c;o++){const c=t.getX(o),l=t.getY(o),h=t.getZ(o);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>a&&(a=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=X.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new k),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new k),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Y.copy(e.boundingBox),Y.applyMatrix4(t.matrixWorld),this.union(Y));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new k),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,X),X.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(it),rt.subVectors(this.max,it),J.subVectors(t.a,it),Q.subVectors(t.b,it),K.subVectors(t.c,it),tt.subVectors(Q,J),et.subVectors(K,Q),nt.subVectors(J,K);let e=[0,-tt.z,tt.y,0,-et.z,et.y,0,-nt.z,nt.y,tt.z,0,-tt.x,et.z,0,-et.x,nt.z,0,-nt.x,-tt.y,tt.x,0,-et.y,et.x,0,-nt.y,nt.x,0];return!!ot(e,J,Q,K,rt)&&(e=[1,0,0,0,1,0,0,0,1],!!ot(e,J,Q,K,rt)&&(at.crossVectors(tt,et),e=[at.x,at.y,at.z],ot(e,J,Q,K,rt)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new k),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return X.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(X).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Z[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Z[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Z[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Z[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Z[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Z[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Z[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Z[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Z)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}j.prototype.isBox3=!0;const Z=[new k,new k,new k,new k,new k,new k,new k,new k],X=new k,Y=new j,J=new k,Q=new k,K=new k,tt=new k,et=new k,nt=new k,it=new k,rt=new k,at=new k,st=new k;function ot(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){st.fromArray(t,a);const s=r.x*Math.abs(st.x)+r.y*Math.abs(st.y)+r.z*Math.abs(st.z),o=e.dot(st),c=n.dot(st),l=i.dot(st);if(Math.max(-Math.max(o,c,l),Math.min(o,c,l))>s)return!1}return!0}const ct=new j,lt=new k,ht=new k,ut=new k;class dt{constructor(t=new k,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):ct.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new k),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new j),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){ut.subVectors(t,this.center);const e=ut.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(ut.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return ht.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(lt.copy(t.center).add(ht)),this.expandByPoint(lt.copy(t.center).sub(ht)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const pt=new k,ft=new k,mt=new k,gt=new k,vt=new k,yt=new k,xt=new k;class _t{constructor(t=new k,e=new k(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new k),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,pt)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new k),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=pt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(pt.copy(this.direction).multiplyScalar(e).add(this.origin),pt.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ft.copy(t).add(e).multiplyScalar(.5),mt.copy(e).sub(t).normalize(),gt.copy(this.origin).sub(ft);const r=.5*t.distanceTo(e),a=-this.direction.dot(mt),s=gt.dot(this.direction),o=-gt.dot(mt),c=gt.lengthSq(),l=Math.abs(1-a*a);let h,u,d,p;if(l>0)if(h=a*o-s,u=a*s-o,p=r*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;h*=t,u*=t,d=h*(h+a*u+2*s)+u*(a*h+u+2*o)+c}else u=r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+c;else u=-r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+c;else u<=-p?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+c):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+c):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+c);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(mt).multiplyScalar(u).add(ft),d}intersectSphere(t,e){pt.subVectors(t.center,this.origin);const n=pt.dot(this.direction),i=pt.dot(pt)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,s,o;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(r=(t.min.y-u.y)*l,a=(t.max.y-u.y)*l):(r=(t.max.y-u.y)*l,a=(t.min.y-u.y)*l),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,pt)}intersectTriangle(t,e,n,i,r){vt.subVectors(e,t),yt.subVectors(n,t),xt.crossVectors(vt,yt);let a,s=this.direction.dot(xt);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}gt.subVectors(this.origin,t);const o=a*this.direction.dot(yt.crossVectors(gt,yt));if(o<0)return null;const c=a*this.direction.dot(vt.cross(gt));if(c<0)return null;if(o+c>s)return null;const l=-a*gt.dot(xt);return l<0?null:this.at(l/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class bt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new bt).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Mt.setFromMatrixColumn(t,0).length(),r=1/Mt.setFromMatrixColumn(t,1).length(),a=1/Mt.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*l,n=a*h,i=s*l,r=s*h;e[0]=o*l,e[4]=-o*h,e[8]=c,e[1]=n+i*c,e[5]=t-r*c,e[9]=-s*o,e[2]=r-t*c,e[6]=i+n*c,e[10]=a*o}else if("YXZ"===t.order){const t=o*l,n=o*h,i=c*l,r=c*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*c,e[1]=a*h,e[5]=a*l,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*l,n=o*h,i=c*l,r=c*h;e[0]=t-r*s,e[4]=-a*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*l,e[9]=r-t*s,e[2]=-a*c,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*l,n=a*h,i=s*l,r=s*h;e[0]=o*l,e[4]=i*c-n,e[8]=t*c+r,e[1]=o*h,e[5]=r*c+t,e[9]=n*c-i,e[2]=-c,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*c,i=s*o,r=s*c;e[0]=o*l,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=a*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=a*o,n=a*c,i=s*o,r=s*c;e[0]=o*l,e[4]=-h,e[8]=c*l,e[1]=t*h+r,e[5]=a*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*l,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(St,t,Tt)}lookAt(t,e,n){const i=this.elements;return Lt.subVectors(t,e),0===Lt.lengthSq()&&(Lt.z=1),Lt.normalize(),Et.crossVectors(n,Lt),0===Et.lengthSq()&&(1===Math.abs(n.z)?Lt.x+=1e-4:Lt.z+=1e-4,Lt.normalize(),Et.crossVectors(n,Lt)),Et.normalize(),At.crossVectors(Lt,Et),i[0]=Et.x,i[4]=At.x,i[8]=Lt.x,i[1]=Et.y,i[5]=At.y,i[9]=Lt.y,i[2]=Et.z,i[6]=At.z,i[10]=Lt.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=i[0],M=i[4],w=i[8],S=i[12],T=i[1],E=i[5],A=i[9],L=i[13],C=i[2],R=i[6],P=i[10],D=i[14],I=i[3],N=i[7],O=i[11],z=i[15];return r[0]=a*b+s*T+o*C+c*I,r[4]=a*M+s*E+o*R+c*N,r[8]=a*w+s*A+o*P+c*O,r[12]=a*S+s*L+o*D+c*z,r[1]=l*b+h*T+u*C+d*I,r[5]=l*M+h*E+u*R+d*N,r[9]=l*w+h*A+u*P+d*O,r[13]=l*S+h*L+u*D+d*z,r[2]=p*b+f*T+m*C+g*I,r[6]=p*M+f*E+m*R+g*N,r[10]=p*w+f*A+m*P+g*O,r[14]=p*S+f*L+m*D+g*z,r[3]=v*b+y*T+x*C+_*I,r[7]=v*M+y*E+x*R+_*N,r[11]=v*w+y*A+x*P+_*O,r[15]=v*S+y*L+x*D+_*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*c*h-r*s*u+n*c*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*c*u+r*a*u-i*a*d+i*c*l-r*o*l)+t[11]*(+e*c*h-e*s*d-r*a*h+n*a*d+r*s*l-n*c*l)+t[15]*(-i*s*l-e*o*h+e*s*u+i*a*h-n*a*u+n*o*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*c-f*u*c+f*o*d-s*m*d-h*o*g+s*u*g,y=p*u*c-l*m*c-p*o*d+a*m*d+l*o*g-a*u*g,x=l*f*c-p*h*c+p*s*d-a*f*d-l*s*g+a*h*g,_=p*h*o-l*f*o-p*s*u+a*f*u+l*s*m-a*h*m,b=e*v+n*y+i*x+r*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;return t[0]=v*M,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*M,t[2]=(s*m*r-f*o*r+f*i*c-n*m*c-s*i*g+n*o*g)*M,t[3]=(h*o*r-s*u*r-h*i*c+n*u*c+s*i*d-n*o*d)*M,t[4]=y*M,t[5]=(l*m*r-p*u*r+p*i*d-e*m*d-l*i*g+e*u*g)*M,t[6]=(p*o*r-a*m*r-p*i*c+e*m*c+a*i*g-e*o*g)*M,t[7]=(a*u*r-l*o*r+l*i*c-e*u*c-a*i*d+e*o*d)*M,t[8]=x*M,t[9]=(p*h*r-l*f*r-p*n*d+e*f*d+l*n*g-e*h*g)*M,t[10]=(a*f*r-p*s*r+p*n*c-e*f*c-a*n*g+e*s*g)*M,t[11]=(l*s*r-a*h*r-l*n*c+e*h*c+a*n*d-e*s*d)*M,t[12]=_*M,t[13]=(l*f*i-p*h*i+p*n*u-e*f*u-l*n*m+e*h*m)*M,t[14]=(p*s*i-a*f*i-p*n*o+e*f*o+a*n*m-e*s*m)*M,t[15]=(a*h*i-l*s*i+l*n*o-e*h*o-a*n*u+e*s*u)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,c=r*a,l=r*s;return this.set(c*a+n,c*s-i*o,c*o+i*s,0,c*s+i*o,l*s+n,l*o-i*a,0,c*o-i*s,l*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,c=r+r,l=a+a,h=s+s,u=r*c,d=r*l,p=r*h,f=a*l,m=a*h,g=s*h,v=o*c,y=o*l,x=o*h,_=n.x,b=n.y,M=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*b,i[5]=(1-(u+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+y)*M,i[9]=(m-v)*M,i[10]=(1-(u+f))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Mt.set(i[0],i[1],i[2]).length();const a=Mt.set(i[4],i[5],i[6]).length(),s=Mt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],wt.copy(this);const o=1/r,c=1/a,l=1/s;return wt.elements[0]*=o,wt.elements[1]*=o,wt.elements[2]*=o,wt.elements[4]*=c,wt.elements[5]*=c,wt.elements[6]*=c,wt.elements[8]*=l,wt.elements[9]*=l,wt.elements[10]*=l,e.setFromRotationMatrix(wt),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*r/(e-t),c=2*r/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(a+r)/(a-r),d=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,a){const s=this.elements,o=1/(e-t),c=1/(n-i),l=1/(a-r),h=(e+t)*o,u=(n+i)*c,d=(a+r)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}bt.prototype.isMatrix4=!0;const Mt=new k,wt=new bt,St=new k(0,0,0),Tt=new k(1,1,1),Et=new k,At=new k,Lt=new k,Ct=new bt,Rt=new q;class Pt{constructor(t=0,e=0,n=0,i=Pt.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=D.clamp,r=t.elements,a=r[0],s=r[4],o=r[8],c=r[1],l=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,a),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,a));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Ct.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ct,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Rt.setFromEuler(this),this.setFromQuaternion(Rt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new k(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Pt.prototype.isEuler=!0,Pt.DefaultOrder="XYZ",Pt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Dt{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let It=0;const Nt=new k,Ot=new q,zt=new bt,Ht=new k,Bt=new k,Ft=new k,Gt=new q,Ut=new k(1,0,0),qt=new k(0,1,0),kt=new k(0,0,1),Vt={type:"added"},Wt={type:"removed"};function jt(){Object.defineProperty(this,"id",{value:It++}),this.uuid=D.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=jt.DefaultUp.clone();const t=new k,e=new Pt,n=new q,i=new k(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new bt},normalMatrix:{value:new N}}),this.matrix=new bt,this.matrixWorld=new bt,this.matrixAutoUpdate=jt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Dt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}jt.DefaultUp=new k(0,1,0),jt.DefaultMatrixAutoUpdate=!0,jt.prototype=Object.assign(Object.create(C.prototype),{constructor:jt,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Ot.setFromAxisAngle(t,e),this.quaternion.multiply(Ot),this},rotateOnWorldAxis:function(t,e){return Ot.setFromAxisAngle(t,e),this.quaternion.premultiply(Ot),this},rotateX:function(t){return this.rotateOnAxis(Ut,t)},rotateY:function(t){return this.rotateOnAxis(qt,t)},rotateZ:function(t){return this.rotateOnAxis(kt,t)},translateOnAxis:function(t,e){return Nt.copy(t).applyQuaternion(this.quaternion),this.position.add(Nt.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Ut,t)},translateY:function(t){return this.translateOnAxis(qt,t)},translateZ:function(t){return this.translateOnAxis(kt,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(zt.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?Ht.copy(t):Ht.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Bt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?zt.lookAt(Bt,Ht,this.up):zt.lookAt(Ht,Bt,this.up),this.quaternion.setFromRotationMatrix(zt),i&&(zt.extractRotation(i.matrixWorld),Ot.setFromRotationMatrix(zt),this.quaternion.premultiply(Ot.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Vt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Wt)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Wt)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),zt.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),zt.multiply(t.parent.matrixWorld)),t.applyMatrix4(zt),this.add(t),t.updateWorldMatrix(!1,!0),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new k),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new q),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bt,t,Ft),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new k),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bt,Gt,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new k),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes),c=a(t.skeletons),l=a(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const Zt=new k,Xt=new k,Yt=new N;class Jt{constructor(t=new k(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Zt.subVectors(n,e).cross(Xt.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new k),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new k);const n=t.delta(Zt),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new k),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Yt.getNormalMatrix(t),i=this.coplanarPoint(Zt).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Jt.prototype.isPlane=!0;const Qt=new k,Kt=new k,$t=new k,te=new k,ee=new k,ne=new k,ie=new k,re=new k,ae=new k,se=new k;class oe{constructor(t=new k,e=new k,n=new k){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new k),i.subVectors(n,e),Qt.subVectors(t,e),i.cross(Qt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Qt.subVectors(i,e),Kt.subVectors(n,e),$t.subVectors(t,e);const a=Qt.dot(Qt),s=Qt.dot(Kt),o=Qt.dot($t),c=Kt.dot(Kt),l=Kt.dot($t),h=a*c-s*s;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new k),0===h)return r.set(-2,-1,-1);const u=1/h,d=(c*o-s*l)*u,p=(a*l-s*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,te),te.x>=0&&te.y>=0&&te.x+te.y<=1}static getUV(t,e,n,i,r,a,s,o){return this.getBarycoord(t,e,n,i,te),o.set(0,0),o.addScaledVector(r,te.x),o.addScaledVector(a,te.y),o.addScaledVector(s,te.z),o}static isFrontFacing(t,e,n,i){return Qt.subVectors(n,e),Kt.subVectors(t,e),Qt.cross(Kt).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Qt.subVectors(this.c,this.b),Kt.subVectors(this.a,this.b),.5*Qt.cross(Kt).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new k),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return oe.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Jt),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return oe.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return oe.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return oe.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return oe.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new k);const n=this.a,i=this.b,r=this.c;let a,s;ee.subVectors(i,n),ne.subVectors(r,n),re.subVectors(t,n);const o=ee.dot(re),c=ne.dot(re);if(o<=0&&c<=0)return e.copy(n);ae.subVectors(t,i);const l=ee.dot(ae),h=ne.dot(ae);if(l>=0&&h<=l)return e.copy(i);const u=o*h-l*c;if(u<=0&&o>=0&&l<=0)return a=o/(o-l),e.copy(n).addScaledVector(ee,a);se.subVectors(t,r);const d=ee.dot(se),p=ne.dot(se);if(p>=0&&d<=p)return e.copy(r);const f=d*c-o*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),e.copy(n).addScaledVector(ne,s);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return ie.subVectors(r,i),s=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(ie,s);const g=1/(m+f+u);return a=f*g,s=u*g,e.copy(n).addScaledVector(ee,a).addScaledVector(ne,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ce=0;function le(){Object.defineProperty(this,"id",{value:ce++}),this.uuid=D.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=t,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=T,this.stencilZFail=T,this.stencilZPass=T,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}le.prototype=Object.assign(Object.create(C.prototype),{constructor:le,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(le.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const he={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ue={h:0,s:0,l:0},de={h:0,s:0,l:0};function pe(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function fe(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function me(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class ge{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=D.euclideanModulo(t,1),e=D.clamp(e,0,1),n=D.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=pe(r,i,t+1/3),this.g=pe(r,i,t),this.b=pe(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=he[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=fe(t.r),this.g=fe(t.g),this.b=fe(t.b),this}copyLinearToSRGB(t){return this.r=me(t.r),this.g=me(t.g),this.b=me(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i);let s,o;const c=(a+r)/2;if(a===r)s=0,o=0;else{const t=r-a;switch(o=c<=.5?t/(r+a):t/(2-r-a),r){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=o,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(ue),ue.h+=t,ue.s+=e,ue.l+=n,this.setHSL(ue.h,ue.s,ue.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ue),t.getHSL(de);const n=D.lerp(ue.h,de.h,e),i=D.lerp(ue.s,de.s,e),r=D.lerp(ue.l,de.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ge.NAMES=he,ge.prototype.isColor=!0,ge.prototype.r=1,ge.prototype.g=1,ge.prototype.b=1;class ve extends le{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}ve.prototype.isMeshBasicMaterial=!0;const ye=new k,xe=new I;function _e(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=E,this.updateRange={offset:0,count:-1},this.version=0}function be(t,e,n){_e.call(this,new Int8Array(t),e,n)}function Me(t,e,n){_e.call(this,new Uint8Array(t),e,n)}function we(t,e,n){_e.call(this,new Uint8ClampedArray(t),e,n)}function Se(t,e,n){_e.call(this,new Int16Array(t),e,n)}function Te(t,e,n){_e.call(this,new Uint16Array(t),e,n)}function Ee(t,e,n){_e.call(this,new Int32Array(t),e,n)}function Ae(t,e,n){_e.call(this,new Uint32Array(t),e,n)}function Le(t,e,n){_e.call(this,new Uint16Array(t),e,n)}function Ce(t,e,n){_e.call(this,new Float32Array(t),e,n)}function Re(t,e,n){_e.call(this,new Float64Array(t),e,n)}function Pe(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty(_e.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(_e.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new ge),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new I),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new k),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new G),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)xe.fromBufferAttribute(this,e),xe.applyMatrix3(t),this.setXY(e,xe.x,xe.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ye.fromBufferAttribute(this,e),ye.applyMatrix3(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)ye.x=this.getX(e),ye.y=this.getY(e),ye.z=this.getZ(e),ye.applyMatrix4(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)ye.x=this.getX(e),ye.y=this.getY(e),ye.z=this.getZ(e),ye.applyNormalMatrix(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)ye.x=this.getX(e),ye.y=this.getY(e),ye.z=this.getZ(e),ye.transformDirection(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==E&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}),be.prototype=Object.create(_e.prototype),be.prototype.constructor=be,Me.prototype=Object.create(_e.prototype),Me.prototype.constructor=Me,we.prototype=Object.create(_e.prototype),we.prototype.constructor=we,Se.prototype=Object.create(_e.prototype),Se.prototype.constructor=Se,Te.prototype=Object.create(_e.prototype),Te.prototype.constructor=Te,Ee.prototype=Object.create(_e.prototype),Ee.prototype.constructor=Ee,Ae.prototype=Object.create(_e.prototype),Ae.prototype.constructor=Ae,Le.prototype=Object.create(_e.prototype),Le.prototype.constructor=Le,Le.prototype.isFloat16BufferAttribute=!0,Ce.prototype=Object.create(_e.prototype),Ce.prototype.constructor=Ce,Re.prototype=Object.create(_e.prototype),Re.prototype.constructor=Re,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let De=0;const Ie=new bt,Ne=new jt,Oe=new k,ze=new j,He=new j,Be=new k;function Fe(){Object.defineProperty(this,"id",{value:De++}),this.uuid=D.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Fe.prototype=Object.assign(Object.create(C.prototype),{constructor:Fe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(Pe(t)>65535?Ae:Te)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new N).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Ie.makeRotationX(t),this.applyMatrix4(Ie),this},rotateY:function(t){return Ie.makeRotationY(t),this.applyMatrix4(Ie),this},rotateZ:function(t){return Ie.makeRotationZ(t),this.applyMatrix4(Ie),this},translate:function(t,e,n){return Ie.makeTranslation(t,e,n),this.applyMatrix4(Ie),this},scale:function(t,e,n){return Ie.makeScale(t,e,n),this.applyMatrix4(Ie),this},lookAt:function(t){return Ne.lookAt(t),Ne.updateMatrix(),this.applyMatrix4(Ne.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Oe).negate(),this.translate(Oe.x,Oe.y,Oe.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Ce(e,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new j);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new k(-1/0,-1/0,-1/0),new k(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];ze.setFromBufferAttribute(n),this.morphTargetsRelative?(Be.addVectors(this.boundingBox.min,ze.min),this.boundingBox.expandByPoint(Be),Be.addVectors(this.boundingBox.max,ze.max),this.boundingBox.expandByPoint(Be)):(this.boundingBox.expandByPoint(ze.min),this.boundingBox.expandByPoint(ze.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new dt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new k,1/0);if(t){const n=this.boundingSphere.center;if(ze.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];He.setFromBufferAttribute(n),this.morphTargetsRelative?(Be.addVectors(ze.min,He.min),ze.expandByPoint(Be),Be.addVectors(ze.max,He.max),ze.expandByPoint(Be)):(ze.expandByPoint(He.min),ze.expandByPoint(He.max))}ze.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Be.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Be));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)Be.fromBufferAttribute(a,e),s&&(Oe.fromBufferAttribute(t,e),Be.add(Oe)),i=Math.max(i,n.distanceToSquared(Be))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,r=e.normal.array,a=e.uv.array,s=i.length/3;void 0===e.tangent&&this.setAttribute("tangent",new _e(new Float32Array(4*s),4));const o=e.tangent.array,c=[],l=[];for(let t=0;t<s;t++)c[t]=new k,l[t]=new k;const h=new k,u=new k,d=new k,p=new I,f=new I,m=new I,g=new k,v=new k;function y(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(a,2*t),f.fromArray(a,2*e),m.fromArray(a,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const r=1/(f.x*m.y-m.x*f.y);isFinite(r)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(r),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(r),c[t].add(g),c[e].add(g),c[n].add(g),l[t].add(v),l[e].add(v),l[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)y(n[t+0],n[t+1],n[t+2])}const _=new k,b=new k,M=new k,w=new k;function S(t){M.fromArray(r,3*t),w.copy(M);const e=c[t];_.copy(e),_.sub(M.multiplyScalar(M.dot(e))).normalize(),b.crossVectors(w,e);const n=b.dot(l[t])<0?-1:1;o[4*t]=_.x,o[4*t+1]=_.y,o[4*t+2]=_.z,o[4*t+3]=n}for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new _e(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new k,r=new k,a=new k,s=new k,o=new k,c=new k,l=new k,h=new k;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,f),l.subVectors(a,r),h.subVectors(i,r),l.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(l),o.add(l),c.add(l),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),l.subVectors(a,r),h.subVectors(i,r),l.cross(h),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,a=t.attributes[i],s=a.array,o=a.itemSize*e,c=Math.min(s.length,r.length-o);for(let t=0,e=o;t<c;t++,e++)r[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Be.fromBufferAttribute(t,e),Be.normalize(),t.setXYZ(e,Be.x,Be.y,Be.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let t=0,r=e.length;t<r;t++){s=e[t]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new _e(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Fe,n=this.index.array,i=this.attributes;for(const r in i){const a=t(i[r],n);e.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);a.push(i)}e.morphAttributes[i]=a}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,n=a.length;t<n;t++){const n=a[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],a=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];a.push(i.toJSON(t.data))}a.length>0&&(i[e]=a,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new Fe).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let t=0,e=a.length;t<e;t++){const e=a[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Ge=new bt,Ue=new _t,qe=new dt,ke=new k,Ve=new k,We=new k,je=new k,Ze=new k,Xe=new k,Ye=new k,Je=new k,Qe=new k,Ke=new I,$e=new I,tn=new I,en=new k,nn=new k;function rn(t=new Fe,e=new ve){jt.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function an(t,e,n,i,r,a,s,o,c,l,h,u){ke.fromBufferAttribute(r,l),Ve.fromBufferAttribute(r,h),We.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(e.morphTargets&&a&&d){Ye.set(0,0,0),Je.set(0,0,0),Qe.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=d[t],n=a[t];0!==e&&(je.fromBufferAttribute(n,l),Ze.fromBufferAttribute(n,h),Xe.fromBufferAttribute(n,u),s?(Ye.addScaledVector(je,e),Je.addScaledVector(Ze,e),Qe.addScaledVector(Xe,e)):(Ye.addScaledVector(je.sub(ke),e),Je.addScaledVector(Ze.sub(Ve),e),Qe.addScaledVector(Xe.sub(We),e)))}ke.add(Ye),Ve.add(Je),We.add(Qe)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(l,ke),t.boneTransform(h,Ve),t.boneTransform(u,We));const p=function(t,e,n,i,r,a,s,o){let c;if(c=1===e.side?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,2!==e.side,o),null===c)return null;nn.copy(o),nn.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(nn);return l<n.near||l>n.far?null:{distance:l,point:nn.clone(),object:t}}(t,e,n,i,ke,Ve,We,en);if(p){o&&(Ke.fromBufferAttribute(o,l),$e.fromBufferAttribute(o,h),tn.fromBufferAttribute(o,u),p.uv=oe.getUV(en,ke,Ve,We,Ke,$e,tn,new I)),c&&(Ke.fromBufferAttribute(c,l),$e.fromBufferAttribute(c,h),tn.fromBufferAttribute(c,u),p.uv2=oe.getUV(en,ke,Ve,We,Ke,$e,tn,new I));const t={a:l,b:h,c:u,normal:new k,materialIndex:0};oe.getNormal(ke,Ve,We,t.normal),p.face=t}return p}rn.prototype=Object.assign(Object.create(jt.prototype),{constructor:rn,isMesh:!0,copy:function(t){return jt.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),qe.copy(n.boundingSphere),qe.applyMatrix4(r),!1===t.ray.intersectsSphere(qe))return;if(Ge.copy(r).invert(),Ue.copy(t.ray).applyMatrix4(Ge),null!==n.boundingBox&&!1===Ue.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position,o=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);a=an(this,f,t,Ue,s,o,c,l,h,i,u,d),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=p.materialIndex,e.push(a))}}else for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);a=an(this,i,t,Ue,s,o,c,l,h,u,d,p),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else if(void 0!==s)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3)a=an(this,p,t,Ue,s,o,c,l,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,e.push(a))}else for(let n=Math.max(0,d.start),r=Math.min(s.count,d.start+d.count);n<r;n+=3)a=an(this,i,t,Ue,s,o,c,l,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class sn extends Fe{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],c=[],l=[],h=[];let u=0,d=0;function p(t,e,n,i,r,a,p,f,m,g,v){const y=a/m,x=p/g,_=a/2,b=p/2,M=f/2,w=m+1,S=g+1;let T=0,E=0;const A=new k;for(let a=0;a<S;a++){const s=a*x-b;for(let o=0;o<w;o++){const u=o*y-_;A[t]=u*i,A[e]=s*r,A[n]=M,c.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,l.push(A.x,A.y,A.z),h.push(o/m),h.push(1-a/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+w*t,i=u+e+w*(t+1),r=u+(e+1)+w*(t+1),a=u+(e+1)+w*t;o.push(n,i,a),o.push(i,r,a),E+=6}s.addGroup(d,E,v),d+=E,u+=T}p("z","y","x",-1,-1,n,e,t,a,r,0),p("z","y","x",1,-1,n,e,-t,a,r,1),p("x","z","y",1,1,t,n,e,i,a,2),p("x","z","y",1,-1,t,n,-e,i,a,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Ce(c,3)),this.setAttribute("normal",new Ce(l,3)),this.setAttribute("uv",new Ce(h,2))}}function on(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function cn(t){const e={};for(let n=0;n<t.length;n++){const i=on(t[n]);for(const t in i)e[t]=i[t]}return e}const ln={clone:on,merge:cn};function hn(t){le.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function un(){jt.call(this),this.type="Camera",this.matrixWorldInverse=new bt,this.projectionMatrix=new bt,this.projectionMatrixInverse=new bt}function dn(t=50,e=1,n=.1,i=2e3){un.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}hn.prototype=Object.create(le.prototype),hn.prototype.constructor=hn,hn.prototype.isShaderMaterial=!0,hn.prototype.copy=function(t){return le.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=on(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},hn.prototype.toJSON=function(t){const e=le.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},un.prototype=Object.assign(Object.create(jt.prototype),{constructor:un,isCamera:!0,copy:function(t,e){return jt.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new k),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){jt.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){jt.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),dn.prototype=Object.assign(Object.create(un.prototype),{constructor:dn,isPerspectiveCamera:!0,copy:function(t,e){return un.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*D.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*D.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*D.RAD2DEG*Math.atan(Math.tan(.5*D.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*D.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=jt.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const pn=90;class fn extends jt{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new dn(pn,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new k(1,0,0)),this.add(i);const r=new dn(pn,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new k(-1,0,0)),this.add(r);const a=new dn(pn,1,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new k(0,1,0)),this.add(a);const s=new dn(pn,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new k(0,-1,0)),this.add(s);const o=new dn(pn,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new k(0,0,1)),this.add(o);const c=new dn(pn,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new k(0,0,-1)),this.add(c)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,s,o,c]=this.children,l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l}}class mn extends B{constructor(t,e,n,i,r,a,s,o,c,l){super(t=void 0!==t?t:[],e=void 0!==e?e:301,n,i,r,a,s=void 0!==s?s:f,o,c,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}mn.prototype.isCubeTexture=!0;class gn extends U{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new mn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:o,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=m,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new sn(5,5,5),s=new hn({name:"CubemapFromEquirect",uniforms:on(n),vertexShader:i,fragmentShader:r,side:1,blending:0});s.uniforms.tEquirect.value=e;const l=new rn(a,s),h=e.minFilter;return e.minFilter===c&&(e.minFilter=o),new fn(1,10,this).update(t,l),e.minFilter=h,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}gn.prototype.isWebGLCubeRenderTarget=!0;class vn extends B{constructor(t,e,n,i,r,a,o,c,l,h,u,d){super(null,a,o,c,l,h,i,r,u,d),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:s,this.minFilter=void 0!==h?h:s,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}vn.prototype.isDataTexture=!0;const yn=new dt,xn=new k;class _n{constructor(t=new Jt,e=new Jt,n=new Jt,i=new Jt,r=new Jt,a=new Jt){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(s-i,h-o,f-u,y-m).normalize(),e[1].setComponents(s+i,h+o,f+u,y+m).normalize(),e[2].setComponents(s+r,h+c,f+d,y+g).normalize(),e[3].setComponents(s-r,h-c,f-d,y-g).normalize(),e[4].setComponents(s-a,h-l,f-p,y-v).normalize(),e[5].setComponents(s+a,h+l,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),yn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(yn)}intersectsSprite(t){return yn.center.set(0,0,0),yn.radius=.7071067811865476,yn.applyMatrix4(t.matrixWorld),this.intersectsSphere(yn)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(xn.x=i.normal.x>0?t.max.x:t.min.x,xn.y=i.normal.y>0?t.max.y:t.min.y,xn.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(xn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function bn(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Mn(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const a=i.get(e);void 0===a?i.set(e,function(e,i){const r=e.array,a=e.usage,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,r,a),e.onUploadCallback();let o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:r instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):a.version<e.version&&(function(e,i,r){const a=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,a):(n?t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(a.buffer,e,r),a.version=e.version)}}}class wn extends Fe{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,s=Math.floor(n),o=Math.floor(i),c=s+1,l=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-a;for(let n=0;n<c;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+c*t,i=e+c*(t+1),r=e+1+c*(t+1),a=e+1+c*t;d.push(n,i,a),d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new Ce(p,3)),this.setAttribute("normal",new Ce(f,3)),this.setAttribute("uv",new Ce(m,2))}}const Sn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Tn={common:{diffuse:{value:new ge(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new N},uv2Transform:{value:new N},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new I(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ge(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new N}},sprite:{diffuse:{value:new ge(15658734)},opacity:{value:1},center:{value:new I(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new N}}},En={basic:{uniforms:cn([Tn.common,Tn.specularmap,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.fog]),vertexShader:Sn.meshbasic_vert,fragmentShader:Sn.meshbasic_frag},lambert:{uniforms:cn([Tn.common,Tn.specularmap,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)}}]),vertexShader:Sn.meshlambert_vert,fragmentShader:Sn.meshlambert_frag},phong:{uniforms:cn([Tn.common,Tn.specularmap,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)},specular:{value:new ge(1118481)},shininess:{value:30}}]),vertexShader:Sn.meshphong_vert,fragmentShader:Sn.meshphong_frag},standard:{uniforms:cn([Tn.common,Tn.envmap,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.roughnessmap,Tn.metalnessmap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Sn.meshphysical_vert,fragmentShader:Sn.meshphysical_frag},toon:{uniforms:cn([Tn.common,Tn.aomap,Tn.lightmap,Tn.emissivemap,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.gradientmap,Tn.fog,Tn.lights,{emissive:{value:new ge(0)}}]),vertexShader:Sn.meshtoon_vert,fragmentShader:Sn.meshtoon_frag},matcap:{uniforms:cn([Tn.common,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,Tn.fog,{matcap:{value:null}}]),vertexShader:Sn.meshmatcap_vert,fragmentShader:Sn.meshmatcap_frag},points:{uniforms:cn([Tn.points,Tn.fog]),vertexShader:Sn.points_vert,fragmentShader:Sn.points_frag},dashed:{uniforms:cn([Tn.common,Tn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Sn.linedashed_vert,fragmentShader:Sn.linedashed_frag},depth:{uniforms:cn([Tn.common,Tn.displacementmap]),vertexShader:Sn.depth_vert,fragmentShader:Sn.depth_frag},normal:{uniforms:cn([Tn.common,Tn.bumpmap,Tn.normalmap,Tn.displacementmap,{opacity:{value:1}}]),vertexShader:Sn.normal_vert,fragmentShader:Sn.normal_frag},sprite:{uniforms:cn([Tn.sprite,Tn.fog]),vertexShader:Sn.sprite_vert,fragmentShader:Sn.sprite_frag},background:{uniforms:{uvTransform:{value:new N},t2D:{value:null}},vertexShader:Sn.background_vert,fragmentShader:Sn.background_frag},cube:{uniforms:cn([Tn.envmap,{opacity:{value:1}}]),vertexShader:Sn.cube_vert,fragmentShader:Sn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Sn.equirect_vert,fragmentShader:Sn.equirect_frag},distanceRGBA:{uniforms:cn([Tn.common,Tn.displacementmap,{referencePosition:{value:new k},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Sn.distanceRGBA_vert,fragmentShader:Sn.distanceRGBA_frag},shadow:{uniforms:cn([Tn.lights,Tn.fog,{color:{value:new ge(0)},opacity:{value:1}}]),vertexShader:Sn.shadow_vert,fragmentShader:Sn.shadow_frag}};function An(t,e,n,i,r){const a=new ge(0);let s,o,c=0,l=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),c=e,d(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,d(a,c)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?d(a,c):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||306===m.mapping)?(void 0===o&&(o=new rn(new sn(1,1,1),new hn({name:"BackgroundCubeMaterial",uniforms:on(En.cube.uniforms),vertexShader:En.cube.vertexShader,fragmentShader:En.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=m,o.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,l===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new rn(new wn(2,2),new hn({name:"BackgroundMaterial",uniforms:on(En.background.uniforms),vertexShader:En.background.vertexShader,fragmentShader:En.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version&&u===t.toneMapping||(s.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Ln(t,e,n,i){const r=t.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},c=d(null);let l=c;function h(e){return i.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,r){const a=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==r&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r)}function g(){const e=l.newAttributes,n=l.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function v(e,n,r,a,s,o){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,a,s,o):t.vertexAttribIPointer(e,n,r,s,o)}function y(){x(),l!==c&&(l=c,h(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(r,c,u,y,x){let _=!1;if(s){const e=function(e,n,r){const s=!0===r.wireframe;let c=o[e.id];void 0===c&&(c={},o[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let h=l[s];return void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),l[s]=h),h}(y,u,c);l!==e&&(l=e,h(l.object)),_=function(t,e){const n=l.attributes,i=t.attributes;let r=0;for(const t in i){const e=n[t],a=i[t];if(void 0===e)return!0;if(e.attribute!==a)return!0;if(e.data!==a.data)return!0;r++}return l.attributesNum!==r||l.index!==e}(y,x),_&&function(t,e){const n={},i=t.attributes;let r=0;for(const t in i){const e=i[t],a={};a.attribute=e,e.data&&(a.data=e.data),n[t]=a,r++}l.attributes=n,l.attributesNum=r,l.index=e}(y,x)}else{const t=!0===c.wireframe;l.geometry===y.id&&l.program===u.id&&l.wireframe===t||(l.geometry=y.id,l.program=u.id,l.wireframe=t,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==x&&n.update(x,34963),_&&(function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const c=o.attributes,l=s.getAttributes(),h=a.defaultAttributeValues;for(const e in l){const i=l[e];if(i>=0){const a=c[e];if(void 0!==a){const e=a.normalized,r=a.itemSize,s=n.get(a);if(void 0===s)continue;const c=s.buffer,l=s.type,h=s.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,s=n.stride,u=a.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(34962,c),v(i,r,l,e,s*h,u*h)}else a.isInstancedBufferAttribute?(m(i,a.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)):f(i),t.bindBuffer(34962,c),v(i,r,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(r.instanceMatrix);if(void 0===e)continue;const a=e.buffer,s=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(34962,a),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(r.instanceColor);if(void 0===e)continue;const a=e.buffer,s=e.type;m(i,1),t.bindBuffer(34962,a),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(r,c,u,y),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function Cn(t,e,n,i){const r=i.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,i){t.drawArrays(a,e,i),n.update(i,a,1)},this.renderInstances=function(i,s,o){if(0===o)return;let c,l;if(r)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](a,i,s,o),n.update(s,a,o)}}function Rn(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),v=h>0,y=a||e.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:a?t.getParameter(36183):0}}function Pn(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new Jt,o=new N,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const a=null!==t?t.length:0;let l=null;if(0!==a){if(l=c.value,!0!==r||null===l){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=i;e!==a;++e,n+=4)s.copy(t[e]).applyMatrix4(r,o),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const s=0!==t.length||e||0!==i||r;return r=e,n=h(t,a,0),i=t.length,s},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,l()},this.setState=function(e,s,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!r||null===u||0===u.length||a&&!p)a?h(null):l();else{const t=a?0:i,e=4*t;let r=f.clippingState||null;c.value=r,r=h(u,s,e,o);for(let t=0;t!==e;++t)r[t]=n[t];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Dn(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(303===a||304===a){if(e.has(r))return n(e.get(r).texture,r.mapping);{const a=r.image;if(a&&a.height>0){const s=t.getRenderTarget(),o=new gn(a.height/2);return o.fromEquirectangularTexture(t,r),e.set(r,o),t.setRenderTarget(s),r.addEventListener("dispose",i),n(o.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}function In(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Nn(t,e,n,i){const r={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",s),delete r[o.id];const c=a.get(o);c&&(e.remove(c),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(Pe(n)>65535?Ae:Te)(n,1);o.version=s;const c=a.get(t);c&&e.remove(c),a.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}function On(t,e,n,i){const r=i.isWebGL2;let a,s,o;this.setMode=function(t){a=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(a,i,s,e*o),n.update(i,a,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](a,c,s,i*o,l),n.update(c,a,l)}}function zn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Hn(t,e){return t[0]-e[0]}function Bn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Fn(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(r,a,s,o){const c=r.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[a.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[a.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(Bn);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(Hn);const u=s.morphTargets&&a.morphAttributes.position,d=s.morphNormals&&a.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],r=e[0],s=e[1];r!==Number.MAX_SAFE_INTEGER&&s?(u&&a.getAttribute("morphTarget"+t)!==u[r]&&a.setAttribute("morphTarget"+t,u[r]),d&&a.getAttribute("morphNormal"+t)!==d[r]&&a.setAttribute("morphNormal"+t,d[r]),n[t]=s,p+=s):(u&&!0===a.hasAttribute("morphTarget"+t)&&a.deleteAttribute("morphTarget"+t),d&&!0===a.hasAttribute("morphNormal"+t)&&a.deleteAttribute("morphNormal"+t),n[t]=0)}const f=a.morphTargetsRelative?1:1-p;o.getUniforms().setValue(t,"morphTargetBaseInfluence",f),o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function Gn(t,e,n,i){let r=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=i.render.frame,o=t.geometry,c=e.get(t,o);return r.get(c)!==s&&(e.update(c),r.set(c,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",a)&&t.addEventListener("dispose",a),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),c},dispose:function(){r=new WeakMap}}}En.physical={uniforms:cn([En.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new I(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ge(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Sn.meshphysical_vert,fragmentShader:Sn.meshphysical_frag};class Un extends B{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=s,this.minFilter=s,this.wrapR=r,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Un.prototype.isDataTexture2DArray=!0;class qn extends B{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=s,this.minFilter=s,this.wrapR=r,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}qn.prototype.isDataTexture3D=!0;const kn=new B,Vn=new Un,Wn=new qn,jn=new mn,Zn=[],Xn=[],Yn=new Float32Array(16),Jn=new Float32Array(9),Qn=new Float32Array(4);function Kn(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=Zn[r];if(void 0===a&&(a=new Float32Array(r),Zn[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function $n(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function ti(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function ei(t,e){let n=Xn[e];void 0===n&&(n=new Int32Array(e),Xn[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function ni(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ii(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if($n(n,e))return;t.uniform2fv(this.addr,e),ti(n,e)}}function ri(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if($n(n,e))return;t.uniform3fv(this.addr,e),ti(n,e)}}function ai(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if($n(n,e))return;t.uniform4fv(this.addr,e),ti(n,e)}}function si(t,e){const n=this.cache,i=e.elements;if(void 0===i){if($n(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),ti(n,e)}else{if($n(n,i))return;Qn.set(i),t.uniformMatrix2fv(this.addr,!1,Qn),ti(n,i)}}function oi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if($n(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),ti(n,e)}else{if($n(n,i))return;Jn.set(i),t.uniformMatrix3fv(this.addr,!1,Jn),ti(n,i)}}function ci(t,e){const n=this.cache,i=e.elements;if(void 0===i){if($n(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),ti(n,e)}else{if($n(n,i))return;Yn.set(i),t.uniformMatrix4fv(this.addr,!1,Yn),ti(n,i)}}function li(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function hi(t,e){const n=this.cache;$n(n,e)||(t.uniform2iv(this.addr,e),ti(n,e))}function ui(t,e){const n=this.cache;$n(n,e)||(t.uniform3iv(this.addr,e),ti(n,e))}function di(t,e){const n=this.cache;$n(n,e)||(t.uniform4iv(this.addr,e),ti(n,e))}function pi(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function fi(t,e){const n=this.cache;$n(n,e)||(t.uniform2uiv(this.addr,e),ti(n,e))}function mi(t,e){const n=this.cache;$n(n,e)||(t.uniform3uiv(this.addr,e),ti(n,e))}function gi(t,e){const n=this.cache;$n(n,e)||(t.uniform4uiv(this.addr,e),ti(n,e))}function vi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||kn,r)}function yi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Wn,r)}function xi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||jn,r)}function _i(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Vn,r)}function bi(t,e){t.uniform1fv(this.addr,e)}function Mi(t,e){const n=Kn(e,this.size,2);t.uniform2fv(this.addr,n)}function wi(t,e){const n=Kn(e,this.size,3);t.uniform3fv(this.addr,n)}function Si(t,e){const n=Kn(e,this.size,4);t.uniform4fv(this.addr,n)}function Ti(t,e){const n=Kn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Ei(t,e){const n=Kn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Ai(t,e){const n=Kn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Li(t,e){t.uniform1iv(this.addr,e)}function Ci(t,e){t.uniform2iv(this.addr,e)}function Ri(t,e){t.uniform3iv(this.addr,e)}function Pi(t,e){t.uniform4iv(this.addr,e)}function Di(t,e){t.uniform1uiv(this.addr,e)}function Ii(t,e){t.uniform2uiv(this.addr,e)}function Ni(t,e){t.uniform3uiv(this.addr,e)}function Oi(t,e){t.uniform4uiv(this.addr,e)}function zi(t,e,n){const i=e.length,r=ei(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||kn,r[t])}function Hi(t,e,n){const i=e.length,r=ei(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||jn,r[t])}function Bi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return ni;case 35664:return ii;case 35665:return ri;case 35666:return ai;case 35674:return si;case 35675:return oi;case 35676:return ci;case 5124:case 35670:return li;case 35667:case 35671:return hi;case 35668:case 35672:return ui;case 35669:case 35673:return di;case 5125:return pi;case 36294:return fi;case 36295:return mi;case 36296:return gi;case 35678:case 36198:case 36298:case 36306:case 35682:return vi;case 35679:case 36299:case 36307:return yi;case 35680:case 36300:case 36308:case 36293:return xi;case 36289:case 36303:case 36311:case 36292:return _i}}(e.type)}function Fi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return bi;case 35664:return Mi;case 35665:return wi;case 35666:return Si;case 35674:return Ti;case 35675:return Ei;case 35676:return Ai;case 5124:case 35670:return Li;case 35667:case 35671:return Ci;case 35668:case 35672:return Ri;case 35669:case 35673:return Pi;case 5125:return Di;case 36294:return Ii;case 36295:return Ni;case 36296:return Oi;case 35678:case 36198:case 36298:case 36306:case 35682:return zi;case 35680:case 36300:case 36308:case 36293:return Hi}}(e.type)}function Gi(t){this.id=t,this.seq=[],this.map={}}Fi.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),ti(e,t)},Gi.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}};const Ui=/(\w+)(\])?(\[|\.)?/g;function qi(t,e){t.seq.push(e),t.map[e.id]=e}function ki(t,e,n){const i=t.name,r=i.length;for(Ui.lastIndex=0;;){const a=Ui.exec(i),s=Ui.lastIndex;let o=a[1];const c="]"===a[2],l=a[3];if(c&&(o|=0),void 0===l||"["===l&&s+2===r){qi(n,void 0===l?new Bi(o,t,e):new Fi(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Gi(o),qi(n,t)),n=t}}}function Vi(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);ki(n,t.getUniformLocation(e,n.name),this)}}function Wi(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}Vi.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},Vi.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},Vi.upload=function(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}},Vi.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let ji=0;function Zi(t){switch(t){case S:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Xi(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return i&&""===r?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Yi(t,e){const n=Zi(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ji(t,e){const n=Zi(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Qi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ki(t){return""!==t}function $i(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function tr(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const er=/^[ \t]*#include +<([\w\d./]+)>/gm;function nr(t){return t.replace(er,ir)}function ir(t,e){const n=Sn[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return nr(n)}const rr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ar=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sr(t){return t.replace(ar,cr).replace(rr,or)}function or(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),cr(0,e,n,i)}function cr(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function lr(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function hr(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ki).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(a),m=r.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Ki).join("\n"),g.length>0&&(g+="\n"),v=[p,f].filter(Ki).join("\n"),v.length>0&&(v+="\n")):(g=[lr(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ki).join("\n"),v=[p,lr(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Sn.tonemapping_pars_fragment:"",0!==n.toneMapping?Qi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Sn.encodings_pars_fragment,n.map?Yi("mapTexelToLinear",n.mapEncoding):"",n.matcap?Yi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Yi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Yi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Yi("lightMapTexelToLinear",n.lightMapEncoding):"",Ji("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ki).join("\n")),s=nr(s),s=$i(s,n),s=tr(s,n),o=nr(o),o=$i(o,n),o=tr(o,n),s=sr(s),o=sr(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===L?"":"out highp vec4 pc_fragColor;",n.glslVersion===L?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+o,_=Wi(r,35633,y+g+s),b=Wi(r,35632,x);if(r.attachShader(m,_),r.attachShader(m,b),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(m).trim(),e=r.getShaderInfoLog(_).trim(),n=r.getShaderInfoLog(b).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(m,35714)){i=!1;const e=Xi(r,_,"vertex"),n=Xi(r,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}let M,w;return r.deleteShader(_),r.deleteShader(b),this.getUniforms=function(){return void 0===M&&(M=new Vi(r,m)),M},this.getAttributes=function(){return void 0===w&&(w=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r).name;n[i]=t.getAttribLocation(e,i)}return n}(r,m)),w},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=ji++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=b,this}function ur(t,e,n,i,r,a){const s=[],o=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=S,e}return{getParameters:function(r,s,f,g,v){const y=g.fog,x=r.isMeshStandardMaterial?g.environment:null,_=e.get(r.envMap||x),b=p[r.type],M=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;let w,S;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),b){const t=En[b];w=t.vertexShader,S=t.fragmentShader}else w=r.vertexShader,S=r.fragmentShader;const T=t.getRenderTarget();return{isWebGL2:o,shaderID:b,shaderName:r.type,vertexShader:w,fragmentShader:S,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:u,outputEncoding:null!==T?m(T.texture):t.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:m(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!y,useFog:r.fog,fogExp2:y&&y.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:c,skinning:r.skinning&&M>0,maxBones:M,useVertexTexture:l,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=En[e];n=ln.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new hr(t,n,e,r),s.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function dr(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function pr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function fr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function mr(t){const e=[];let n=0;const i=[],r=[],a={id:-1};function s(i,r,s,o,c,l){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:r,material:s,program:u.program||a,groupOrder:o,renderOrder:i.renderOrder,z:c,group:l},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=s,h.program=u.program||a,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=c,h.group=l),n++,h}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(t,e,n,a,o,c){const l=s(t,e,n,a,o,c);(!0===n.transparent?r:i).push(l)},unshift:function(t,e,n,a,o,c){const l=s(t,e,n,a,o,c);(!0===n.transparent?r:i).unshift(l)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||pr),r.length>1&&r.sort(e||fr)}}}function gr(t){let e=new WeakMap;return{get:function(n,i){let r;return!1===e.has(n)?(r=new mr(t),e.set(n,[r])):i>=e.get(n).length?(r=new mr(t),e.get(n).push(r)):r=e.get(n)[i],r},dispose:function(){e=new WeakMap}}}function vr(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new k,color:new ge};break;case"SpotLight":n={position:new k,direction:new k,color:new ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new k,color:new ge,distance:0,decay:0};break;case"HemisphereLight":n={direction:new k,skyColor:new ge,groundColor:new ge};break;case"RectAreaLight":n={color:new ge,position:new k,halfWidth:new k,halfHeight:new k}}return t[e.id]=n,n}}}let yr=0;function xr(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function _r(t,e){const n=new vr,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new I};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new I,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new k);const a=new k,s=new bt,o=new bt;return{setup:function(a){let s=0,o=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let l=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;a.sort(xr);for(let t=0,e=a.length;t<e;t++){const e=a[t],v=e.color,y=e.intensity,x=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=v.r*y,o+=v.g*y,c+=v.b*y;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],y);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[l]=n,r.directionalShadowMap[l]=_,r.directionalShadowMatrix[l]=e.shadow.matrix,f++}r.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(v).multiplyScalar(y),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.spotShadow[u]=n,r.spotShadowMap[u]=_,r.spotShadowMatrix[u]=e.shadow.matrix,g++}r.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(v).multiplyScalar(y),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=_,r.pointShadowMatrix[h]=e.shadow.matrix,m++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(y),t.groundColor.copy(e.groundColor).multiplyScalar(y),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Tn.LTC_FLOAT_1,r.rectAreaLTC2=Tn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Tn.LTC_HALF_1,r.rectAreaLTC2=Tn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=s,r.ambient[1]=o,r.ambient[2]=c;const v=r.hash;v.directionalLength===l&&v.pointLength===h&&v.spotLength===u&&v.rectAreaLength===d&&v.hemiLength===p&&v.numDirectionalShadows===f&&v.numPointShadows===m&&v.numSpotShadows===g||(r.directional.length=l,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=m,r.spotShadowMatrix.length=g,v.directionalLength=l,v.pointLength=h,v.spotLength=u,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=f,v.numPointShadows=m,v.numSpotShadows=g,r.version=yr++)},setupView:function(t,e){let n=0,i=0,c=0,l=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=r.spot[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),c++}else if(d.isRectAreaLight){const t=r.rectArea[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o.identity(),s.copy(d.matrixWorld),s.premultiply(u),o.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),l++}else if(d.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:r}}function br(t,e){const n=new _r(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Mr(t,e){let n=new WeakMap;return{get:function(i,r=0){let a;return!1===n.has(i)?(a=new br(t,e),n.set(i,[a])):r>=n.get(i).length?(a=new br(t,e),n.get(i).push(a)):a=n.get(i)[r],a},dispose:function(){n=new WeakMap}}}class wr extends le{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}wr.prototype.isMeshDepthMaterial=!0;class Sr extends le{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new k,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Tr(t,e,n){let i=new _n;const r=new I,a=new I,c=new G,l=[],h=[],u={},d=n.maxTextureSize,p={0:1,1:0,2:2},f=new hn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new I},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=f.clone();g.defines.HORIZONTAL_PASS=1;const v=new Fe;v.setAttribute("position",new _e(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new rn(v,f),x=this;function _(n,i){const r=e.update(y);f.uniforms.shadow_pass.value=n.map.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,f,y,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,g,y,null)}function b(t,e,n){const i=t<<0|e<<1|n<<2;let r=l[i];return void 0===r&&(r=new wr({depthPacking:3201,morphTargets:t,skinning:e}),l[i]=r),r}function M(t,e,n){const i=t<<0|e<<1|n<<2;let r=h[i];return void 0===r&&(r=new Sr({morphTargets:t,skinning:e}),h[i]=r),r}function w(e,n,i,r,a,s,o){let c=null,l=b,h=e.customDepthMaterial;if(!0===r.isPointLight&&(l=M,h=e.customDistanceMaterial),void 0===h){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),c=l(t,r,!0===e.isInstancedMesh)}else c=h;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=u[t];void 0===n&&(n={},u[t]=n);let r=n[e];void 0===r&&(r=c.clone(),n[e]=r),c=r}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=3===o?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:p[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=a,c.farDistance=s),c}function S(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],h=r[l.materialIndex];if(h&&h.visible){const e=w(n,i,h,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,l)}}}else if(r.visible){const e=w(n,i,r,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)S(c[t],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,l){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),u=t.getActiveCubeFace(),p=t.getActiveMipmapLevel(),f=t.state;f.setBlending(0),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(let h=0,u=e.length;h<u;h++){const u=e[h],p=u.shadow;if(void 0===p){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===p.autoUpdate&&!1===p.needsUpdate)continue;r.copy(p.mapSize);const g=p.getFrameExtents();if(r.multiply(g),a.copy(p.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(a.x=Math.floor(d/g.x),r.x=a.x*g.x,p.mapSize.x=a.x),r.y>d&&(a.y=Math.floor(d/g.y),r.y=a.y*g.y,p.mapSize.y=a.y)),null===p.map&&!p.isPointLightShadow&&3===this.type){const t={minFilter:o,magFilter:o,format:m};p.map=new U(r.x,r.y,t),p.map.texture.name=u.name+".shadowMap",p.mapPass=new U(r.x,r.y,t),p.camera.updateProjectionMatrix()}if(null===p.map){const t={minFilter:s,magFilter:s,format:m};p.map=new U(r.x,r.y,t),p.map.texture.name=u.name+".shadowMap",p.camera.updateProjectionMatrix()}t.setRenderTarget(p.map),t.clear();const v=p.getViewportCount();for(let t=0;t<v;t++){const e=p.getViewport(t);c.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),f.viewport(c),p.updateMatrices(u,t),i=p.getFrustum(),S(n,l,p.camera,u,this.type)}p.isPointLightShadow||3!==this.type||_(p,l),p.needsUpdate=!1}x.needsUpdate=!1,t.setRenderTarget(h,u,p)}}function Er(e,n,i){const r=i.isWebGL2,a=new function(){let t=!1;const n=new G;let i=null;const r=new G(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,s,o){!0===o&&(t*=s,i*=s,a*=s),n.set(t,i,a,s),!1===r.equals(n)&&(e.clearColor(t,i,a,s),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},s=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(t){t?z(2929):H(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},o=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,o=null,c=null,l=null;return{setTest:function(e){t||(e?z(2960):H(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){i===t&&r===n&&a===s||(e.stencilFunc(t,n,s),i=t,r=n,a=s)},setOp:function(t,n,i){s===t&&o===n&&c===i||(e.stencilOp(t,n,i),s=t,o=n,c=i)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,o=null,c=null,l=null}}};let c={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,x=null,_=!1,b=null,M=null,w=null,S=null,T=null;const E=e.getParameter(35661);let A=!1,L=0;const C=e.getParameter(7938);-1!==C.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(C)[1]),A=L>=1):-1!==C.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(C)[1]),A=L>=2);let R=null,P={};const D=new G(0,0,e.canvas.width,e.canvas.height),I=new G(0,0,e.canvas.width,e.canvas.height);function N(t,n,i){const r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,r);return a}const O={};function z(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function H(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}O[3553]=N(3553,3553,1),O[34067]=N(34067,34069,6),a.setClear(0,0,0,1),s.setClear(1),o.setClear(0),z(2929),s.setFunc(3),q(!1),k(1),z(2884),U(0);const B={[t]:32774,101:32778,102:32779};if(r)B[103]=32775,B[104]=32776;else{const t=n.get("EXT_blend_minmax");null!==t&&(B[103]=t.MIN_EXT,B[104]=t.MAX_EXT)}const F={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function U(n,i,r,a,s,o,c,l){if(0!==n){if(!1===d&&(z(3042),d=!0),5===n)s=s||i,o=o||r,c=c||a,i===f&&s===v||(e.blendEquationSeparate(B[i],B[s]),f=i,v=s),r===m&&a===g&&o===y&&c===x||(e.blendFuncSeparate(F[r],F[a],F[o],F[c]),m=r,g=a,y=o,x=c),p=n,_=null;else if(n!==p||l!==_){if(f===t&&v===t||(e.blendEquation(32774),f=t,v=t),l)switch(n){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}else switch(n){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}m=null,g=null,y=null,x=null,p=n,_=l}}else!0===d&&(H(3042),d=!1)}function q(t){b!==t&&(t?e.frontFace(2304):e.frontFace(2305),b=t)}function k(t){0!==t?(z(2884),t!==M&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):H(2884),M=t}function V(t,n,i){t?(z(32823),S===n&&T===i||(e.polygonOffset(n,i),S=n,T=i)):H(32823)}function W(t){void 0===t&&(t=33984+E-1),R!==t&&(e.activeTexture(t),R=t)}return{buffers:{color:a,depth:s,stencil:o},enable:z,disable:H,bindFramebuffer:function(t,n){null===n&&null!==l&&(n=l),h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n)},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:U,setMaterial:function(t,e){2===t.side?H(2884):z(2884);let n=1===t.side;e&&(n=!n),q(n),1===t.blending&&!1===t.transparent?U(0):U(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),a.setMask(t.colorWrite);const i=t.stencilWrite;o.setTest(i),i&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),V(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?z(32926):H(32926)},setFlipSided:q,setCullFace:k,setLineWidth:function(t){t!==w&&(A&&e.lineWidth(t),w=t)},setPolygonOffset:V,setScissorTest:function(t){t?z(3089):H(3089)},activeTexture:W,bindTexture:function(t,n){null===R&&W();let i=P[R];void 0===i&&(i={type:void 0,texture:void 0},P[R]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||O[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=P[R];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===D.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),D.copy(t))},viewport:function(t){!1===I.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),I.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},R=null,P={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,y=null,x=null,_=!1,b=null,M=null,w=null,S=null,T=null,D.set(0,0,e.canvas.width,e.canvas.height),I.set(0,0,e.canvas.width,e.canvas.height),a.reset(),s.reset(),o.reset()}}}function Ar(t,n,i,y,x,_,b){const M=x.isWebGL2,w=x.maxTextures,S=x.maxCubemapSize,T=x.maxTextureSize,E=x.maxSamples,A=new WeakMap;let L,C=!1;try{C="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function R(t,e){return C?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function P(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?D.floorPowerOfTwo:Math.floor,a=i(r*t.width),s=i(r*t.height);void 0===L&&(L=R(a,s));const o=n?R(a,s):L;return o.width=a,o.height=s,o.getContext("2d").drawImage(t,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function I(t){return D.isPowerOfTwo(t.width)&&D.isPowerOfTwo(t.height)}function N(t,e){return t.generateMipmaps&&e&&t.minFilter!==s&&t.minFilter!==o}function O(e,n,i,r){t.generateMipmap(e),y.get(n).__maxMipLevel=Math.log2(Math.max(i,r))}function z(e,i,r){if(!1===M)return i;if(null!==e){if(void 0!==t[e])return t[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=i;return 6403===i&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===i&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===i&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||n.get("EXT_color_buffer_float"),a}function H(t){return t===s||1004===t||1005===t?9728:9729}function B(e){const n=e.target;n.removeEventListener("dispose",B),function(e){const n=y.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),y.remove(e))}(n),n.isVideoTexture&&A.delete(n),b.memory.textures--}function F(e){const n=e.target;n.removeEventListener("dispose",F),function(e){const n=e.texture,i=y.get(e),r=y.get(n);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);y.remove(n),y.remove(e)}}(n),b.memory.textures--}let G=0;function U(t,e){const n=y.get(t);if(t.isVideoTexture&&function(t){const e=b.render.frame;A.get(t)!==e&&(A.set(t,e),t.update())}(t),t.version>0&&n.__version!==t.version){const i=t.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void Z(n,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,n.__webglTexture)}function q(e,n){const r=y.get(e);e.version>0&&r.__version!==e.version?function(e,n,r){if(6!==n.image.length)return;j(e,n),i.activeTexture(33984+r),i.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const a=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),s=n.image[0]&&n.image[0].isDataTexture,o=[];for(let t=0;t<6;t++)o[t]=a||s?s?n.image[t].image:n.image[t]:P(n.image[t],!1,!0,S);const c=o[0],l=I(c)||M,h=_.convert(n.format),u=_.convert(n.type),d=z(n.internalFormat,h,u);let p;if(W(34067,n,l),a){for(let t=0;t<6;t++){p=o[t].mipmaps;for(let e=0;e<p.length;e++){const r=p[e];n.format!==m&&n.format!==f?null!==h?i.compressedTexImage2D(34069+t,e,d,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+t,e,d,r.width,r.height,0,h,u,r.data)}}e.__maxMipLevel=p.length-1}else{p=n.mipmaps;for(let t=0;t<6;t++)if(s){i.texImage2D(34069+t,0,d,o[t].width,o[t].height,0,h,u,o[t].data);for(let e=0;e<p.length;e++){const n=p[e].image[t].image;i.texImage2D(34069+t,e+1,d,n.width,n.height,0,h,u,n.data)}}else{i.texImage2D(34069+t,0,d,h,u,o[t]);for(let e=0;e<p.length;e++){const n=p[e];i.texImage2D(34069+t,e+1,d,h,u,n.image[t])}}e.__maxMipLevel=p.length}N(n,l)&&O(34067,n,c.width,c.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(r,e,n):(i.activeTexture(33984+n),i.bindTexture(34067,r.__webglTexture))}const k={[e]:10497,[r]:33071,[a]:33648},V={[s]:9728,1004:9984,1005:9986,[o]:9729,1007:9985,[c]:9987};function W(e,i,a){if(a?(t.texParameteri(e,10242,k[i.wrapS]),t.texParameteri(e,10243,k[i.wrapT]),32879!==e&&35866!==e||t.texParameteri(e,32882,k[i.wrapR]),t.texParameteri(e,10240,V[i.magFilter]),t.texParameteri(e,10241,V[i.minFilter])):(t.texParameteri(e,10242,33071),t.texParameteri(e,10243,33071),32879!==e&&35866!==e||t.texParameteri(e,32882,33071),i.wrapS===r&&i.wrapT===r||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(e,10240,H(i.magFilter)),t.texParameteri(e,10241,H(i.minFilter)),i.minFilter!==s&&i.minFilter!==o&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){const r=n.get("EXT_texture_filter_anisotropic");if(i.type===u&&!1===n.has("OES_texture_float_linear"))return;if(!1===M&&i.type===d&&!1===n.has("OES_texture_half_float_linear"))return;(i.anisotropy>1||y.get(i).__currentAnisotropy)&&(t.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,x.getMaxAnisotropy())),y.get(i).__currentAnisotropy=i.anisotropy)}}function j(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",B),e.__webglTexture=t.createTexture(),b.memory.textures++)}function Z(e,n,a){let c=3553;n.isDataTexture2DArray&&(c=35866),n.isDataTexture3D&&(c=32879),j(e,n),i.activeTexture(33984+a),i.bindTexture(c,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const d=function(t){return!M&&(t.wrapS!==r||t.wrapT!==r||t.minFilter!==s&&t.minFilter!==o)}(n)&&!1===I(n.image),y=P(n.image,d,!1,T),x=I(y)||M,b=_.convert(n.format);let w,S=_.convert(n.type),E=z(n.internalFormat,b,S);W(c,n,x);const A=n.mipmaps;if(n.isDepthTexture)E=6402,M?E=n.type===u?36012:n.type===h?33190:n.type===p?35056:33189:n.type===u&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===g&&6402===E&&n.type!==l&&n.type!==h&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=l,S=_.convert(n.type)),n.format===v&&6402===E&&(E=34041,n.type!==p&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=p,S=_.convert(n.type))),i.texImage2D(3553,0,E,y.width,y.height,0,b,S,null);else if(n.isDataTexture)if(A.length>0&&x){for(let t=0,e=A.length;t<e;t++)w=A[t],i.texImage2D(3553,t,E,w.width,w.height,0,b,S,w.data);n.generateMipmaps=!1,e.__maxMipLevel=A.length-1}else i.texImage2D(3553,0,E,y.width,y.height,0,b,S,y.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=A.length;t<e;t++)w=A[t],n.format!==m&&n.format!==f?null!==b?i.compressedTexImage2D(3553,t,E,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,t,E,w.width,w.height,0,b,S,w.data);e.__maxMipLevel=A.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,E,y.width,y.height,y.depth,0,b,S,y.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,E,y.width,y.height,y.depth,0,b,S,y.data),e.__maxMipLevel=0;else if(A.length>0&&x){for(let t=0,e=A.length;t<e;t++)w=A[t],i.texImage2D(3553,t,E,b,S,w);n.generateMipmaps=!1,e.__maxMipLevel=A.length-1}else i.texImage2D(3553,0,E,b,S,y),e.__maxMipLevel=0;N(n,x)&&O(c,n,y.width,y.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function X(e,n,r,a){const s=n.texture,o=_.convert(s.format),c=_.convert(s.type),l=z(s.internalFormat,o,c);32879===a||35866===a?i.texImage3D(a,0,l,n.width,n.height,n.depth,0,o,c,null):i.texImage2D(a,0,l,n.width,n.height,0,o,c,null),i.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,r,a,y.get(s).__webglTexture,0),i.bindFramebuffer(36160,null)}function Y(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===u?r=36012:e.type===h&&(r=33190));const i=J(n);t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,r=_.convert(e.format),a=_.convert(e.type),s=z(e.internalFormat,r,a);if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height)}t.bindRenderbuffer(36161,null)}function J(t){return M&&t.isWebGLMultisampleRenderTarget?Math.min(E,t.samples):0}let Q=!1,K=!1;this.allocateTextureUnit=function(){const t=G;return t>=w&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+w),G+=1,t},this.resetTextureUnits=function(){G=0},this.setTexture2D=U,this.setTexture2DArray=function(t,e){const n=y.get(t);t.version>0&&n.__version!==t.version?Z(n,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){const n=y.get(t);t.version>0&&n.__version!==t.version?Z(n,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,n.__webglTexture))},this.setTextureCube=q,this.setupRenderTarget=function(e){const n=e.texture,r=y.get(e),a=y.get(n);e.addEventListener("dispose",F),a.__webglTexture=t.createTexture(),a.__version=n.version,b.memory.textures++;const s=!0===e.isWebGLCubeRenderTarget,o=!0===e.isWebGLMultisampleRenderTarget,c=n.isDataTexture3D||n.isDataTexture2DArray,l=I(e)||M;if(!M||n.format!==f||n.type!==u&&n.type!==d||(n.format=m,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),s){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=t.createFramebuffer()}else if(r.__webglFramebuffer=t.createFramebuffer(),o)if(M){r.__webglMultisampledFramebuffer=t.createFramebuffer(),r.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,r.__webglColorRenderbuffer);const a=_.convert(n.format),s=_.convert(n.type),o=z(n.internalFormat,a,s),c=J(e);t.renderbufferStorageMultisample(36161,c,o,e.width,e.height),i.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(r.__webglDepthRenderbuffer=t.createRenderbuffer(),Y(r.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(s){i.bindTexture(34067,a.__webglTexture),W(34067,n,l);for(let t=0;t<6;t++)X(r.__webglFramebuffer[t],e,36064,34069+t);N(n,l)&&O(34067,n,e.width,e.height),i.bindTexture(34067,null)}else{let t=3553;c&&(M?t=n.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),i.bindTexture(t,a.__webglTexture),W(t,n,l),X(r.__webglFramebuffer,e,36064,t),N(n,l)&&O(3553,n,e.width,e.height),i.bindTexture(3553,null)}e.depthBuffer&&function(e){const n=y.get(e),r=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");y.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),U(n.depthTexture,0);const r=y.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===g)t.framebufferTexture2D(36160,36096,3553,r,0);else{if(n.depthTexture.format!==v)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,r,0)}}(n.__webglFramebuffer,e)}else if(r){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)i.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=t.createRenderbuffer(),Y(n.__webglDepthbuffer[r],e,!1)}else i.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),Y(n.__webglDepthbuffer,e,!1);i.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(N(e,I(t)||M)){const n=t.isWebGLCubeRenderTarget?34067:3553,r=y.get(e).__webglTexture;i.bindTexture(n,r),O(n,e,t.width,t.height),i.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(M){const n=y.get(e);i.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,n.__webglFramebuffer);const r=e.width,a=e.height;let s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024),t.blitFramebuffer(0,0,r,a,0,0,r,a,s,9728),i.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===Q&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),t=t.texture),U(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===K&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),K=!0),t=t.texture),q(t,e)}}function Lr(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===l)return 5123;if(1013===t)return 5124;if(t===h)return 5125;if(t===u)return 5126;if(t===d)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===f)return 6407;if(t===m)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===g)return 6402;if(t===v)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===p?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}Sr.prototype.isMeshDistanceMaterial=!0;class Cr extends dn{constructor(t=[]){super(),this.cameras=t}}Cr.prototype.isArrayCamera=!0;class Rr extends jt{constructor(){super(),this.type="Group"}}function Pr(){this._targetRay=null,this._grip=null,this._hand=null}function Dr(t,e){const n=this,i=t.state;let r=null,a=1,s=null,o="local-floor",c=null;const l=[],h=new Map,u=new dn;u.layers.enable(1),u.viewport=new G;const d=new dn;d.layers.enable(2),d.viewport=new G;const p=[u,d],f=new Cr;f.layers.enable(1),f.layers.enable(2);let m=null,g=null;function v(t){const e=h.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function y(){h.forEach((function(t,e){t.disconnect(e)})),h.clear(),m=null,g=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(t){const e=r.inputSources;for(let t=0;t<l.length;t++)h.set(e[t],l[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=h.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),h.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=h.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new Pr,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new Pr,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new Pr,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return r},this.setSession=async function(t){if(r=t,null!==r){r.addEventListener("select",v),r.addEventListener("selectstart",v),r.addEventListener("selectend",v),r.addEventListener("squeeze",v),r.addEventListener("squeezestart",v),r.addEventListener("squeezeend",v),r.addEventListener("end",y),r.addEventListener("inputsourceschange",x);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const i={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:a},c=new XRWebGLLayer(r,e,i);r.updateRenderState({baseLayer:c}),s=await r.requestReferenceSpace(o),S.setContext(r),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const _=new k,b=new k;function M(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){f.near=d.near=u.near=t.near,f.far=d.far=u.far=t.far,m===f.near&&g===f.far||(r.updateRenderState({depthNear:f.near,depthFar:f.far}),m=f.near,g=f.far);const e=t.parent,n=f.cameras;M(f,e);for(let t=0;t<n.length;t++)M(n[t],e);t.matrixWorld.copy(f.matrixWorld),t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){_.setFromMatrixPosition(e.matrixWorld),b.setFromMatrixPosition(n.matrixWorld);const i=_.distanceTo(b),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),c=(r[9]+1)/r[5],l=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=o+f,y=d-m,x=p+(i-m),M=c*o/v*g,w=l*o/v*g;t.projectionMatrix.makePerspective(y,x,M,w,g,v)}(f,u,d):f.projectionMatrix.copy(u.projectionMatrix),f};let w=null;const S=new bn;S.setAnimationLoop((function(t,e){if(c=e.getViewerPose(s),null!==c){const t=c.views,e=r.renderState.baseLayer;i.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i],a=e.getViewport(r),s=p[i];s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&f.matrix.copy(s.matrix),!0===n&&f.cameras.push(s)}}const n=r.inputSources;for(let t=0;t<l.length;t++){const i=l[t],r=n[t];i.update(r,e,s)}w&&w(t,e)})),this.setAnimationLoop=function(t){w=t},this.dispose=function(){}}function Ir(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,a;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,a){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){let r;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,a):i.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Nr(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let p=null,f=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=S,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const y=this;let x=!1,_=0,b=0,M=null,w=-1,T=null;const E=new G,A=new G;let L=null,C=e.width,R=e.height,P=1,N=null,O=null;const z=new G(0,0,C,R),H=new G(0,0,C,R);let B=!1;const F=new _n;let U=!1,q=!1;const V=new bt,W=new k,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Z(){return null===M?P:1}let X,Y,J,Q,K,$,tt,et,nt,it,rt,at,st,ot,ct,lt,ht,ut,dt,pt,ft,mt,gt=n;function vt(t,n){for(let i=0;i<t.length;i++){const r=t[i],a=e.getContext(r,n);if(null!==a)return a}return null}try{const t={alpha:i,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",_t,!1),e.addEventListener("webglcontextrestored",Mt,!1),null===gt){const e=["webgl2","webgl","experimental-webgl"];if(!0===y.isWebGL1Renderer&&e.shift(),gt=vt(e,t),null===gt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===gt.getShaderPrecisionFormat&&(gt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function yt(){X=new In(gt),Y=new Rn(gt,X,t),X.init(Y),ft=new Lr(gt,X,Y),J=new Er(gt,X,Y),Q=new zn(gt),K=new dr,$=new Ar(gt,X,J,K,Y,ft,Q),tt=new Dn(y),et=new Mn(gt,Y),mt=new Ln(gt,X,et,Y),nt=new Nn(gt,et,Q,mt),it=new Gn(gt,nt,et,Q),ut=new Fn(gt),ct=new Pn(K),rt=new ur(y,tt,X,Y,mt,ct),at=new Ir(K),st=new gr(K),ot=new Mr(X,Y),ht=new An(y,tt,J,it,o),lt=new Tr(y,it,Y),dt=new Cn(gt,X,Q,Y),pt=new On(gt,X,Q,Y),Q.programs=rt.programs,y.capabilities=Y,y.extensions=X,y.properties=K,y.renderLists=st,y.shadowMap=lt,y.state=J,y.info=Q}yt();const xt=new Dr(y,gt);function _t(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function Mt(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const t=Q.autoReset,e=lt.enabled,n=lt.autoUpdate,i=lt.needsUpdate,r=lt.type;yt(),Q.autoReset=t,lt.enabled=e,lt.autoUpdate=n,lt.needsUpdate=i,lt.type=r}function wt(t){const e=t.target;e.removeEventListener("dispose",wt),function(t){(function(t){const e=K.get(t).programs;void 0!==e&&e.forEach((function(t){rt.releaseProgram(t)}))})(t),K.remove(t)}(e)}this.xr=xt,this.getContext=function(){return gt},this.getContextAttributes=function(){return gt.getContextAttributes()},this.forceContextLoss=function(){const t=X.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=X.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(C,R,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new I),t.set(C,R)},this.setSize=function(t,n,i){xt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(C=t,R=n,e.width=Math.floor(t*P),e.height=Math.floor(n*P),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new I),t.set(C*P,R*P).floor()},this.setDrawingBufferSize=function(t,n,i){C=t,R=n,P=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new G),t.copy(E)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),J.viewport(E.copy(z).multiplyScalar(P).floor())},this.getScissor=function(t){return t.copy(H)},this.setScissor=function(t,e,n,i){t.isVector4?H.set(t.x,t.y,t.z,t.w):H.set(t,e,n,i),J.scissor(A.copy(H).multiplyScalar(P).floor())},this.getScissorTest=function(){return B},this.setScissorTest=function(t){J.setScissorTest(B=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){O=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new ge),t.copy(ht.getClearColor())},this.setClearColor=function(){ht.setClearColor.apply(ht,arguments)},this.getClearAlpha=function(){return ht.getClearAlpha()},this.setClearAlpha=function(){ht.setClearAlpha.apply(ht,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),gt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",_t,!1),e.removeEventListener("webglcontextrestored",Mt,!1),st.dispose(),ot.dispose(),K.dispose(),tt.dispose(),it.dispose(),mt.dispose(),xt.dispose(),xt.removeEventListener("sessionstart",Tt),xt.removeEventListener("sessionend",Et),At.stop()},this.renderBufferImmediate=function(t,e){mt.initAttributes();const n=K.get(t);t.hasPositions&&!n.position&&(n.position=gt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=gt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=gt.createBuffer()),t.hasColors&&!n.color&&(n.color=gt.createBuffer());const i=e.getAttributes();t.hasPositions&&(gt.bindBuffer(34962,n.position),gt.bufferData(34962,t.positionArray,35048),mt.enableAttribute(i.position),gt.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(gt.bindBuffer(34962,n.normal),gt.bufferData(34962,t.normalArray,35048),mt.enableAttribute(i.normal),gt.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(gt.bindBuffer(34962,n.uv),gt.bufferData(34962,t.uvArray,35048),mt.enableAttribute(i.uv),gt.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(gt.bindBuffer(34962,n.color),gt.bufferData(34962,t.colorArray,35048),mt.enableAttribute(i.color),gt.vertexAttribPointer(i.color,3,5126,!1,0,0)),mt.disableUnusedAttributes(),gt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=j);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=It(t,e,i,r);J.setMaterial(i,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let h,u=1;!0===i.wireframe&&(c=nt.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&ut.update(r,n,i,o),mt.setup(r,i,o,n,c);let d=dt;null!==c&&(h=et.get(c),d=pt,d.setIndex(h));const p=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==a?a.start*u:0,v=null!==a?a.count*u:1/0,y=Math.max(f,g),x=Math.min(p,f+m,g+v)-1,_=Math.max(0,x-y+1);if(0!==_){if(r.isMesh)!0===i.wireframe?(J.setLineWidth(i.wireframeLinewidth*Z()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),J.setLineWidth(t*Z()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(y,_,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,_,t)}else d.render(y,_)}},this.compile=function(t,e){f=ot.get(t),f.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(f.pushLight(t),t.castShadow&&f.pushShadow(t))})),f.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++)Pt(n[i],t,e);else Pt(n,t,e)}))};let St=null;function Tt(){At.stop()}function Et(){At.start()}const At=new bn;function Lt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)f.pushLight(t),t.castShadow&&f.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||F.intersectsSprite(t)){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=it.update(t),r=t.material;r.visible&&p.push(t,e,r,n,W.z,null)}}else if(t.isImmediateRenderObject)i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V),p.push(t,null,t.material,n,W.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Q.render.frame&&(t.skeleton.update(),t.skeleton.frame=Q.render.frame),!t.frustumCulled||F.intersectsObject(t))){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=it.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&p.push(t,e,o,n,W.z,s)}}else r.visible&&p.push(t,e,r,n,W.z,null)}const r=t.children;for(let t=0,a=r.length;t<a;t++)Lt(r[t],e,n,i)}function Ct(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,c=null===i?a.material:i,l=a.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(J.viewport(E.copy(i.viewport)),f.setupLightsView(i),Rt(s,e,i,o,c,l))}}else Rt(s,e,n,o,c,l)}}function Rt(t,e,n,i,r,a){if(t.onBeforeRender(y,e,n,i,r,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=It(n,e,r,t);J.setMaterial(r),mt.reset(),function(t,e){t.render((function(t){y.renderBufferImmediate(t,e)}))}(t,i)}else y.renderBufferDirect(n,e,i,r,t,a);t.onAfterRender(y,e,n,i,r,a)}function Pt(t,e,n){!0!==e.isScene&&(e=j);const i=K.get(t),r=f.state.lights,a=f.state.shadowsArray,s=r.state.version,o=rt.getParameters(t,r.state,a,e,n),c=rt.getProgramCacheKey(o);let l=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=tt.get(t.envMap||i.environment),void 0===l&&(t.addEventListener("dispose",wt),l=new Map,i.programs=l);let h=l.get(c);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Dt(t,o),h}else o.uniforms=rt.getUniforms(t),t.onBeforeCompile(o,y),h=rt.acquireProgram(o,c),l.set(c,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Dt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const d=h.getUniforms(),p=Vi.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Dt(t,e){const n=K.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function It(t,e,n,i){!0!==e.isScene&&(e=j),$.resetTextureUnits();const r=e.fog,a=n.isMeshStandardMaterial?e.environment:null,s=null===M?y.outputEncoding:M.texture.encoding,o=tt.get(n.envMap||a),c=!0===n.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,l=K.get(n),h=f.state.lights;if(!0===U&&(!0===q||t!==T)){const e=t===T&&n.id===w;ct.setState(n,t,e)}let d=!1;n.version===l.__version?l.needsLights&&l.lightsStateVersion!==h.state.version||l.outputEncoding!==s||i.isInstancedMesh&&!1===l.instancing?d=!0:i.isInstancedMesh||!0!==l.instancing?l.envMap!==o||n.fog&&l.fog!==r?d=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===ct.numPlanes&&l.numIntersection===ct.numIntersection?l.vertexAlphas!==c&&(d=!0):d=!0:d=!0:(d=!0,l.__version=n.version);let p=l.currentProgram;!0===d&&(p=Pt(n,e,i));let g=!1,v=!1,x=!1;const _=p.getUniforms(),b=l.uniforms;if(J.useProgram(p.program)&&(g=!0,v=!0,x=!0),n.id!==w&&(w=n.id,v=!0),g||T!==t){if(_.setValue(gt,"projectionMatrix",t.projectionMatrix),Y.logarithmicDepthBuffer&&_.setValue(gt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,v=!0,x=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=_.map.cameraPosition;void 0!==e&&e.setValue(gt,W.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&_.setValue(gt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&_.setValue(gt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){_.setOptional(gt,i,"bindMatrix"),_.setOptional(gt,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(Y.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=D.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const r=new vn(i,n,n,m,u);t.boneMatrices=i,t.boneTexture=r,t.boneTextureSize=n}_.setValue(gt,"boneTexture",t.boneTexture,$),_.setValue(gt,"boneTextureSize",t.boneTextureSize)}else _.setOptional(gt,t,"boneMatrices")}}var S,E;return(v||l.receiveShadow!==i.receiveShadow)&&(l.receiveShadow=i.receiveShadow,_.setValue(gt,"receiveShadow",i.receiveShadow)),v&&(_.setValue(gt,"toneMappingExposure",y.toneMappingExposure),l.needsLights&&(E=x,(S=b).ambientLightColor.needsUpdate=E,S.lightProbe.needsUpdate=E,S.directionalLights.needsUpdate=E,S.directionalLightShadows.needsUpdate=E,S.pointLights.needsUpdate=E,S.pointLightShadows.needsUpdate=E,S.spotLights.needsUpdate=E,S.spotLightShadows.needsUpdate=E,S.rectAreaLights.needsUpdate=E,S.hemisphereLights.needsUpdate=E),r&&n.fog&&at.refreshFogUniforms(b,r),at.refreshMaterialUniforms(b,n,P,R),Vi.upload(gt,l.uniformsList,b,$)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Vi.upload(gt,l.uniformsList,b,$),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&_.setValue(gt,"center",i.center),_.setValue(gt,"modelViewMatrix",i.modelViewMatrix),_.setValue(gt,"normalMatrix",i.normalMatrix),_.setValue(gt,"modelMatrix",i.matrixWorld),p}At.setAnimationLoop((function(t){St&&St(t)})),"undefined"!=typeof window&&At.setContext(window),this.setAnimationLoop=function(t){St=t,xt.setAnimationLoop(t),null===t?At.stop():At.start()},xt.addEventListener("sessionstart",Tt),xt.addEventListener("sessionend",Et),this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===x)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===xt.enabled&&!0===xt.isPresenting&&(e=xt.getCamera(e)),!0===t.isScene&&t.onBeforeRender(y,t,e,n||M),f=ot.get(t,v.length),f.init(),v.push(f),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromProjectionMatrix(V),q=this.localClippingEnabled,U=ct.init(this.clippingPlanes,q,e),p=st.get(t,g.length),p.init(),g.push(p),Lt(t,e,0,y.sortObjects),p.finish(),!0===y.sortObjects&&p.sort(N,O),!0===U&&ct.beginShadows();const r=f.state.shadowsArray;lt.render(r,t,e),f.setupLights(),f.setupLightsView(e),!0===U&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ht.render(p,t,e,i);const a=p.opaque,s=p.transparent;a.length>0&&Ct(a,t,e),s.length>0&&Ct(s,t,e),null!==M&&($.updateRenderTargetMipmap(M),$.updateMultisampleRenderTarget(M)),!0===t.isScene&&t.onAfterRender(y,t,e),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1),mt.resetDefaultState(),w=-1,T=null,v.pop(),f=v.length>0?v[v.length-1]:null,g.pop(),p=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return M},this.setRenderTarget=function(t,e=0,n=0){M=t,_=e,b=n,t&&void 0===K.get(t).__webglFramebuffer&&$.setupRenderTarget(t);let i=null,r=!1,a=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const s=K.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=s[e],r=!0):i=t.isWebGLMultisampleRenderTarget?K.get(t).__webglMultisampledFramebuffer:s,E.copy(t.viewport),A.copy(t.scissor),L=t.scissorTest}else E.copy(z).multiplyScalar(P).floor(),A.copy(H).multiplyScalar(P).floor(),L=B;if(J.bindFramebuffer(36160,i),J.viewport(E),J.scissor(A),J.setScissorTest(L),r){const i=K.get(t.texture);gt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(a){const i=K.get(t.texture),r=e||0;gt.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){J.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,c=s.type;if(o!==m&&ft.convert(o)!==gt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===d&&(X.has("EXT_color_buffer_half_float")||Y.isWebGL2&&X.has("EXT_color_buffer_float"));if(!(1009===c||ft.convert(c)===gt.getParameter(35738)||c===u&&(Y.isWebGL2||X.has("OES_texture_float")||X.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===gt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&gt.readPixels(e,n,i,r,ft.convert(o),ft.convert(c),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==M?K.get(M).__webglFramebuffer:null;J.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i),s=ft.convert(e.format);$.setTexture2D(e,0),gt.copyTexImage2D(3553,n,s,t.x,t.y,r,a,0),J.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,a=e.image.height,s=ft.convert(n.format),o=ft.convert(n.type);$.setTexture2D(n,0),gt.pixelStorei(37440,n.flipY),gt.pixelStorei(37441,n.premultiplyAlpha),gt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?gt.texSubImage2D(3553,i,t.x,t.y,r,a,s,o,e.image.data):e.isCompressedTexture?gt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):gt.texSubImage2D(3553,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&gt.generateMipmap(3553),J.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(y.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:a,height:s,data:o}=n.image,c=ft.convert(i.format),l=ft.convert(i.type);let h;if(i.isDataTexture3D)$.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(i,0),h=35866}gt.pixelStorei(37440,i.flipY),gt.pixelStorei(37441,i.premultiplyAlpha),gt.pixelStorei(3317,i.unpackAlignment);const u=gt.getParameter(3314),d=gt.getParameter(32878),p=gt.getParameter(3316),f=gt.getParameter(3315),m=gt.getParameter(32877);gt.pixelStorei(3314,a),gt.pixelStorei(32878,s),gt.pixelStorei(3316,t.min.x),gt.pixelStorei(3315,t.min.y),gt.pixelStorei(32877,t.min.z),gt.texSubImage3D(h,r,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,l,o),gt.pixelStorei(3314,u),gt.pixelStorei(32878,d),gt.pixelStorei(3316,p),gt.pixelStorei(3315,f),gt.pixelStorei(32877,m),0===r&&i.generateMipmaps&&gt.generateMipmap(h),J.unbindTexture()},this.initTexture=function(t){$.setTexture2D(t,0),J.unbindTexture()},this.resetState=function(){_=0,b=0,M=null,J.reset(),mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Rr.prototype.isGroup=!0,Object.assign(Pr.prototype,{constructor:Pr,getHandSpace:function(){return null===this._hand&&(this._hand=new Rr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Rr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Rr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),c&&t.hand){a=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===c.joints[i.jointName]){const t=new Rr;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[i.jointName]=t,c.add(t)}const r=c.joints[i.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const i=c.joints["index-finger-tip"],r=c.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,l=.005;c.inputState.pinching&&s>o+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&s<=o-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==c&&(c.visible=null!==a),this}}),Object.assign(Dr.prototype,C.prototype),class extends Nr{}.prototype.isWebGL1Renderer=!0;class Or{constructor(t,e=25e-5){this.name="",this.color=new ge(t),this.density=e}clone(){return new Or(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Or.prototype.isFogExp2=!0;class zr{constructor(t,e=1,n=1e3){this.name="",this.color=new ge(t),this.near=e,this.far=n}clone(){return new zr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}zr.prototype.isFog=!0;class Hr extends jt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function Br(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=E,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=D.generateUUID()}Hr.prototype.isScene=!0,Object.defineProperty(Br.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Br.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=D.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new Br(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=D.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Fr=new k;function Gr(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}Object.defineProperties(Gr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Gr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)Fr.x=this.getX(e),Fr.y=this.getY(e),Fr.z=this.getZ(e),Fr.applyMatrix4(t),this.setXYZ(e,Fr.x,Fr.y,Fr.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Fr.x=this.getX(e),Fr.y=this.getY(e),Fr.z=this.getZ(e),Fr.applyNormalMatrix(t),this.setXYZ(e,Fr.x,Fr.y,Fr.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Fr.x=this.getX(e),Fr.y=this.getY(e),Fr.z=this.getZ(e),Fr.transformDirection(t),this.setXYZ(e,Fr.x,Fr.y,Fr.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new _e(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Gr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class Ur extends le{constructor(t){super(),this.type="SpriteMaterial",this.color=new ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let qr;Ur.prototype.isSpriteMaterial=!0;const kr=new k,Vr=new k,Wr=new k,jr=new I,Zr=new I,Xr=new bt,Yr=new k,Jr=new k,Qr=new k,Kr=new I,$r=new I,ta=new I;function ea(t,e,n,i,r,a){jr.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(Zr.x=a*jr.x-r*jr.y,Zr.y=r*jr.x+a*jr.y):Zr.copy(jr),t.copy(e),t.x+=Zr.x,t.y+=Zr.y,t.applyMatrix4(Xr)}(class extends jt{constructor(t){if(super(),this.type="Sprite",void 0===qr){qr=new Fe;const t=new Br(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);qr.setIndex([0,1,2,0,2,3]),qr.setAttribute("position",new Gr(t,3,0,!1)),qr.setAttribute("uv",new Gr(t,2,3,!1))}this.geometry=qr,this.material=void 0!==t?t:new Ur,this.center=new I(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Vr.setFromMatrixScale(this.matrixWorld),Xr.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Wr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Vr.multiplyScalar(-Wr.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;ea(Yr.set(-.5,-.5,0),Wr,a,Vr,i,r),ea(Jr.set(.5,-.5,0),Wr,a,Vr,i,r),ea(Qr.set(.5,.5,0),Wr,a,Vr,i,r),Kr.set(0,0),$r.set(1,0),ta.set(1,1);let s=t.ray.intersectTriangle(Yr,Jr,Qr,!1,kr);if(null===s&&(ea(Jr.set(-.5,.5,0),Wr,a,Vr,i,r),$r.set(0,1),s=t.ray.intersectTriangle(Yr,Qr,Jr,!1,kr),null===s))return;const o=t.ray.origin.distanceTo(kr);o<t.near||o>t.far||e.push({distance:o,point:kr.clone(),uv:oe.getUV(kr,Yr,Jr,Qr,Kr,$r,ta,new I),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}).prototype.isSprite=!0;const na=new k,ia=new G,ra=new G,aa=new k,sa=new bt;function oa(t,e){rn.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new bt,this.bindMatrixInverse=new bt}function ca(){jt.call(this),this.type="Bone"}oa.prototype=Object.assign(Object.create(rn.prototype),{constructor:oa,isSkinnedMesh:!0,copy:function(t){return rn.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new G,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){rn.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;ia.fromBufferAttribute(i.attributes.skinIndex,t),ra.fromBufferAttribute(i.attributes.skinWeight,t),na.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=ra.getComponent(t);if(0!==i){const r=ia.getComponent(t);sa.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(aa.copy(na).applyMatrix4(sa),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}),ca.prototype=Object.assign(Object.create(jt.prototype),{constructor:ca,isBone:!0});const la=new bt,ha=new bt,ua=[],da=new rn;function pa(t,e,n){rn.call(this,t,e),this.instanceMatrix=new _e(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}pa.prototype=Object.assign(Object.create(rn.prototype),{constructor:pa,isInstancedMesh:!0,copy:function(t){return rn.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(da.geometry=this.geometry,da.material=this.material,void 0!==da.material)for(let r=0;r<i;r++){this.getMatrixAt(r,la),ha.multiplyMatrices(n,la),da.matrixWorld=ha,da.raycast(t,ua);for(let t=0,n=ua.length;t<n;t++){const n=ua[t];n.instanceId=r,n.object=this,e.push(n)}ua.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new _e(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class fa extends le{constructor(t){super(),this.type="LineBasicMaterial",this.color=new ge(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}fa.prototype.isLineBasicMaterial=!0;const ma=new k,ga=new k,va=new bt,ya=new _t,xa=new dt;function _a(t=new Fe,e=new fa){jt.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}_a.prototype=Object.assign(Object.create(jt.prototype),{constructor:_a,isLine:!0,copy:function(t){return jt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)ma.fromBufferAttribute(e,t-1),ga.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=ma.distanceTo(ga);t.setAttribute("lineDistance",new Ce(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),xa.copy(n.boundingSphere),xa.applyMatrix4(i),xa.radius+=r,!1===t.ray.intersectsSphere(xa))return;va.copy(i).invert(),ya.copy(t.ray).applyMatrix4(va);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,c=new k,l=new k,h=new k,u=new k,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i)for(let n=Math.max(0,a.start),s=Math.min(i.count,a.start+a.count)-1;n<s;n+=d){const a=i.getX(n),s=i.getX(n+1);if(c.fromBufferAttribute(r,a),l.fromBufferAttribute(r,s),ya.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(u);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),i=Math.min(r.count,a.start+a.count)-1;n<i;n+=d){if(c.fromBufferAttribute(r,n),l.fromBufferAttribute(r,n+1),ya.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const ba=new k,Ma=new k;function wa(t,e){_a.call(this,t,e),this.type="LineSegments"}wa.prototype=Object.assign(Object.create(_a.prototype),{constructor:wa,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)ba.fromBufferAttribute(e,t),Ma.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+ba.distanceTo(Ma);t.setAttribute("lineDistance",new Ce(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});(class extends _a{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class Sa extends le{constructor(t){super(),this.type="PointsMaterial",this.color=new ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}Sa.prototype.isPointsMaterial=!0;const Ta=new bt,Ea=new _t,Aa=new dt,La=new k;function Ca(t=new Fe,e=new Sa){jt.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function Ra(t,e,n,i,r,a,s){const o=Ea.distanceSqToPoint(t);if(o<n){const n=new k;Ea.closestPointToPoint(t,n),n.applyMatrix4(i);const c=r.ray.origin.distanceTo(n);if(c<r.near||c>r.far)return;a.push({distance:c,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:s})}}Ca.prototype=Object.assign(Object.create(jt.prototype),{constructor:Ca,isPoints:!0,copy:function(t){return jt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Aa.copy(n.boundingSphere),Aa.applyMatrix4(i),Aa.radius+=r,!1===t.ray.intersectsSphere(Aa))return;Ta.copy(i).invert(),Ea.copy(t.ray).applyMatrix4(Ta);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r)for(let n=Math.max(0,a.start),c=Math.min(r.count,a.start+a.count);n<c;n++){const a=r.getX(n);La.fromBufferAttribute(s,a),Ra(La,a,o,i,t,e,this)}else for(let n=Math.max(0,a.start),r=Math.min(s.count,a.start+a.count);n<r;n++)La.fromBufferAttribute(s,n),Ra(La,n,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),class extends B{constructor(t,e,n,i,r,a,s,c,l){super(t,e,n,i,r,a,s,c,l),this.format=void 0!==s?s:f,this.minFilter=void 0!==a?a:o,this.magFilter=void 0!==r?r:o,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;class Pa extends B{constructor(t,e,n,i,r,a,s,o,c,l,h,u){super(null,a,s,o,c,l,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Pa.prototype.isCompressedTexture=!0,class extends B{constructor(t,e,n,i,r,a,s,o,c){super(t,e,n,i,r,a,s,o,c),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends B{constructor(t,e,n,i,r,a,o,c,h,u){if((u=void 0!==u?u:g)!==g&&u!==v)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===g&&(n=l),void 0===n&&u===v&&(n=p),super(null,i,r,a,o,c,u,n,h),this.image={width:t,height:e},this.magFilter=void 0!==o?o:s,this.minFilter=void 0!==c?c:s,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0,new k,new k,new k,new oe;function Da(t,e,n,i,r){let a,s;if(r===function(t,e,n,i){let r=0;for(let a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}(t,e,n,i)>0)for(a=e;a<n;a+=i)s=$a(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=$a(a,t[a],t[a+1],s);return s&&Za(s,s.next)&&(ts(s),s=s.next),s}function Ia(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Za(i,i.next)&&0!==ja(i.prev,i,i.next))i=i.next;else{if(ts(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Na(t,e,n,i,r,a,s){if(!t)return;!s&&a&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=qa(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,a,s,o,c,l=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<l&&(o++,i=i.nextZ,i);e++);for(c=l;o>0||c>0&&i;)0!==o&&(0===c||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,c--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,l*=2}while(s>1)}(r)}(t,i,r,a);let o,c,l=t;for(;t.prev!==t.next;)if(o=t.prev,c=t.next,a?za(t,i,r,a):Oa(t))e.push(o.i/n),e.push(t.i/n),e.push(c.i/n),ts(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?Na(t=Ha(Ia(t),e,n),e,n,i,r,a,2):2===s&&Ba(t,e,n,i,r,a):Na(Ia(t),e,n,i,r,a,1);break}}function Oa(t){const e=t.prev,n=t,i=t.next;if(ja(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Va(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&ja(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function za(t,e,n,i){const r=t.prev,a=t,s=t.next;if(ja(r,a,s)>=0)return!1;const o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,c=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,l=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,u=qa(o,c,e,n,i),d=qa(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Va(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&ja(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Va(r.x,r.y,a.x,a.y,s.x,s.y,f.x,f.y)&&ja(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Va(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&ja(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Va(r.x,r.y,a.x,a.y,s.x,s.y,f.x,f.y)&&ja(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Ha(t,e,n){let i=t;do{const r=i.prev,a=i.next.next;!Za(r,a)&&Xa(r,i,i.next,a)&&Qa(r,a)&&Qa(a,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(a.i/n),ts(i),ts(i.next),i=t=a),i=i.next}while(i!==t);return Ia(i)}function Ba(t,e,n,i,r,a){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&Wa(s,t)){let o=Ka(s,t);return s=Ia(s,s.next),o=Ia(o,o.next),Na(s,e,n,i,r,a),void Na(o,e,n,i,r,a)}t=t.next}s=s.next}while(s!==t)}function Fa(t,e){return t.x-e.x}function Ga(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let a,s=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===s)return a;const o=a,c=a.x,l=a.y;let h,u=1/0;n=a;do{i>=n.x&&n.x>=c&&i!==n.x&&Va(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),Qa(n,t)&&(h<u||h===u&&(n.x>a.x||n.x===a.x&&Ua(a,n)))&&(a=n,u=h)),n=n.next}while(n!==o);return a}(t,e)){const n=Ka(e,t);Ia(e,e.next),Ia(n,n.next)}}function Ua(t,e){return ja(t.prev,t,e.prev)<0&&ja(e.next,t,t.next)<0}function qa(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function ka(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Va(t,e,n,i,r,a,s,o){return(r-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function Wa(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Xa(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Qa(t,e)&&Qa(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(ja(t.prev,t,e.prev)||ja(t,e.prev,e))||Za(t,e)&&ja(t.prev,t,t.next)>0&&ja(e.prev,e,e.next)>0)}function ja(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Za(t,e){return t.x===e.x&&t.y===e.y}function Xa(t,e,n,i){const r=Ja(ja(t,e,n)),a=Ja(ja(t,e,i)),s=Ja(ja(n,i,t)),o=Ja(ja(n,i,e));return r!==a&&s!==o||!(0!==r||!Ya(t,n,e))||!(0!==a||!Ya(t,i,e))||!(0!==s||!Ya(n,t,i))||!(0!==o||!Ya(n,e,i))}function Ya(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Ja(t){return t>0?1:t<0?-1:0}function Qa(t,e){return ja(t.prev,t,t.next)<0?ja(t,e,t.next)>=0&&ja(t,t.prev,e)>=0:ja(t,e,t.prev)<0||ja(t,t.next,e)<0}function Ka(t,e){const n=new es(t.i,t.x,t.y),i=new es(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function $a(t,e,n,i){const r=new es(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function ts(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function es(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const ns={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n},isClockWise:function(t){return ns.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];is(t),rs(n,t);let a=t.length;e.forEach(is);for(let t=0;t<e.length;t++)i.push(a),a+=e[t].length,rs(n,e[t]);const s=function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let a=Da(t,0,r,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,c,l,h,u,d,p;if(i&&(a=function(t,e,n,i){const r=[];let a,s,o,c,l;for(a=0,s=e.length;a<s;a++)o=e[a]*i,c=a<s-1?e[a+1]*i:t.length,l=Da(t,o,c,i,!1),l===l.next&&(l.steiner=!0),r.push(ka(l));for(r.sort(Fa),a=0;a<r.length;a++)Ga(r[a],n),n=Ia(n,n.next);return n}(t,e,a,n)),t.length>80*n){o=l=t[0],c=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=Math.max(l-o,h-c),p=0!==p?1/p:0}return Na(a,s,n,o,c,p),s}(n,i);for(let t=0;t<s.length;t+=3)r.push(s.slice(t,t+3));return r}};function is(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function rs(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class as extends Fe{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++)a(t[e]);function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:ss;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,v,y,x,_,b=!1;f&&(g=f.getSpacedPoints(o),b=!0,l=!1,v=f.computeFrenetFrames(o,!1),y=new k,x=new k,_=new k),l||(p=0,h=0,u=0,d=0);const M=t.extractPoints(s);let w=M.shape;const S=M.holes;if(!ns.isClockWise(w)){w=w.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];ns.isClockWise(e)&&(S[t]=e.reverse())}}const T=ns.triangulateShape(w,S),E=w;for(let t=0,e=S.length;t<e;t++){const e=S[t];w=w.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const L=w.length,C=T.length;function R(t,e,n){let i,r,a;const s=t.x-e.x,o=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=s*s+o*o,u=s*l-o*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-o/u,f=e.y+s/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-o*c);i=p+s*m-t.x,r=f+o*m-t.y;const g=i*i+r*r;if(g<=2)return new I(i,r);a=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(l)&&(t=!0),t?(i=-o,r=s,a=Math.sqrt(h)):(i=s,r=o,a=Math.sqrt(h/2))}return new I(i/a,r/a)}const P=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),P[t]=R(E[t],E[n],E[i]);const D=[];let N,O=P.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];N=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),N[t]=R(e[t],e[i],e[r]);D.push(N),O=O.concat(N)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);B(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=D[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],N[t],i);B(r.x,r.y,-n)}}}const z=u+d;for(let t=0;t<L;t++){const e=l?A(w[t],O[t],z):w[t];b?(x.copy(v.normals[0]).multiplyScalar(e.x),y.copy(v.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(x).add(y),B(_.x,_.y,_.z)):B(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<L;e++){const n=l?A(w[e],O[e],z):w[e];b?(x.copy(v.normals[t]).multiplyScalar(n.x),y.copy(v.binormals[t]).multiplyScalar(n.y),_.copy(g[t]).add(x).add(y),B(_.x,_.y,_.z)):B(n.x,n.y,c/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);B(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=D[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],N[t],i);b?B(r.x,r.y+g[o-1].y,g[o-1].x+n):B(r.x,r.y,c+n)}}}function H(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=L*t,a=L*(t+1);G(e+i+n,e+r+n,e+r+a,e+i+a)}}}function B(t,e,n){a.push(t),a.push(e),a.push(n)}function F(t,e,r){U(t),U(e),U(r);const a=i.length/3,s=m.generateTopUV(n,i,a-3,a-2,a-1);q(s[0]),q(s[1]),q(s[2])}function G(t,e,r,a){U(t),U(e),U(a),U(e),U(r),U(a);const s=i.length/3,o=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);q(o[0]),q(o[1]),q(o[3]),q(o[1]),q(o[2]),q(o[3])}function U(t){i.push(a[3*t+0]),i.push(a[3*t+1]),i.push(a[3*t+2])}function q(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(l){let t=0,e=L*t;for(let t=0;t<C;t++){const n=T[t];F(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=L*t;for(let t=0;t<C;t++){const n=T[t];F(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<C;t++){const e=T[t];F(e[2],e[1],e[0])}for(let t=0;t<C;t++){const e=T[t];F(e[0]+L*o,e[1]+L*o,e[2]+L*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;H(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];H(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Ce(i,3)),this.setAttribute("uv",new Ce(r,2)),this.computeVertexNormals()}toJSON(){const t=Fe.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const ss={generateTopUV:function(t,e,n,i,r){const a=e[3*n],s=e[3*n+1],o=e[3*i],c=e[3*i+1],l=e[3*r],h=e[3*r+1];return[new I(a,s),new I(o,c),new I(l,h)]},generateSideWallUV:function(t,e,n,i,r,a){const s=e[3*n],o=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(o-h)<.01?[new I(s,1-c),new I(l,1-u),new I(d,1-f),new I(m,1-v)]:[new I(o,1-c),new I(h,1-u),new I(p,1-f),new I(g,1-v)]}};function os(t,e,n){Fe.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],a=[],s=[],o=1e-5,c=new k,l=new k,h=new k,u=new k,d=new k;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let i=0;i<=n;i++){const p=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,p,l),r.push(l.x,l.y,l.z),i-o>=0?(t(i-o,p,h),u.subVectors(l,h)):(t(i+o,p,h),u.subVectors(h,l)),p-o>=0?(t(i,p-o,h),d.subVectors(l,h)):(t(i,p+o,h),d.subVectors(h,l)),c.crossVectors(u,d).normalize(),a.push(c.x,c.y,c.z),s.push(i,p)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*p+n,r=t*p+n+1,a=(t+1)*p+n+1,s=(t+1)*p+n;i.push(e,r,s),i.push(r,a,s)}this.setIndex(i),this.setAttribute("position",new Ce(r,3)),this.setAttribute("normal",new Ce(a,3)),this.setAttribute("uv",new Ce(s,2))}os.prototype=Object.create(Fe.prototype),os.prototype.constructor=os;class cs extends Fe{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],a=[];let s=0,o=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(s,o,e),s+=o,o=0;function c(t){const s=i.length/3,c=t.extractPoints(e);let l=c.shape;const h=c.holes;!1===ns.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ns.isClockWise(e)&&(h[t]=e.reverse())}const u=ns.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];i.push(e.x,e.y,0),r.push(0,0,1),a.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+s,r=e[1]+s,a=e[2]+s;n.push(i,r,a),o+=3}}this.setIndex(n),this.setAttribute("position",new Ce(i,3)),this.setAttribute("normal",new Ce(r,3)),this.setAttribute("uv",new Ce(a,2))}toJSON(){const t=Fe.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}(class extends le{constructor(t){super(),this.type="ShadowMaterial",this.color=new ge(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;function ls(t){le.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}function hs(t){ls.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new I(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=D.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}(class extends hn{constructor(t){super(t),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0,ls.prototype=Object.create(le.prototype),ls.prototype.constructor=ls,ls.prototype.isMeshStandardMaterial=!0,ls.prototype.copy=function(t){return le.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this},hs.prototype=Object.create(ls.prototype),hs.prototype.constructor=hs,hs.prototype.isMeshPhysicalMaterial=!0,hs.prototype.copy=function(t){return ls.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new ge).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};(class extends le{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new ge(16777215),this.specular=new ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshPhongMaterial=!0;(class extends le{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ge(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class extends le{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends le{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class extends le{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new I(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends fa{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const us={arraySlice:function(t,e,n){return us.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let a=0,s=0;s!==i;++a){const i=n[a]*e;for(let n=0;n!==e;++n)r[s++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,a=t[0];for(;void 0!==a&&void 0===a[i];)a=t[r++];if(void 0===a)return;let s=a[i];if(void 0!==s)if(Array.isArray(s))do{s=a[i],void 0!==s&&(e.push(a.time),n.push.apply(n,s)),a=t[r++]}while(void 0!==a);else if(void 0!==s.toArray)do{s=a[i],void 0!==s&&(e.push(a.time),s.toArray(n,n.length)),a=t[r++]}while(void 0!==a);else do{s=a[i],void 0!==s&&(e.push(a.time),n.push(s)),a=t[r++]}while(void 0!==a)},subclip:function(t,e,n,i,r=30){const a=t.clone();a.name=e;const s=[];for(let t=0;t<a.tracks.length;++t){const e=a.tracks[t],o=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const a=e.times[t]*r;if(!(a<n||a>=i)){c.push(e.times[t]);for(let n=0;n<o;++n)l.push(e.values[t*o+n])}}0!==c.length&&(e.times=us.convertArray(c,e.times.constructor),e.values=us.convertArray(l,e.values.constructor),s.push(e))}a.tracks=s;let o=1/0;for(let t=0;t<a.tracks.length;++t)o>a.tracks[t].times[0]&&(o=a.tracks[t].times[0]);for(let t=0;t<a.tracks.length;++t)a.tracks[t].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,a=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===r}));if(void 0===s)continue;let o=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=c/3);let l=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(a<=i.times[0]){const t=o,e=c-o;d=us.arraySlice(i.values,t,e)}else if(a>=i.times[u]){const t=u*c+o,e=t+c-o;d=us.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=o,n=c-o;t.evaluate(a),d=us.arraySlice(t.resultBuffer,e,n)}"quaternion"===r&&(new q).fromArray(d).normalize().conjugate().toArray(d);const p=s.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===r)q.multiplyQuaternionsFlat(s.values,e,d,0,s.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)s.values[e+n]-=d[n]}}}return t.blendMode=2501,t}};function ds(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function ps(t,e,n,i){ds.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function fs(t,e,n,i){ds.call(this,t,e,n,i)}function ms(t,e,n,i){ds.call(this,t,e,n,i)}Object.assign(ds.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let a;n:{i:if(!(t<i)){for(let a=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===a)break;if(r=i,i=e[++n],t<i)break e}a=e.length;break n}if(t>=r)break t;{const s=e[1];t<s&&(n=2,r=s);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break e}a=n,n=0}}for(;n<a;){const i=n+a>>>1;t<e[i]?a=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(ds.prototype,{beforeStart_:ds.prototype.copySampleValue_,afterEnd_:ds.prototype.copySampleValue_}),ps.prototype=Object.assign(Object.create(ds.prototype),{constructor:ps,DefaultSettings_:{endingStart:b,endingEnd:b},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,a=t+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case M:r=t,s=2*e-n;break;case w:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case M:a=t,o=2*n-e;break;case w:a=1,o=n+i[1]-i[0];break;default:a=t-1,o=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(o-n),this._offsetPrev=r*l,this._offsetNext=a*l},interpolate_:function(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==s;++t)r[t]=g*a[l+t]+v*a[c+t]+y*a[o+t]+x*a[h+t];return r}}),fs.prototype=Object.assign(Object.create(ds.prototype),{constructor:fs,interpolate_:function(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==s;++t)r[t]=a[c+t]*h+a[o+t]*l;return r}}),ms.prototype=Object.assign(Object.create(ds.prototype),{constructor:ms,interpolate_:function(t){return this.copySampleValue_(t-1)}});class gs{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=us.convertArray(e,this.TimeBufferType),this.values=us.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:us.convertArray(t.times,Array),values:us.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new ms(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new fs(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ps(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case y:e=this.InterpolantFactoryMethodDiscrete;break;case x:e=this.InterpolantFactoryMethodLinear;break;case _:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return y;case this.InterpolantFactoryMethodLinear:return x;case this.InterpolantFactoryMethodSmooth:return _}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==a&&n[a]>e;)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const t=this.getValueSize();this.times=us.arraySlice(n,r,a),this.values=us.arraySlice(this.values,r*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==a&&a>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,a),t=!1;break}a=i}if(void 0!==i&&us.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=us.arraySlice(this.times),e=us.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===_,r=t.length-1;let a=1;for(let s=1;s<r;++s){let r=!1;const o=t[s];if(o!==t[s+1]&&(1!==s||o!==t[0]))if(i)r=!0;else{const t=s*n,i=t-n,a=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[a+s]){r=!0;break}}}if(r){if(s!==a){t[a]=t[s];const i=s*n,r=a*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++a}}if(r>0){t[a]=t[r];for(let t=r*n,i=a*n,s=0;s!==n;++s)e[i+s]=e[t+s];++a}return a!==t.length?(this.times=us.arraySlice(t,0,a),this.values=us.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=us.arraySlice(this.times,0),e=us.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}gs.prototype.TimeBufferType=Float32Array,gs.prototype.ValueBufferType=Float32Array,gs.prototype.DefaultInterpolation=x;class vs extends gs{}vs.prototype.ValueTypeName="bool",vs.prototype.ValueBufferType=Array,vs.prototype.DefaultInterpolation=y,vs.prototype.InterpolantFactoryMethodLinear=void 0,vs.prototype.InterpolantFactoryMethodSmooth=void 0;class ys extends gs{}ys.prototype.ValueTypeName="color";class xs extends gs{}function _s(t,e,n,i){ds.call(this,t,e,n,i)}xs.prototype.ValueTypeName="number",_s.prototype=Object.assign(Object.create(ds.prototype),{constructor:_s,interpolate_:function(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-e)/(i-e);let c=t*s;for(let t=c+s;c!==t;c+=4)q.slerpFlat(r,0,a,c-s,a,c,o);return r}});class bs extends gs{InterpolantFactoryMethodLinear(t){return new _s(this.times,this.values,this.getValueSize(),t)}}bs.prototype.ValueTypeName="quaternion",bs.prototype.DefaultInterpolation=x,bs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ms extends gs{}Ms.prototype.ValueTypeName="string",Ms.prototype.ValueBufferType=Array,Ms.prototype.DefaultInterpolation=y,Ms.prototype.InterpolantFactoryMethodLinear=void 0,Ms.prototype.InterpolantFactoryMethodSmooth=void 0;class ws extends gs{}ws.prototype.ValueTypeName="vector";class Ss{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=D.generateUUID(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(Ts(n[t]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(gs.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,a=[];for(let t=0;t<r;t++){let s=[],o=[];s.push((t+r-1)%r,t,(t+1)%r),o.push(0,1,0);const c=us.getKeyframeOrder(s);s=us.sortedArray(s,1,c),o=us.sortedArray(o,1,c),i||0!==s[0]||(s.push(r),o.push(o[0])),a.push(new xs(".morphTargetInfluences["+e[t].name+"]",s,o).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],a=n.name.match(r);if(a&&a.length>1){const t=a[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const a=[];for(const t in i)a.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const a=[],s=[];us.flattenJSON(n,a,s,i),0!==a.length&&r.push(new t(e,a,s))}},i=[],r=t.name||"default",a=t.fps||30,s=t.blendMode;let o=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const r=c[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],a=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),a.push(i.morphTarget===n?1:0)}i.push(new xs(".morphTargetInfluence["+n+"]",t,a))}o=t.length*(a||1)}else{const a=".bones["+e[t].name+"]";n(ws,a+".position",r,"pos",i),n(bs,a+".quaternion",r,"rot",i),n(ws,a+".scale",r,"scl",i)}}return 0===i.length?null:new this(r,o,i,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ts(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return xs;case"vector":case"vector2":case"vector3":case"vector4":return ws;case"color":return ys;case"quaternion":return bs;case"bool":case"boolean":return vs;case"string":return Ms}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];us.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Es={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const As=new function(t,e,n){const i=this;let r,a=!1,s=0,o=0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===a&&void 0!==i.onStart&&i.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}};function Ls(t){this.manager=void 0!==t?t:As,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ls.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Cs={};function Rs(t){Ls.call(this,t)}function Ps(t){Ls.call(this,t)}Rs.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Rs,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Es.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;if(void 0!==Cs[t])return void Cs[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],a=!!s[2];let o=s[3];o=decodeURIComponent(o),a&&(o=atob(o));try{let i;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o.charCodeAt(e);i="blob"===a?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(o,n);break;case"json":i=JSON.parse(o);break;default:i=o}setTimeout((function(){e&&e(i),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{Cs[t]=[],Cs[t].push({onLoad:e,onProgress:n,onError:i}),o=new XMLHttpRequest,o.open("GET",t,!0),o.addEventListener("load",(function(e){const n=this.response,i=Cs[t];if(delete Cs[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Es.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}r.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),o.addEventListener("progress",(function(e){const n=Cs[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),o.addEventListener("error",(function(e){const n=Cs[t];delete Cs[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),o.addEventListener("abort",(function(e){const n=Cs[t];delete Cs[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)o.setRequestHeader(t,this.requestHeader[t]);o.send(null)}return r.manager.itemStart(t),o},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Ps.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Ps,load:function(t,e,n,i){const r=this,a=[],s=new Pa,c=new Rs(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let l=0;function h(h){c.load(t[h],(function(t){const n=r.parse(t,!0);a[h]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(s.minFilter=o),s.image=a,s.format=n.format,s.needsUpdate=!0,e&&e(s))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)h(e);else c.load(t,(function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){a[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)a[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),a[e].format=n.format,a[e].width=n.width,a[e].height=n.height}s.image=a}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=o),s.format=n.format,s.needsUpdate=!0,e&&e(s)}),n,i);return s}});class Ds extends Ls{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Es.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),Es.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}}class Is extends Ls{constructor(t){super(t)}load(t,e,n,i){const r=new mn,a=new Ds(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(n){a.load(t[n],(function(t){r.images[n]=t,s++,6===s&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return r}}function Ns(t){Ls.call(this,t)}function Os(t){Ls.call(this,t)}function zs(){this.type="Curve",this.arcLengthDivisions=200}Ns.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Ns,load:function(t,e,n,i){const a=this,s=new vn,l=new Rs(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(a.withCredentials),l.load(t,(function(t){const n=a.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:r,s.wrapT=void 0!==n.wrapT?n.wrapT:r,s.magFilter=void 0!==n.magFilter?n.magFilter:o,s.minFilter=void 0!==n.minFilter?n.minFilter:o,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=c),1===n.mipmapCount&&(s.minFilter=o),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,i),s}}),Os.prototype=Object.assign(Object.create(Ls.prototype),{constructor:Os,load:function(t,e,n,i){const r=new B,a=new Ds(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(n){r.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=i?f:m,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}),Object.assign(zs.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let a;a=e||t*n[r-1];let s,o=0,c=r-1;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),s=n[i]-a,s<0)o=i+1;else{if(!(s>0)){c=i;break}c=i-1}if(i=c,n[i]===a)return i/(r-1);const l=n[i];return(i+(a-l)/(n[i+1]-l))/(r-1)},getTangent:function(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),s=this.getPoint(r),o=e||(a.isVector2?new I:new k);return o.copy(s).sub(a).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new k,i=[],r=[],a=[],s=new k,o=new bt;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new k),i[e].normalize()}r[0]=new k,a[0]=new k;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(D.clamp(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(o.makeRotationAxis(s,t))}a[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(D.clamp(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});class Hs extends zs{constructor(t=0,e=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new I,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=c-this.aY;o=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(o,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Hs.prototype.isEllipseCurve=!0;class Bs extends Hs{constructor(t,e,n,i,r,a){super(t,e,n,n,i,r,a),this.type="ArcCurve"}}function Fs(){let t=0,e=0,n=0,i=0;function r(r,a,s,o){t=r,e=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(t,e,n,i,a){r(e,n,a*(n-t),a*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,a,s,o){let c=(e-t)/a-(n-t)/(a+s)+(n-e)/s,l=(n-e)/s-(i-e)/(s+o)+(i-n)/o;c*=s,l*=s,r(e,n,c,l)},calc:function(r){const a=r*r;return t+e*r+n*a+i*(a*r)}}}Bs.prototype.isArcCurve=!0;const Gs=new k,Us=new Fs,qs=new Fs,ks=new Fs;class Vs extends zs{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new k){const n=e,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t;let s,o,c=Math.floor(a),l=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:0===l&&c===r-1&&(c=r-2,l=1),this.closed||c>0?s=i[(c-1)%r]:(Gs.subVectors(i[0],i[1]).add(i[0]),s=Gs);const h=i[c%r],u=i[(c+1)%r];if(this.closed||c+2<r?o=i[(c+2)%r]:(Gs.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=Gs),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Us.initNonuniformCatmullRom(s.x,h.x,u.x,o.x,e,n,i),qs.initNonuniformCatmullRom(s.y,h.y,u.y,o.y,e,n,i),ks.initNonuniformCatmullRom(s.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Us.initCatmullRom(s.x,h.x,u.x,o.x,this.tension),qs.initCatmullRom(s.y,h.y,u.y,o.y,this.tension),ks.initCatmullRom(s.z,h.z,u.z,o.z,this.tension));return n.set(Us.calc(l),qs.calc(l),ks.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new k).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ws(t,e,n,i,r){const a=.5*(i-e),s=.5*(r-n),o=t*t;return(2*n-2*i+a+s)*(t*o)+(-3*n+3*i-2*a-s)*o+a*t+n}function js(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Zs(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}Vs.prototype.isCatmullRomCurve3=!0;class Xs extends zs{constructor(t=new I,e=new I,n=new I,i=new I){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new I){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(Zs(t,i.x,r.x,a.x,s.x),Zs(t,i.y,r.y,a.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Xs.prototype.isCubicBezierCurve=!0;class Ys extends zs{constructor(t=new k,e=new k,n=new k,i=new k){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new k){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(Zs(t,i.x,r.x,a.x,s.x),Zs(t,i.y,r.y,a.y,s.y),Zs(t,i.z,r.z,a.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Ys.prototype.isCubicBezierCurve3=!0;class Js extends zs{constructor(t=new I,e=new I){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new I;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Js.prototype.isLineCurve=!0;class Qs extends zs{constructor(t=new I,e=new I,n=new I){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(js(t,i.x,r.x,a.x),js(t,i.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Qs.prototype.isQuadraticBezierCurve=!0;class Ks extends zs{constructor(t=new k,e=new k,n=new k){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new k){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(js(t,i.x,r.x,a.x),js(t,i.y,r.y,a.y),js(t,i.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ks.prototype.isQuadraticBezierCurve3=!0;class $s extends zs{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new I){const n=e,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[0===a?a:a-1],c=i[a],l=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(Ws(s,o.x,c.x,l.x,h.x),Ws(s,o.y,c.y,l.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new I).fromArray(n))}return this}}$s.prototype.isSplineCurve=!0;var to=Object.freeze({__proto__:null,ArcCurve:Bs,CatmullRomCurve3:Vs,CubicBezierCurve:Xs,CubicBezierCurve3:Ys,EllipseCurve:Hs,LineCurve:Js,LineCurve3:class extends zs{constructor(t=new k,e=new k){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new k){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:Qs,QuadraticBezierCurve3:Ks,SplineCurve:$s});class eo extends zs{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Js(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,r=this.curves[i],a=r.getLength(),s=0===a?0:1-t/a;return r.getPointAt(s)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],s=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new to[n.type]).fromJSON(n))}return this}}class no extends eo{constructor(t){super(),this.type="Path",this.currentPoint=new I,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Js(this.currentPoint.clone(),new I(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Qs(this.currentPoint.clone(),new I(t,e),new I(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,a){const s=new Xs(this.currentPoint.clone(),new I(t,e),new I(n,i),new I(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new $s(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,r,a),this}absarc(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this}ellipse(t,e,n,i,r,a,s,o){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,r,a,s,o),this}absellipse(t,e,n,i,r,a,s,o){const c=new Hs(t,e,n,i,r,a,s,o);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class io extends no{constructor(t){super(t),this.uuid=D.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new no).fromJSON(n))}return this}}class ro extends jt{constructor(t,e=1){super(),this.type="Light",this.color=new ge(t),this.intensity=e}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}ro.prototype.isLight=!0;(class extends ro{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(jt.DefaultUp),this.updateMatrix(),this.groundColor=new ge(e)}copy(t){return ro.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const ao=new bt,so=new k,oo=new k;class co{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new I(512,512),this.map=null,this.mapPass=null,this.matrix=new bt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new _n,this._frameExtents=new I(1,1),this._viewportCount=1,this._viewports=[new G(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;so.setFromMatrixPosition(t.matrixWorld),e.position.copy(so),oo.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(oo),e.updateMatrixWorld(),ao.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ao),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class lo extends co{constructor(){super(new dn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*D.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}lo.prototype.isSpotLightShadow=!0;(class extends ro{constructor(t,e,n=0,i=Math.PI/3,r=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(jt.DefaultUp),this.updateMatrix(),this.target=new jt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new lo}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isSpotLight=!0;const ho=new bt,uo=new k,po=new k;class fo extends co{constructor(){super(new dn(90,1,.5,500)),this._frameExtents=new I(4,2),this._viewportCount=6,this._viewports=[new G(2,1,1,1),new G(0,1,1,1),new G(3,1,1,1),new G(1,1,1,1),new G(3,0,1,1),new G(1,0,1,1)],this._cubeDirections=[new k(1,0,0),new k(-1,0,0),new k(0,0,1),new k(0,0,-1),new k(0,1,0),new k(0,-1,0)],this._cubeUps=[new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,0,1),new k(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),uo.setFromMatrixPosition(t.matrixWorld),n.position.copy(uo),po.copy(n.position),po.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(po),n.updateMatrixWorld(),i.makeTranslation(-uo.x,-uo.y,-uo.z),ho.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ho)}}fo.prototype.isPointLightShadow=!0;(class extends ro{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new fo}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class mo extends un{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=jt.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}mo.prototype.isOrthographicCamera=!0;class go extends co{constructor(){super(new mo(-5,5,5,-5,.5,500))}}go.prototype.isDirectionalLightShadow=!0;(class extends ro{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(jt.DefaultUp),this.updateMatrix(),this.target=new jt,this.shadow=new go}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isDirectionalLight=!0;(class extends ro{constructor(t,e){super(t,e),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends ro{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class vo{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new k)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*i),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],n*i*1.092548),e.addScaledVector(a[5],i*r*1.092548),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],n*r*1.092548),e.addScaledVector(a[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*i),e.addScaledVector(a[2],1.023328*r),e.addScaledVector(a[3],1.023328*n),e.addScaledVector(a[4],.858086*n*i),e.addScaledVector(a[5],.858086*i*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],.858086*n*r),e.addScaledVector(a[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}vo.prototype.isSphericalHarmonics3=!0;class yo extends ro{constructor(t=new vo,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}yo.prototype.isLightProbe=!0;function xo(){Fe.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function _o(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),_e.call(this,t,e,n),this.meshPerAttribute=i||1}function bo(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ls.call(this,t),this.options={premultiplyAlpha:"none"}}xo.prototype=Object.assign(Object.create(Fe.prototype),{constructor:xo,isInstancedBufferGeometry:!0,copy:function(t){return Fe.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=Fe.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),_o.prototype=Object.assign(Object.create(_e.prototype),{constructor:_o,isInstancedBufferAttribute:!0,copy:function(t){return _e.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=_e.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),bo.prototype=Object.assign(Object.create(Ls.prototype),{constructor:bo,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Es.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(n){Es.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}});let Mo;class wo extends Ls{constructor(t){super(t)}load(t,e,n,i){const r=this,a=new Rs(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{const t=n.slice(0);(void 0===Mo&&(Mo=new(window.AudioContext||window.webkitAudioContext)),Mo).decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}}(class extends yo{constructor(t,e,n=1){super(void 0,n);const i=(new ge).set(t),r=(new ge).set(e),a=new k(i.r,i.g,i.b),s=new k(r.r,r.g,r.b),o=Math.sqrt(Math.PI),c=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(c)}}).prototype.isHemisphereLightProbe=!0,class extends yo{constructor(t,e=1){super(void 0,e);const n=(new ge).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0,new bt,new bt;class So{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=To(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=To();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function To(){return("undefined"==typeof performance?Date:performance).now()}class Eo{constructor(t,e,n){let i,r,a;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let a=this.cumulativeWeight;if(0===a){for(let t=0;t!==i;++t)n[r+t]=n[t];a=e}else{a+=e;const t=e/a;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){q.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const a=this._workIndex*r;q.multiplyQuaternionsFlat(t,a,t,e,t,n),q.slerpFlat(t,e,t,e,t,a,i)}_lerp(t,e,n,i,r){const a=1-i;for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]*a+t[n+s]*i}}_lerpAdditive(t,e,n,i,r){for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]+t[n+a]*i}}}const Ao=new RegExp("[\\[\\]\\.:\\/]","g"),Lo="[^\\[\\]\\.:\\/]",Co="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Ro=/((?:WC+[\/:])*)/.source.replace("WC",Lo),Po=/(WCOD+)?/.source.replace("WCOD",Co),Do=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Lo),Io=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Lo),No=new RegExp("^"+Ro+Po+Do+Io+"$"),Oo=["material","materials","bones"];function zo(t,e,n){const i=n||Ho.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Ho(t,e,n){this.path=e,this.parsedPath=n||Ho.parseTrackName(e),this.node=Ho.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(zo.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Ho,{Composite:zo,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Ho.Composite(t,e,n):new Ho(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Ao,"")},parseTrackName:function(t){const e=No.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Oo.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const a=n(r.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(Ho.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Ho.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const a=t[i];if(void 0===a){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Ho.prototype,{_getValue_unbound:Ho.prototype.getValue,_setValue_unbound:Ho.prototype.setValue});class Bo{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,a=r.length,s=new Array(a),o={endingStart:b,endingEnd:b};for(let t=0;t!==a;++t){const e=r[t].createInterpolant(null);s[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,a=n/i;t.warp(1,r,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,c=s.sampleValues;return o[0]=r,o[1]=r+n,c[0]=t/a,c[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const a=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(a),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(a),e[n].accumulate(i,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const a=2202===n;if(0===t)return-1===r?i:a&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(a&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=M,i.endingEnd=M):(i.endingStart=t?this.zeroSlopeAtStart?M:b:w,i.endingEnd=e?this.zeroSlopeAtEnd?M:b:w)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=e,s[1]=r+t,o[1]=n,this}}(class extends C{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,a=t._propertyBindings,s=t._interpolants,o=n.uuid,c=this._bindingsByRootAndName;let l=c[o];void 0===l&&(l={},c[o]=l);for(let t=0;t!==r;++t){const r=i[t],c=r.name;let h=l[c];if(void 0!==h)a[t]=h;else{if(h=a[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new Eo(Ho.create(n,c,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,c),a[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{const e=a.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,c=o[o.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,o[l]=c,o.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[e];void 0===a&&(a={},i[e]=a),a[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=e[e.length-1],c=t._cacheIndex;o._cacheIndex=c,e[c]=o,e.pop(),delete s[r],0===Object.keys(s).length&&delete a[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new fs(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let a="string"==typeof t?Ss.findByName(i,t):t;const s=null!==a?a.uuid:t,o=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;c=o.knownActions[0],null===a&&(a=c._clip)}if(null===a)return null;const l=new Bo(this,a,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,r),l}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?Ss.findByName(n,t):t,a=r?r.uuid:t,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1;for(let s=0;s!==n;++s)e[s]._update(i,t,r,a);const s=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)s[t].apply(a);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,a=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,a._cacheIndex=r,e[r]=a,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Fo{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Fo(void 0===this.value.clone?this.value:this.value.clone())}}function Go(t,e,n){Br.call(this,t,e),this.meshPerAttribute=n||1}function Uo(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function qo(t,e,n=0,i=1/0){this.ray=new _t(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Dt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ko(t,e){return t.distance-e.distance}function Vo(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)Vo(i[t],e,n,!0)}}Go.prototype=Object.assign(Object.create(Br.prototype),{constructor:Go,isInstancedInterleavedBuffer:!0,copy:function(t){return Br.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Br.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Br.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Uo.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Uo.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(qo.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e=!1,n=[]){return Vo(t,this,n,e),n.sort(ko),n},intersectObjects:function(t,e=!1,n=[]){for(let i=0,r=t.length;i<r;i++)Vo(t[i],this,n,e);return n.sort(ko),n}});const Wo=new I;class jo{constructor(t=new I(1/0,1/0),e=new I(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Wo.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new I),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new I),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new I),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new I),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Wo.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function Zo(t){jt.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}jo.prototype.isBox2=!0,Zo.prototype=Object.create(jt.prototype),Zo.prototype.constructor=Zo,Zo.prototype.isImmediateRenderObject=!0;const Xo=new k,Yo=new bt,Jo=new bt;function Qo(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Qo(t.children[n]));return e}const Ko=new Float32Array(1),$o=(new Int32Array(Ko.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),tc=5+$o.length,ec=new ve({side:1,depthWrite:!1,depthTest:!1}),{_lodPlanes:nc,_sizeLods:ic,_sigmas:rc}=(new rn(new sn,ec),ac());function ac(){const t=[],e=[],n=[];let i=8;for(let r=0;r<tc;r++){const a=Math.pow(2,i);e.push(a);let s=1/a;r>4?s=$o[r-8+4-1]:0==r&&(s=0),n.push(s);const o=1/(a-1),c=-o/2,l=1+o/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),v=new Float32Array(f*d*u),y=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),v.set(h,f*d*t);const r=[t,t,t,t,t,t];y.set(r,m*d*t)}const x=new Fe;x.setAttribute("position",new _e(g,p)),x.setAttribute("uv",new _e(v,f)),x.setAttribute("faceIndex",new _e(y,m)),t.push(x),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}Math.sqrt(5),zs.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(zs.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},no.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends wa{constructor(t=10,e=10,n=4473924,i=8947848){n=new ge(n),i=new ge(i);const r=e/2,a=t/e,s=t/2,o=[],c=[];for(let t=0,l=0,h=-s;t<=e;t++,h+=a){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);const e=t===r?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new Fe;l.setAttribute("position",new Ce(o,3)),l.setAttribute("color",new Ce(c,3)),super(l,new fa({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends wa{constructor(t){const e=Qo(t),n=new Fe,i=[],r=[],a=new ge(0,0,1),s=new ge(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new Ce(i,3)),n.setAttribute("color",new Ce(r,3)),super(n,new fa({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Jo.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Yo.multiplyMatrices(Jo,r.matrixWorld),Xo.setFromMatrixPosition(Yo),i.setXYZ(n,Xo.x,Xo.y,Xo.z),Yo.multiplyMatrices(Jo,r.parent.matrixWorld),Xo.setFromMatrixPosition(Yo),i.setXYZ(n+1,Xo.x,Xo.y,Xo.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Ls.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}(t)},Ls.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},jo.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},jo.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},jo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},jo.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},j.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},j.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},j.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},j.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},j.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},dt.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},_n.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},D.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},D.nearestPowerOfTwo=function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),D.floorPowerOfTwo(t)},D.nextPowerOfTwo=function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),D.ceilPowerOfTwo(t)},N.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},N.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},N.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},N.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},N.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},N.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},bt.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},bt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},bt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new k).setFromMatrixColumn(this,3)},bt.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},bt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},bt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},bt.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},bt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},bt.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},bt.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},bt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},bt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},bt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},bt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},bt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},bt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},bt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},bt.prototype.makeFrustum=function(t,e,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,a)},bt.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Jt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},q.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},q.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},_t.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},_t.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},_t.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},oe.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},oe.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},oe.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},oe.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},oe.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},oe.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),oe.getBarycoord(t,e,n,i,r)},oe.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),oe.getNormal(t,e,n,i)},io.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},io.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new as(this,t)},io.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new cs(this,t)},I.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},I.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},I.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},k.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},k.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},k.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},k.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},k.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},k.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},k.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},k.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},k.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},G.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},G.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},jt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},jt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},jt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},jt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},jt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(jt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),rn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(rn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),oa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(zs.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),dn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(ro.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(_e.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===A},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(A)}}}),_e.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?A:E),this},_e.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},_e.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Fe.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},Fe.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new _e(arguments[1],arguments[2])))},Fe.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},Fe.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Fe.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Fe.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},Fe.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Fe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(xo.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(qo.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(Br.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===A},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Br.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?A:E),this},Br.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},as.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},as.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},as.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Hr.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Fo.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(le.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ge}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(hs.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(hn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Nr.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},Nr.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Nr.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Nr.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Nr.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Nr.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Nr.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Nr.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Nr.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Nr.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Nr.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Nr.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Nr.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Nr.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Nr.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Nr.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Nr.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Nr.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Nr.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Nr.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Nr.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Nr.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Nr.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Nr.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Nr.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Nr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:S}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Tr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(U.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),class extends jt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new wo).load(t,(function(t){e.setBuffer(t)})),this},fn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},fn.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},z.crossOrigin=void 0,z.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Os;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a},z.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Is;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a},z.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},z.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"127"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="127");var sc=n(343),oc=n.n(sc),cc=n(270),lc=n.n(cc);const hc=new class{constructor(){this.scene=new Hr,this.camera=new dn(45,window.innerWidth/window.innerHeight,.1,100),this.camera.position.z=1,this.camera.zoom=parseFloat(document.querySelector(".wave-canvas").getAttribute("zoom")),this.renderer=new Nr({alpha:!0,antialias:!0}),document.querySelector(".wave-canvas").appendChild(this.renderer.domElement),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(0,0),this.clock=new So,this.onResize()}init(){this.createMesh()}createMesh(){var t=document.createElement("canvas");t.width=10089,t.height=6862;var e=t.getContext("2d"),n=document.createElement("img");n.setAttribute("src","data:image/svg+xml;base64,"+window.btoa(unescape(encodeURIComponent('<svg id="Слой_1" data-name="Слой 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1115.27 758.52"><defs><style>.cls-1{fill:url(#Безымянный_градиент);}.cls-2{fill:url(#Безымянный_градиент_140);}.cls-3{fill:#fff;}.cls-4{fill:url(#Безымянный_градиент-2);}.cls-5{fill:url(#Безымянный_градиент_140-2);}.cls-6{fill:url(#Безымянный_градиент-3);}.cls-7{fill:url(#Безымянный_градиент_140-3);}.cls-8{fill:url(#Безымянный_градиент-4);}.cls-9{fill:url(#Безымянный_градиент_140-4);}.cls-10{fill:url(#Безымянный_градиент-5);}.cls-11{fill:url(#Безымянный_градиент_140-5);}.cls-12{fill:url(#Безымянный_градиент-6);}.cls-13{fill:url(#Безымянный_градиент_140-6);}.cls-14{fill:url(#Безымянный_градиент-7);}.cls-15{fill:url(#Безымянный_градиент_140-7);}.cls-16{fill:url(#Безымянный_градиент-8);}.cls-17{fill:url(#Безымянный_градиент_140-8);}.cls-18{fill:url(#Безымянный_градиент-9);}.cls-19{fill:url(#Безымянный_градиент_140-9);}.cls-20{fill:url(#Безымянный_градиент-10);}.cls-21{fill:url(#Безымянный_градиент_140-10);}.cls-22{fill:url(#Безымянный_градиент-11);}.cls-23{fill:url(#Безымянный_градиент_140-11);}.cls-24{fill:url(#Безымянный_градиент-12);}.cls-25{fill:url(#Безымянный_градиент_140-12);}.cls-26{fill:url(#Безымянный_градиент-13);}.cls-27{fill:url(#Безымянный_градиент_140-13);}.cls-28{fill:url(#Безымянный_градиент-14);}.cls-29{fill:url(#Безымянный_градиент_140-14);}.cls-30{fill:url(#Безымянный_градиент-15);}.cls-31{fill:url(#Безымянный_градиент_140-15);}.cls-32{fill:url(#Безымянный_градиент-16);}.cls-33{fill:url(#Безымянный_градиент_140-16);}.cls-34{fill:url(#Безымянный_градиент-17);}.cls-35{fill:url(#Безымянный_градиент_140-17);}.cls-36{fill:url(#Безымянный_градиент-18);}.cls-37{fill:url(#Безымянный_градиент_140-18);}.cls-38{fill:url(#Безымянный_градиент-19);}.cls-39{fill:url(#Безымянный_градиент_140-19);}.cls-40{fill:url(#Безымянный_градиент-20);}.cls-41{fill:url(#Безымянный_градиент_140-20);}.cls-42{fill:url(#Безымянный_градиент-21);}.cls-43{fill:url(#Безымянный_градиент_140-21);}.cls-44{fill:url(#Безымянный_градиент-22);}.cls-45{fill:url(#Безымянный_градиент_140-22);}.cls-46{fill:url(#Безымянный_градиент-23);}.cls-47{fill:url(#Безымянный_градиент_140-23);}.cls-48{fill:url(#Безымянный_градиент-24);}.cls-49{fill:url(#Безымянный_градиент_140-24);}.cls-50{fill:url(#Безымянный_градиент-25);}.cls-51{fill:url(#Безымянный_градиент_140-25);}.cls-52{fill:url(#Безымянный_градиент-26);}.cls-53{fill:url(#Безымянный_градиент_140-26);}.cls-54{fill:url(#Безымянный_градиент-27);}.cls-55{fill:url(#Безымянный_градиент_140-27);}.cls-56{fill:url(#Безымянный_градиент-28);}.cls-57{fill:url(#Безымянный_градиент_140-28);}.cls-58{fill:url(#Безымянный_градиент-29);}.cls-59{fill:url(#Безымянный_градиент_140-29);}.cls-60{fill:url(#Безымянный_градиент-30);}.cls-61{fill:url(#Безымянный_градиент_140-30);}.cls-62{fill:url(#Безымянный_градиент-31);}.cls-63{fill:url(#Безымянный_градиент_140-31);}.cls-64{fill:url(#Безымянный_градиент-32);}.cls-65{fill:url(#Безымянный_градиент_140-32);}.cls-66{fill:url(#Безымянный_градиент-33);}.cls-67{fill:url(#Безымянный_градиент_140-33);}.cls-68{fill:url(#Безымянный_градиент-34);}.cls-69{fill:url(#Безымянный_градиент_140-34);}.cls-70{fill:url(#Безымянный_градиент-35);}.cls-71{fill:url(#Безымянный_градиент_140-35);}.cls-72{fill:url(#Безымянный_градиент-36);}.cls-73{fill:url(#Безымянный_градиент_140-36);}.cls-74{fill:url(#Безымянный_градиент-37);}.cls-75{fill:url(#Безымянный_градиент_140-37);}.cls-76{fill:url(#Безымянный_градиент-38);}.cls-77{fill:url(#Безымянный_градиент_140-38);}.cls-78{fill:url(#Безымянный_градиент-39);}.cls-79{fill:url(#Безымянный_градиент_140-39);}.cls-80{fill:url(#Безымянный_градиент-40);}.cls-81{fill:url(#Безымянный_градиент_140-40);}.cls-82{fill:url(#Безымянный_градиент-41);}.cls-83{fill:url(#Безымянный_градиент_140-41);}.cls-84{fill:url(#Безымянный_градиент-42);}.cls-85{fill:url(#Безымянный_градиент_140-42);}.cls-86{fill:url(#Безымянный_градиент-43);}.cls-87{fill:url(#Безымянный_градиент_140-43);}.cls-88{fill:url(#Безымянный_градиент-44);}.cls-89{fill:url(#Безымянный_градиент_140-44);}.cls-90{fill:url(#Безымянный_градиент-45);}.cls-91{fill:url(#Безымянный_градиент_140-45);}.cls-92{fill:url(#Безымянный_градиент-46);}.cls-93{fill:url(#Безымянный_градиент_140-46);}.cls-94{fill:url(#Безымянный_градиент-47);}.cls-95{fill:url(#Безымянный_градиент_140-47);}.cls-96{fill:url(#Безымянный_градиент-48);}.cls-97{fill:url(#Безымянный_градиент_140-48);}.cls-98{fill:url(#Безымянный_градиент-49);}.cls-99{fill:url(#Безымянный_градиент_140-49);}.cls-100{fill:url(#Безымянный_градиент-50);}.cls-101{fill:url(#Безымянный_градиент_140-50);}.cls-102{fill:url(#Безымянный_градиент-51);}.cls-103{fill:url(#Безымянный_градиент_140-51);}.cls-104{fill:url(#Безымянный_градиент-52);}.cls-105{fill:url(#Безымянный_градиент_140-52);}.cls-106{fill:url(#Безымянный_градиент-53);}.cls-107{fill:url(#Безымянный_градиент_140-53);}.cls-108{fill:url(#Безымянный_градиент-54);}.cls-109{fill:url(#Безымянный_градиент_140-54);}.cls-110{fill:url(#Безымянный_градиент-55);}.cls-111{fill:url(#Безымянный_градиент_140-55);}.cls-112{fill:url(#Безымянный_градиент-56);}.cls-113{fill:url(#Безымянный_градиент_140-56);}.cls-114{fill:url(#Безымянный_градиент-57);}.cls-115{fill:url(#Безымянный_градиент_140-57);}.cls-116{fill:url(#Безымянный_градиент-58);}.cls-117{fill:url(#Безымянный_градиент_140-58);}.cls-118{fill:url(#Безымянный_градиент-59);}.cls-119{fill:url(#Безымянный_градиент_140-59);}.cls-120{fill:url(#Безымянный_градиент-60);}.cls-121{fill:url(#Безымянный_градиент_140-60);}.cls-122{fill:url(#Безымянный_градиент-61);}.cls-123{fill:url(#Безымянный_градиент_140-61);}.cls-124{fill:url(#Безымянный_градиент-62);}.cls-125{fill:url(#Безымянный_градиент_140-62);}.cls-126{fill:url(#Безымянный_градиент-63);}.cls-127{fill:url(#Безымянный_градиент_140-63);}.cls-128{fill:url(#Безымянный_градиент-64);}.cls-129{fill:url(#Безымянный_градиент_140-64);}</style><linearGradient id="Безымянный_градиент" x1="-8.5" y1="759.77" x2="469.32" y2="483.91" gradientTransform="matrix(0.93, 0.36, 0.36, -0.93, -105.22, 1033.5)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#23b1c0"/><stop offset="0.08" stop-color="#25b2c1"/><stop offset="0.1" stop-color="#2cb4c3"/><stop offset="0.12" stop-color="#38b8c6"/><stop offset="0.14" stop-color="#49becb"/><stop offset="0.15" stop-color="#5fc6d1"/><stop offset="0.17" stop-color="#7ad0d9"/><stop offset="0.18" stop-color="#9bdce2"/><stop offset="0.19" stop-color="#c1e9ed"/><stop offset="0.2" stop-color="#ebf8f9"/><stop offset="0.2" stop-color="#fff"/><stop offset="0.2" stop-color="#eff8f9"/><stop offset="0.21" stop-color="#c0e3e9"/><stop offset="0.22" stop-color="#96d1da"/><stop offset="0.23" stop-color="#72c2cd"/><stop offset="0.24" stop-color="#55b5c3"/><stop offset="0.25" stop-color="#3fabbb"/><stop offset="0.26" stop-color="#2fa4b5"/><stop offset="0.27" stop-color="#26a0b2"/><stop offset="0.29" stop-color="#239fb1"/><stop offset="0.29" stop-color="#3a95b2"/><stop offset="0.3" stop-color="#538bb4"/><stop offset="0.32" stop-color="#6782b5"/><stop offset="0.33" stop-color="#757cb5"/><stop offset="0.35" stop-color="#7d79b6"/><stop offset="0.38" stop-color="#7f78b6"/><stop offset="0.38" stop-color="#8c86bd"/><stop offset="0.39" stop-color="#bdbada"/><stop offset="0.41" stop-color="#e1dfee"/><stop offset="0.42" stop-color="#f7f7fa"/><stop offset="0.43" stop-color="#fff"/><stop offset="0.44" stop-color="#fbe5ec"/><stop offset="0.46" stop-color="#f7c9d8"/><stop offset="0.48" stop-color="#f3b3c7"/><stop offset="0.5" stop-color="#f1a3bc"/><stop offset="0.52" stop-color="#ef9ab5"/><stop offset="0.55" stop-color="#ef97b3"/><stop offset="0.57" stop-color="#ef99b5"/><stop offset="0.58" stop-color="#f1a1ba"/><stop offset="0.58" stop-color="#f3aec4"/><stop offset="0.59" stop-color="#f5c1d2"/><stop offset="0.59" stop-color="#f9d9e3"/><stop offset="0.59" stop-color="#fef6f9"/><stop offset="0.6" stop-color="#fff"/><stop offset="0.6" stop-color="#fceef2"/><stop offset="0.61" stop-color="#f8cfdc"/><stop offset="0.62" stop-color="#f4b6ca"/><stop offset="0.64" stop-color="#f1a3bc"/><stop offset="0.65" stop-color="#ef95b2"/><stop offset="0.67" stop-color="#ed8dac"/><stop offset="0.71" stop-color="#ed8baa"/><stop offset="0.73" stop-color="#ee8fad"/><stop offset="0.75" stop-color="#ef9ab5"/><stop offset="0.76" stop-color="#f2acc2"/><stop offset="0.78" stop-color="#f6c7d6"/><stop offset="0.8" stop-color="#fbe8ee"/><stop offset="0.81" stop-color="#fff"/><stop offset="0.83" stop-color="#fadfe7"/><stop offset="0.85" stop-color="#f4bcce"/><stop offset="0.87" stop-color="#f09fb9"/><stop offset="0.9" stop-color="#ec89a8"/><stop offset="0.93" stop-color="#ea799d"/><stop offset="0.96" stop-color="#e87096"/><stop offset="1" stop-color="#e86d94"/></linearGradient><linearGradient id="Безымянный_градиент_140" x1="1711.32" y1="750.04" x2="2153.31" y2="494.86" gradientTransform="matrix(-1.04, -0.4, 0.36, -0.93, 2360.48, 1987.39)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#23b1c0"/><stop offset="0.08" stop-color="#25b2c1"/><stop offset="0.1" stop-color="#2cb4c3"/><stop offset="0.12" stop-color="#38b8c6"/><stop offset="0.14" stop-color="#49becb"/><stop offset="0.15" stop-color="#5fc6d1"/><stop offset="0.17" stop-color="#7ad0d9"/><stop offset="0.18" stop-color="#9bdce2"/><stop offset="0.19" stop-color="#c1e9ed"/><stop offset="0.2" stop-color="#ebf8f9"/><stop offset="0.2" stop-color="#fff"/><stop offset="0.2" stop-color="#eff8f9"/><stop offset="0.21" stop-color="#c0e3e9"/><stop offset="0.22" stop-color="#96d1da"/><stop offset="0.23" stop-color="#72c2cd"/><stop offset="0.24" stop-color="#55b5c3"/><stop offset="0.25" stop-color="#3fabbb"/><stop offset="0.26" stop-color="#2fa4b5"/><stop offset="0.27" stop-color="#26a0b2"/><stop offset="0.29" stop-color="#239fb1"/><stop offset="0.29" stop-color="#3a95b2"/><stop offset="0.3" stop-color="#538bb4"/><stop offset="0.32" stop-color="#6782b5"/><stop offset="0.33" stop-color="#757cb5"/><stop offset="0.35" stop-color="#7d79b6"/><stop offset="0.38" stop-color="#7f78b6"/><stop offset="0.38" stop-color="#8c86bd"/><stop offset="0.39" stop-color="#bdbada"/><stop offset="0.41" stop-color="#e1dfee"/><stop offset="0.42" stop-color="#f7f7fa"/><stop offset="0.43" stop-color="#fff"/><stop offset="0.44" stop-color="#fbe5ec"/><stop offset="0.46" stop-color="#f7c9d8"/><stop offset="0.48" stop-color="#f3b3c7"/><stop offset="0.5" stop-color="#f1a3bc"/><stop offset="0.52" stop-color="#ef9ab5"/><stop offset="0.55" stop-color="#ef97b3"/><stop offset="0.57" stop-color="#ef99b5"/><stop offset="0.58" stop-color="#f1a1ba"/><stop offset="0.58" stop-color="#f3aec4"/><stop offset="0.59" stop-color="#f5c1d2"/><stop offset="0.59" stop-color="#f9d9e3"/><stop offset="0.59" stop-color="#fef6f9"/><stop offset="0.6" stop-color="#fff"/><stop offset="0.6" stop-color="#fceef2"/><stop offset="0.61" stop-color="#f8cfdc"/><stop offset="0.62" stop-color="#f4b6ca"/><stop offset="0.64" stop-color="#f1a3bc"/><stop offset="0.65" stop-color="#ef95b2"/><stop offset="0.67" stop-color="#ed8dac"/><stop offset="0.71" stop-color="#ed8baa"/><stop offset="0.73" stop-color="#ee8fad"/><stop offset="0.75" stop-color="#ef9ab5"/><stop offset="0.76" stop-color="#f2acc2"/><stop offset="0.78" stop-color="#fff"/><stop offset="0.8" stop-color="#fbe8ee"/><stop offset="0.81" stop-color="#fff"/><stop offset="0.83" stop-color="#fadfe7"/><stop offset="0.85" stop-color="#f4bcce"/><stop offset="0.87" stop-color="#f09fb9"/><stop offset="0.9" stop-color="#ec89a8"/><stop offset="0.93" stop-color="#ea799d"/><stop offset="0.96" stop-color="#e87096"/><stop offset="1" stop-color="#e86d94"/></linearGradient><linearGradient id="Безымянный_градиент-2" x1="-8.4" y1="765.33" x2="469.41" y2="489.47" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-2" x1="1711.23" y1="755.62" x2="2153.22" y2="500.44" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-3" x1="-8.44" y1="770.69" x2="469.37" y2="494.83" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-3" x1="1711.27" y1="760.99" x2="2153.26" y2="505.81" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-4" x1="-8.35" y1="776.25" x2="469.47" y2="500.39" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-4" x1="1711.18" y1="766.57" x2="2153.17" y2="511.39" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-5" x1="-8.32" y1="782.01" x2="469.49" y2="506.14" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-5" x1="1711.16" y1="772.34" x2="2153.15" y2="517.16" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-6" x1="-8.23" y1="787.57" x2="469.59" y2="511.71" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-6" x1="1711.07" y1="777.92" x2="2153.06" y2="522.74" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-7" x1="-8.27" y1="792.93" x2="469.54" y2="517.07" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-7" x1="1711.11" y1="783.29" x2="2153.1" y2="528.11" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-8" x1="-8.18" y1="798.49" x2="469.64" y2="522.63" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-8" x1="1711.02" y1="788.87" x2="2153.01" y2="533.69" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-9" x1="-8.3" y1="804.09" x2="469.51" y2="528.22" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-9" x1="1711.13" y1="794.48" x2="2153.12" y2="539.3" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-10" x1="-8.2" y1="809.65" x2="469.61" y2="533.79" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-10" x1="1711.04" y1="800.06" x2="2153.03" y2="544.88" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-11" x1="-8.25" y1="815.01" x2="469.56" y2="539.15" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-11" x1="1711.08" y1="805.43" x2="2153.07" y2="550.25" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-12" x1="-8.15" y1="820.57" x2="469.66" y2="544.71" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-12" x1="1710.99" y1="811.01" x2="2152.98" y2="555.83" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-13" x1="-8.13" y1="826.33" x2="469.68" y2="550.46" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-13" x1="1710.97" y1="816.78" x2="2152.96" y2="561.6" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-14" x1="-8.03" y1="831.89" x2="469.78" y2="556.02" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-14" x1="1710.88" y1="822.36" x2="2152.87" y2="567.18" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-15" x1="-8.08" y1="837.25" x2="469.74" y2="561.39" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-15" x1="1710.92" y1="827.73" x2="2152.91" y2="572.55" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-16" x1="-7.98" y1="842.81" x2="469.83" y2="566.95" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-16" x1="1710.83" y1="833.31" x2="2152.82" y2="578.13" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-17" x1="-8.15" y1="848.22" x2="469.66" y2="572.35" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-17" x1="1710.98" y1="838.73" x2="2152.97" y2="583.55" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-18" x1="-8.05" y1="853.78" x2="469.76" y2="577.92" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-18" x1="1710.89" y1="844.31" x2="2152.88" y2="589.13" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-19" x1="-8.1" y1="859.14" x2="469.71" y2="583.28" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-19" x1="1710.93" y1="849.69" x2="2152.92" y2="594.51" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-20" x1="-8" y1="864.7" x2="469.81" y2="588.84" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-20" x1="1710.84" y1="855.26" x2="2152.83" y2="600.08" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-21" x1="-7.98" y1="870.46" x2="469.83" y2="594.59" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-21" x1="1710.82" y1="861.03" x2="2152.81" y2="605.85" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-22" x1="-7.88" y1="876.02" x2="469.93" y2="600.15" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-22" x1="1710.73" y1="866.61" x2="2152.72" y2="611.43" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-23" x1="-7.93" y1="881.38" x2="469.89" y2="605.52" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-23" x1="1710.77" y1="871.99" x2="2152.76" y2="616.8" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-24" x1="-7.83" y1="886.94" x2="469.98" y2="611.08" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-24" x1="1710.68" y1="877.56" x2="2152.67" y2="622.38" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-25" x1="-7.95" y1="892.54" x2="469.86" y2="616.67" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-25" x1="1710.79" y1="883.17" x2="2152.78" y2="627.99" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-26" x1="-7.86" y1="898.1" x2="469.95" y2="622.23" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-26" x1="1710.7" y1="888.75" x2="2152.69" y2="633.57" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-27" x1="-7.9" y1="903.46" x2="469.91" y2="627.6" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-27" x1="1710.74" y1="894.13" x2="2152.73" y2="638.95" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-28" x1="-7.81" y1="909.02" x2="470.01" y2="633.16" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-28" x1="1710.65" y1="899.7" x2="2152.64" y2="644.52" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-29" x1="-7.78" y1="914.78" x2="470.03" y2="638.91" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-29" x1="1710.63" y1="905.47" x2="2152.62" y2="650.29" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-30" x1="-7.69" y1="920.34" x2="470.13" y2="644.47" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-30" x1="1710.54" y1="911.05" x2="2152.53" y2="655.87" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-31" x1="-7.73" y1="925.7" x2="470.08" y2="649.84" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-31" x1="1710.58" y1="916.43" x2="2152.57" y2="661.25" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-32" x1="-7.63" y1="931.26" x2="470.18" y2="655.4" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-32" x1="1710.49" y1="922" x2="2152.48" y2="666.82" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-33" x1="-7.63" y1="935.96" x2="470.19" y2="660.1" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-33" x1="1710.48" y1="926.72" x2="2152.47" y2="671.54" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-34" x1="-7.53" y1="941.52" x2="470.28" y2="665.66" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-34" x1="1710.39" y1="932.29" x2="2152.38" y2="677.11" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-35" x1="-7.57" y1="946.89" x2="470.24" y2="671.02" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-35" x1="1710.43" y1="937.67" x2="2152.42" y2="682.49" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-36" x1="-7.48" y1="952.45" x2="470.34" y2="676.58" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-36" x1="1710.34" y1="943.25" x2="2152.33" y2="688.07" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-37" x1="-7.45" y1="958.2" x2="470.36" y2="682.34" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-37" x1="1710.32" y1="949.02" x2="2152.31" y2="693.84" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-38" x1="-7.36" y1="963.76" x2="470.46" y2="687.9" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-38" x1="1710.23" y1="954.59" x2="2152.22" y2="699.41" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-39" x1="-7.4" y1="969.13" x2="470.41" y2="693.26" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-39" x1="1710.27" y1="959.97" x2="2152.26" y2="704.79" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-40" x1="-7.31" y1="974.69" x2="470.51" y2="698.82" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-40" x1="1710.18" y1="965.55" x2="2152.17" y2="710.37" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-41" x1="-7.43" y1="980.28" x2="470.38" y2="704.42" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-41" x1="1710.29" y1="971.16" x2="2152.28" y2="715.98" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-42" x1="-7.33" y1="985.84" x2="470.48" y2="709.98" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-42" x1="1710.21" y1="976.74" x2="2152.2" y2="721.56" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-43" x1="-7.38" y1="991.21" x2="470.43" y2="715.34" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-43" x1="1710.24" y1="982.11" x2="2152.23" y2="726.93" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-44" x1="-7.28" y1="996.77" x2="470.53" y2="720.9" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-44" x1="1710.16" y1="987.69" x2="2152.15" y2="732.51" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-45" x1="-7.26" y1="1002.52" x2="470.55" y2="726.66" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-45" x1="1710.13" y1="993.46" x2="2152.12" y2="738.28" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-46" x1="-7.16" y1="1008.08" x2="470.65" y2="732.22" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-46" x1="1710.05" y1="999.04" x2="2152.04" y2="743.85" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-47" x1="-7.21" y1="1013.45" x2="470.61" y2="737.58" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-47" x1="1710.08" y1="1004.41" x2="2152.07" y2="749.23" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-48" x1="-7.11" y1="1019.01" x2="470.7" y2="743.14" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-48" x1="1710" y1="1009.99" x2="2151.99" y2="754.81" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-49" x1="-7.28" y1="1024.41" x2="470.53" y2="748.55" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-49" x1="1710.15" y1="1015.41" x2="2152.14" y2="760.23" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-50" x1="-7.18" y1="1029.97" x2="470.63" y2="754.11" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-50" x1="1710.06" y1="1020.99" x2="2152.05" y2="765.81" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-51" x1="-7.23" y1="1035.34" x2="470.58" y2="759.47" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-51" x1="1710.1" y1="1026.36" x2="2152.09" y2="771.18" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-52" x1="-7.13" y1="1040.9" x2="470.68" y2="765.03" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-52" x1="1710.01" y1="1031.94" x2="2152" y2="776.76" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-53" x1="-7.11" y1="1046.65" x2="470.7" y2="770.79" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-53" x1="1709.99" y1="1037.71" x2="2151.98" y2="782.53" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-54" x1="-7.01" y1="1052.21" x2="470.8" y2="776.35" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-54" x1="1709.9" y1="1043.29" x2="2151.89" y2="788.11" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-55" x1="-7.06" y1="1057.57" x2="470.76" y2="781.71" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-55" x1="1709.94" y1="1048.66" x2="2151.93" y2="793.48" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-56" x1="-6.96" y1="1063.14" x2="470.85" y2="787.27" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-56" x1="1709.85" y1="1054.24" x2="2151.84" y2="799.06" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-57" x1="-7.08" y1="1068.73" x2="470.73" y2="792.87" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-57" x1="1709.96" y1="1059.85" x2="2151.95" y2="804.67" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-58" x1="-6.99" y1="1074.29" x2="470.82" y2="798.43" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-58" x1="1709.87" y1="1065.43" x2="2151.86" y2="810.25" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-59" x1="-7.03" y1="1079.66" x2="470.78" y2="803.79" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-59" x1="1709.91" y1="1070.81" x2="2151.9" y2="815.62" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-60" x1="-6.94" y1="1085.22" x2="470.88" y2="809.35" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-60" x1="1709.82" y1="1076.38" x2="2151.81" y2="821.2" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-61" x1="-6.91" y1="1090.97" x2="470.9" y2="815.11" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-61" x1="1709.8" y1="1082.15" x2="2151.79" y2="826.97" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-62" x1="-6.82" y1="1096.53" x2="471" y2="820.67" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-62" x1="1709.71" y1="1087.73" x2="2151.7" y2="832.55" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-63" x1="-6.86" y1="1101.89" x2="470.95" y2="826.03" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-63" x1="1709.75" y1="1093.1" x2="2151.74" y2="837.92" xlink:href="#Безымянный_градиент_140"/><linearGradient id="Безымянный_градиент-64" x1="-6.76" y1="1107.46" x2="471.05" y2="831.59" xlink:href="#Безымянный_градиент"/><linearGradient id="Безымянный_градиент_140-64" x1="1709.66" y1="1098.68" x2="2151.65" y2="843.5" xlink:href="#Безымянный_градиент_140"/></defs><path class="cls-1" d="M422.58,685.3l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,87.1,87.1,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,49,49,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,22.15,22.15,0,0,1-1.64-3.08,13.1,13.1,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.09,5.09,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37A15.2,15.2,0,0,0,160.1,367a27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1,0,.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,5.51,5.51,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09A113.05,113.05,0,0,0,204.87,479a69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T361.37,480c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A101.25,101.25,0,0,1,428.59,503c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A84.7,84.7,0,0,0,386,602.05a49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8V628c0,.6,0,1.2.05,1.8A50.94,50.94,0,0,0,382,644a55.81,55.81,0,0,0,6.23,13,69,69,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M226.53,476.57a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H209c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62q3.12-.6,6.26-1.13C225.55,475.28,226.05,475.92,226.53,476.57Z"/><path class="cls-2" d="M422.32,685.8l.26-.5a42.07,42.07,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49A66.94,66.94,0,0,0,468,687.2a55.65,55.65,0,0,0,13.2-5.29A54.32,54.32,0,0,0,487.1,678a50.72,50.72,0,0,0,5.34-4.7A56.07,56.07,0,0,0,501.05,662a48.77,48.77,0,0,0,5-13.26A83.92,83.92,0,0,0,508,634.6c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18.81,18.81,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.47,100.47,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.51,42.51,0,0,1,422.32,685.8Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.6,21.6,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C710.78,663.28,710,663.41,709.19,663.56Z"/><polygon class="cls-3" points="712.16 663.05 711.92 662.75 711.36 662.86 711.59 663.16 712.16 663.05"/><path class="cls-4" d="M424.68,680.15l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,418.56,490c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2Q320.9,468.1,306.59,467c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.09,5.09,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11T146.7,353a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81A5.26,5.26,0,0,1,164,371a15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,5.51,5.51,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09A113.05,113.05,0,0,0,207,473.82a69.82,69.82,0,0,0-6.68,2.66A46.62,46.62,0,0,0,194,480a30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M228.63,471.42a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H211.1c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C227.65,470.13,228.15,470.77,228.63,471.42Z"/><path class="cls-5" d="M424.42,680.65l.26-.5a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16A22.36,22.36,0,0,1,731,702.4c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q627.51,582,621.54,578t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.58,83.58,0,0,1,509,643.94a49.24,49.24,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.89,41.89,0,0,1,424.42,680.65Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.52,29.52,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C712.88,658.13,712.09,658.26,711.29,658.41Z"/><polygon class="cls-3" points="714.26 657.9 714.02 657.6 713.46 657.71 713.69 658.01 714.26 657.9"/><path class="cls-6" d="M426.58,675.13l-1.78-.82a111.55,111.55,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.49,19.49,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.24,20.24,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3A98.13,98.13,0,0,0,420.45,485c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.36,6.36,0,0,1,.92-1.5,9.91,9.91,0,0,1,1.26-1.25,19.5,19.5,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.13,5.13,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,46.74,46.74,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.72,7.72,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.71,15.71,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18,18,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,6.31,6.31,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63A12.86,12.86,0,0,0,187.3,496a17.68,17.68,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,29.1,29.1,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,11.8,11.8,0,0,0,1.2-1.36,12.12,12.12,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,13.85,13.85,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.11,29.11,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,17.27,17.27,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.82,51.82,0,0,0,2.6,14.16,57,57,0,0,0,6.23,13,70.48,70.48,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29,87.76,87.76,0,0,0,12.77,7.88l1.17.57M230.52,466.41a63.81,63.81,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,11.69,11.69,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H213c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.64,112.64,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C229.54,465.12,230,465.76,230.52,466.41Z"/><path class="cls-7" d="M426.31,675.63l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a89.45,89.45,0,0,0,14.27.49A68.47,68.47,0,0,0,472,677a53.19,53.19,0,0,0,19.14-9.2,54.23,54.23,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.35,49.35,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,29.19,29.19,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.37,17.37,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,23.63,23.63,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.23,5.23,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.51,10.51,0,0,0-.09-1.78,19.2,19.2,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15,15,0,0,1-1-3.46,5.23,5.23,0,0,1,.05-1.81,2.84,2.84,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,45.47,45.47,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.73,18.73,0,0,1,.9,3.48,10.75,10.75,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.94,6.94,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.31,10.31,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.38,46.38,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78L704,699c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.67,36.67,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,47.39,47.39,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39C710.91,647,706,641.59,701,636.32c-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q629.41,577,623.44,573t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,18.85,18.85,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,63.18,63.18,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,57.36,57.36,0,0,1-13.36,5.33A69.8,69.8,0,0,1,458.08,680a88.65,88.65,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,426.31,675.63ZM713.19,653.4c-2.35.45-4.67,1-7,1.67a46.61,46.61,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.7,16.7,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.41,12.41,0,0,0,3.26-1.3,8.27,8.27,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a22,22,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,112.89,112.89,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C714.78,653.12,714,653.25,713.19,653.4Z"/><polygon class="cls-3" points="716.16 652.88 715.92 652.59 715.36 652.7 715.59 653 716.16 652.88"/><path class="cls-8" d="M428.68,670l-1.78-.82a111.55,111.55,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.47,56.47,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.49,19.49,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,19.88,19.88,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a98.13,98.13,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.36,6.36,0,0,1,.92-1.5,9.91,9.91,0,0,1,1.26-1.25,19.5,19.5,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.28,5.28,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.64,7.64,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.72,7.72,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.71,15.71,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18,18,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09A113.05,113.05,0,0,0,211,463.66a64.94,64.94,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62A30.86,30.86,0,0,0,235.6,496a22.86,22.86,0,0,0,2.78-2.31,13.69,13.69,0,0,0,2.2-2.85,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,13.85,13.85,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91A48.78,48.78,0,0,0,237,467c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,17.27,17.27,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.57,85.57,0,0,0,392,586.74a49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.44,51.44,0,0,0,2.6,14.16,57,57,0,0,0,6.23,13,70.48,70.48,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29,89.09,89.09,0,0,0,12.76,7.88l1.18.57M232.62,461.26a65.85,65.85,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.55,16.55,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,11.69,11.69,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,44.65,44.65,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,110.42,110.42,0,0,1,13.84-3.62q3.12-.61,6.26-1.13C231.64,460,232.14,460.61,232.62,461.26Z"/><path class="cls-9" d="M428.41,670.48l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.42,3.59.6,1.12.21,3,.45,6.07.8A87.17,87.17,0,0,0,460,674a67.13,67.13,0,0,0,14.08-2.13,55.82,55.82,0,0,0,13.2-5.29,53.83,53.83,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,85,85,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.89,50.89,0,0,1,1.2-7.12,29.07,29.07,0,0,1,2.55-6.78,19.61,19.61,0,0,1,4.51-5.7,18.54,18.54,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49A28.75,28.75,0,0,1,534,530.2c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a101.78,101.78,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.16,44.16,0,0,0,7-1.36,21.79,21.79,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,3.06,3.06,0,0,1,.33-.85,2.62,2.62,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.22,15.22,0,0,1,3.56-.51,27,27,0,0,1,3.59.18,48,48,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a48,48,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.79,7.79,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,2.79,2.79,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14,14,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.67,6.67,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.13,9.13,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,44.21,44.21,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a111.77,111.77,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,47.18,47.18,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.64,22.64,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.92,6.92,0,0,1-.48.79,8.54,8.54,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,23.93,23.93,0,0,1-7.14-1A34.88,34.88,0,0,1,710,696.1c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,26,26,0,0,1-1-3.47,19.52,19.52,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a16.62,16.62,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.34,30.34,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,28,28,0,0,0-6.92,1.38A20.56,20.56,0,0,0,524,534a17.94,17.94,0,0,0-7.2,7.48,29.11,29.11,0,0,0-2.47,6.61,49.19,49.19,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A84.46,84.46,0,0,1,513,633.77a49.44,49.44,0,0,1-5.12,13.46,60.73,60.73,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L501.64,656l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.5,56.5,0,0,1-13.36,5.33,68.44,68.44,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.51,42.51,0,0,1,428.41,670.48Zm286.88-22.24c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,29.68,29.68,0,0,0-6,3.75,16.68,16.68,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.06,34.06,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,11.76,11.76,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,30,30,0,0,0-.89-7,46.11,46.11,0,0,0-2.26-6.75,70.44,70.44,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.56-3.87-5C716.88,648,716.09,648.09,715.29,648.24Z"/><polygon class="cls-3" points="718.26 647.73 718.02 647.43 717.46 647.54 717.69 647.85 718.26 647.73"/><path class="cls-10" d="M430.78,664.62,429,663.8a110,110,0,0,1-12.11-7.58A89.58,89.58,0,0,1,406,647a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14A56.51,56.51,0,0,1,389.56,595a49.36,49.36,0,0,1,5.23-13.18A83.89,83.89,0,0,1,402.91,570c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25A19,19,0,0,0,454,500a20.61,20.61,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,11.4,11.4,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M234.72,455.9a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64A112.17,112.17,0,0,1,227,455c2.08-.41,4.17-.78,6.26-1.13C233.74,454.61,234.24,455.25,234.72,455.9Z"/><path class="cls-11" d="M430.51,665.12l.27-.5a40.32,40.32,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,56.24,56.24,0,0,0,13.2-5.29,55.3,55.3,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86T639.72,570q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.83,4.83,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81,2.59,2.59,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24,24,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.34,10.34,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.91,7.91,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68C711,690.2,710,689.61,709,689l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26.4,26.4,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57A15.22,15.22,0,0,1,695,653a20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,28.93,28.93,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26A49.56,49.56,0,0,1,510,641.88a61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,430.51,665.12Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13.24,13.24,0,0,0-1.39,6.85,20.86,20.86,0,0,0,.48,3.51,25.57,25.57,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7A45.33,45.33,0,0,0,734.6,666a68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.58-3.87-5C719,642.61,718.19,642.74,717.39,642.89Z"/><polygon class="cls-3" points="720.36 642.38 720.12 642.08 719.56 642.19 719.79 642.49 720.36 642.38"/><path class="cls-12" d="M432.88,659.47l-1.78-.82A109.09,109.09,0,0,1,419,651.07a88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18A83.89,83.89,0,0,1,405,564.89c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H222l.9-.06A38.73,38.73,0,0,0,230,490a33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49A13.75,13.75,0,0,0,246.2,477a12.17,12.17,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48A26.77,26.77,0,0,1,454,492a20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M236.82,450.75a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.81,19.81,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.61,6.26-1.13C235.84,449.46,236.34,450.1,236.82,450.75Z"/><path class="cls-13" d="M432.61,660l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,56.24,56.24,0,0,0,13.2-5.29,51,51,0,0,0,11.28-8.61,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49,27.7,27.7,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.8,5.8,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81,2.59,2.59,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24.06,24.06,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H879l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.49,7.49,0,0,0-3.11,1.65,2.22,2.22,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.77,19.77,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a11.06,11.06,0,0,1-1.25,1.31,14,14,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L776.78,637c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,47.59,47.59,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.54-.48.79a8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,66.55,66.55,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2A18.89,18.89,0,0,0,521,531a28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3A54.81,54.81,0,0,1,492,656.92a56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,432.61,660Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.56,28.56,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,10.24,10.24,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.3,17.3,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.58-3.87-5C721.08,637.46,720.29,637.59,719.49,637.74Z"/><polygon class="cls-3" points="722.46 637.23 722.22 636.93 721.65 637.04 721.88 637.34 722.46 637.23"/><path class="cls-14" d="M434.77,654.46l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58A88,88,0,0,1,410,636.8a68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,49,49,0,0,1,5.23-13.18,83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,22.15,22.15,0,0,1-1.64-3.08,13.1,13.1,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5A9.92,9.92,0,0,1,155,355a19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,47.56,47.56,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.54,2.54,0,0,1,0,.87,3.31,3.31,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.71,22.71,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49A14.22,14.22,0,0,0,248.1,472a15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M238.72,445.73a67.31,67.31,0,0,1,4,5.91A49.46,49.46,0,0,1,246,458a29.65,29.65,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.78,23.78,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.22,8.22,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64A111.71,111.71,0,0,1,231,444.87q3.12-.6,6.26-1.13C237.74,444.44,238.24,445.08,238.72,445.73Z"/><path class="cls-15" d="M434.51,655l.26-.5a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36A22.06,22.06,0,0,0,839,630.2a12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18.81,18.81,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L778.67,632c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06,65.29,65.29,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,36.09,36.09,0,0,1-6.69-2.68C715,680,714,679.44,713,678.8l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.56,20.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.77,27.77,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.41,18.41,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26A49.24,49.24,0,0,1,514,631.71a60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.1,42.1,0,0,1,434.51,655Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.64,21.64,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C723,632.44,722.18,632.57,721.38,632.72Z"/><polygon class="cls-3" points="724.35 632.21 724.11 631.91 723.55 632.02 723.78 632.32 724.35 632.21"/><path class="cls-16" d="M436.87,649.31l-1.77-.83A108.17,108.17,0,0,1,423,640.9a88,88,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18A82.8,82.8,0,0,1,409,554.72c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,47.56,47.56,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.31,3.31,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09A113.05,113.05,0,0,0,219.16,443a69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27A16.74,16.74,0,0,0,200,473a24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H226l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,23.49,23.49,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T375.66,444c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A98.71,98.71,0,0,1,442.88,467c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.38,27.38,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8V592c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.56M240.82,440.58a69.59,69.59,0,0,1,4,5.91,50.08,50.08,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.78,23.78,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.69,11.69,0,0,1-1.53-3.16,7.46,7.46,0,0,1-.16-4.3c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.16-.78,6.26-1.13C239.84,439.29,240.34,439.93,240.82,440.58Z"/><path class="cls-17" d="M436.61,649.8l.26-.49a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A56.07,56.07,0,0,0,515.34,626a48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1A21.56,21.56,0,0,1,535,511a28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H883l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.47,23.47,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.3,24.3,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.56,20.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.24,27.24,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2A19.19,19.19,0,0,0,525,520.8a30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71L511,634l-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.46,41.46,0,0,1,436.61,649.8Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C725.07,627.29,724.28,627.42,723.48,627.57Z"/><polygon class="cls-3" points="726.45 627.06 726.21 626.76 725.65 626.87 725.88 627.17 726.45 627.06"/><path class="cls-18" d="M438.78,644l-1.78-.82a110,110,0,0,1-12.11-7.58A89.58,89.58,0,0,1,414,626.39a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.23,49.23,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.48,19.48,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2Q335,432,320.68,430.92c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88C216,408,208.57,402,201.13,396L190,387c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,11.44,11.44,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63A12.86,12.86,0,0,0,199.5,465a16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,11.4,11.4,0,0,0,1-1.49,13.58,13.58,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29A88.2,88.2,0,0,0,437.33,644l1.18.57M242.72,435.32a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16A8.4,8.4,0,0,1,198,458c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64A112.17,112.17,0,0,1,235,434.46c2.08-.41,4.17-.78,6.26-1.13C241.74,434,242.24,434.67,242.72,435.32Z"/><path class="cls-19" d="M438.51,644.54l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49A67.8,67.8,0,0,0,484.16,646a56.24,56.24,0,0,0,13.2-5.29,55.3,55.3,0,0,0,5.94-3.91,54.23,54.23,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12A28.74,28.74,0,0,1,526.1,515a19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.83,4.83,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81A2.59,2.59,0,0,1,841,589a2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24,24,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.31,10.31,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.38,46.38,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.91,7.91,0,0,1-.48.79,8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68C719,669.62,718,669,717,668.39l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79S678,573,670.47,567.09s-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26A49.56,49.56,0,0,1,518,621.3a61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33A69.8,69.8,0,0,1,470.28,649a87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,438.51,644.54Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,25.57,25.57,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7.05,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C727,622,726.19,622.16,725.39,622.31Z"/><polygon class="cls-3" points="728.36 621.8 728.12 621.5 727.56 621.61 727.79 621.91 728.36 621.8"/><path class="cls-20" d="M440.88,638.89l-1.78-.82A109.09,109.09,0,0,1,427,630.49a88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15A49.1,49.1,0,0,1,404.89,556,83.89,83.89,0,0,1,413,544.31c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.5,19.5,0,0,1,3-2c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.29,14.29,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H230l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,29.1,29.1,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M244.82,430.17a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11.69,11.69,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C243.84,428.88,244.34,429.52,244.82,430.17Z"/><path class="cls-21" d="M440.61,639.39l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a89.45,89.45,0,0,0,14.27.49,68.47,68.47,0,0,0,14.08-2.13,53.19,53.19,0,0,0,19.14-9.2,55.4,55.4,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49,27.7,27.7,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,24.09,24.09,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.42,5.42,0,0,0,.7-2.52,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.23,5.23,0,0,1,0-1.81,2.59,2.59,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24.06,24.06,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H887l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.49,7.49,0,0,0-3.11,1.65,2.22,2.22,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.77,19.77,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a11.06,11.06,0,0,1-1.25,1.31,14,14,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,47.59,47.59,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.54-.48.79a8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,66.55,66.55,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,63.18,63.18,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L513.84,625l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,440.61,639.39Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.56,28.56,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,10.24,10.24,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.3,17.3,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,112.89,112.89,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C729.08,616.88,728.29,617,727.49,617.16Z"/><polygon class="cls-3" points="730.46 616.65 730.22 616.35 729.65 616.46 729.88 616.76 730.46 616.65"/><path class="cls-22" d="M442.77,633.88l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58A88,88,0,0,1,418,616.22a68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15A49,49,0,0,1,406.79,551a83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,30.14,30.14,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,22.15,22.15,0,0,1-1.64-3.08,13.21,13.21,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,47.56,47.56,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.54,2.54,0,0,1,0,.87,3.31,3.31,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.71,22.71,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.38,27.38,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.56M246.72,425.15a67.31,67.31,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.78,23.78,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.69,11.69,0,0,1-1.53-3.16,8.22,8.22,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64A111.71,111.71,0,0,1,239,424.29c2.08-.41,4.17-.78,6.26-1.13C245.74,423.86,246.24,424.5,246.72,425.15Z"/><path class="cls-23" d="M442.51,634.37l.26-.49a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49A28.75,28.75,0,0,1,548,494.1c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18.6,18.6,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83,1.32,1.32,0,0,1-.12.2l-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06A65.29,65.29,0,0,1,747.1,635a45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.3,24.3,0,0,1-7.14-1,36.09,36.09,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.56,20.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26A49.24,49.24,0,0,1,522,611.13a60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.67,41.67,0,0,1,442.51,634.37Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.64,21.64,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C731,611.86,730.18,612,729.38,612.14Z"/><polygon class="cls-3" points="732.35 611.63 732.11 611.33 731.55 611.44 731.78 611.74 732.35 611.63"/><path class="cls-24" d="M444.87,628.72l-1.77-.82A108.17,108.17,0,0,1,431,620.32a88,88,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18A82.8,82.8,0,0,1,417,534.14c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77V333a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.17,16.17,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,47.56,47.56,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.31,3.31,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H234l.9-.06a38,38,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,23.49,23.49,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48A27.12,27.12,0,0,1,466,461.2a20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.56M248.82,420a69.59,69.59,0,0,1,4,5.91,50.08,50.08,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.78,23.78,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.69,11.69,0,0,1-1.53-3.16,7.46,7.46,0,0,1-.16-4.3c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.16-.78,6.26-1.13C247.84,418.71,248.34,419.35,248.82,420Z"/><path class="cls-25" d="M444.61,629.22l.26-.5a40.38,40.38,0,0,0,7.38,2.14c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H891a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.59,14.59,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.47,23.47,0,0,1-3.37,1.25,44.9,44.9,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.3,24.3,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.69,20.69,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.73,29.73,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.24,27.24,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26A49.24,49.24,0,0,1,524.1,606a60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.46,41.46,0,0,1,444.61,629.22ZM731.48,607c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,16.53,16.53,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C733.07,606.71,732.28,606.84,731.48,607Z"/><polygon class="cls-3" points="734.45 606.48 734.21 606.18 733.65 606.29 733.88 606.59 734.45 606.48"/><path class="cls-26" d="M447,623.37l-1.77-.83A108.17,108.17,0,0,1,433.09,615a87.1,87.1,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15A48.7,48.7,0,0,1,411,540.51a82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,5.4,5.4,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.86,5.86,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09A114.87,114.87,0,0,0,229.26,417a69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A101.25,101.25,0,0,1,453,441.09c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69,69,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M250.92,414.64a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4A15.9,15.9,0,0,1,208,444a11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C249.94,413.35,250.44,414,250.92,414.64Z"/><path class="cls-27" d="M446.71,623.87l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,68.76,68.76,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71H556a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,446.71,623.87Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33A12.92,12.92,0,0,0,708,620a13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5C735.17,601.35,734.38,601.48,733.58,601.63Z"/><polygon class="cls-3" points="736.55 601.12 736.31 600.82 735.75 600.93 735.98 601.23 736.55 601.12"/><path class="cls-28" d="M449.07,618.22l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,443,428.09c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,5.09,5.09,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06H151l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65A28.21,28.21,0,0,1,186.5,300a15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.64,4.64,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a112.58,112.58,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A84.7,84.7,0,0,0,412.44,535a49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13A68.52,68.52,0,0,0,423.87,601a88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M253,409.49a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C252,408.2,252.54,408.84,253,409.49Z"/><path class="cls-29" d="M448.81,618.72l.26-.5a42.07,42.07,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67,67,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86T658,523.61q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L793,595.76c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A100.79,100.79,0,0,0,568.75,480c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.58,83.58,0,0,1,533.42,582a49.24,49.24,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L522,604.27l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4A56.5,56.5,0,0,1,494.79,621a69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A43.16,43.16,0,0,1,448.81,618.72Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5C737.27,596.2,736.48,596.33,735.68,596.48Z"/><polygon class="cls-3" points="738.65 595.97 738.41 595.67 737.85 595.78 738.08 596.08 738.65 595.97"/><path class="cls-30" d="M451,613.2l-1.78-.82a110,110,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15A49.1,49.1,0,0,1,415,530.35a83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.49,19.49,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.24,20.24,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a98.13,98.13,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.36,6.36,0,0,1,.92-1.5,9.91,9.91,0,0,1,1.26-1.25,19.5,19.5,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.13,5.13,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,46.74,46.74,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.72,7.72,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.71,15.71,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18,18,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76A25,25,0,0,0,220,441a36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,29.1,29.1,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,12.12,12.12,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,13.85,13.85,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A98,98,0,0,1,457,430.93c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,17.27,17.27,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.57,85.57,0,0,0,414.33,530a49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,57,57,0,0,0,6.23,13A70,70,0,0,0,425.76,596a91.15,91.15,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M254.91,404.48a63.81,63.81,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,11.69,11.69,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C253.93,403.19,254.43,403.83,254.91,404.48Z"/><path class="cls-31" d="M450.7,613.7l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a89.45,89.45,0,0,0,14.27.49,68.47,68.47,0,0,0,14.08-2.13,53.19,53.19,0,0,0,19.14-9.2,54.23,54.23,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.35,49.35,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.37,17.37,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,24.09,24.09,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18L860,585a5.23,5.23,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15,15,0,0,1-1-3.46,5.23,5.23,0,0,1,.05-1.81,2.84,2.84,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,45.47,45.47,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.73,18.73,0,0,1,.9,3.48,10.75,10.75,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.94,6.94,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.31,10.31,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93A23.92,23.92,0,0,1,852,590.4a46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.38,46.38,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26L723,633l-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.67,36.67,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,47.39,47.39,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22A98,98,0,0,0,570.65,475c-2.36-.34-4.72-.58-7.1-.71H560a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,18.85,18.85,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A84.59,84.59,0,0,1,535.32,577a49.69,49.69,0,0,1-5.12,13.46,63.18,63.18,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4A56.93,56.93,0,0,1,496.69,616a69.8,69.8,0,0,1-14.22,2.13,88.65,88.65,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,450.7,613.7Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.41,12.41,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a22,22,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7.05,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,112.89,112.89,0,0,0-7.78-12q-1.89-2.58-3.87-5C739.17,591.19,738.38,591.32,737.58,591.47Z"/><polygon class="cls-3" points="740.55 590.96 740.31 590.66 739.75 590.77 739.98 591.07 740.55 590.96"/><path class="cls-32" d="M453.07,608.05l-1.78-.82a110.59,110.59,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a98.13,98.13,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2Q349.28,396,335,394.93c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.36,6.36,0,0,1,.92-1.5,9.3,9.3,0,0,1,1.26-1.25,19.5,19.5,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.13,5.13,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06H155l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.71,15.71,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18,18,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,30.86,30.86,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,17.27,17.27,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.44,51.44,0,0,0,2.6,14.16,57,57,0,0,0,6.23,13,70.48,70.48,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29A88.2,88.2,0,0,0,451.62,608l1.18.57M257,399.33a65.85,65.85,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.55,16.55,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,11.69,11.69,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,44.65,44.65,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,110.42,110.42,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C256,398,256.53,398.68,257,399.33Z"/><path class="cls-33" d="M452.8,608.55l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.8a87.17,87.17,0,0,0,14.27.49A67.13,67.13,0,0,0,498.45,610a55.82,55.82,0,0,0,13.2-5.29,53.83,53.83,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.16,56.16,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,85,85,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.89,50.89,0,0,1,1.2-7.12,29.07,29.07,0,0,1,2.55-6.78,19.61,19.61,0,0,1,4.51-5.7,18.54,18.54,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49,28.66,28.66,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a101.78,101.78,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.43q6,3.86,12,7.85T662,513.44q11.73,8.28,23,17.13T707,549c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.16,44.16,0,0,0,7-1.36,21.79,21.79,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.18,5.18,0,0,1,.05-1.8,2.74,2.74,0,0,1,.33-.86,2.62,2.62,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.22,15.22,0,0,1,3.56-.51,27.07,27.07,0,0,1,3.59.18,46.72,46.72,0,0,1,7,1.43c2.31.63,4.58,1.38,6.82,2.2s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.49.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.61-1.55-.9-1-.57-2.1-1.13-3.17-1.67-2.14-1.08-4.3-2.09-6.48-3.06s-4.4-1.87-6.64-2.69-4.52-1.57-6.82-2.2a49.31,49.31,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.73,7.73,0,0,0-3.11,1.65,2.35,2.35,0,0,0-.55.67,2.79,2.79,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14,14,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.67,6.67,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.71,9.71,0,0,1-1.25,1.31,13.23,13.23,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,44.21,44.21,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L797,585.59c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a111.77,111.77,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,47.18,47.18,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.6,22.6,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a8.72,8.72,0,0,1-.48.79,8.54,8.54,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,23.93,23.93,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a35.74,35.74,0,0,1-4.43-5.67,32.3,32.3,0,0,1-3.2-6.45,26,26,0,0,1-1-3.47,19.52,19.52,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.7-1,1.1-1.44a20.56,20.56,0,0,1,2.6-2.51A30.34,30.34,0,0,1,726,590.2a50,50,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,28,28,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.94,17.94,0,0,0-7.2,7.48,29.11,29.11,0,0,0-2.47,6.61,49.19,49.19,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.46,84.46,0,0,1-1.93,14.26,49.44,49.44,0,0,1-5.12,13.46,60.73,60.73,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L526,594.1l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.5,56.5,0,0,1-13.36,5.33A68.44,68.44,0,0,1,484.57,613a86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.51,42.51,0,0,1,452.8,608.55Zm286.88-22.24c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,29.68,29.68,0,0,0-6,3.75,16.78,16.78,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,10.52,10.52,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.59,20.59,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.42.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.06,34.06,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,16,16,0,0,0,3.5-.45,11.76,11.76,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,30,30,0,0,0-.89-7.05,46.11,46.11,0,0,0-2.26-6.75,70.44,70.44,0,0,0-3.13-6.42A113.92,113.92,0,0,0,746,591q-1.89-2.57-3.87-5.05C741.27,586,740.48,586.16,739.68,586.31Z"/><polygon class="cls-3" points="742.65 585.8 742.41 585.5 741.85 585.62 742.08 585.91 742.65 585.8"/><path class="cls-34" d="M454.86,603l-1.77-.83A106.74,106.74,0,0,1,441,594.54a86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.19,55.19,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18A83.37,83.37,0,0,1,427,508.36c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.51,4.51,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.8,2.8,0,0,1,0,.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.72,5.72,0,0,0-1,1.54,4.88,4.88,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.91,113.91,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H244l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,12,12,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69A49.13,49.13,0,0,0,413,533.1a61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M258.81,394.22a71.22,71.22,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C257.83,392.93,258.33,393.57,258.81,394.22Z"/><path class="cls-35" d="M454.6,603.45l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49,67.13,67.13,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.78,19.78,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.73,43.73,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H901a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79A8.45,8.45,0,0,1,757,631a12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79S694,531.9,686.55,526s-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38A21,21,0,0,0,550.2,467a19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L527.82,589l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,454.6,603.45Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.89-2.57-3.87-5C743.06,580.93,742.27,581.06,741.47,581.21Z"/><polygon class="cls-3" points="744.44 580.7 744.2 580.4 743.64 580.51 743.87 580.81 744.44 580.7"/><path class="cls-36" d="M457,597.8l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.19,55.19,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15A48.7,48.7,0,0,1,421,514.94a82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30.43,30.43,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.51,4.51,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.28,19.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.49,15.49,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8.09,8.09,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,4.64,4.64,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a112.12,112.12,0,0,0-13.89,3.65,67.79,67.79,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.1,22.1,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.27,24.27,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,18.17,18.17,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A101.25,101.25,0,0,1,463,415.52c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,20.9,20.9,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M260.91,389.07a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12.41,12.41,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,28.12,28.12,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.11,37.11,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4A15.9,15.9,0,0,1,218,418.4a11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.79,21.79,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C259.93,387.78,260.43,388.42,260.91,389.07Z"/><path class="cls-37" d="M456.7,598.3l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.34,88.34,0,0,0,14.27.49,67.13,67.13,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a52.14,52.14,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.61,19.61,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100.33,100.33,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08C625.66,477,633.89,482,642,487.09q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.71,47.71,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.41,46.41,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93A21.68,21.68,0,0,1,858,575a43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a111.77,111.77,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71H566a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.44,49.44,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13A86.5,86.5,0,0,1,473.9,602s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,456.7,598.3Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C745.16,575.78,744.37,575.91,743.57,576.06Z"/><polygon class="cls-3" points="746.54 575.55 746.3 575.25 745.74 575.36 745.97 575.66 746.54 575.55"/><path class="cls-38" d="M458.86,592.78l-1.78-.82A109.09,109.09,0,0,1,445,584.38a88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18A83.89,83.89,0,0,1,431,498.2c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a98.13,98.13,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.23,6.23,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19,19,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18,18,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2A46.29,46.29,0,0,0,183.4,312c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H248l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,29.1,29.1,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.6,56.6,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M262.8,384.06a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.61,6.26-1.13C261.82,382.77,262.32,383.41,262.8,384.06Z"/><path class="cls-39" d="M458.59,593.28l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a89.45,89.45,0,0,0,14.27.49,68.47,68.47,0,0,0,14.08-2.13,53.19,53.19,0,0,0,19.14-9.2,55.4,55.4,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.37,17.37,0,0,1,3-2.1,19.9,19.9,0,0,1,3.33-1.49,27.7,27.7,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.79-.58,7.63-.92,11.46-1.14,4.78-.27,9.56-.33,14.35-.29,9.57.1,19.12.64,28.65,1.24L817,571c4.78.29,9.54.55,14.32.72s9.55.23,14.34,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,24.09,24.09,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.13-.18.13-.18.12-.18.12-.19a4.43,4.43,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.09-6.46-.52-1.09-1-2.17-1.44-3.29a15,15,0,0,1-1-3.46,5.49,5.49,0,0,1,0-1.81,2.86,2.86,0,0,1,.34-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51A23.86,23.86,0,0,1,872,535a46.19,46.19,0,0,1,7,1.42c2.32.63,4.59,1.38,6.83,2.21s4.45,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.16,1.68l1.56.89.77.48.37.26.16.14c.07.06.14.06.15.21H905l-.13-.13-.18-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.54-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.41-1.87-6.64-2.69s-4.53-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.18,25.18,0,0,0-3.58-.17,14,14,0,0,0-3.52.51,7.49,7.49,0,0,0-3.11,1.65,2.22,2.22,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.77,19.77,0,0,1,.9,3.48,10.75,10.75,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.94,6.94,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a11.06,11.06,0,0,1-1.25,1.31,14,14,0,0,1-3,1.93A23.92,23.92,0,0,1,859.9,570a46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.1-1.11-28.66-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a107,107,0,0,1,7.8,12.06,66.52,66.52,0,0,1,3.16,6.46,47.59,47.59,0,0,1,2.28,6.83,30.79,30.79,0,0,1,.89,7.16A22.69,22.69,0,0,1,765.2,615c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.53-.48.79a8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,66.55,66.55,0,0,1,7-1.66c.73-.14,1.46-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.21-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26A49.69,49.69,0,0,1,538.09,570a63.18,63.18,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.93,56.93,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13A87.51,87.51,0,0,1,475.8,597s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,458.59,593.28Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.56,28.56,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,10.24,10.24,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.78,33.78,0,0,0,3.15,6.38,39,39,0,0,0,4.39,5.6c.21.21.41.44.62.64l.63.63c.22.21.43.41.66.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.3,17.3,0,0,0,3.5-.45,12.41,12.41,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,30.39,30.39,0,0,0-.89-7.05,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,112.89,112.89,0,0,0-7.78-12c-1.26-1.72-2.56-3.4-3.87-5.05C747.06,570.77,746.27,570.9,745.47,571.05Z"/><polygon class="cls-3" points="748.43 570.54 748.2 570.24 747.63 570.35 747.87 570.65 748.43 570.54"/><path class="cls-40" d="M461,587.63l-1.77-.82a110.59,110.59,0,0,1-12.11-7.58A88.82,88.82,0,0,1,436.2,570a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14A56.51,56.51,0,0,1,419.74,518,49.1,49.1,0,0,1,425,504.78a83.05,83.05,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77V292a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,9.3,9.3,0,0,1,1.26-1.25,19,19,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.29,5.29,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77A25.32,25.32,0,0,0,195.7,267a45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.71,15.71,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.6,17.6,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27A17.16,17.16,0,0,0,224,411.3a25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,30.15,30.15,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,14.15,14.15,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A98.71,98.71,0,0,1,467,405.36c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18,18,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.6,56.6,0,0,0,6.23,13,70.48,70.48,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M264.9,378.91a65.85,65.85,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.11,45.11,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C263.92,377.62,264.42,378.26,264.9,378.91Z"/><path class="cls-41" d="M460.69,588.13l.26-.5a41.44,41.44,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a89.53,89.53,0,0,0,14.27.49,68.26,68.26,0,0,0,14.08-2.13,56.33,56.33,0,0,0,13.2-5.29,54.83,54.83,0,0,0,5.94-3.91,53.1,53.1,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.17,18.17,0,0,1,3-2.1,20.65,20.65,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86T669.89,493q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.14,13.14,0,0,0,3-1.9,8.73,8.73,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.43,4.43,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.78,8.78,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16.11,16.11,0,0,1-1-3.46,5.77,5.77,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,45,45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18,18,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.8,4.8,0,0,1-.39.83,1.51,1.51,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,29.75,29.75,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.66,16.66,0,0,1-3.6.45,24.68,24.68,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.93,37.93,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,30.46,30.46,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,14,14,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a20.52,20.52,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,48.31,48.31,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a97.36,97.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71H570a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,19.58,19.58,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,59.57,59.57,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3A54.81,54.81,0,0,1,520,585.08a56.59,56.59,0,0,1-13.36,5.33,69.59,69.59,0,0,1-14.22,2.13,88.7,88.7,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,460.69,588.13ZM747.56,565.9c-2.35.45-4.67,1-7,1.67a47.52,47.52,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.94,21.94,0,0,0,.48,3.51,29.51,29.51,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38A37.6,37.6,0,0,0,731,605c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,12.15,12.15,0,0,0,3.26-1.3,8.05,8.05,0,0,0,2.56-2.33,4.44,4.44,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.42,21.42,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,44.21,44.21,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12Q752,568,750,565.52C749.15,565.62,748.36,565.75,747.56,565.9Z"/><polygon class="cls-3" points="750.53 565.38 750.29 565.09 749.73 565.2 749.96 565.5 750.53 565.38"/><path class="cls-42" d="M463.05,582.27l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49,49,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84A5.93,5.93,0,0,1,182,284a10.63,10.63,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16L165,249h-.22a.46.46,0,0,0-.26.06H165l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.55,2.55,0,0,1,0,.87,3,3,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09A113.05,113.05,0,0,0,245.34,376a69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62A28.46,28.46,0,0,0,270,408.3a22,22,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T401.84,377c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A98.71,98.71,0,0,1,469.06,400c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.57,85.57,0,0,0,426.42,499a49.78,49.78,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8V525c0,.6,0,1.2,0,1.8a51.31,51.31,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13A70,70,0,0,0,437.85,565a89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M267,373.55a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.5,29.5,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65A21.87,21.87,0,0,1,227.2,387a29.73,29.73,0,0,1,5.4-4.61,46.18,46.18,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C266,372.26,266.52,372.9,267,373.55Z"/><path class="cls-43" d="M462.79,582.77l.26-.5a40.61,40.61,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A55.71,55.71,0,0,0,541.52,559a48.89,48.89,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86T672,487.67q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,7.84,7.84,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a3.87,3.87,0,0,0,.37-.8,5.64,5.64,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,3,3,0,0,1,.59-.7A7.87,7.87,0,0,1,869,524.8a14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17A14.13,14.13,0,0,0,869,525a7.74,7.74,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.08,15.08,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,44.9,44.9,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L807,559.82c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,29.81,29.81,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.73,16.73,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.09,36.09,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.33,29.33,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21.43,21.43,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L536,568.33l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a52.2,52.2,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.16,56.16,0,0,1-13.36,5.33,68.91,68.91,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,462.79,582.77Zm286.87-22.23c-2.35.45-4.67,1-7,1.67A50.14,50.14,0,0,0,736,564.7a29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.94,21.94,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,3.75,3.75,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C751.25,560.26,750.46,560.39,749.66,560.54Z"/><polygon class="cls-3" points="752.63 560.03 752.39 559.73 751.83 559.84 752.06 560.14 752.63 560.03"/><path class="cls-44" d="M465.15,577.12l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58,88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,83.05,83.05,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49,49,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19L478,399l-.7-.57q-2.79-2.28-5.78-4.3A100.07,100.07,0,0,0,459,387c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.17,44.17,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3,3,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.86,7.86,0,0,0-1.2-3.37,14.19,14.19,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77A7.9,7.9,0,0,1,206,265a2.55,2.55,0,0,1-.05.87,3,3,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,25.39,25.39,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2A33.6,33.6,0,0,0,269,405a28.46,28.46,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.68,19.68,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.41,56.41,0,0,0,6.23,13A69.48,69.48,0,0,0,440,559.88a90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M269.1,368.4a67.31,67.31,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.11,45.11,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C268.12,367.11,268.62,367.75,269.1,368.4Z"/><path class="cls-45" d="M464.89,577.62l.26-.5a40.61,40.61,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a88.37,88.37,0,0,0,14.27.49A67.59,67.59,0,0,0,510.53,579a55.9,55.9,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.89,48.89,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,8.26,8.26,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.13,4.13,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.78,5.78,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.47,4.47,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.73,16.73,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,28,28,0,0,1-1-3.47,20.69,20.69,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q668,479,662,475t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.21,18.21,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,29.9,29.9,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.16,56.16,0,0,1-13.36,5.33A69.7,69.7,0,0,1,496.65,582a87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,464.89,577.62Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,27.15,27.15,0,0,0,1,3.41,33.83,33.83,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,4.3,4.3,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.58-3.87-5C753.35,555.11,752.56,555.24,751.76,555.39Z"/><polygon class="cls-3" points="754.73 554.88 754.49 554.58 753.93 554.69 754.16 554.99 754.73 554.88"/><path class="cls-46" d="M467.05,572.11l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,87.22,87.22,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,460.93,382c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2Q363.27,360.06,349,359c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.29,4.29,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06H169l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1,0,.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a112.58,112.58,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2A33.84,33.84,0,0,0,270.9,400a29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69,69,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29A87.72,87.72,0,0,0,465.61,572l1.18.57M271,363.38a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C270,362.09,270.52,362.73,271,363.38Z"/><path class="cls-47" d="M466.79,572.61l.26-.5a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49A67,67,0,0,0,512.43,574a55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86T676,477.5q11.73,8.28,23,17.13T721,513c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L811,549.65c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L540,558.16l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33A69,69,0,0,1,498.55,577a86.55,86.55,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.89,41.89,0,0,1,466.79,572.61Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.52,29.52,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42A110.82,110.82,0,0,0,760,555q-1.89-2.56-3.87-5C755.25,550.09,754.46,550.22,753.66,550.37Z"/><polygon class="cls-3" points="756.63 549.86 756.39 549.56 755.83 549.67 756.06 549.97 756.63 549.86"/><path class="cls-48" d="M469.15,567l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,87.22,87.22,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.17,50.17,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,463,376.83c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.09,4.09,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.28,19.28,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16,16,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,47.56,47.56,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77A7.9,7.9,0,0,1,210,254.8a2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a112.12,112.12,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.23,12.23,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,23.49,23.49,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,18.17,18.17,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,20.9,20.9,0,0,1,1.4,3.22,18.31,18.31,0,0,1,.27,10.42,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13A69,69,0,0,0,444,549.71,89.5,89.5,0,0,0,455,559a87.72,87.72,0,0,0,12.76,7.89l1.18.57M273.1,358.23a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,13.31,13.31,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,28.12,28.12,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.78,23.78,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.79,21.79,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C272.12,356.94,272.62,357.58,273.1,358.23Z"/><path class="cls-49" d="M468.89,567.46l.26-.5a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.34,88.34,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91A51.74,51.74,0,0,0,539,555a56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.36,29.36,0,0,1,2.55-6.78,19.48,19.48,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.61,98.61,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.08,45.08,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18L878,539l.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13L915,522l-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.54,35.54,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.56,20.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q672,468.79,666,464.82T654,457c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.41,18.41,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L542.11,553l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.89,41.89,0,0,1,468.89,567.46Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C757.35,544.94,756.56,545.07,755.76,545.22Z"/><polygon class="cls-3" points="758.73 544.71 758.49 544.41 757.93 544.52 758.16 544.82 758.73 544.71"/><path class="cls-50" d="M471.05,561.69l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58A88,88,0,0,1,446.3,544a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14A56.51,56.51,0,0,1,429.84,492a49.36,49.36,0,0,1,5.23-13.18,83.05,83.05,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49,49,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77V266a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06H173l.45.06.88.16L176,229c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3,3,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.31,51.31,0,0,0,2.6,14.16,56.41,56.41,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.33,87.33,0,0,0,12.76,7.88l1.18.57M275,353a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,46.18,46.18,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C274,351.68,274.52,352.32,275,353Z"/><path class="cls-51" d="M470.79,562.19l.26-.5a40.61,40.61,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.89,48.89,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86T680,467.09q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,8.26,8.26,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.13,4.13,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.08,15.08,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.47,4.47,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2L880,534l-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,44.9,44.9,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L815,539.24c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,29.75,29.75,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.73,16.73,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.88,29.88,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,13.89,13.89,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21.43,21.43,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,29.9,29.9,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26A49.24,49.24,0,0,1,550.28,539a58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L544,547.75l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.16,56.16,0,0,1-13.36,5.33,69.59,69.59,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,470.79,562.19ZM757.66,540c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.94,21.94,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,3.75,3.75,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C759.25,539.68,758.46,539.81,757.66,540Z"/><polygon class="cls-3" points="760.63 539.45 760.39 539.15 759.83 539.26 760.06 539.56 760.63 539.45"/><path class="cls-52" d="M473.15,556.54l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58,88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.23,49.23,0,0,1,5.23-13.18A83.05,83.05,0,0,1,445.29,462c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A100.07,100.07,0,0,0,467,366.42c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.17,44.17,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3,3,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91A7.81,7.81,0,0,0,213,241a13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14,14,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,19.68,19.68,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.41,56.41,0,0,0,6.23,13A69.48,69.48,0,0,0,448,539.3a90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M277.1,347.82a67.31,67.31,0,0,1,4,5.91,48.18,48.18,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.11,45.11,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64A112.17,112.17,0,0,1,269.4,347c2.08-.41,4.17-.78,6.26-1.13C276.12,346.53,276.62,347.17,277.1,347.82Z"/><path class="cls-53" d="M472.89,557l.26-.5a41.44,41.44,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.89,48.89,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.81,12.81,0,0,0,3-1.9,8.73,8.73,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.13,4.13,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.78,5.78,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.47,4.47,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.73,16.73,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,28.54,28.54,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q676,458.38,670,454.41t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3A54.81,54.81,0,0,1,532.23,554a56.16,56.16,0,0,1-13.36,5.33,69.59,69.59,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,472.89,557Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a48.8,48.8,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,28.94,28.94,0,0,0,1,3.41,33.83,33.83,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,4.72,4.72,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05A44.21,44.21,0,0,0,777,557.9a63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C761.35,534.53,760.56,534.66,759.76,534.81Z"/><polygon class="cls-3" points="762.73 534.3 762.49 534 761.93 534.11 762.16 534.41 762.73 534.3"/><path class="cls-54" d="M475.05,551.53l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,87.22,87.22,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,50.17,50.17,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06H177l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.82,2.82,0,0,1,0,.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a112.58,112.58,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,23.49,23.49,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a100,100,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.31,18.31,0,0,1,.27,10.42,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69,69,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M279,342.8a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C278,341.51,278.52,342.15,279,342.8Z"/><path class="cls-55" d="M474.79,552l.26-.5a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.69,67.69,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.61,98.61,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86T684,456.92q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L819,529.07c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.56,20.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L548,537.58l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13A86.55,86.55,0,0,1,492,555.7s-4.41-.44-9.25-1.4A41.89,41.89,0,0,1,474.79,552Zm286.87-22.24c-2.35.45-4.67,1-7,1.67A49.63,49.63,0,0,0,748,534a29.52,29.52,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C763.25,529.51,762.46,529.64,761.66,529.79Z"/><polygon class="cls-3" points="764.63 529.28 764.39 528.98 763.83 529.09 764.06 529.39 764.63 529.28"/><path class="cls-56" d="M477.15,546.38l-1.77-.83A108.17,108.17,0,0,1,463.27,538a87.22,87.22,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.17,50.17,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59A49.42,49.42,0,0,0,498,399.3a30.14,30.14,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,471,356.25c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.09,4.09,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.28,19.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,47.56,47.56,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.31,3.31,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.13,13.13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a112.12,112.12,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.23,12.23,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,23.49,23.49,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.31,18.31,0,0,1,.27,10.42,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8A50.94,50.94,0,0,0,436.6,505a55.81,55.81,0,0,0,6.23,13A69,69,0,0,0,452,529.13a89.5,89.5,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.56M281.1,337.65a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,13.31,13.31,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,28.12,28.12,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.78,23.78,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.69,11.69,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.64,21.64,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.16-.78,6.26-1.13C280.12,336.36,280.62,337,281.1,337.65Z"/><path class="cls-57" d="M476.89,546.87l.26-.49a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.34,88.34,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.36,29.36,0,0,1,2.55-6.78,19.48,19.48,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.61,98.61,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.08,45.08,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.3,24.3,0,0,1-7.14-1,35.54,35.54,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.56,20.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q680,448.21,674,444.24t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12A27.68,27.68,0,0,0,575.7,409a21,21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.19,19.19,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.46,41.46,0,0,1,476.89,546.87Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.24,13.24,0,0,0-1.39,6.85,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35,35,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33A5,5,0,0,0,782,571c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C765.35,524.36,764.56,524.49,763.76,524.64Z"/><polygon class="cls-3" points="766.73 524.13 766.49 523.83 765.93 523.94 766.16 524.24 766.73 524.13"/><path class="cls-58" d="M479.25,541l-1.77-.83a106.74,106.74,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68,68,0,0,1-9-11.07,55.19,55.19,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14A55.63,55.63,0,0,1,438,471.34a48.7,48.7,0,0,1,5.23-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.51,4.51,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.28,19.28,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.49,15.49,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H181a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8.09,8.09,0,0,1,1.19,3.32,2.8,2.8,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.88,5.88,0,0,0-.95,1.54,4.88,4.88,0,0,0-.28.87.81.81,0,0,0,0,.22V246a9.12,9.12,0,0,0,0,1.81,12.92,12.92,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,43.94,43.94,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a115.76,115.76,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.1,22.1,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,34.72,34.72,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,12,12,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,14.74,14.74,0,0,0,.35-1.78,17.89,17.89,0,0,0,.17-1.81,20.74,20.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T418,335.74c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,21.33,21.33,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.31,85.31,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29A87.72,87.72,0,0,0,477.81,541l1.18.57M283.2,332.29a71.22,71.22,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12.41,12.41,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,28.12,28.12,0,0,1-3,1.85,32.42,32.42,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8,8,0,0,1-.33-3.45c0-.28.1-.56.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.79,21.79,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,70.37,70.37,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C282.22,331,282.72,331.64,283.2,332.29Z"/><path class="cls-59" d="M479,541.52l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.21,87.21,0,0,0,14.27.49,67.13,67.13,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.61,19.61,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.94,43.94,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a47.42,47.42,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.79,7.79,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a111.77,111.77,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.44,8.44,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.44,49.44,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75A56.5,56.5,0,0,1,525,543.79a68.34,68.34,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,479,541.52Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C767.45,519,766.66,519.13,765.86,519.28Z"/><polygon class="cls-3" points="768.83 518.77 768.59 518.47 768.03 518.58 768.26 518.88 768.83 518.77"/><path class="cls-60" d="M481.35,535.87l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.19,55.19,0,0,1-6.18-12.8,49.75,49.75,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15A48.7,48.7,0,0,1,445.37,453a82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30.43,30.43,0,0,0,2.69-6.73,18.88,18.88,0,0,0-.29-10.82,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73A21.14,21.14,0,0,1,200,246a12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.51,4.51,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.28,19.28,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.49,15.49,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,49.44,49.44,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8.09,8.09,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.88,4.88,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.91,113.91,0,0,0-13.89,3.65A67.79,67.79,0,0,0,257,332.2a46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,21.87,21.87,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.27,24.27,0,0,0,5.94,4.09,35.13,35.13,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,18.17,18.17,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,20.9,20.9,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.17.57M285.3,327.14a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12.41,12.41,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32A19.69,19.69,0,0,1,288,361.5a28.12,28.12,0,0,1-3,1.85,33.24,33.24,0,0,1-6.63,2.58,37.11,37.11,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.25,34.25,0,0,1-6.66-2.5,23.33,23.33,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,6.39,6.39,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.79,21.79,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C284.32,325.85,284.82,326.49,285.3,327.14Z"/><path class="cls-61" d="M481.08,536.37l.27-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.22,2.69.42,3.58.6,1.12.21,3,.45,6.07.8a87.21,87.21,0,0,0,14.27.49,67.13,67.13,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a52.4,52.4,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.61,19.61,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100.33,100.33,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,48,48,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.67,6.67,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,44,44,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a111.77,111.77,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A100.79,100.79,0,0,0,601,397.65c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48A30.08,30.08,0,0,0,567,414a50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.44,49.44,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.51,42.51,0,0,1,481.08,536.37ZM768,514.13c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7,46.11,46.11,0,0,0-2.26-6.75A67.91,67.91,0,0,0,782,530.8a112.35,112.35,0,0,0-7.78-12q-1.89-2.56-3.87-5C769.55,513.85,768.76,514,768,514.13Z"/><polygon class="cls-3" points="770.93 513.62 770.69 513.32 770.13 513.43 770.36 513.73 770.93 513.62"/><path class="cls-62" d="M483.24,530.85l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58,88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14A56.51,56.51,0,0,1,442,461.18,49.1,49.1,0,0,1,447.26,448a83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19,19,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.29,14.29,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,30.15,30.15,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,14.15,14.15,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T422,325.58c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.37,51.37,0,0,0,2.6,14.16,56.41,56.41,0,0,0,6.23,13A70,70,0,0,0,458,513.61a90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M287.19,322.13a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.61,6.26-1.13C286.21,320.84,286.71,321.48,287.19,322.13Z"/><path class="cls-63" d="M483,531.35l.26-.5a41.44,41.44,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a89.53,89.53,0,0,0,14.27.49,68.26,68.26,0,0,0,14.08-2.13,56.33,56.33,0,0,0,13.2-5.29,54.83,54.83,0,0,0,5.94-3.91,53.1,53.1,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.57,48.57,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.17,18.17,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.14,13.14,0,0,0,3-1.9,8.73,8.73,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.43,4.43,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.77,5.77,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68L928,485l.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.47,4.47,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,29.75,29.75,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.66,16.66,0,0,1-3.6.45,24.68,24.68,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,30.46,30.46,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,14,14,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a97.36,97.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,20.46,20.46,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,49,49,0,0,1-5.12,13.46,59.57,59.57,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75A56.16,56.16,0,0,1,529,533.63a69.59,69.59,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,483,531.35Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a48.8,48.8,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.94,21.94,0,0,0,.48,3.51,29.51,29.51,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,38.41,38.41,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,4.07,4.07,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,43.15,43.15,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12q-1.89-2.58-3.87-5C771.44,508.84,770.65,509,769.85,509.12Z"/><polygon class="cls-3" points="772.83 508.61 772.59 508.31 772.02 508.42 772.25 508.72 772.83 508.61"/><path class="cls-64" d="M485.34,525.7l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58,88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14A56.51,56.51,0,0,1,444.13,456a49.1,49.1,0,0,1,5.23-13.18,83.05,83.05,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.17,44.17,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77V230a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19,19,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9A5.29,5.29,0,0,0,226,215.3a3,3,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.81,7.81,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H187a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3A47.4,47.4,0,0,1,220,205.2a24.83,24.83,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.71,15.71,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.6,17.6,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81A13.52,13.52,0,0,0,204,236a26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65A67.29,67.29,0,0,0,261,322a44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,30.15,30.15,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,14.15,14.15,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,19.68,19.68,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18,18,0,0,1,.76,3.42,18.79,18.79,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.6,56.6,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M289.29,317a65.85,65.85,0,0,1,4,5.91,48.18,48.18,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,13,13,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.11,45.11,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C288.31,315.69,288.81,316.33,289.29,317Z"/><path class="cls-65" d="M485.08,526.2l.26-.5a41.44,41.44,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a89.53,89.53,0,0,0,14.27.49,68.26,68.26,0,0,0,14.08-2.13,56.33,56.33,0,0,0,13.2-5.29,54.83,54.83,0,0,0,5.94-3.91,53.1,53.1,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.17,18.17,0,0,1,3-2.1,20.65,20.65,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08C654,405,662.27,409.86,670.34,415q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.14,13.14,0,0,0,3-1.9,8.73,8.73,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.43,4.43,0,0,0,.37-.8A5.7,5.7,0,0,0,895,495a8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16.11,16.11,0,0,1-1-3.46,5.77,5.77,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51A7.61,7.61,0,0,0,888.2,470a2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18,18,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.8,4.8,0,0,1-.39.83,1.51,1.51,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,29.75,29.75,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.73,16.73,0,0,1-3.6.45,24.68,24.68,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,30.46,30.46,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.52,20.52,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42C753.12,480,746.18,473.43,739,467.1s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22A97.36,97.36,0,0,0,605,387.49c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,19.21,19.21,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26A49.36,49.36,0,0,1,564.57,503a59.57,59.57,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.59,56.59,0,0,1-13.36,5.33,69.59,69.59,0,0,1-14.22,2.13,88.7,88.7,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,485.08,526.2ZM772,504c-2.35.45-4.67,1-7,1.67a48.8,48.8,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,29.51,29.51,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,12.15,12.15,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,4.07,4.07,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.42,21.42,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.21,44.21,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C773.54,503.69,772.75,503.82,772,504Z"/><polygon class="cls-3" points="774.92 503.46 774.68 503.16 774.12 503.27 774.35 503.57 774.92 503.46"/><path class="cls-66" d="M487.05,521.32l-1.77-.82a110.59,110.59,0,0,1-12.11-7.58,88.82,88.82,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15,48.77,48.77,0,0,1,5.23-13.18,83.05,83.05,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,23.34,23.34,0,0,1-1.64-3.08,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19,19,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.17,16.17,0,0,0,3-1.9,5.45,5.45,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.94,7.94,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,46.45,46.45,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16L189,188h-.22a.46.46,0,0,0-.26.06H189l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,25.79,25.79,0,0,1,2.75,2.26,14,14,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,16,16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.6,17.6,0,0,0-3,2A8.54,8.54,0,0,0,206,223a5.57,5.57,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,23.56,23.56,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09A113.05,113.05,0,0,0,269.34,315a67.29,67.29,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,33.32,33.32,0,0,0,3.08-1.88,23.65,23.65,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18,18,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.51,48.51,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.32,49.32,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8V464c0,.6,0,1.2,0,1.8A51.07,51.07,0,0,0,446.5,480a56.19,56.19,0,0,0,6.23,13,69.93,69.93,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.54,88.54,0,0,0,12.76,7.88l1.18.57M291,312.6a65.85,65.85,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.71,16.71,0,0,1-.31,7,13.43,13.43,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38.64,38.64,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.06,24.06,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,43.54,43.54,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,110,110,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C290,311.31,290.52,312,291,312.6Z"/><path class="cls-67" d="M486.79,521.82l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.43,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A55.79,55.79,0,0,0,565.52,498a48.77,48.77,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a101.13,101.13,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86T696,426.71q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.73,43.73,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18.81,18.81,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a47.42,47.42,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17A15,15,0,0,0,893,464a7.86,7.86,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L831,498.86c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,68.76,68.76,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.32,22.32,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.33,8.33,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a20.56,20.56,0,0,1,2.6-2.51,30.62,30.62,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.47,100.47,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,28.13,28.13,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.45,83.45,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L560,507.37l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a51.91,51.91,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.51,42.51,0,0,1,486.79,521.82Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,17,17,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,11.64,11.64,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.6,21.6,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C775.25,499.3,774.46,499.43,773.66,499.58Z"/><polygon class="cls-3" points="776.63 499.07 776.39 498.77 775.83 498.88 776.06 499.19 776.63 499.07"/><path class="cls-68" d="M489.15,516.17l-1.77-.83a106.74,106.74,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68,68,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,483,326c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.4,5.4,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77A8,8,0,0,1,230,204a2.8,2.8,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.66,5.66,0,0,0-1.23,2.41.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.3,13.3,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,43.94,43.94,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a116.76,116.76,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52A30.28,30.28,0,0,0,253,320.7a22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,34.72,34.72,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,12,12,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,14.74,14.74,0,0,0,.35-1.78,15.41,15.41,0,0,0,.17-1.81,20.74,20.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20.37,20.37,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.31,85.31,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13A69,69,0,0,0,464,498.92a88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M293.1,307.44a71.22,71.22,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.42,32.42,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8,8,0,0,1-.33-3.45c0-.28.1-.56.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,70.37,70.37,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C292.12,306.15,292.62,306.79,293.1,307.44Z"/><path class="cls-69" d="M488.89,516.67l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.73,43.73,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a47.42,47.42,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51A7.86,7.86,0,0,0,892,460.5a2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,68.76,68.76,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.33,8.33,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q692,418,686,414t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A100.79,100.79,0,0,0,608.83,378c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.58,83.58,0,0,1,573.5,480a49.12,49.12,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a51.91,51.91,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,488.89,516.67Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C777.35,494.15,776.56,494.28,775.76,494.43Z"/><polygon class="cls-3" points="778.73 493.92 778.49 493.62 777.93 493.73 778.16 494.03 778.73 493.92"/><path class="cls-70" d="M491.05,511.15l-1.78-.82a110,110,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.48,19.48,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3A99.36,99.36,0,0,0,484.92,321c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2Q387.26,299.1,373,298c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,10.62,10.62,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06H193l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,46.74,46.74,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.22,14.22,0,0,1,2.25,2.77,7.77,7.77,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,2.77,2.77,0,0,1-.31.81A5.2,5.2,0,0,1,230.4,202a15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,6.31,6.31,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,11.8,11.8,0,0,0,1.2-1.36,11.4,11.4,0,0,0,1-1.49,13.58,13.58,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,13.85,13.85,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.11,29.11,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.75,51.75,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29,87.76,87.76,0,0,0,12.77,7.88l1.17.57M295,302.43a65.17,65.17,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a22.11,22.11,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.64,112.64,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C294,301.14,294.51,301.78,295,302.43Z"/><path class="cls-71" d="M490.78,511.65l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,56.24,56.24,0,0,0,13.2-5.29,55.3,55.3,0,0,0,5.94-3.91,54.23,54.23,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,29.19,29.19,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24S636,379,638.23,380c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86T700,416.55q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18L900,483a4.83,4.83,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81,2.84,2.84,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.31,10.31,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L835,488.7c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.38,46.38,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q693.88,413,687.91,409t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A84.59,84.59,0,0,1,575.4,475a49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L564,497.21l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,490.78,511.65Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.7,16.7,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,25.57,25.57,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.58-3.87-5C779.25,489.14,778.46,489.27,777.66,489.42Z"/><polygon class="cls-3" points="780.63 488.91 780.39 488.61 779.83 488.72 780.06 489.02 780.63 488.91"/><path class="cls-72" d="M493.15,506l-1.78-.82a110,110,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.49,19.49,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57A20.24,20.24,0,0,0,514.9,338a27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3A98.13,98.13,0,0,0,487,315.88c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,24.58,24.58,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,10.62,10.62,0,0,1,1.26-1.25,19.5,19.5,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.29,14.29,0,0,1,2.25,2.77,7.77,7.77,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,29.1,29.1,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,12.12,12.12,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78A13.85,13.85,0,0,0,307,320a18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M297.09,297.28a65.17,65.17,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11.69,11.69,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C296.11,296,296.61,296.63,297.09,297.28Z"/><path class="cls-73" d="M492.88,506.5l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a89.45,89.45,0,0,0,14.27.49,68.47,68.47,0,0,0,14.08-2.13,53.19,53.19,0,0,0,19.14-9.2A54.23,54.23,0,0,0,563,494a56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.37,17.37,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,24.09,24.09,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18L902,478l.12-.19a5.23,5.23,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.23,5.23,0,0,1,0-1.81,2.84,2.84,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13L939,461l-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.31,10.31,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.38,46.38,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.91,7.91,0,0,1-.48.79,8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q696,407.84,690,403.87T678,396c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,63.18,63.18,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,492.88,506.5Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,112.89,112.89,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C781.35,484,780.56,484.12,779.76,484.27Z"/><polygon class="cls-3" points="782.73 483.76 782.49 483.46 781.93 483.57 782.16 483.87 782.73 483.76"/><path class="cls-74" d="M495.25,500.65l-1.78-.83a110,110,0,0,1-12.11-7.58A88.69,88.69,0,0,1,470.49,483a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14A56.55,56.55,0,0,1,454,431a49.36,49.36,0,0,1,5.23-13.18,84.48,84.48,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.67,29.67,0,0,0,2.69-6.73,19.46,19.46,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a100.61,100.61,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.5,13.5,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77V205a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,11.44,11.44,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.36,15.36,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77A26.51,26.51,0,0,0,230,180a46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26,26,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.77,7.77,0,0,1,1.19,3.32,2.31,2.31,0,0,1-.05.87,3,3,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,10.24,10.24,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,11.91,11.91,0,0,0,1.2-1.36,11.4,11.4,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,11.92,11.92,0,0,0,.35-1.78,13.69,13.69,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,29.87,29.87,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T434,295.37c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27,27,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.31,51.31,0,0,0,2.6,14.16,56.62,56.62,0,0,0,6.23,13A70,70,0,0,0,470,483.4a90.25,90.25,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M299.19,291.92a65.17,65.17,0,0,1,4,5.91,48.22,48.22,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,13.4,13.4,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24,24,0,0,1-5.83-4,16.87,16.87,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45c.05-.28.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,30.07,30.07,0,0,1,5.4-4.61,46.79,46.79,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C298.21,290.63,298.71,291.27,299.19,291.92Z"/><path class="cls-75" d="M495,501.14l.27-.49a41,41,0,0,0,7.37,2.13c1.28.23,2.7.43,3.59.6,1.12.22,3,.46,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,53.19,53.19,0,0,0,19.14-9.2,51.74,51.74,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,85.1,85.1,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.91,28.91,0,0,1,2.55-6.78,19.48,19.48,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86T704.19,406q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,2.94,2.94,0,0,1,.33-.85,2.62,2.62,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,14.71,14.71,0,0,1,3.56-.51,27,27,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.47,14.47,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,2.69,2.69,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14,14,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.67,6.67,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.13,9.13,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.21,44.21,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,46.78,46.78,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.64,22.64,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.91,7.91,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45A12.32,12.32,0,0,1,794,530a16.2,16.2,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,35.54,35.54,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26,26,0,0,1-1-3.47,19.64,19.64,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42C763,455,756.09,448.37,748.94,442s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.11,29.11,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4A56.5,56.5,0,0,1,541,503.42a69.12,69.12,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.67,41.67,0,0,1,495,501.14Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13.24,13.24,0,0,0-1.39,6.85,20.73,20.73,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.71,34.71,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.93,29.93,0,0,0-.89-7,45.72,45.72,0,0,0-2.26-6.75,69.18,69.18,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C783.45,478.63,782.66,478.76,781.86,478.91Z"/><polygon class="cls-3" points="784.83 478.4 784.59 478.1 784.03 478.21 784.26 478.51 784.83 478.4"/><path class="cls-76" d="M497.35,495.49l-1.78-.82a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.55,56.55,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,84.48,84.48,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H199a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3A47.4,47.4,0,0,1,232,175a26,26,0,0,1,2.75,2.26A14.59,14.59,0,0,1,237,180a7.9,7.9,0,0,1,1.19,3.32,2.31,2.31,0,0,1-.05.87,3,3,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,11.92,11.92,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,29.87,29.87,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48A26.77,26.77,0,0,1,518.5,328a20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.62,56.62,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M301.29,286.77a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24,24,0,0,1-5.83-4,16.87,16.87,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,46.79,46.79,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C300.31,285.48,300.81,286.12,301.29,286.77Z"/><path class="cls-77" d="M497.08,496l.27-.5a40.32,40.32,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.22,3,.46,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,53.19,53.19,0,0,0,19.14-9.2,51.74,51.74,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.91,28.91,0,0,1,2.55-6.78,19.48,19.48,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49,28.21,28.21,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72A10.57,10.57,0,0,0,907,463a19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,2.68,2.68,0,0,1,.33-.85,2.62,2.62,0,0,1,.59-.7A7.8,7.8,0,0,1,903.3,438a14.71,14.71,0,0,1,3.56-.51,24.06,24.06,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.35,2.35,0,0,0-.55.67,2.69,2.69,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.13,14.13,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.77,19.77,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.67,6.67,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.71,9.71,0,0,1-1.25,1.31,14,14,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,45.36,45.36,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L841.25,473c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,48,48,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.54-.48.79a8.66,8.66,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,35.54,35.54,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26,26,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A99.36,99.36,0,0,0,617,357.28c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48A29.11,29.11,0,0,0,583,373.6a48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.67,41.67,0,0,1,497.08,496ZM784,473.76c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.56,28.56,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,10.37,10.37,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.71,34.71,0,0,0,6.61,2.65,24,24,0,0,0,7,1,16.62,16.62,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.93,29.93,0,0,0-.89-7,45.72,45.72,0,0,0-2.26-6.75,69.18,69.18,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C785.55,473.48,784.76,473.61,784,473.76Z"/><polygon class="cls-3" points="786.92 473.25 786.68 472.95 786.13 473.06 786.36 473.36 786.92 473.25"/><path class="cls-78" d="M499.24,490.48l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,87.1,87.1,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14A55.63,55.63,0,0,1,458,420.8a49,49,0,0,1,5.23-13.18,83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,22.15,22.15,0,0,1-1.64-3.08,13.1,13.1,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.4,5.4,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.54,2.54,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,5.86,5.86,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,21.84,21.84,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T438,285.2c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48A27.65,27.65,0,0,1,520.4,323a20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,47.06,47.06,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a50.94,50.94,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13A69,69,0,0,0,474,473.23a88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89L499,491M303.19,281.75a67.31,67.31,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.22,8.22,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62q3.12-.6,6.26-1.13C302.21,280.46,302.71,281.1,303.19,281.75Z"/><path class="cls-79" d="M499,491l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18.81,18.81,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33A19.14,19.14,0,0,1,909,458a9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83.82.82,0,0,1-.12.2l-.12.18L908,463l-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L843.14,468c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,66.39,66.39,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3L771,510l-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.47,100.47,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.77,27.77,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4A56.5,56.5,0,0,1,545,493.25a68.34,68.34,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.51,42.51,0,0,1,499,491Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.6,21.6,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C787.44,468.46,786.65,468.59,785.85,468.74Z"/><polygon class="cls-3" points="788.82 468.23 788.58 467.93 788.02 468.04 788.25 468.34 788.82 468.23"/><path class="cls-80" d="M501.34,485.33l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,87.1,87.1,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,13.1,13.1,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.09,5.09,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H203a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,48.56,48.56,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.51,5.51,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09A113.05,113.05,0,0,0,283.63,279a69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8V428c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16A55.81,55.81,0,0,0,467,457a69.48,69.48,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M305.29,276.6a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32A19.69,19.69,0,0,1,308,311a27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C304.31,275.31,304.81,276,305.29,276.6Z"/><path class="cls-81" d="M501.08,485.83l.26-.5a42.07,42.07,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A56.07,56.07,0,0,0,579.81,462a48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1A21.56,21.56,0,0,1,599.5,347a28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19L910,458a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46A46,46,0,0,1,808,493.3a30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74A50.47,50.47,0,0,1,781,465a69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A100.47,100.47,0,0,0,621,347.11c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A43.16,43.16,0,0,1,501.08,485.83ZM788,463.59c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C789.54,463.31,788.75,463.44,788,463.59Z"/><polygon class="cls-3" points="790.92 463.08 790.68 462.78 790.12 462.89 790.35 463.19 790.92 463.08"/><path class="cls-82" d="M503.25,480.07l-1.78-.83a110,110,0,0,1-12.11-7.58,88.69,88.69,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14A56.55,56.55,0,0,1,462,410.39a49.36,49.36,0,0,1,5.23-13.18,84.48,84.48,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.46,19.46,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57A20.61,20.61,0,0,0,525,312.1a27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a100.61,100.61,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88C280.47,244,273,238,265.6,232l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,11.44,11.44,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.36,15.36,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26,26,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.77,7.77,0,0,1,1.19,3.32,2.31,2.31,0,0,1-.05.87,3,3,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,10.24,10.24,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63A12.86,12.86,0,0,0,264,301a16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,11.91,11.91,0,0,0,1.2-1.36,11.4,11.4,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,11.92,11.92,0,0,0,.35-1.78,13.69,13.69,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,29.87,29.87,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T442,274.79c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27,27,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.31,51.31,0,0,0,2.6,14.16,56.62,56.62,0,0,0,6.23,13A70,70,0,0,0,478,462.82a90.25,90.25,0,0,0,11,9.29A88.26,88.26,0,0,0,501.8,480l1.18.56M307.19,271.34a65.17,65.17,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24,24,0,0,1-5.83-4,16.87,16.87,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,30.07,30.07,0,0,1,5.4-4.61,46.79,46.79,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C306.21,270.05,306.71,270.69,307.19,271.34Z"/><path class="cls-83" d="M503,480.56l.27-.49a41,41,0,0,0,7.37,2.13c1.28.23,2.7.43,3.59.6,1.12.22,3,.46,6.07.81a88.3,88.3,0,0,0,14.27.49A67.8,67.8,0,0,0,548.63,482a53.19,53.19,0,0,0,19.14-9.2,51.74,51.74,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,85.1,85.1,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.91,28.91,0,0,1,2.55-6.78,19.48,19.48,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,2.94,2.94,0,0,1,.33-.85,2.62,2.62,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.71,14.71,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,2.69,2.69,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14,14,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.67,6.67,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.13,9.13,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,44.21,44.21,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,46.78,46.78,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.91,7.91,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,35.54,35.54,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26,26,0,0,1-1-3.47,19.64,19.64,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44A20.56,20.56,0,0,1,770,466a29.9,29.9,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.11,29.11,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4A56.5,56.5,0,0,1,549,482.84,69.12,69.12,0,0,1,534.75,485a86.5,86.5,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A41.67,41.67,0,0,1,503,480.56Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13.24,13.24,0,0,0-1.39,6.85,20.73,20.73,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.71,34.71,0,0,0,6.61,2.65,24,24,0,0,0,7,1,16.53,16.53,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.93,29.93,0,0,0-.89-7.05,45.72,45.72,0,0,0-2.26-6.75,69.18,69.18,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C791.45,458.05,790.66,458.18,789.86,458.33Z"/><polygon class="cls-3" points="792.83 457.82 792.59 457.52 792.03 457.63 792.26 457.93 792.83 457.82"/><path class="cls-84" d="M505.35,474.91l-1.78-.82a109.09,109.09,0,0,1-12.11-7.58,88.69,88.69,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,84.48,84.48,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49,49,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57A21.52,21.52,0,0,0,527.1,307a27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-2c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H207a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3,3,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.62,56.62,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M309.29,266.19a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.5,29.5,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,46.79,46.79,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C308.31,264.9,308.81,265.54,309.29,266.19Z"/><path class="cls-85" d="M505.08,475.41l.27-.5a40.32,40.32,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.46,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,56.24,56.24,0,0,0,13.2-5.29,55.3,55.3,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.91,28.91,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49,28.21,28.21,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6.31,6.31,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,2.78,2.78,0,0,1,.92-1.55,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24.06,24.06,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.35,2.35,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.13,14.13,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.74,6.74,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.34,10.34,0,0,1-1.25,1.31,14,14,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,45.36,45.36,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.78,46.78,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.54-.48.79a8.66,8.66,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26,26,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79S744.53,403.87,737,398s-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A99.36,99.36,0,0,0,625,336.7c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48A29.11,29.11,0,0,0,591,353a48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L578.31,461l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,505.08,475.41ZM792,453.18c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.56,28.56,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,10.37,10.37,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.3,17.3,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7.05,45.72,45.72,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C793.55,452.9,792.76,453,792,453.18Z"/><polygon class="cls-3" points="794.92 452.67 794.68 452.37 794.13 452.48 794.36 452.78 794.92 452.67"/><path class="cls-86" d="M507.24,469.9l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,87.1,87.1,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14A55.63,55.63,0,0,1,466,400.22,49,49,0,0,1,471.26,387a83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46A113.8,113.8,0,0,0,302,250.1c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,22.15,22.15,0,0,1-1.64-3.08,13.1,13.1,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.09,5.09,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.54,2.54,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,5.51,5.51,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63A12.39,12.39,0,0,0,268,290.8a16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,21.16,21.16,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T446,264.62c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,18.76,18.76,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,47.06,47.06,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a50.94,50.94,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13A69,69,0,0,0,482,452.65a88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M311.19,261.17a67.31,67.31,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.22,8.22,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62q3.12-.6,6.26-1.13C310.21,259.88,310.71,260.52,311.19,261.17Z"/><path class="cls-87" d="M507,470.4l.26-.5a42.07,42.07,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78A18.81,18.81,0,0,0,916,434c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.5,3.5,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83.82.82,0,0,1-.12.2l-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.31,21.31,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,65.29,65.29,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.47,100.47,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.77,27.77,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L580.2,456l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4A56.5,56.5,0,0,1,553,472.67a69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A43.39,43.39,0,0,1,507,470.4Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.6,21.6,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C795.44,447.88,794.65,448,793.85,448.16Z"/><polygon class="cls-3" points="796.82 447.65 796.58 447.35 796.02 447.46 796.25 447.76 796.82 447.65"/><path class="cls-88" d="M509.34,464.75l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,50.47,50.47,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,49,49,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73A21.14,21.14,0,0,1,228,174.9a13.1,13.1,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.09,5.09,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.66,15.66,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H211a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,27.07,27.07,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81A13.41,13.41,0,0,0,228,175a22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a100,100,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.45,49.45,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M313.29,256a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37.79,37.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C312.31,254.73,312.81,255.37,313.29,256Z"/><path class="cls-89" d="M509.08,465.25l.26-.5a41,41,0,0,0,7.38,2.13c1.27.23,2.69.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a99.7,99.7,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08C678,344,686.27,348.9,694.34,354q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.28,8.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,5.89,5.89,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A100.47,100.47,0,0,0,629,326.53c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26A49.24,49.24,0,0,1,588.57,442a60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.1,42.1,0,0,1,509.08,465.25ZM796,443c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,29.52,29.52,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,24,24,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C797.54,442.73,796.75,442.86,796,443Z"/><polygon class="cls-3" points="798.92 442.5 798.68 442.2 798.12 442.31 798.35 442.61 798.92 442.5"/><path class="cls-90" d="M511.44,459.39l-1.77-.82A109.65,109.65,0,0,1,497.56,451a88.82,88.82,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15,48.45,48.45,0,0,1,5.23-13.18,82.23,82.23,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,22.22,22.22,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19,19,0,0,1,3-1.95c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.17,16.17,0,0,0,3-1.9,5.29,5.29,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.94,7.94,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,46.45,46.45,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.59,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,25.79,25.79,0,0,1,2.75,2.26,14.36,14.36,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.83,2.83,0,0,1-.05.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,16,16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.6,17.6,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,23.56,23.56,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.88,38.88,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,31.27,31.27,0,0,0,3.08-1.88,24.5,24.5,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,13.36,13.36,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18,18,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,49.7,49.7,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.32,49.32,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.07,51.07,0,0,0,2.6,14.16,56.19,56.19,0,0,0,6.23,13,69.93,69.93,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29A87.66,87.66,0,0,0,510,459.32l1.18.57M315.39,250.67a68,68,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,29.85,29.85,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7A13.43,13.43,0,0,1,323,280a12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38.64,38.64,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.06,24.06,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.08,8.08,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,44.53,44.53,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.16-.79,6.26-1.13C314.41,249.38,314.91,250,315.39,250.67Z"/><path class="cls-91" d="M511.18,459.89l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.43,3.59.6,1.11.21,3,.45,6.06.81a89.53,89.53,0,0,0,14.27.49,68.26,68.26,0,0,0,14.08-2.13A56.5,56.5,0,0,0,570,456,55.82,55.82,0,0,0,576,452.1a53.1,53.1,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,17.76,17.76,0,0,1,3-2.1A20.65,20.65,0,0,1,609.6,321a27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.28,9.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.23,5.23,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,8.78,8.78,0,0,0-.09-1.78,19.2,19.2,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.56,15.56,0,0,1-1-3.46,5.49,5.49,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.3,14.3,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,45,45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.73,14.73,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.73,18.73,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.8,4.8,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.47,23.47,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,66.44,66.44,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.64,24.64,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.54,28.54,0,0,1-1-3.47,20.69,20.69,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.73,29.73,0,0,1,6.15-3.74,47.85,47.85,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a97.66,97.66,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12A27.24,27.24,0,0,0,610,322a19.21,19.21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,61.32,61.32,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,57.36,57.36,0,0,1-13.36,5.33,69.7,69.7,0,0,1-14.22,2.13,88.7,88.7,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.29,42.29,0,0,1,511.18,459.89Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a47.06,47.06,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,27.65,27.65,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.65,35.65,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.28,12.28,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a22,22,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.21,44.21,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C799.64,437.38,798.85,437.51,798.05,437.66Z"/><polygon class="cls-3" points="801.02 437.14 800.78 436.85 800.22 436.95 800.45 437.25 801.02 437.14"/><path class="cls-92" d="M513.54,454.24l-1.77-.82a109.65,109.65,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.24,50.24,0,0,1-2.53-14,55.55,55.55,0,0,1,1.25-14.15,48.45,48.45,0,0,1,5.23-13.18,82.23,82.23,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.22,22.22,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19,19,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.17,16.17,0,0,0,3-1.9,5.45,5.45,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.89,7.89,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,25.12,25.12,0,0,0-2.77-2.29,46.45,46.45,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.59,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65A26.83,26.83,0,0,1,251,136a14.36,14.36,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,16,16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.22,17.22,0,0,0-3,2,8.09,8.09,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.13,13.13,0,0,0,.94,3.47,23.56,23.56,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a112.58,112.58,0,0,0-13.89,3.65,64.94,64.94,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.88,38.88,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,33.32,33.32,0,0,0,3.08-1.88,24.5,24.5,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,14.36,14.36,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T452.33,249c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A98.71,98.71,0,0,1,519.55,272c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18.81,18.81,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,49.7,49.7,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A84.7,84.7,0,0,0,476.91,371a49,49,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8A51.07,51.07,0,0,0,473,412.9a56.19,56.19,0,0,0,6.23,13A69.39,69.39,0,0,0,488.34,437a90.39,90.39,0,0,0,11,9.29,88.54,88.54,0,0,0,12.76,7.88l1.18.57M317.49,245.52a68,68,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,29.85,29.85,0,0,1,2,6.82,16.71,16.71,0,0,1-.31,7,13.84,13.84,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38.64,38.64,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H300c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.06,24.06,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.08,8.08,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,43.54,43.54,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,110,110,0,0,1,13.84-3.62c2.08-.41,4.16-.79,6.26-1.13C316.51,244.23,317,244.87,317.49,245.52Z"/><path class="cls-93" d="M513.28,454.74l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49,67,67,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A56.07,56.07,0,0,0,592,430.93a49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12H626c2.4.13,4.79.38,7.17.72a101.13,101.13,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.73,43.73,0,0,0,7-1.36A21,21,0,0,0,917.8,430a12.9,12.9,0,0,0,3-1.9A8.77,8.77,0,0,0,922,426.8l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13L959,409c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a47.42,47.42,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.79,7.79,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,68.76,68.76,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.33,8.33,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a20.56,20.56,0,0,1,2.6-2.51,30.62,30.62,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A100.79,100.79,0,0,0,633.22,316c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,28.13,28.13,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.45,83.45,0,0,1,597.89,418a49.12,49.12,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75A56.5,56.5,0,0,1,559.26,457,68.34,68.34,0,0,1,545,459.14a86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,513.28,454.74ZM800.15,432.5c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.93,16.93,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48A33.21,33.21,0,0,0,795,480a34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,11.76,11.76,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C801.74,432.22,801,432.35,800.15,432.5Z"/><polygon class="cls-3" points="803.12 431.99 802.88 431.69 802.32 431.81 802.55 432.11 803.12 431.99"/><path class="cls-94" d="M515.44,449.22l-1.78-.82a110,110,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.48,19.48,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,11.44,11.44,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29A46.9,46.9,0,0,0,244,125c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,46.74,46.74,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.77,7.77,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,11.4,11.4,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,13.69,13.69,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T454.22,244c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A98,98,0,0,1,521.44,267c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.57,85.57,0,0,0,478.8,366a49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13A70,70,0,0,0,490.23,432a91.15,91.15,0,0,0,11,9.29A88.2,88.2,0,0,0,514,449.15l1.18.57M319.38,240.5a65.17,65.17,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C318.4,239.21,318.9,239.85,319.38,240.5Z"/><path class="cls-95" d="M515.17,449.72l.27-.5a40.32,40.32,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,56.24,56.24,0,0,0,13.2-5.29,55.3,55.3,0,0,0,5.94-3.91,53,53,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36A22.88,22.88,0,0,0,919.7,425a13.23,13.23,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.83,4.83,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81,2.84,2.84,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.68,9.68,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,26.4,26.4,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22A99.36,99.36,0,0,0,635.12,311c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12A27.15,27.15,0,0,0,614,311.8a20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.93,28.93,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A84.59,84.59,0,0,1,599.79,413a49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4A56.5,56.5,0,0,1,561.16,452a69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73S528,453,523.13,452A42.51,42.51,0,0,1,515.17,449.72Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.7,16.7,0,0,0-4.52,5.4,13.24,13.24,0,0,0-1.39,6.85,20.86,20.86,0,0,0,.48,3.51,25.57,25.57,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7.05,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C803.64,427.21,802.85,427.34,802.05,427.49Z"/><polygon class="cls-3" points="805.02 426.98 804.78 426.68 804.22 426.79 804.45 427.09 805.02 426.98"/><path class="cls-96" d="M517.54,444.07l-1.78-.82a109.09,109.09,0,0,1-12.11-7.58,89.58,89.58,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.1,49.1,0,0,1,5.23-13.18,83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3A99.36,99.36,0,0,0,511.41,254c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2Q413.75,232,399.44,231c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-2c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5,5,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,45.81,45.81,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.32.66,4.6,1.37,6.85,2.11s4.5,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,46.29,46.29,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,29.1,29.1,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,12.83,12.83,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.75,13.75,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98,98,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,91.15,91.15,0,0,0,11,9.29A88.2,88.2,0,0,0,516.09,444l1.18.57M321.48,235.35a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38.49,38.49,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H304c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.8,17.8,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.4,8.4,0,0,1-.33-3.45c.05-.29.1-.57.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.67,29.67,0,0,1,5.4-4.61,45.69,45.69,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.62,6.26-1.13C320.5,234.06,321,234.7,321.48,235.35Z"/><path class="cls-97" d="M517.27,444.57l.27-.5a41.15,41.15,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49A68.47,68.47,0,0,0,562.92,446a56.24,56.24,0,0,0,13.2-5.29,56.85,56.85,0,0,0,5.94-3.91,54.23,54.23,0,0,0,5.34-4.7A56.44,56.44,0,0,0,596,420.77a49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.74,28.74,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49,27.78,27.78,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12H630c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.8,5.8,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81,2.59,2.59,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24.06,24.06,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.26,14.26,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a11.06,11.06,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.58,46.58,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,46.38,46.38,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.54-.48.79a8.79,8.79,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.59,24.59,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26.85,26.85,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33A69.8,69.8,0,0,1,549,449a87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,517.27,444.57Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a47.84,47.84,0,0,0-6.68,2.49,28.82,28.82,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,11.34,11.34,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26,26,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7.05,45.33,45.33,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C805.74,422.06,805,422.19,804.15,422.34Z"/><polygon class="cls-3" points="807.12 421.83 806.88 421.53 806.32 421.64 806.55 421.94 807.12 421.83"/><path class="cls-98" d="M519.33,439l-1.77-.82a108.17,108.17,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.24,50.24,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15,48.45,48.45,0,0,1,5.23-13.18,82.23,82.23,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,22.22,22.22,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.09,4.09,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19,19,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.17,16.17,0,0,0,3-1.9,5.29,5.29,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.94,7.94,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,46.45,46.45,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H221a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.59,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26.83,26.83,0,0,1,2.75,2.26A14.36,14.36,0,0,1,259,123.5a7.85,7.85,0,0,1,1.19,3.32,2.83,2.83,0,0,1-.05.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,16,16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.22,17.22,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22V144a9.12,9.12,0,0,0,0,1.81,13.13,13.13,0,0,0,.94,3.47,23.56,23.56,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a112.12,112.12,0,0,0-13.89,3.65,67.29,67.29,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.54,12.54,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.88,38.88,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,31.27,31.27,0,0,0,3.08-1.88,24.5,24.5,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,14.9,14.9,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18.81,18.81,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,49.7,49.7,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49,49,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51,51,0,0,0,2.6,14.16,56.19,56.19,0,0,0,6.23,13,69,69,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,87.66,87.66,0,0,0,12.76,7.88l1.18.57M323.28,230.25a68,68,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,30.36,30.36,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.84,13.84,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,28.76,28.76,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38.64,38.64,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.06,24.06,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.69,11.69,0,0,1-1.53-3.16,8.08,8.08,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.72,21.72,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,44.53,44.53,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.16-.79,6.26-1.13C322.3,229,322.8,229.6,323.28,230.25Z"/><path class="cls-99" d="M519.07,439.47l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.43,3.59.6,1.11.21,3,.45,6.06.81a89.53,89.53,0,0,0,14.27.49,68.47,68.47,0,0,0,14.08-2.13,56.5,56.5,0,0,0,13.2-5.29,55.82,55.82,0,0,0,5.94-3.91,53.1,53.1,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.35,49.35,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.19,29.19,0,0,1,2.55-6.78,19.51,19.51,0,0,1,4.51-5.7,17.76,17.76,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.61,98.61,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.23,5.23,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.56,15.56,0,0,1-1-3.46,5.49,5.49,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.3,14.3,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,45,45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.85,2.85,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.73,14.73,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.73,18.73,0,0,1,.9,3.48,10.75,10.75,0,0,1,.09,1.8,6.43,6.43,0,0,1-.33,1.78,4.8,4.8,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.64,24.64,0,0,1-7.14-1,36.51,36.51,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.54,28.54,0,0,1-1-3.47,20.69,20.69,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.73,29.73,0,0,1,6.15-3.74,47.85,47.85,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79S758.51,367.93,751,362s-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22A98,98,0,0,0,639,300.76c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.24,27.24,0,0,0-6.92,1.38,19.21,19.21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,61.32,61.32,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L592.29,425l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.93,56.93,0,0,1-13.36,5.33,69.7,69.7,0,0,1-14.22,2.13,88.7,88.7,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.29,42.29,0,0,1,519.07,439.47Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a48.31,48.31,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,27.65,27.65,0,0,0,1,3.41A33.24,33.24,0,0,0,785,450.7a37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.65,35.65,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.41,12.41,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a22,22,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.21,44.21,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C807.53,417,806.74,417.09,805.94,417.24Z"/><polygon class="cls-3" points="808.91 416.73 808.67 416.43 808.11 416.54 808.34 416.84 808.91 416.73"/><path class="cls-100" d="M521.43,433.82l-1.77-.82a109.65,109.65,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.24,50.24,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15A48.45,48.45,0,0,1,485.45,351a82.23,82.23,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.82,30.82,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94S504.3,239,502,238.17c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46A113.8,113.8,0,0,0,316.2,214c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.22,22.22,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.09,4.09,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.59,18.59,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.5,16.5,0,0,0,3-1.9,5.47,5.47,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.94,7.94,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,46.45,46.45,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.59,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26.83,26.83,0,0,1,2.75,2.26,14.36,14.36,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.83,2.83,0,0,1-.05.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,16,16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.22,17.22,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.13,13.13,0,0,0,.94,3.47,23.56,23.56,0,0,0,1.64,3.2A45.31,45.31,0,0,0,246,153c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a112.12,112.12,0,0,0-13.89,3.65,66.34,66.34,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,21.8,21.8,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.23,12.23,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.88,38.88,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,33.32,33.32,0,0,0,3.08-1.88,24.5,24.5,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,14.9,14.9,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78c.09-.6.14-1.21.17-1.81a20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.47,27.47,0,0,1,4.18,5.68,20.49,20.49,0,0,1,1.4,3.22,18.81,18.81,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,49.7,49.7,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49,49,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.07,51.07,0,0,0,2.6,14.16,56.19,56.19,0,0,0,6.23,13,69.39,69.39,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29A88.54,88.54,0,0,0,520,433.75l1.18.57M325.38,225.1a68,68,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,30.36,30.36,0,0,1,2,6.82,16.88,16.88,0,0,1-.31,7,13.84,13.84,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,29.84,29.84,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38.64,38.64,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.85,35.85,0,0,1-6.66-2.5,24.06,24.06,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.08,8.08,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.49,21.49,0,0,1,3.87-5.91A29.34,29.34,0,0,1,291,234a43.54,43.54,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,110,110,0,0,1,13.84-3.62c2.08-.41,4.16-.79,6.26-1.13C324.4,223.81,324.9,224.45,325.38,225.1Z"/><path class="cls-101" d="M521.17,434.32l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.43,3.59.6,1.11.21,3,.45,6.06.8a87.21,87.21,0,0,0,14.27.49,67.13,67.13,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,55.79,55.79,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.61,19.61,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49A28.75,28.75,0,0,1,626.7,294c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a101.45,101.45,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.94,43.94,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,1-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a47.42,47.42,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.79,7.79,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a111.77,111.77,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.32,22.32,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.44,8.44,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.33,36.33,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a20.56,20.56,0,0,1,2.6-2.51,30.62,30.62,0,0,1,6.15-3.74,50,50,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,28.13,28.13,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.45,83.45,0,0,1-1.93,14.26,49.44,49.44,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,521.17,434.32ZM808,412.08c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,17,17,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,11.76,11.76,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C809.63,411.8,808.84,411.93,808,412.08Z"/><polygon class="cls-3" points="811.01 411.57 810.77 411.27 810.21 411.38 810.44 411.69 811.01 411.57"/><path class="cls-102" d="M523.33,428.8l-1.78-.82a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15A49.36,49.36,0,0,1,487.34,346a83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49,49,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73A23.26,23.26,0,0,1,242,139a13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,6.57,6.57,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,20.28,20.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9A5.14,5.14,0,0,0,264,118.4a2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06H225a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3A47.4,47.4,0,0,1,258,108.3a24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3,3,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a19.33,19.33,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,25.39,25.39,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,27.53,27.53,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.42,13.42,0,0,0,1.42-3.33,12.17,12.17,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.84,18.84,0,0,0-.23-3.6,29.59,29.59,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.43,17.43,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.82,56.82,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,87.33,87.33,0,0,0,12.76,7.88l1.18.57M327.27,220.08a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,11,11,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,46.79,46.79,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C326.29,218.79,326.79,219.43,327.27,220.08Z"/><path class="cls-103" d="M523.06,429.3l.27-.5a40.32,40.32,0,0,0,7.37,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.45,6.07.81a88.3,88.3,0,0,0,14.27.49,67.8,67.8,0,0,0,14.08-2.13,56.24,56.24,0,0,0,13.2-5.29,55.3,55.3,0,0,0,5.94-3.91,52.81,52.81,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,85.24,85.24,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.4,50.4,0,0,1,1.2-7.12,28.91,28.91,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.94,17.94,0,0,1,3-2.1,20.74,20.74,0,0,1,3.33-1.49A28.13,28.13,0,0,1,628.6,289c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.31,45.31,0,0,0,7-1.36,22.88,22.88,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.8,5.8,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a14.9,14.9,0,0,1-1-3.46,5.24,5.24,0,0,1,.05-1.81,2.59,2.59,0,0,1,.33-.85,2.47,2.47,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.24,14.24,0,0,1,3.56-.51,24.06,24.06,0,0,1,3.59.18,46.69,46.69,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.21-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14,14,0,0,0-3.53.51,7.49,7.49,0,0,0-3.11,1.65,2.35,2.35,0,0,0-.55.67,2.59,2.59,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.13,14.13,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.77,19.77,0,0,1,.9,3.48,10.81,10.81,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a10.34,10.34,0,0,1-1.25,1.31,14,14,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,45.36,45.36,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,48,48,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.69,22.69,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82s-.31.54-.48.79a8.66,8.66,0,0,1-2.7,2.45,12.65,12.65,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.25,24.25,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.2,36.2,0,0,1-4.43-5.67,32.57,32.57,0,0,1-3.2-6.45,26.4,26.4,0,0,1-1-3.47,19.76,19.76,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a15.22,15.22,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,29.47,29.47,0,0,1,6.15-3.74,48.64,48.64,0,0,1,6.74-2.5,69.14,69.14,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A99.36,99.36,0,0,0,643,290.59c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.15,27.15,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,28.93,28.93,0,0,0-2.47,6.61,48.72,48.72,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,49.56,49.56,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,523.06,429.3Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,28.56,28.56,0,0,0-6,3.75,16.57,16.57,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,10.37,10.37,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.37,35.37,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.3,17.3,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,8.15,8.15,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.86,29.86,0,0,0-.89-7,45.72,45.72,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,113.92,113.92,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C811.53,406.79,810.74,406.92,809.94,407.07Z"/><polygon class="cls-3" points="812.9 406.56 812.66 406.26 812.11 406.37 812.34 406.67 812.9 406.56"/><path class="cls-104" d="M525.42,423.65l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58A88.82,88.82,0,0,1,500.67,406a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.6,50.6,0,0,1-2.53-14A56.51,56.51,0,0,1,484.21,354a49.23,49.23,0,0,1,5.23-13.18,83.05,83.05,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77V128a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.68,7.68,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29A45.81,45.81,0,0,0,254,99.41c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65A69.82,69.82,0,0,0,301,220a45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.73,38.73,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14,14,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81A18.84,18.84,0,0,0,339,234a30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.12,27.12,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2,0,1.8a51.37,51.37,0,0,0,2.6,14.16,56.41,56.41,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29A88.2,88.2,0,0,0,524,423.58l1.18.57M329.37,214.93a67.31,67.31,0,0,1,4,5.91,47,47,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69A12,12,0,0,1,285,241.1a8.4,8.4,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.11,45.11,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C328.39,213.64,328.89,214.28,329.37,214.93Z"/><path class="cls-105" d="M525.16,424.15l.26-.5a41.44,41.44,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,51,51,0,0,0,11.28-8.61,55.71,55.71,0,0,0,8.61-11.31,48.89,48.89,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.81,12.81,0,0,0,3-1.9,8.73,8.73,0,0,0,1.23-1.28L934,396l.13-.18.12-.18.12-.19a4.13,4.13,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.78,5.78,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.47,4.47,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,29.75,29.75,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.66,16.66,0,0,1-3.6.45,24.68,24.68,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,30.46,30.46,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,14,14,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,20.46,20.46,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,48.92,48.92,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.16,56.16,0,0,1-13.36,5.33,69.59,69.59,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,525.16,424.15ZM812,401.92c-2.35.45-4.67,1-7,1.67a48.8,48.8,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.94,21.94,0,0,0,.48,3.51,28.94,28.94,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.74,37.74,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3A7.94,7.94,0,0,0,829.8,449a4.07,4.07,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.21,44.21,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.58-3.87-5C813.62,401.64,812.83,401.77,812,401.92Z"/><polygon class="cls-3" points="815 401.41 814.76 401.11 814.21 401.22 814.43 401.52 815 401.41"/><path class="cls-106" d="M527.52,418.3l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.21,56.21,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.55,56.55,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-2.95-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.5,13.5,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.36,15.36,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37A14.42,14.42,0,0,0,265,100a26.51,26.51,0,0,0-2.77-2.29,48,48,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22A.46.46,0,0,0,229,85h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26,26,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.31,2.31,0,0,1-.05.87,2.83,2.83,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.82,13.82,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09A113.05,113.05,0,0,0,309.81,212a69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.7,12.7,0,0,0,1.59,3.27A16.74,16.74,0,0,0,290.6,242a24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.34,13.34,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T466.31,213c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A100,100,0,0,1,533.53,236c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.76,18.76,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8V361c0,.6,0,1.2.05,1.8A51.31,51.31,0,0,0,487,377a56.21,56.21,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.57M331.47,209.57a67.31,67.31,0,0,1,4,5.91,48.22,48.22,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.7,23.7,0,0,1-5.83-4,16.87,16.87,0,0,1-2.29-2.69,11.85,11.85,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61A46.18,46.18,0,0,1,303.3,215a66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62q3.12-.6,6.26-1.13C330.49,208.28,331,208.92,331.47,209.57Z"/><path class="cls-107" d="M527.26,418.8l.26-.5a41.26,41.26,0,0,0,7.38,2.13c1.28.23,2.7.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,66.94,66.94,0,0,0,14.08-2.13,55.48,55.48,0,0,0,13.2-5.29A53.38,53.38,0,0,0,592,411a50.72,50.72,0,0,0,5.34-4.7A55.71,55.71,0,0,0,606,395a48.77,48.77,0,0,0,5-13.26,83,83,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12H640c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,7.84,7.84,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a3.87,3.87,0,0,0,.37-.8,5.58,5.58,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18,18,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,8,8,0,0,1,3.16-1.68,15.37,15.37,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13L973,373c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,15.12,15.12,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.93,14.93,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.36,18.36,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83.82.82,0,0,1-.12.2l-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,21.94,21.94,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85A110.27,110.27,0,0,1,828.7,413a65.29,65.29,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,29.81,29.81,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.5,15.5,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.41,35.41,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.33,29.33,0,0,1-1-3.47,21.56,21.56,0,0,1-.49-3.58,14,14,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30.44,30.44,0,0,1,6.15-3.74,51,51,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.77,27.77,0,0,0-6.92,1.38,21.43,21.43,0,0,0-3.21,1.44,20.19,20.19,0,0,0-2.87,2,19.51,19.51,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,49.24,49.24,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.16,56.16,0,0,1-13.36,5.33A68.91,68.91,0,0,1,559,423.2a86.55,86.55,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.1,42.1,0,0,1,527.26,418.8Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.52,29.52,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,14.13,14.13,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.79,21.79,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.24,35.24,0,0,0,6.61,2.65,24.08,24.08,0,0,0,7,1,15.83,15.83,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.83,7.83,0,0,0,2.56-2.33,3.75,3.75,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,64.48,64.48,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C815.72,396.28,814.93,396.41,814.13,396.56Z"/><polygon class="cls-3" points="817.1 396.05 816.86 395.75 816.3 395.86 816.53 396.16 817.1 396.05"/><path class="cls-108" d="M529.62,413.15l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.55,56.55,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18,83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62C518,301.12,525.1,294.7,532,288.05c3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.67,29.67,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,523.5,223c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.17,44.17,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.5,13.5,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.36,15.36,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3,3,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.86,7.86,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26,26,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.54,2.54,0,0,1-.05.87,3,3,0,0,1-.31.81A4.89,4.89,0,0,1,269,104a14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.34,13.34,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.57,85.57,0,0,0,493,329.9a49.78,49.78,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M333.57,204.42a67.31,67.31,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H316c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24,24,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,46.18,46.18,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C332.59,203.13,333.09,203.77,333.57,204.42Z"/><path class="cls-109" d="M529.36,413.64l.26-.49a41.26,41.26,0,0,0,7.38,2.13c1.28.23,2.7.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49A67.59,67.59,0,0,0,575,415.05a55.48,55.48,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,83,83,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,7.84,7.84,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a3.87,3.87,0,0,0,.37-.8,5.58,5.58,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18,18,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,8,8,0,0,1,3.16-1.68,14.85,14.85,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.93,14.93,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83.82.82,0,0,1-.12.2l-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,21.94,21.94,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06,65.29,65.29,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,30.32,30.32,0,0,1,.89,7.16A22.36,22.36,0,0,1,836,435.4c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,16.13,16.13,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.09,36.09,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.33,29.33,0,0,1-1-3.47,21.56,21.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,22,22,0,0,1,2.6-2.51,30.44,30.44,0,0,1,6.15-3.74,51,51,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q732.46,315,726.48,311t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.77,27.77,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A82.6,82.6,0,0,1,614,376.94a49.24,49.24,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a52.2,52.2,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.16,56.16,0,0,1-13.36,5.33,68.91,68.91,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A41.67,41.67,0,0,1,529.36,413.64Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.24,35.24,0,0,0,6.61,2.65,24.08,24.08,0,0,0,7,1,15.83,15.83,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,4.3,4.3,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,64.48,64.48,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C817.82,391.13,817,391.26,816.23,391.41Z"/><polygon class="cls-3" points="819.2 390.9 818.96 390.6 818.4 390.71 818.63 391.01 819.2 390.9"/><path class="cls-110" d="M531.52,408.13l-1.77-.83a106.74,106.74,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68,68,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A101.34,101.34,0,0,0,525.4,218c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,5.4,5.4,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37A15.2,15.2,0,0,0,269,89.81a27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11T253.54,81a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65A28.21,28.21,0,0,1,269,89.88a15,15,0,0,1,2.25,2.77A8,8,0,0,1,272.39,96a2.8,2.8,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81A5.26,5.26,0,0,1,270.88,99a15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.88,5.88,0,0,0-1,1.54,4.88,4.88,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,12.92,12.92,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,43.94,43.94,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a114.39,114.39,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,34.72,34.72,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,12,12,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,14.74,14.74,0,0,0,.35-1.78,15.41,15.41,0,0,0,.17-1.81,20.74,20.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.31,85.31,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M335.47,199.4a71.22,71.22,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.42,32.42,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8,8,0,0,1-.33-3.45c0-.28.1-.56.17-.85s.17-.56.26-.84c.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,70.37,70.37,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C334.49,198.11,335,198.75,335.47,199.4Z"/><path class="cls-111" d="M531.26,408.63l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49A67,67,0,0,0,576.9,410a55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A56.07,56.07,0,0,0,610,384.82a49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12H644c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.73,43.73,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a47.42,47.42,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.79,7.79,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,68.76,68.76,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.33,8.33,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78L809,432c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q734.34,310,728.38,306t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.5,56.5,0,0,1-13.36,5.33A68.34,68.34,0,0,1,563,413a86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,531.26,408.63Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.59,20.59,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C819.72,386.11,818.93,386.24,818.13,386.39Z"/><polygon class="cls-3" points="821.1 385.88 820.86 385.58 820.3 385.69 820.53 385.99 821.1 385.88"/><path class="cls-112" d="M533.62,403l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.19,55.19,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62C522,291,529.1,284.53,536,277.88c3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57Q543,222,540,220a101.34,101.34,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.51,4.51,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.28,19.28,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3S251.22,74,249,73.25s-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81A5.26,5.26,0,0,1,273,93.83a15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.88,4.88,0,0,0-.28.87.81.81,0,0,0,0,.22V108a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a113.91,113.91,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.1,22.1,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91A50.08,50.08,0,0,0,342,200c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A84.7,84.7,0,0,0,497,319.73a49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M337.57,194.25a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12.41,12.41,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,28.12,28.12,0,0,1-3,1.85A33,33,0,0,1,330.6,233a37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H320c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.79,21.79,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46A67.77,67.77,0,0,1,316,197a111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C336.59,193,337.09,193.6,337.57,194.25Z"/><path class="cls-113" d="M533.36,403.48l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a87.21,87.21,0,0,0,14.27.49A67.13,67.13,0,0,0,579,404.88a55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.78,19.78,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.08,45.08,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18A8.61,8.61,0,0,1,941,377a13.35,13.35,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,71.32,71.32,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38A21,21,0,0,0,629,267a19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.58,83.58,0,0,1,618,366.77a49.44,49.44,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L606.58,389l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,68.34,68.34,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,533.36,403.48Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C821.82,381,821,381.09,820.23,381.24Z"/><polygon class="cls-3" points="823.2 380.73 822.96 380.43 822.4 380.54 822.63 380.84 823.2 380.73"/><path class="cls-114" d="M535.52,397.72l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14A56.55,56.55,0,0,1,494.31,328a49.36,49.36,0,0,1,5.23-13.18,83.63,83.63,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.1,45.1,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.5,13.5,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77V102a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.36,15.36,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37A14.42,14.42,0,0,0,273,79.4a26.51,26.51,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65A26,26,0,0,1,273,79.47a14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.31,2.31,0,0,1-.05.87,3,3,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.34,13.34,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57L550,222c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.76,18.76,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.78,49.78,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.57M339.47,189a67.31,67.31,0,0,1,4,5.91,48.22,48.22,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,13.4,13.4,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24,24,0,0,1-5.83-4,16.87,16.87,0,0,1-2.29-2.69,11.85,11.85,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,46.18,46.18,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C338.49,187.7,339,188.34,339.47,189Z"/><path class="cls-115" d="M535.26,398.22l.26-.5a41.26,41.26,0,0,0,7.38,2.13c1.28.23,2.7.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.48,55.48,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A55.71,55.71,0,0,0,614,374.41a48.77,48.77,0,0,0,5-13.26,83,83,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12H648c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,7.84,7.84,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a3.87,3.87,0,0,0,.37-.8,5.58,5.58,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,18,18,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,8,8,0,0,1,3.16-1.68,15.37,15.37,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.61,14.61,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.93,14.93,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83.82.82,0,0,1-.12.2l-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,21.94,21.94,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06,65.29,65.29,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,29.81,29.81,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.5,15.5,0,0,1-3.6.45,24,24,0,0,1-7.14-1,36.09,36.09,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61L806,416c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.33,29.33,0,0,1-1-3.47,21.56,21.56,0,0,1-.49-3.58,14,14,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30.44,30.44,0,0,1,6.15-3.74,51,51,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.77,27.77,0,0,0-6.92,1.38,21.43,21.43,0,0,0-3.21,1.44,17.94,17.94,0,0,0-7.2,7.48,30.08,30.08,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26A48.92,48.92,0,0,1,614.75,375a58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a52.2,52.2,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.16,56.16,0,0,1-13.36,5.33A68.91,68.91,0,0,1,567,402.62a86.55,86.55,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.1,42.1,0,0,1,535.26,398.22ZM822.13,376c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,14,14,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.79,21.79,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.74,37.74,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.24,35.24,0,0,0,6.61,2.65,24.08,24.08,0,0,0,7,1,15.83,15.83,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,3.75,3.75,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,64.48,64.48,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5C823.72,375.7,822.93,375.83,822.13,376Z"/><polygon class="cls-3" points="825.11 375.47 824.87 375.17 824.3 375.28 824.53 375.58 825.11 375.47"/><path class="cls-116" d="M537.62,392.57l-1.77-.83a109.09,109.09,0,0,1-12.11-7.58,88,88,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.55,56.55,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18A83.63,83.63,0,0,1,509.76,298c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a48.27,48.27,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.94,27.94,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.17,44.17,0,0,1-4.27-5.73,23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.36,15.36,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3,3,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.86,7.86,0,0,0-1.2-3.37,14.42,14.42,0,0,0-2.29-2.77A26.51,26.51,0,0,0,272.37,72a46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26,26,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.54,2.54,0,0,1-.05.87,3,3,0,0,1-.31.81A4.89,4.89,0,0,1,277,83.42a14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.89,29.89,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.1,37.1,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49A13.81,13.81,0,0,0,351,210.1a13.34,13.34,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.38,27.38,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.57,85.57,0,0,0,501,309.32a49.78,49.78,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13,69.48,69.48,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M341.57,183.84a67.31,67.31,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.65,29.65,0,0,1,2,6.82,16.53,16.53,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H324c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24,24,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,46.18,46.18,0,0,1,6.23-3.46A66.29,66.29,0,0,1,320,186.6,112.17,112.17,0,0,1,333.87,183c2.08-.41,4.17-.78,6.26-1.13C340.59,182.55,341.09,183.19,341.57,183.84Z"/><path class="cls-117" d="M537.36,393.06l.26-.49A41.26,41.26,0,0,0,545,394.7c1.28.23,2.7.43,3.59.6,1.11.22,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49A67.59,67.59,0,0,0,583,394.47a55.48,55.48,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.77,48.77,0,0,0,5-13.26,83,83,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.81,19.81,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86T746.56,298q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,7.84,7.84,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a3.87,3.87,0,0,0,.37-.8,5.58,5.58,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.85,14.85,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.34,3.34,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.93,14.93,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,9.06,9.06,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83.82.82,0,0,1-.12.2l-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.32,109.32,0,0,1,7.8,12.06,65.29,65.29,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,29.81,29.81,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.13,16.13,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.09,36.09,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.33,29.33,0,0,1-1-3.47,21.56,21.56,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,22,22,0,0,1,2.6-2.51,30.44,30.44,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39C822,364.47,817.08,359,812,353.75c-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A82.6,82.6,0,0,1,622,356.36a49.24,49.24,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3A52.2,52.2,0,0,1,602.7,386a51.29,51.29,0,0,1-6,4,56.16,56.16,0,0,1-13.36,5.33,68.91,68.91,0,0,1-14.22,2.13,86.55,86.55,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A41.67,41.67,0,0,1,537.36,393.06Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.24,35.24,0,0,0,6.61,2.65,24.08,24.08,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,3.75,3.75,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.42,29.42,0,0,0-.89-7.05,44.58,44.58,0,0,0-2.26-6.75,64.48,64.48,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C825.82,370.55,825,370.68,824.23,370.83Z"/><polygon class="cls-3" points="827.2 370.32 826.96 370.02 826.4 370.13 826.63 370.43 827.2 370.32"/><path class="cls-118" d="M539.52,387.55l-1.77-.83a108.17,108.17,0,0,1-12.11-7.58,86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.59,55.59,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18A83.37,83.37,0,0,1,511.66,293c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19.18,19.18,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,5.4,5.4,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37A15.2,15.2,0,0,0,277,69.23a27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3A49.78,49.78,0,0,1,274.2,67,28.21,28.21,0,0,1,277,69.3a15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.8,2.8,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81,5.26,5.26,0,0,1-1.15,1.33,15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.88,4.88,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a114.39,114.39,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.24,33.24,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,12,12,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8A50.94,50.94,0,0,0,499,346.2a55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M343.47,178.82a71.22,71.22,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.15,30.15,0,0,1,2,6.82,16.7,16.7,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,11.3,11.3,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a22,22,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64A111.71,111.71,0,0,1,335.77,178c2.08-.4,4.16-.78,6.26-1.13C342.49,177.53,343,178.17,343.47,178.82Z"/><path class="cls-119" d="M539.26,388.05l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.42,3.59.6,1.11.21,3,.45,6.06.8a87.25,87.25,0,0,0,14.27.49,67,67,0,0,0,14.08-2.13,55.65,55.65,0,0,0,13.2-5.29,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7A56.07,56.07,0,0,0,618,364.24,49.1,49.1,0,0,0,623,351a83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a54,54,0,0,1,1.2-7.12,30,30,0,0,1,2.55-6.78,20,20,0,0,1,4.51-5.7,19,19,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12H652c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a43.73,43.73,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,8.86,8.86,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.36,28.36,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,68.76,68.76,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,35.14,35.14,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35S756,299,748.21,293.5q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.65,50.65,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.12,49.12,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3A53.1,53.1,0,0,1,604.6,381a52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33A68.34,68.34,0,0,1,571,392.45a86.55,86.55,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,539.26,388.05Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13,13,0,0,0-.24,3.52,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C827.72,365.53,826.93,365.66,826.13,365.81Z"/><polygon class="cls-3" points="829.1 365.3 828.86 365 828.3 365.11 828.53 365.41 829.1 365.3"/><path class="cls-120" d="M541.62,382.4l-1.77-.83A108.17,108.17,0,0,1,527.74,374a86.38,86.38,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.19,55.19,0,0,1-6.18-12.8,50.11,50.11,0,0,1-2.53-14,55.63,55.63,0,0,1,1.25-14.15,48.7,48.7,0,0,1,5.23-13.18,82.8,82.8,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62C530,270.37,537.1,264,544,257.3c3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.57,28.57,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.77-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a42.63,42.63,0,0,1-4.27-5.73,21.14,21.14,0,0,1-1.64-3.08,12.73,12.73,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.29,4.29,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.19,15.19,0,0,0,3-1.9A5.14,5.14,0,0,0,282.3,72a3.07,3.07,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,8,8,0,0,0-1.2-3.37,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,48.73,48.73,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,49.78,49.78,0,0,1,6.13,3.65,28.21,28.21,0,0,1,2.75,2.26,15,15,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.82,2.82,0,0,1-.05.87,3.16,3.16,0,0,1-.31.81A5.26,5.26,0,0,1,281,73.25a15.05,15.05,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.43,18.43,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.64,4.64,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13,13,0,0,0,.94,3.47,22.44,22.44,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.51-6,1.09a112.12,112.12,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.62,46.62,0,0,0-6.29,3.52,30.28,30.28,0,0,0-5.48,4.68,22.34,22.34,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.39,12.39,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.24,37.24,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.56,22.56,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,13.83,13.83,0,0,0,1-1.49,14.22,14.22,0,0,0,1.42-3.33,15.14,15.14,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,20.67,20.67,0,0,0-.23-3.6,30.37,30.37,0,0,0-2-6.91,50.08,50.08,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a101.25,101.25,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,19.19,19.19,0,0,1,.76,3.42,19,19,0,0,1-.49,7,28.86,28.86,0,0,1-2.63,6.55,48.18,48.18,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A84.7,84.7,0,0,0,505,299.15a49.13,49.13,0,0,0-5.28,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a50.94,50.94,0,0,0,2.6,14.16,55.81,55.81,0,0,0,6.23,13,68.52,68.52,0,0,0,9.12,11.12,88.62,88.62,0,0,0,11,9.29,87.72,87.72,0,0,0,12.76,7.89l1.18.57M345.57,173.67a69.59,69.59,0,0,1,4,5.91,50.77,50.77,0,0,1,3.27,6.35,30.67,30.67,0,0,1,2,6.82,16.86,16.86,0,0,1-.31,7,13.48,13.48,0,0,1-1.39,3.24,12.41,12.41,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,19.69,19.69,0,0,1-2.73,2.27,28.12,28.12,0,0,1-3,1.85,33,33,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06H328c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14L321,213c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,23.51,23.51,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.55,11.55,0,0,1-1.53-3.16,8.06,8.06,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.79,21.79,0,0,1,3.87-5.91,30.13,30.13,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.4,4.16-.78,6.26-1.13C344.59,172.38,345.09,173,345.57,173.67Z"/><path class="cls-121" d="M541.36,382.9l.26-.5a42.07,42.07,0,0,0,7.38,2.14c1.27.22,2.69.42,3.59.59,1.11.22,3,.46,6.06.81a88.34,88.34,0,0,0,14.27.49A67.13,67.13,0,0,0,587,384.3,55.65,55.65,0,0,0,600.2,379a54.32,54.32,0,0,0,5.94-3.91,51.74,51.74,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.1,49.1,0,0,0,5-13.26A84.06,84.06,0,0,0,627,331.7c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.72,53.72,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.78,19.78,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.75,28.75,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a100,100,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.87,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.08,45.08,0,0,0,7-1.36,21,21,0,0,0,3.35-1.24,12.9,12.9,0,0,0,3-1.9,8.77,8.77,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6.24,6.24,0,0,0,.33-1.72,10.62,10.62,0,0,0-.09-1.78,19.65,19.65,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.41,15.41,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.92,7.92,0,0,1,3.16-1.68,15.3,15.3,0,0,1,3.56-.51,26.9,26.9,0,0,1,3.59.18,47.45,47.45,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a1.59,1.59,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,28.45,28.45,0,0,0-3.57-.17,15,15,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3.11,3.11,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.45,14.45,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,19.14,19.14,0,0,1,.9,3.48,10.86,10.86,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.35,13.35,0,0,1-3,1.93,21.68,21.68,0,0,1-3.37,1.25,43.77,43.77,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.27,110.27,0,0,1,7.8,12.06,70.05,70.05,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.39,30.39,0,0,1,.89,7.16,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a5.73,5.73,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.08,12.08,0,0,1-3.38,1.35,15.64,15.64,0,0,1-3.6.45,24,24,0,0,1-7.14-1,34.88,34.88,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,32.85,32.85,0,0,1-3.2-6.45,27.55,27.55,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.56,20.56,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.11-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a100.79,100.79,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.68,27.68,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,19.12,19.12,0,0,0-2.87,2,19.33,19.33,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,50.4,50.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.58,83.58,0,0,1,626,346.19a49.44,49.44,0,0,1-5.12,13.46,60.15,60.15,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.14,52.14,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69,69,0,0,1-14.22,2.13,86.5,86.5,0,0,1-14.56-.73s-4.41-.43-9.25-1.39A42.29,42.29,0,0,1,541.36,382.9Zm286.87-22.24c-2.35.45-4.67,1-7,1.67a49.63,49.63,0,0,0-6.68,2.49,30,30,0,0,0-6,3.75A16.82,16.82,0,0,0,804,374a13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.73,20.73,0,0,0,.48,3.51,26.67,26.67,0,0,0,1,3.41,32.67,32.67,0,0,0,3.16,6.38,36.6,36.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,34.32,34.32,0,0,0,6.61,2.65,23.7,23.7,0,0,0,7,1,15.91,15.91,0,0,0,3.5-.45,12.08,12.08,0,0,0,3.26-1.3,7.93,7.93,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.87,21.87,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,67.91,67.91,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C829.82,360.38,829,360.51,828.23,360.66Z"/><polygon class="cls-3" points="831.2 360.15 830.96 359.85 830.4 359.96 830.63 360.26 831.2 360.15"/><path class="cls-122" d="M543.72,377l-1.77-.82a108.17,108.17,0,0,1-12.11-7.58A88.08,88.08,0,0,1,519,359.39a68.82,68.82,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.24,50.24,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15,48.45,48.45,0,0,1,5.23-13.18,82.23,82.23,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62C532.11,265,539.2,258.6,546.08,252c3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.33,30.33,0,0,0,2.69-6.73,19.7,19.7,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88C321,141,313.52,135,306.08,129l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21A43.27,43.27,0,0,1,264,90.28a22.22,22.22,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,0-.21,4.09,4.09,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5A9.3,9.3,0,0,1,264,77.56a18.59,18.59,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.17,16.17,0,0,0,3-1.9,5.31,5.31,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.94,7.94,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,46.45,46.45,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06L247,44l1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.59,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26.83,26.83,0,0,1,2.75,2.26,14.36,14.36,0,0,1,2.25,2.77,7.85,7.85,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,15.52,15.52,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.22,17.22,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,5.57,5.57,0,0,0-.95,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22V82a9.12,9.12,0,0,0,0,1.81,13.13,13.13,0,0,0,.94,3.47A23.56,23.56,0,0,0,264,90.5a45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09A112.12,112.12,0,0,0,326,170.72a67.29,67.29,0,0,0-6.68,2.66A44.54,44.54,0,0,0,313,176.9a29.5,29.5,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.23,12.23,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,25,25,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a38.88,38.88,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,31.27,31.27,0,0,0,3.08-1.88,24.5,24.5,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,14.9,14.9,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78,15.82,15.82,0,0,0,.17-1.81,20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.47,27.47,0,0,1,4.18,5.68,19.6,19.6,0,0,1,1.4,3.22,18.31,18.31,0,0,1,.27,10.42,29.24,29.24,0,0,1-2.63,6.55,49.7,49.7,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49,49,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51,51,0,0,0,2.6,14.16,56.19,56.19,0,0,0,6.23,13,69,69,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29A87.66,87.66,0,0,0,542.28,377l1.18.57M347.67,168.32a69.59,69.59,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,30.36,30.36,0,0,1,2,6.82,16.87,16.87,0,0,1-.31,7,13.84,13.84,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,29.84,29.84,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38.64,38.64,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.06,24.06,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.69,11.69,0,0,1-1.53-3.16,8.08,8.08,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.49,21.49,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,44.53,44.53,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64A111.71,111.71,0,0,1,340,167.46c2.08-.41,4.16-.79,6.26-1.13C346.69,167,347.19,167.67,347.67,168.32Z"/><path class="cls-123" d="M543.46,377.54l.26-.5a41.21,41.21,0,0,0,7.38,2.14c1.27.23,2.69.43,3.59.6,1.11.21,3,.45,6.06.81a89.49,89.49,0,0,0,14.27.49A68.47,68.47,0,0,0,589.1,379a56.5,56.5,0,0,0,13.2-5.29,55.82,55.82,0,0,0,5.94-3.91,54.23,54.23,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.23,49.23,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12A29.19,29.19,0,0,1,631,248a19.35,19.35,0,0,1,4.51-5.7,17.76,17.76,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.61,98.61,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.29,46.29,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.23,5.23,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.57,10.57,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.56,15.56,0,0,1-1-3.46,5.49,5.49,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.3,14.3,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.85,2.85,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,14.73,14.73,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.93,18.93,0,0,1,.9,3.48,10.75,10.75,0,0,1,.09,1.8,6.43,6.43,0,0,1-.33,1.78,4.8,4.8,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.67,8.67,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.64,24.64,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.54,28.54,0,0,1-1-3.47,20.69,20.69,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.73,29.73,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.24,27.24,0,0,0-6.92,1.38,20.06,20.06,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26A49.69,49.69,0,0,1,623,354.3a61.32,61.32,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.93,56.93,0,0,1-13.36,5.33A69.7,69.7,0,0,1,575.22,382a87.56,87.56,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.29,42.29,0,0,1,543.46,377.54Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a48.31,48.31,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4A13,13,0,0,0,805,372a12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,27.65,27.65,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.65,35.65,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.41,12.41,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.92,21.92,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.21,44.21,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C831.92,355,831.13,355.16,830.33,355.31Z"/><polygon class="cls-3" points="833.3 354.8 833.06 354.5 832.5 354.61 832.73 354.91 833.3 354.8"/><path class="cls-124" d="M545.82,371.89l-1.77-.82a109.65,109.65,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.82,68.82,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.24,50.24,0,0,1-2.53-14,55.59,55.59,0,0,1,1.25-14.15A48.45,48.45,0,0,1,509.84,289,82.23,82.23,0,0,1,518,277.31c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a51,51,0,0,0,3.91-6.07,30.82,30.82,0,0,0,2.69-6.73,19.92,19.92,0,0,0,.51-7.25,19.63,19.63,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.27,43.27,0,0,1-4.27-5.73,22.22,22.22,0,0,1-1.64-3.08,12.83,12.83,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.09,4.09,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.59,18.59,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a16.5,16.5,0,0,0,3-1.9,5.47,5.47,0,0,0,1.28-1.39,3.33,3.33,0,0,0,.33-.86,2.78,2.78,0,0,0,0-.91,7.94,7.94,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,47.1,47.1,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.66,4.59,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,26.83,26.83,0,0,1,2.75,2.26,14.36,14.36,0,0,1,2.25,2.77,8,8,0,0,1,1.19,3.32,2.83,2.83,0,0,1-.05.87,3.47,3.47,0,0,1-.31.81,5.62,5.62,0,0,1-1.15,1.33,16,16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a17.22,17.22,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,5.57,5.57,0,0,0-1,1.54,4.41,4.41,0,0,0-.28.87.81.81,0,0,0,0,.22v.68a9.12,9.12,0,0,0,0,1.81,13.13,13.13,0,0,0,.94,3.47,23.56,23.56,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a112.12,112.12,0,0,0-13.89,3.65,65.41,65.41,0,0,0-6.68,2.66,44.54,44.54,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22,22,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.76,8.76,0,0,0,.35,3.63,12.23,12.23,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,24.83,24.83,0,0,0,5.94,4.09,35.8,35.8,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H335l.9-.06a38.88,38.88,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,31.27,31.27,0,0,0,3.08-1.88,24.5,24.5,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,14.9,14.9,0,0,0,1-1.49,14.58,14.58,0,0,0,1.42-3.33,15.55,15.55,0,0,0,.35-1.78c.09-.6.14-1.21.17-1.81a20.61,20.61,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.47,27.47,0,0,1,4.18,5.68,20.49,20.49,0,0,1,1.4,3.22,18.81,18.81,0,0,1,.76,3.42,19,19,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,49.7,49.7,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28C540.8,253,533.71,259.43,527,266.29c-3.34,3.42-6.59,7-9.61,10.67a84.7,84.7,0,0,0-8.21,11.69,49,49,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51,51,0,0,0,2.6,14.16,56.19,56.19,0,0,0,6.23,13,69.39,69.39,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,87.66,87.66,0,0,0,12.76,7.88l1.17.57M349.77,163.17a68,68,0,0,1,4,5.91,49.42,49.42,0,0,1,3.27,6.35,30.36,30.36,0,0,1,2,6.82,16.87,16.87,0,0,1-.31,7,13.84,13.84,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,29.84,29.84,0,0,1-3,1.85A33.86,33.86,0,0,1,342.8,202a38.79,38.79,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.59,35.59,0,0,1-6.66-2.5,23.87,23.87,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.08,8.08,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.49,21.49,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,44.53,44.53,0,0,1,6.23-3.46,65.35,65.35,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.16-.79,6.26-1.13C348.79,161.88,349.29,162.52,349.77,163.17Z"/><path class="cls-125" d="M545.55,372.39l.27-.5A41.21,41.21,0,0,0,553.2,374c1.27.23,2.69.43,3.58.6,1.12.21,3,.45,6.07.81a89.49,89.49,0,0,0,14.27.49,68.47,68.47,0,0,0,14.08-2.13,56.5,56.5,0,0,0,13.2-5.29,55.82,55.82,0,0,0,5.94-3.91,54.23,54.23,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49.35,49.35,0,0,0,5-13.26,84.2,84.2,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a51.88,51.88,0,0,1,1.2-7.12,29.19,29.19,0,0,1,2.55-6.78,19.35,19.35,0,0,1,4.51-5.7,17.76,17.76,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,27.87,27.87,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.92,98.92,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46.53,46.53,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.23,5.23,0,0,0,.37-.8,6.38,6.38,0,0,0,.33-1.72,10.51,10.51,0,0,0-.09-1.78,19.42,19.42,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.56,15.56,0,0,1-1-3.46,5.49,5.49,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.3,14.3,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,45.47,45.47,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H992l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.66,46.66,0,0,0-7-1.41,25.11,25.11,0,0,0-3.57-.17,14.07,14.07,0,0,0-3.53.51,7.55,7.55,0,0,0-3.11,1.65,2.38,2.38,0,0,0-.55.67,2.85,2.85,0,0,0-.32.81,4.73,4.73,0,0,0,0,1.76,14.73,14.73,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.73,18.73,0,0,1,.9,3.48,10.75,10.75,0,0,1,.09,1.8,6.82,6.82,0,0,1-.33,1.78,5.67,5.67,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23.92,23.92,0,0,1-3.37,1.25,46.34,46.34,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,68.83,68.83,0,0,1,3.15,6.46,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a7.24,7.24,0,0,1-.48.79,8.67,8.67,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.64,24.64,0,0,1-7.14-1,36.23,36.23,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.54,28.54,0,0,1-1-3.47,20.69,20.69,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.73,29.73,0,0,1,6.15-3.74,47.39,47.39,0,0,1,6.74-2.5,67.15,67.15,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.24,27.24,0,0,0-6.92,1.38,19.21,19.21,0,0,0-3.21,1.44,17.76,17.76,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.15,50.15,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.58,83.58,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,61.32,61.32,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L618.78,358l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.35,54.35,0,0,1-5.42,4.75,53.48,53.48,0,0,1-6,4,56.93,56.93,0,0,1-13.36,5.33,69.7,69.7,0,0,1-14.22,2.13,88.65,88.65,0,0,1-14.56-.73s-4.41-.44-9.25-1.4A42.51,42.51,0,0,1,545.55,372.39Zm286.88-22.23c-2.35.45-4.67,1-7,1.67a46.61,46.61,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,27.65,27.65,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.6,37.6,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.65,35.65,0,0,0,6.61,2.65,24.38,24.38,0,0,0,7,1,17.21,17.21,0,0,0,3.5-.45,12.41,12.41,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a22,22,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,45.33,45.33,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C834,349.88,833.23,350,832.43,350.16Z"/><polygon class="cls-3" points="835.4 349.64 835.16 349.35 834.6 349.45 834.83 349.75 835.4 349.64"/><path class="cls-126" d="M547.71,366.87l-1.77-.82a109.09,109.09,0,0,1-12.11-7.58A88,88,0,0,1,523,349.22a69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15A49.36,49.36,0,0,1,511.73,284a83.89,83.89,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49,49,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.78-3-5.78-4.3a99.36,99.36,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21A45.1,45.1,0,0,1,268,80.11,23.26,23.26,0,0,1,266.39,77a13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.64a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5A10.63,10.63,0,0,1,268,67.39a19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,2.74,2.74,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,14.13,14.13,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.48,1,6.85,2.11t6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.33,2.33,0,0,1-.05.87,3,3,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,14.77,14.77,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,24.73,24.73,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09A113.05,113.05,0,0,0,330,160.55a69.82,69.82,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h2.7l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,18.89,18.89,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a26.77,26.77,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22A18.18,18.18,0,0,1,571,206a18.77,18.77,0,0,1-.49,7,28.77,28.77,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69A49.78,49.78,0,0,0,505.8,297a61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.31,51.31,0,0,0,2.6,14.16,56.21,56.21,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,89.5,89.5,0,0,0,11,9.29,88.26,88.26,0,0,0,12.76,7.89l1.18.56M351.66,158.15a67.31,67.31,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.5,29.5,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,32.78,32.78,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.49,34.49,0,0,1-6.66-2.5,24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,46.79,46.79,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64A112.17,112.17,0,0,1,344,157.29c2.08-.41,4.17-.78,6.26-1.13C350.68,156.86,351.18,157.5,351.66,158.15Z"/><path class="cls-127" d="M547.45,367.37l.26-.5a40.61,40.61,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.12.21,3,.46,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.57,48.57,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.82,29.82,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49A28.3,28.3,0,0,1,653,227.1c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.86,44.86,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.49,12.49,0,0,0,3-1.9,7.84,7.84,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a3.87,3.87,0,0,0,.37-.8,5.64,5.64,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.79,5.79,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,3,3,0,0,1,.59-.7,7.93,7.93,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21h-.07a.8.8,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.73,2.73,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.08,15.08,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6,6,0,0,1-.33,1.78,4.19,4.19,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.48,13.48,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,44.9,44.9,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a107,107,0,0,1,7.8,12.06A64.22,64.22,0,0,1,852,368a45.61,45.61,0,0,1,2.28,6.83,29.81,29.81,0,0,1,.89,7.16,22.13,22.13,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.45,8.45,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.66,16.66,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1A36.79,36.79,0,0,1,829,393c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.33,29.33,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,14,14,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.44,70.44,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21.43,21.43,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,30.08,30.08,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26,48.92,48.92,0,0,1-5.12,13.46,58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a52.2,52.2,0,0,1-5.42,4.75,51.29,51.29,0,0,1-6,4,56.16,56.16,0,0,1-13.36,5.33,68.91,68.91,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.24-1.4A42.3,42.3,0,0,1,547.45,367.37Zm286.87-22.23c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21.94,21.94,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,38.41,38.41,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,3.75,3.75,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7,43.5,43.5,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12c-1.26-1.71-2.55-3.4-3.87-5.05C835.91,344.86,835.12,345,834.32,345.14Z"/><polygon class="cls-3" points="837.29 344.63 837.05 344.33 836.5 344.44 836.73 344.74 837.29 344.63"/><path class="cls-128" d="M549.81,361.72,548,360.9a109.09,109.09,0,0,1-12.11-7.58,88.82,88.82,0,0,1-10.87-9.25,69.36,69.36,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,50.54,50.54,0,0,1-2.53-14,56.51,56.51,0,0,1,1.25-14.15,49.36,49.36,0,0,1,5.23-13.18A83.05,83.05,0,0,1,522,267.14c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.76,49.76,0,0,0,3.91-6.07,29.86,29.86,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,27.69,27.69,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46a113.8,113.8,0,0,0-7.71-8.57c-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21A44.17,44.17,0,0,1,270.13,75a23.26,23.26,0,0,1-1.64-3.08,13.62,13.62,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77V66a.33.33,0,0,1,.05-.21,4.81,4.81,0,0,1,.26-.84,5.93,5.93,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.77,19.77,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.84,15.84,0,0,0,3-1.9,5.14,5.14,0,0,0,1.28-1.39,3,3,0,0,0,.33-.86,2.32,2.32,0,0,0,0-.91,7.73,7.73,0,0,0-1.2-3.37,13.84,13.84,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,46.9,46.9,0,0,0-6.15-3.64c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06h-.22a.46.46,0,0,0-.26.06h.47l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9,2.31.67,4.6,1.37,6.85,2.11s4.49,1.57,6.72,2.49a69.86,69.86,0,0,1,6.53,3,47.4,47.4,0,0,1,6.13,3.65,24.83,24.83,0,0,1,2.75,2.26,14.59,14.59,0,0,1,2.25,2.77,7.9,7.9,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.22,15.22,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.87,18.87,0,0,0-3,2,8.54,8.54,0,0,0-1.28,1.27,6.09,6.09,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87v.9a9.12,9.12,0,0,0,0,1.81,13.93,13.93,0,0,0,.94,3.47,26.09,26.09,0,0,0,1.64,3.2,45.56,45.56,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.7-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.5,29.5,0,0,0-5.48,4.68,22.18,22.18,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a9.15,9.15,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.86,12.86,0,0,0,1.59,3.27,16.74,16.74,0,0,0,2.35,2.76,24.74,24.74,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21H339l.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.37,33.37,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88,22.86,22.86,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.5,12.5,0,0,0,1-1.49,13.81,13.81,0,0,0,1.42-3.33,13.65,13.65,0,0,0,.35-1.78,15.61,15.61,0,0,0,.17-1.81,19.68,19.68,0,0,0-.23-3.6,30.08,30.08,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a98.71,98.71,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48A27.12,27.12,0,0,1,571,194.2a20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.77,18.77,0,0,1-.49,7,29.24,29.24,0,0,1-2.63,6.55,47.77,47.77,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67a85.57,85.57,0,0,0-8.21,11.69,49.65,49.65,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v1.81c0,.6,0,1.2.05,1.8a51.37,51.37,0,0,0,2.6,14.16,56.41,56.41,0,0,0,6.23,13,70,70,0,0,0,9.12,11.12,90.39,90.39,0,0,0,11,9.29,88.2,88.2,0,0,0,12.76,7.88l1.18.57M353.76,153a67.31,67.31,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.36,29.36,0,0,1,2,6.82,16.54,16.54,0,0,1-.31,7,12.73,12.73,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,19.12,19.12,0,0,1-2.73,2.27,27.16,27.16,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.65,37.65,0,0,1-7,1.18,4.49,4.49,0,0,0-.89.06h-2.67c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79A35.16,35.16,0,0,1,319,189a24.26,24.26,0,0,1-5.83-4,17.32,17.32,0,0,1-2.29-2.69,12,12,0,0,1-1.53-3.16,8.39,8.39,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.34,29.34,0,0,1,5.4-4.61,45.11,45.11,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,112.17,112.17,0,0,1,13.84-3.62c2.08-.41,4.17-.78,6.26-1.13C352.78,151.71,353.28,152.35,353.76,153Z"/><path class="cls-129" d="M549.55,362.22l.26-.5a40.61,40.61,0,0,0,7.38,2.14c1.28.23,2.7.43,3.59.6,1.11.21,3,.45,6.06.81a88.37,88.37,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53.38,53.38,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.89,48.89,0,0,0,5-13.26,83.18,83.18,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a53.45,53.45,0,0,1,1.2-7.12,29.64,29.64,0,0,1,2.55-6.78,19.68,19.68,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.3,28.3,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12h3.6c2.4.13,4.79.38,7.17.72a98.31,98.31,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.94,8.24q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a46,46,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,12.81,12.81,0,0,0,3-1.9,8.26,8.26,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.13,4.13,0,0,0,.37-.8,5.7,5.7,0,0,0,.33-1.72,8.82,8.82,0,0,0-.09-1.78,17.85,17.85,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a16,16,0,0,1-1-3.46,5.78,5.78,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.37,14.37,0,0,1,3.56-.51,23.92,23.92,0,0,1,3.59.18,46.19,46.19,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21H996l-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.17,46.17,0,0,0-7-1.41,25,25,0,0,0-3.57-.17,14.13,14.13,0,0,0-3.53.51,7.61,7.61,0,0,0-3.11,1.65,2.56,2.56,0,0,0-.55.67,3.18,3.18,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.23,15.23,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46a31.86,31.86,0,0,1,1.36,3.33,18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.09,1.8,6.08,6.08,0,0,1-.33,1.78,4.47,4.47,0,0,1-.39.83,1.06,1.06,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.71,13.71,0,0,1-3,1.93,23,23,0,0,1-3.37,1.25,46.09,46.09,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a108.39,108.39,0,0,1,7.8,12.06,64.22,64.22,0,0,1,3.15,6.46,45.61,45.61,0,0,1,2.28,6.83,29.75,29.75,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.56,8.56,0,0,1-2.7,2.45,12.39,12.39,0,0,1-3.38,1.35,16.73,16.73,0,0,1-3.6.45,24.35,24.35,0,0,1-7.14-1,36.79,36.79,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1a32.88,32.88,0,0,1-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.42,37.42,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,29.88,29.88,0,0,1-1-3.47,21.7,21.7,0,0,1-.49-3.58,13.79,13.79,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57s.71-1,1.1-1.44a22,22,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,67.76,67.76,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98.74,98.74,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71h-3.57a34.79,34.79,0,0,0-3.54.12,27.33,27.33,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.69,18.69,0,0,0-2.87,2,19.37,19.37,0,0,0-4.33,5.48,29.9,29.9,0,0,0-2.47,6.61,51.66,51.66,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a82.6,82.6,0,0,1-1.93,14.26A49.24,49.24,0,0,1,629,339a58.46,58.46,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a54.81,54.81,0,0,1-11.42,8.75,56.16,56.16,0,0,1-13.36,5.33,69.59,69.59,0,0,1-14.22,2.13,87.61,87.61,0,0,1-14.56-.73s-4.4-.44-9.25-1.4A42.51,42.51,0,0,1,549.55,362.22ZM836.42,340c-2.35.45-4.67,1-7,1.67a50.14,50.14,0,0,0-6.68,2.49,29.08,29.08,0,0,0-6,3.75,16.82,16.82,0,0,0-4.52,5.4,13.82,13.82,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,28.94,28.94,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48a33.21,33.21,0,0,0,3.1,1.76,35.93,35.93,0,0,0,6.61,2.65,24.43,24.43,0,0,0,7,1,17.12,17.12,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,7.94,7.94,0,0,0,2.56-2.33,4.07,4.07,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.37,21.37,0,0,0,1.12-7,29.35,29.35,0,0,0-.89-7.05,44.21,44.21,0,0,0-2.26-6.75,63.43,63.43,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.58-3.87-5.05C838,339.71,837.22,339.84,836.42,340Z"/><polygon class="cls-3" points="839.39 339.48 839.15 339.18 838.59 339.29 838.82 339.59 839.39 339.48"/></svg>'))));var i=this;n.onload=function(){e.drawImage(n,0,0);var r=new B(t);r.needsUpdate=!0,r.minFilter=o,i.onLoaded(r)}}onLoaded(t){this.geometry=new wn(32,32,3),this.material=new hn({vertexShader:oc(),fragmentShader:lc(),uniforms:{uTime:{value:0},uTexture:{value:t},uFreq:{value:1.5},uAmp:{value:.15}},transparent:!0,side:2}),this.mesh=new rn(this.geometry,this.material),this.scene.add(this.mesh),this.addEvents()}addEvents(){window.requestAnimationFrame(this.run.bind(this)),window.addEventListener("resize",this.onResize.bind(this),!1)}run(){requestAnimationFrame(this.run.bind(this)),this.render()}render(){this.material.uniforms.uTime.value=this.clock.getElapsedTime(),this.renderer.render(this.scene,this.camera)}onResize(){const t=$(".wave-canvas").parent().width(),e=$(".wave-canvas").parent().height();this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,e)}};function uc(){return hc}})(),WaveCanvas=i})();