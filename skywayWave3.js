/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={28:(t,e,n)=>{"use strict";var i=n(645);n.n(i)()((function(t){return t[1]})).push([t.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n}\n",""])},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,i){"string"==typeof t&&(t=[[null,t,""]]);var a={};if(i)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(a[s]=!0)}for(var o=0;o<t.length;o++){var c=[].concat(t[o]);i&&a[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},270:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n\nvoid main() {\n  vec4 texture = texture2D(uTexture, vUv);\n  gl_FragColor = texture;\n}"},343:t=>{t.exports="precision mediump float;\n\nvarying vec2 vUv;\nuniform float uTime;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v) {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n  \n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n  \n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n  \n  // Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n           \n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n  \n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  \n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main() {\n  vUv = uv;\n\n  vec3 pos = position;\n  float noiseFreq = 1.5;\n  float noiseAmp = 0.15; \n  vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n  pos.z += snoise(noisePos) * noiseAmp;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);\n}"}},e={};function n(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return t[i](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";n(28);const t=100,e=1e3,i=1001,a=1002,r=1003,s=1006,o=1008,c=1012,l=1014,h=1015,u=1016,d=1020,p=1022,f=1023,m=1026,g=1027,v=2300,x=2301,y=2302,_=2400,M=2401,w=2402,b=3e3,S=7680,T=35044,E=35048,A="300 es";function L(){}Object.assign(L.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}});const C=[];for(let t=0;t<256;t++)C[t]=(t<16?"0":"")+t.toString(16);let R=1234567;const P={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(C[255&t]+C[t>>8&255]+C[t>>16&255]+C[t>>24&255]+"-"+C[255&e]+C[e>>8&255]+"-"+C[e>>16&15|64]+C[e>>24&255]+"-"+C[63&n|128]+C[n>>8&255]+"-"+C[n>>16&255]+C[n>>24&255]+C[255&i]+C[i>>8&255]+C[i>>16&255]+C[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,a){return i+(t-e)*(a-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return P.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(P.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(R=t%2147483647),R=16807*R%2147483647,(R-1)/2147483646},degToRad:function(t){return t*P.DEG2RAD},radToDeg:function(t){return t*P.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,a){const r=Math.cos,s=Math.sin,o=r(n/2),c=s(n/2),l=r((e+i)/2),h=s((e+i)/2),u=r((e-i)/2),d=s((e-i)/2),p=r((i-e)/2),f=s((i-e)/2);switch(a){case"XYX":t.set(o*h,c*u,c*d,o*l);break;case"YZY":t.set(c*d,o*h,c*u,o*l);break;case"ZXZ":t.set(c*u,c*d,o*h,o*l);break;case"XZX":t.set(o*h,c*f,c*p,o*l);break;case"YXY":t.set(c*p,o*h,c*f,o*l);break;case"ZYZ":t.set(c*f,c*p,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+a)}}};class D{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),a=this.x-t.x,r=this.y-t.y;return this.x=a*n-r*i+t.x,this.y=a*i+r*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}D.prototype.isVector2=!0;class I{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,a,r,s,o,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=a,l[5]=o,l[6]=n,l[7]=r,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,a=this.elements,r=n[0],s=n[3],o=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],x=i[4],y=i[7],_=i[2],M=i[5],w=i[8];return a[0]=r*f+s*v+o*_,a[3]=r*m+s*x+o*M,a[6]=r*g+s*y+o*w,a[1]=c*f+l*v+h*_,a[4]=c*m+l*x+h*M,a[7]=c*g+l*y+h*w,a[2]=u*f+d*v+p*_,a[5]=u*m+d*x+p*M,a[8]=u*g+d*y+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],s=t[5],o=t[6],c=t[7],l=t[8];return e*r*l-e*s*c-n*a*l+n*s*o+i*a*c-i*r*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=l*r-s*c,u=s*o-l*a,d=c*a-r*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*c-l*n)*f,t[2]=(s*n-i*r)*f,t[3]=u*f,t[4]=(l*e-i*o)*f,t[5]=(i*a-s*e)*f,t[6]=d*f,t[7]=(n*o-c*e)*f,t[8]=(r*e-n*a)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,a,r,s){const o=Math.cos(a),c=Math.sin(a);return this.set(n*o,n*c,-n*(o*r+c*s)+r+t,-i*c,i*o,-i*(-c*r+o*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,a=i[0],r=i[3],s=i[6],o=i[1],c=i[4],l=i[7];return i[0]=e*a+n*o,i[3]=e*r+n*c,i[6]=e*s+n*l,i[1]=-n*a+e*o,i[4]=-n*r+e*c,i[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let N;I.prototype.isMatrix3=!0;const O={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===N&&(N=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),N.width=t.width,N.height=t.height;const n=N.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=N}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}};let z=0;class q extends L{constructor(t=q.DEFAULT_IMAGE,e=q.DEFAULT_MAPPING,n=1001,i=1001,a=1006,r=1008,s=1023,o=1009,c=1,l=3e3){super(),Object.defineProperty(this,"id",{value:z++}),this.uuid=P.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=a,this.minFilter=r,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=o,this.offset=new D(0,0),this.repeat=new D(1,1),this.center=new D(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new I,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=P.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(H(i[t].image)):e.push(H(i[t]))}else e=H(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case e:t.x=t.x-Math.floor(t.x);break;case i:t.x=t.x<0?0:1;break;case a:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case e:t.y=t.y-Math.floor(t.y);break;case i:t.y=t.y<0?0:1;break;case a:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function H(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?O.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}q.DEFAULT_IMAGE=void 0,q.DEFAULT_MAPPING=300,q.prototype.isTexture=!0;class B{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,a=this.w,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i+r[12]*a,this.y=r[1]*e+r[5]*n+r[9]*i+r[13]*a,this.z=r[2]*e+r[6]*n+r[10]*i+r[14]*a,this.w=r[3]*e+r[7]*n+r[11]*i+r[15]*a,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,a;const r=.01,s=.1,o=t.elements,c=o[0],l=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(l-u)<r&&Math.abs(h-f)<r&&Math.abs(p-m)<r){if(Math.abs(l+u)<s&&Math.abs(h+f)<s&&Math.abs(p+m)<s&&Math.abs(c+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(c+1)/2,o=(d+1)/2,v=(g+1)/2,x=(l+u)/4,y=(h+f)/4,_=(p+m)/4;return t>o&&t>v?t<r?(n=0,i=.707106781,a=.707106781):(n=Math.sqrt(t),i=x/n,a=y/n):o>v?o<r?(n=.707106781,i=0,a=.707106781):(i=Math.sqrt(o),n=x/i,a=_/i):v<r?(n=.707106781,i=.707106781,a=0):(a=Math.sqrt(v),n=y/a,i=_/a),this.set(n,i,a,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-l)*(u-l));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-l)/v,this.w=Math.acos((c+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}B.prototype.isVector4=!0;class G extends L{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new B(0,0,t,e),this.scissorTest=!1,this.viewport=new B(0,0,t,e),n=n||{},this.texture=new q(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:s,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}G.prototype.isWebGLRenderTarget=!0,class extends G{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}.prototype.isWebGLMultisampleRenderTarget=!0;class F{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,a,r,s){let o=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=a[r+0],d=a[r+1],p=a[r+2],f=a[r+3];if(0===s)return t[e+0]=o,t[e+1]=c,t[e+2]=l,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||c!==d||l!==p){let t=1-s;const e=o*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const a=Math.sqrt(i),r=Math.atan2(a,e*n);t=Math.sin(t*r)/a,s=Math.sin(s*r)/a}const a=s*n;if(o=o*t+u*a,c=c*t+d*a,l=l*t+p*a,h=h*t+f*a,t===1-s){const t=1/Math.sqrt(o*o+c*c+l*l+h*h);o*=t,c*=t,l*=t,h*=t}}t[e]=o,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,a,r){const s=n[i],o=n[i+1],c=n[i+2],l=n[i+3],h=a[r],u=a[r+1],d=a[r+2],p=a[r+3];return t[e]=s*p+l*h+o*d-c*u,t[e+1]=o*p+l*u+c*h-s*d,t[e+2]=c*p+l*d+s*u-o*h,t[e+3]=l*p-s*h-o*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,a=t._z,r=t._order,s=Math.cos,o=Math.sin,c=s(n/2),l=s(i/2),h=s(a/2),u=o(n/2),d=o(i/2),p=o(a/2);switch(r){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],a=e[8],r=e[1],s=e[5],o=e[9],c=e[2],l=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-o)*t,this._y=(a-c)*t,this._z=(r-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(l-o)/t,this._x=.25*t,this._y=(i+r)/t,this._z=(a+c)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(a-c)/t,this._x=(i+r)/t,this._y=.25*t,this._z=(o+l)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(r-i)/t,this._x=(a+c)/t,this._y=(o+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(P.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,a=t._z,r=t._w,s=e._x,o=e._y,c=e._z,l=e._w;return this._x=n*l+r*s+i*c-a*o,this._y=i*l+r*o+a*s-n*c,this._z=a*l+r*c+n*o-i*s,this._w=r*l-n*s-i*o-a*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,a=this._z,r=this._w;let s=r*t._w+n*t._x+i*t._y+a*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=r,this._x=n,this._y=i,this._z=a,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*a+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(o),l=Math.atan2(c,s),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=r*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=a*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}F.prototype.isQuaternion=!0;class U{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(V.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(V.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,a=t.elements;return this.x=a[0]*e+a[3]*n+a[6]*i,this.y=a[1]*e+a[4]*n+a[7]*i,this.z=a[2]*e+a[5]*n+a[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,a=t.elements,r=1/(a[3]*e+a[7]*n+a[11]*i+a[15]);return this.x=(a[0]*e+a[4]*n+a[8]*i+a[12])*r,this.y=(a[1]*e+a[5]*n+a[9]*i+a[13])*r,this.z=(a[2]*e+a[6]*n+a[10]*i+a[14])*r,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,a=t.x,r=t.y,s=t.z,o=t.w,c=o*e+r*i-s*n,l=o*n+s*e-a*i,h=o*i+a*n-r*e,u=-a*e-r*n-s*i;return this.x=c*o+u*-a+l*-s-h*-r,this.y=l*o+u*-r+h*-a-c*-s,this.z=h*o+u*-s+c*-r-l*-a,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i,this.y=a[1]*e+a[5]*n+a[9]*i,this.z=a[2]*e+a[6]*n+a[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,a=t.z,r=e.x,s=e.y,o=e.z;return this.x=i*o-a*s,this.y=a*r-n*o,this.z=n*s-i*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return k.copy(this).projectOnVector(t),this.sub(k)}reflect(t){return this.sub(k.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(P.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}U.prototype.isVector3=!0;const k=new U,V=new F;class W{constructor(t=new U(1/0,1/0,1/0),e=new U(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,a=-1/0,r=-1/0,s=-1/0;for(let o=0,c=t.length;o<c;o+=3){const c=t[o],l=t[o+1],h=t[o+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>a&&(a=c),l>r&&(r=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(a,r,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,a=-1/0,r=-1/0,s=-1/0;for(let o=0,c=t.count;o<c;o++){const c=t.getX(o),l=t.getY(o),h=t.getZ(o);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>a&&(a=c),l>r&&(r=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(a,r,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=j.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new U),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new U),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),X.copy(e.boundingBox),X.applyMatrix4(t.matrixWorld),this.union(X));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new U),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,j),j.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(et),nt.subVectors(this.max,et),Y.subVectors(t.a,et),J.subVectors(t.b,et),Q.subVectors(t.c,et),K.subVectors(J,Y),$.subVectors(Q,J),tt.subVectors(Y,Q);let e=[0,-K.z,K.y,0,-$.z,$.y,0,-tt.z,tt.y,K.z,0,-K.x,$.z,0,-$.x,tt.z,0,-tt.x,-K.y,K.x,0,-$.y,$.x,0,-tt.y,tt.x,0];return!!rt(e,Y,J,Q,nt)&&(e=[1,0,0,0,1,0,0,0,1],!!rt(e,Y,J,Q,nt)&&(it.crossVectors(K,$),e=[it.x,it.y,it.z],rt(e,Y,J,Q,nt)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new U),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return j.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(j).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Z[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Z[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Z[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Z[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Z[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Z[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Z[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Z[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Z)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}W.prototype.isBox3=!0;const Z=[new U,new U,new U,new U,new U,new U,new U,new U],j=new U,X=new W,Y=new U,J=new U,Q=new U,K=new U,$=new U,tt=new U,et=new U,nt=new U,it=new U,at=new U;function rt(t,e,n,i,a){for(let r=0,s=t.length-3;r<=s;r+=3){at.fromArray(t,r);const s=a.x*Math.abs(at.x)+a.y*Math.abs(at.y)+a.z*Math.abs(at.z),o=e.dot(at),c=n.dot(at),l=i.dot(at);if(Math.max(-Math.max(o,c,l),Math.min(o,c,l))>s)return!1}return!0}const st=new W,ot=new U,ct=new U,lt=new U;class ht{constructor(t=new U,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):st.setFromPoints(t).getCenter(n);let i=0;for(let e=0,a=t.length;e<a;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new U),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new W),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){lt.subVectors(t,this.center);const e=lt.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(lt.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return ct.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(ot.copy(t.center).add(ct)),this.expandByPoint(ot.copy(t.center).sub(ct)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ut=new U,dt=new U,pt=new U,ft=new U,mt=new U,gt=new U,vt=new U;class xt{constructor(t=new U,e=new U(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new U),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ut)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new U),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ut.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ut.copy(this.direction).multiplyScalar(e).add(this.origin),ut.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){dt.copy(t).add(e).multiplyScalar(.5),pt.copy(e).sub(t).normalize(),ft.copy(this.origin).sub(dt);const a=.5*t.distanceTo(e),r=-this.direction.dot(pt),s=ft.dot(this.direction),o=-ft.dot(pt),c=ft.lengthSq(),l=Math.abs(1-r*r);let h,u,d,p;if(l>0)if(h=r*o-s,u=r*s-o,p=a*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;h*=t,u*=t,d=h*(h+r*u+2*s)+u*(r*h+u+2*o)+c}else u=a,h=Math.max(0,-(r*u+s)),d=-h*h+u*(u+2*o)+c;else u=-a,h=Math.max(0,-(r*u+s)),d=-h*h+u*(u+2*o)+c;else u<=-p?(h=Math.max(0,-(-r*a+s)),u=h>0?-a:Math.min(Math.max(-a,-o),a),d=-h*h+u*(u+2*o)+c):u<=p?(h=0,u=Math.min(Math.max(-a,-o),a),d=u*(u+2*o)+c):(h=Math.max(0,-(r*a+s)),u=h>0?a:Math.min(Math.max(-a,-o),a),d=-h*h+u*(u+2*o)+c);else u=r>0?-a:a,h=Math.max(0,-(r*u+s)),d=-h*h+u*(u+2*o)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(pt).multiplyScalar(u).add(dt),d}intersectSphere(t,e){ut.subVectors(t.center,this.origin);const n=ut.dot(this.direction),i=ut.dot(ut)-n*n,a=t.radius*t.radius;if(i>a)return null;const r=Math.sqrt(a-i),s=n-r,o=n+r;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,a,r,s,o;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(a=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(a=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),n>r||a>i?null:((a>n||n!=n)&&(n=a),(r<i||i!=i)&&(i=r),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,ut)}intersectTriangle(t,e,n,i,a){mt.subVectors(e,t),gt.subVectors(n,t),vt.crossVectors(mt,gt);let r,s=this.direction.dot(vt);if(s>0){if(i)return null;r=1}else{if(!(s<0))return null;r=-1,s=-s}ft.subVectors(this.origin,t);const o=r*this.direction.dot(gt.crossVectors(ft,gt));if(o<0)return null;const c=r*this.direction.dot(mt.cross(ft));if(c<0)return null;if(o+c>s)return null;const l=-r*ft.dot(vt);return l<0?null:this.at(l/s,a)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class yt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,a,r,s,o,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=a,g[5]=r,g[9]=s,g[13]=o,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new yt).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/_t.setFromMatrixColumn(t,0).length(),a=1/_t.setFromMatrixColumn(t,1).length(),r=1/_t.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*a,e[5]=n[5]*a,e[6]=n[6]*a,e[7]=0,e[8]=n[8]*r,e[9]=n[9]*r,e[10]=n[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,a=t.z,r=Math.cos(n),s=Math.sin(n),o=Math.cos(i),c=Math.sin(i),l=Math.cos(a),h=Math.sin(a);if("XYZ"===t.order){const t=r*l,n=r*h,i=s*l,a=s*h;e[0]=o*l,e[4]=-o*h,e[8]=c,e[1]=n+i*c,e[5]=t-a*c,e[9]=-s*o,e[2]=a-t*c,e[6]=i+n*c,e[10]=r*o}else if("YXZ"===t.order){const t=o*l,n=o*h,i=c*l,a=c*h;e[0]=t+a*s,e[4]=i*s-n,e[8]=r*c,e[1]=r*h,e[5]=r*l,e[9]=-s,e[2]=n*s-i,e[6]=a+t*s,e[10]=r*o}else if("ZXY"===t.order){const t=o*l,n=o*h,i=c*l,a=c*h;e[0]=t-a*s,e[4]=-r*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=r*l,e[9]=a-t*s,e[2]=-r*c,e[6]=s,e[10]=r*o}else if("ZYX"===t.order){const t=r*l,n=r*h,i=s*l,a=s*h;e[0]=o*l,e[4]=i*c-n,e[8]=t*c+a,e[1]=o*h,e[5]=a*c+t,e[9]=n*c-i,e[2]=-c,e[6]=s*o,e[10]=r*o}else if("YZX"===t.order){const t=r*o,n=r*c,i=s*o,a=s*c;e[0]=o*l,e[4]=a-t*h,e[8]=i*h+n,e[1]=h,e[5]=r*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-a*h}else if("XZY"===t.order){const t=r*o,n=r*c,i=s*o,a=s*c;e[0]=o*l,e[4]=-h,e[8]=c*l,e[1]=t*h+a,e[5]=r*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*l,e[10]=a*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(wt,t,bt)}lookAt(t,e,n){const i=this.elements;return Et.subVectors(t,e),0===Et.lengthSq()&&(Et.z=1),Et.normalize(),St.crossVectors(n,Et),0===St.lengthSq()&&(1===Math.abs(n.z)?Et.x+=1e-4:Et.z+=1e-4,Et.normalize(),St.crossVectors(n,Et)),St.normalize(),Tt.crossVectors(Et,St),i[0]=St.x,i[4]=Tt.x,i[8]=Et.x,i[1]=St.y,i[5]=Tt.y,i[9]=Et.y,i[2]=St.z,i[6]=Tt.z,i[10]=Et.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,a=this.elements,r=n[0],s=n[4],o=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],x=n[7],y=n[11],_=n[15],M=i[0],w=i[4],b=i[8],S=i[12],T=i[1],E=i[5],A=i[9],L=i[13],C=i[2],R=i[6],P=i[10],D=i[14],I=i[3],N=i[7],O=i[11],z=i[15];return a[0]=r*M+s*T+o*C+c*I,a[4]=r*w+s*E+o*R+c*N,a[8]=r*b+s*A+o*P+c*O,a[12]=r*S+s*L+o*D+c*z,a[1]=l*M+h*T+u*C+d*I,a[5]=l*w+h*E+u*R+d*N,a[9]=l*b+h*A+u*P+d*O,a[13]=l*S+h*L+u*D+d*z,a[2]=p*M+f*T+m*C+g*I,a[6]=p*w+f*E+m*R+g*N,a[10]=p*b+f*A+m*P+g*O,a[14]=p*S+f*L+m*D+g*z,a[3]=v*M+x*T+y*C+_*I,a[7]=v*w+x*E+y*R+_*N,a[11]=v*b+x*A+y*P+_*O,a[15]=v*S+x*L+y*D+_*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],a=t[12],r=t[1],s=t[5],o=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+a*o*h-i*c*h-a*s*u+n*c*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*c*u+a*r*u-i*r*d+i*c*l-a*o*l)+t[11]*(+e*c*h-e*s*d-a*r*h+n*r*d+a*s*l-n*c*l)+t[15]*(-i*s*l-e*o*h+e*s*u+i*r*h-n*r*u+n*o*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],a=t[3],r=t[4],s=t[5],o=t[6],c=t[7],l=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*c-f*u*c+f*o*d-s*m*d-h*o*g+s*u*g,x=p*u*c-l*m*c-p*o*d+r*m*d+l*o*g-r*u*g,y=l*f*c-p*h*c+p*s*d-r*f*d-l*s*g+r*h*g,_=p*h*o-l*f*o-p*s*u+r*f*u+l*s*m-r*h*m,M=e*v+n*x+i*y+a*_;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/M;return t[0]=v*w,t[1]=(f*u*a-h*m*a-f*i*d+n*m*d+h*i*g-n*u*g)*w,t[2]=(s*m*a-f*o*a+f*i*c-n*m*c-s*i*g+n*o*g)*w,t[3]=(h*o*a-s*u*a-h*i*c+n*u*c+s*i*d-n*o*d)*w,t[4]=x*w,t[5]=(l*m*a-p*u*a+p*i*d-e*m*d-l*i*g+e*u*g)*w,t[6]=(p*o*a-r*m*a-p*i*c+e*m*c+r*i*g-e*o*g)*w,t[7]=(r*u*a-l*o*a+l*i*c-e*u*c-r*i*d+e*o*d)*w,t[8]=y*w,t[9]=(p*h*a-l*f*a-p*n*d+e*f*d+l*n*g-e*h*g)*w,t[10]=(r*f*a-p*s*a+p*n*c-e*f*c-r*n*g+e*s*g)*w,t[11]=(l*s*a-r*h*a-l*n*c+e*h*c+r*n*d-e*s*d)*w,t[12]=_*w,t[13]=(l*f*i-p*h*i+p*n*u-e*f*u-l*n*m+e*h*m)*w,t[14]=(p*s*i-r*f*i-p*n*o+e*f*o+r*n*m-e*s*m)*w,t[15]=(r*h*i-l*s*i+l*n*o-e*h*o-r*n*u+e*s*u)*w,this}scale(t){const e=this.elements,n=t.x,i=t.y,a=t.z;return e[0]*=n,e[4]*=i,e[8]*=a,e[1]*=n,e[5]*=i,e[9]*=a,e[2]*=n,e[6]*=i,e[10]*=a,e[3]*=n,e[7]*=i,e[11]*=a,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),a=1-n,r=t.x,s=t.y,o=t.z,c=a*r,l=a*s;return this.set(c*r+n,c*s-i*o,c*o+i*s,0,c*s+i*o,l*s+n,l*o-i*r,0,c*o-i*s,l*o+i*r,a*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,a=e._x,r=e._y,s=e._z,o=e._w,c=a+a,l=r+r,h=s+s,u=a*c,d=a*l,p=a*h,f=r*l,m=r*h,g=s*h,v=o*c,x=o*l,y=o*h,_=n.x,M=n.y,w=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+y)*_,i[2]=(p-x)*_,i[3]=0,i[4]=(d-y)*M,i[5]=(1-(u+g))*M,i[6]=(m+v)*M,i[7]=0,i[8]=(p+x)*w,i[9]=(m-v)*w,i[10]=(1-(u+f))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let a=_t.set(i[0],i[1],i[2]).length();const r=_t.set(i[4],i[5],i[6]).length(),s=_t.set(i[8],i[9],i[10]).length();this.determinant()<0&&(a=-a),t.x=i[12],t.y=i[13],t.z=i[14],Mt.copy(this);const o=1/a,c=1/r,l=1/s;return Mt.elements[0]*=o,Mt.elements[1]*=o,Mt.elements[2]*=o,Mt.elements[4]*=c,Mt.elements[5]*=c,Mt.elements[6]*=c,Mt.elements[8]*=l,Mt.elements[9]*=l,Mt.elements[10]*=l,e.setFromRotationMatrix(Mt),n.x=a,n.y=r,n.z=s,this}makePerspective(t,e,n,i,a,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*a/(e-t),c=2*a/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(r+a)/(r-a),d=-2*r*a/(r-a);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,a,r){const s=this.elements,o=1/(e-t),c=1/(n-i),l=1/(r-a),h=(e+t)*o,u=(n+i)*c,d=(r+a)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}yt.prototype.isMatrix4=!0;const _t=new U,Mt=new yt,wt=new U(0,0,0),bt=new U(1,1,1),St=new U,Tt=new U,Et=new U,At=new yt,Lt=new F;class Ct{constructor(t=0,e=0,n=0,i=Ct.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=P.clamp,a=t.elements,r=a[0],s=a[4],o=a[8],c=a[1],l=a[5],h=a[9],u=a[2],d=a[6],p=a[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return At.makeRotationFromQuaternion(t),this.setFromRotationMatrix(At,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Lt.setFromEuler(this),this.setFromQuaternion(Lt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new U(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Ct.prototype.isEuler=!0,Ct.DefaultOrder="XYZ",Ct.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Rt{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Pt=0;const Dt=new U,It=new F,Nt=new yt,Ot=new U,zt=new U,qt=new U,Ht=new F,Bt=new U(1,0,0),Gt=new U(0,1,0),Ft=new U(0,0,1),Ut={type:"added"},kt={type:"removed"};function Vt(){Object.defineProperty(this,"id",{value:Pt++}),this.uuid=P.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Vt.DefaultUp.clone();const t=new U,e=new Ct,n=new F,i=new U(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new yt},normalMatrix:{value:new I}}),this.matrix=new yt,this.matrixWorld=new yt,this.matrixAutoUpdate=Vt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Rt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Vt.DefaultUp=new U(0,1,0),Vt.DefaultMatrixAutoUpdate=!0,Vt.prototype=Object.assign(Object.create(L.prototype),{constructor:Vt,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return It.setFromAxisAngle(t,e),this.quaternion.multiply(It),this},rotateOnWorldAxis:function(t,e){return It.setFromAxisAngle(t,e),this.quaternion.premultiply(It),this},rotateX:function(t){return this.rotateOnAxis(Bt,t)},rotateY:function(t){return this.rotateOnAxis(Gt,t)},rotateZ:function(t){return this.rotateOnAxis(Ft,t)},translateOnAxis:function(t,e){return Dt.copy(t).applyQuaternion(this.quaternion),this.position.add(Dt.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Bt,t)},translateY:function(t){return this.translateOnAxis(Gt,t)},translateZ:function(t){return this.translateOnAxis(Ft,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Nt.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?Ot.copy(t):Ot.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),zt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Nt.lookAt(zt,Ot,this.up):Nt.lookAt(Ot,zt,this.up),this.quaternion.setFromRotationMatrix(Nt),i&&(Nt.extractRotation(i.matrixWorld),It.setFromRotationMatrix(Nt),this.quaternion.premultiply(It.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Ut)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(kt)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(kt)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),Nt.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Nt.multiply(t.parent.matrixWorld)),t.applyMatrix4(Nt),this.add(t),t.updateWorldMatrix(!1,!0),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new U),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new F),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zt,t,qt),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new U),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zt,Ht,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new U),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function a(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=a(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];a(t.shapes,i)}else a(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(a(t.materials,this.material[n]));i.material=e}else i.material=a(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(a(t.animations,n))}}if(e){const e=r(t.geometries),i=r(t.materials),a=r(t.textures),s=r(t.images),o=r(t.shapes),c=r(t.skeletons),l=r(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),a.length>0&&(n.textures=a),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=i,n;function r(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const Wt=new U,Zt=new U,jt=new I;class Xt{constructor(t=new U(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Wt.subVectors(n,e).cross(Zt.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new U),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new U);const n=t.delta(Wt),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const a=-(t.start.dot(this.normal)+this.constant)/i;return a<0||a>1?null:e.copy(n).multiplyScalar(a).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new U),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||jt.getNormalMatrix(t),i=this.coplanarPoint(Wt).applyMatrix4(t),a=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(a),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Xt.prototype.isPlane=!0;const Yt=new U,Jt=new U,Qt=new U,Kt=new U,$t=new U,te=new U,ee=new U,ne=new U,ie=new U,ae=new U;class re{constructor(t=new U,e=new U,n=new U){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new U),i.subVectors(n,e),Yt.subVectors(t,e),i.cross(Yt);const a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}static getBarycoord(t,e,n,i,a){Yt.subVectors(i,e),Jt.subVectors(n,e),Qt.subVectors(t,e);const r=Yt.dot(Yt),s=Yt.dot(Jt),o=Yt.dot(Qt),c=Jt.dot(Jt),l=Jt.dot(Qt),h=r*c-s*s;if(void 0===a&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),a=new U),0===h)return a.set(-2,-1,-1);const u=1/h,d=(c*o-s*l)*u,p=(r*l-s*o)*u;return a.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Kt),Kt.x>=0&&Kt.y>=0&&Kt.x+Kt.y<=1}static getUV(t,e,n,i,a,r,s,o){return this.getBarycoord(t,e,n,i,Kt),o.set(0,0),o.addScaledVector(a,Kt.x),o.addScaledVector(r,Kt.y),o.addScaledVector(s,Kt.z),o}static isFrontFacing(t,e,n,i){return Yt.subVectors(n,e),Jt.subVectors(t,e),Yt.cross(Jt).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Yt.subVectors(this.c,this.b),Jt.subVectors(this.a,this.b),.5*Yt.cross(Jt).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new U),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return re.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Xt),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return re.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,a){return re.getUV(t,this.a,this.b,this.c,e,n,i,a)}containsPoint(t){return re.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return re.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new U);const n=this.a,i=this.b,a=this.c;let r,s;$t.subVectors(i,n),te.subVectors(a,n),ne.subVectors(t,n);const o=$t.dot(ne),c=te.dot(ne);if(o<=0&&c<=0)return e.copy(n);ie.subVectors(t,i);const l=$t.dot(ie),h=te.dot(ie);if(l>=0&&h<=l)return e.copy(i);const u=o*h-l*c;if(u<=0&&o>=0&&l<=0)return r=o/(o-l),e.copy(n).addScaledVector($t,r);ae.subVectors(t,a);const d=$t.dot(ae),p=te.dot(ae);if(p>=0&&d<=p)return e.copy(a);const f=d*c-o*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),e.copy(n).addScaledVector(te,s);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return ee.subVectors(a,i),s=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(ee,s);const g=1/(m+f+u);return r=f*g,s=u*g,e.copy(n).addScaledVector($t,r).addScaledVector(te,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let se=0;function oe(){Object.defineProperty(this,"id",{value:se++}),this.uuid=P.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=t,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=S,this.stencilZFail=S,this.stencilZPass=S,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}oe.prototype=Object.assign(Object.create(L.prototype),{constructor:oe,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),a=i(t.images);e.length>0&&(n.textures=e),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(oe.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const ce={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},le={h:0,s:0,l:0},he={h:0,s:0,l:0};function ue(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function de(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function pe(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class fe{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=P.euclideanModulo(t,1),e=P.clamp(e,0,1),n=P.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,a=2*n-i;this.r=ue(a,i,t+1/3),this.g=ue(a,i,t),this.b=ue(a,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,a=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,a)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=ce[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=de(t.r),this.g=de(t.g),this.b=de(t.b),this}copyLinearToSRGB(t){return this.r=pe(t.r),this.g=pe(t.g),this.b=pe(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,a=Math.max(e,n,i),r=Math.min(e,n,i);let s,o;const c=(r+a)/2;if(r===a)s=0,o=0;else{const t=a-r;switch(o=c<=.5?t/(a+r):t/(2-a-r),a){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=o,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(le),le.h+=t,le.s+=e,le.l+=n,this.setHSL(le.h,le.s,le.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(le),t.getHSL(he);const n=P.lerp(le.h,he.h,e),i=P.lerp(le.s,he.s,e),a=P.lerp(le.l,he.l,e);return this.setHSL(n,i,a),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}fe.NAMES=ce,fe.prototype.isColor=!0,fe.prototype.r=1,fe.prototype.g=1,fe.prototype.b=1;class me extends oe{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}me.prototype.isMeshBasicMaterial=!0;const ge=new U,ve=new D;function xe(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=T,this.updateRange={offset:0,count:-1},this.version=0}function ye(t,e,n){xe.call(this,new Int8Array(t),e,n)}function _e(t,e,n){xe.call(this,new Uint8Array(t),e,n)}function Me(t,e,n){xe.call(this,new Uint8ClampedArray(t),e,n)}function we(t,e,n){xe.call(this,new Int16Array(t),e,n)}function be(t,e,n){xe.call(this,new Uint16Array(t),e,n)}function Se(t,e,n){xe.call(this,new Int32Array(t),e,n)}function Te(t,e,n){xe.call(this,new Uint32Array(t),e,n)}function Ee(t,e,n){xe.call(this,new Uint16Array(t),e,n)}function Ae(t,e,n){xe.call(this,new Float32Array(t),e,n)}function Le(t,e,n){xe.call(this,new Float64Array(t),e,n)}function Ce(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty(xe.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(xe.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,a=this.itemSize;i<a;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new fe),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new D),e[n++]=a.x,e[n++]=a.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new U),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,a=t.length;i<a;i++){let a=t[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new B),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)ve.fromBufferAttribute(this,e),ve.applyMatrix3(t),this.setXY(e,ve.x,ve.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ge.fromBufferAttribute(this,e),ge.applyMatrix3(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)ge.x=this.getX(e),ge.y=this.getY(e),ge.z=this.getZ(e),ge.applyMatrix4(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)ge.x=this.getX(e),ge.y=this.getY(e),ge.z=this.getZ(e),ge.applyNormalMatrix(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)ge.x=this.getX(e),ge.y=this.getY(e),ge.z=this.getZ(e),ge.transformDirection(t),this.setXYZ(e,ge.x,ge.y,ge.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,a){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=a,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==T&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}),ye.prototype=Object.create(xe.prototype),ye.prototype.constructor=ye,_e.prototype=Object.create(xe.prototype),_e.prototype.constructor=_e,Me.prototype=Object.create(xe.prototype),Me.prototype.constructor=Me,we.prototype=Object.create(xe.prototype),we.prototype.constructor=we,be.prototype=Object.create(xe.prototype),be.prototype.constructor=be,Se.prototype=Object.create(xe.prototype),Se.prototype.constructor=Se,Te.prototype=Object.create(xe.prototype),Te.prototype.constructor=Te,Ee.prototype=Object.create(xe.prototype),Ee.prototype.constructor=Ee,Ee.prototype.isFloat16BufferAttribute=!0,Ae.prototype=Object.create(xe.prototype),Ae.prototype.constructor=Ae,Le.prototype=Object.create(xe.prototype),Le.prototype.constructor=Le,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let Re=0;const Pe=new yt,De=new Vt,Ie=new U,Ne=new W,Oe=new W,ze=new U;function qe(){Object.defineProperty(this,"id",{value:Re++}),this.uuid=P.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}qe.prototype=Object.assign(Object.create(L.prototype),{constructor:qe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(Ce(t)>65535?Te:be)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new I).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Pe.makeRotationX(t),this.applyMatrix4(Pe),this},rotateY:function(t){return Pe.makeRotationY(t),this.applyMatrix4(Pe),this},rotateZ:function(t){return Pe.makeRotationZ(t),this.applyMatrix4(Pe),this},translate:function(t,e,n){return Pe.makeTranslation(t,e,n),this.applyMatrix4(Pe),this},scale:function(t,e,n){return Pe.makeScale(t,e,n),this.applyMatrix4(Pe),this},lookAt:function(t){return De.lookAt(t),De.updateMatrix(),this.applyMatrix4(De.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ie).negate(),this.translate(Ie.x,Ie.y,Ie.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Ae(e,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new W);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ne.setFromBufferAttribute(n),this.morphTargetsRelative?(ze.addVectors(this.boundingBox.min,Ne.min),this.boundingBox.expandByPoint(ze),ze.addVectors(this.boundingBox.max,Ne.max),this.boundingBox.expandByPoint(ze)):(this.boundingBox.expandByPoint(Ne.min),this.boundingBox.expandByPoint(Ne.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ht);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new U,1/0);if(t){const n=this.boundingSphere.center;if(Ne.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Oe.setFromBufferAttribute(n),this.morphTargetsRelative?(ze.addVectors(Ne.min,Oe.min),Ne.expandByPoint(ze),ze.addVectors(Ne.max,Oe.max),Ne.expandByPoint(ze)):(Ne.expandByPoint(Oe.min),Ne.expandByPoint(Oe.max))}Ne.getCenter(n);let i=0;for(let e=0,a=t.count;e<a;e++)ze.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(ze));if(e)for(let a=0,r=e.length;a<r;a++){const r=e[a],s=this.morphTargetsRelative;for(let e=0,a=r.count;e<a;e++)ze.fromBufferAttribute(r,e),s&&(Ie.fromBufferAttribute(t,e),ze.add(Ie)),i=Math.max(i,n.distanceToSquared(ze))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,a=e.normal.array,r=e.uv.array,s=i.length/3;void 0===e.tangent&&this.setAttribute("tangent",new xe(new Float32Array(4*s),4));const o=e.tangent.array,c=[],l=[];for(let t=0;t<s;t++)c[t]=new U,l[t]=new U;const h=new U,u=new U,d=new U,p=new D,f=new D,m=new D,g=new U,v=new U;function x(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(r,2*t),f.fromArray(r,2*e),m.fromArray(r,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const a=1/(f.x*m.y-m.x*f.y);isFinite(a)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(a),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(a),c[t].add(g),c[e].add(g),c[n].add(g),l[t].add(v),l[e].add(v),l[n].add(v))}let y=this.groups;0===y.length&&(y=[{start:0,count:n.length}]);for(let t=0,e=y.length;t<e;++t){const e=y[t],i=e.start;for(let t=i,a=i+e.count;t<a;t+=3)x(n[t+0],n[t+1],n[t+2])}const _=new U,M=new U,w=new U,b=new U;function S(t){w.fromArray(a,3*t),b.copy(w);const e=c[t];_.copy(e),_.sub(w.multiplyScalar(w.dot(e))).normalize(),M.crossVectors(b,e);const n=M.dot(l[t])<0?-1:1;o[4*t]=_.x,o[4*t+1]=_.y,o[4*t+2]=_.z,o[4*t+3]=n}for(let t=0,e=y.length;t<e;++t){const e=y[t],i=e.start;for(let t=i,a=i+e.count;t<a;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new xe(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new U,a=new U,r=new U,s=new U,o=new U,c=new U,l=new U,h=new U;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),a.fromBufferAttribute(e,p),r.fromBufferAttribute(e,f),l.subVectors(r,a),h.subVectors(i,a),l.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(l),o.add(l),c.add(l),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),a.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),l.subVectors(r,a),h.subVectors(i,a),l.cross(h),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const a=n[i].array,r=t.attributes[i],s=r.array,o=r.itemSize*e,c=Math.min(s.length,a.length-o);for(let t=0,e=o;t<c;t++,e++)a[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ze.fromBufferAttribute(t,e),ze.normalize(),t.setXYZ(e,ze.x,ze.y,ze.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,a=t.normalized,r=new n.constructor(e.length*i);let s=0,o=0;for(let t=0,a=e.length;t<a;t++){s=e[t]*i;for(let t=0;t<i;t++)r[o++]=n[s++]}return new xe(r,i,a)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new qe,n=this.index.array,i=this.attributes;for(const a in i){const r=t(i[a],n);e.setAttribute(a,r)}const a=this.morphAttributes;for(const i in a){const r=[],s=a[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);r.push(i)}e.morphAttributes[i]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,n=r.length;t<n;t++){const n=r[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let a=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],r=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];r.push(i.toJSON(t.data))}r.length>0&&(i[e]=r,a=!0)}a&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new qe).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const a=t.morphAttributes;for(const t in a){const n=[],i=a[t];for(let t=0,a=i.length;t<a;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const He=new yt,Be=new xt,Ge=new ht,Fe=new U,Ue=new U,ke=new U,Ve=new U,We=new U,Ze=new U,je=new U,Xe=new U,Ye=new U,Je=new D,Qe=new D,Ke=new D,$e=new U,tn=new U;function en(t=new qe,e=new me){Vt.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function nn(t,e,n,i,a,r,s,o,c,l,h,u){Fe.fromBufferAttribute(a,l),Ue.fromBufferAttribute(a,h),ke.fromBufferAttribute(a,u);const d=t.morphTargetInfluences;if(e.morphTargets&&r&&d){je.set(0,0,0),Xe.set(0,0,0),Ye.set(0,0,0);for(let t=0,e=r.length;t<e;t++){const e=d[t],n=r[t];0!==e&&(Ve.fromBufferAttribute(n,l),We.fromBufferAttribute(n,h),Ze.fromBufferAttribute(n,u),s?(je.addScaledVector(Ve,e),Xe.addScaledVector(We,e),Ye.addScaledVector(Ze,e)):(je.addScaledVector(Ve.sub(Fe),e),Xe.addScaledVector(We.sub(Ue),e),Ye.addScaledVector(Ze.sub(ke),e)))}Fe.add(je),Ue.add(Xe),ke.add(Ye)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(l,Fe),t.boneTransform(h,Ue),t.boneTransform(u,ke));const p=function(t,e,n,i,a,r,s,o){let c;if(c=1===e.side?i.intersectTriangle(s,r,a,!0,o):i.intersectTriangle(a,r,s,2!==e.side,o),null===c)return null;tn.copy(o),tn.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(tn);return l<n.near||l>n.far?null:{distance:l,point:tn.clone(),object:t}}(t,e,n,i,Fe,Ue,ke,$e);if(p){o&&(Je.fromBufferAttribute(o,l),Qe.fromBufferAttribute(o,h),Ke.fromBufferAttribute(o,u),p.uv=re.getUV($e,Fe,Ue,ke,Je,Qe,Ke,new D)),c&&(Je.fromBufferAttribute(c,l),Qe.fromBufferAttribute(c,h),Ke.fromBufferAttribute(c,u),p.uv2=re.getUV($e,Fe,Ue,ke,Je,Qe,Ke,new D));const t={a:l,b:h,c:u,normal:new U,materialIndex:0};re.getNormal(Fe,Ue,ke,t.normal),p.face=t}return p}en.prototype=Object.assign(Object.create(Vt.prototype),{constructor:en,isMesh:!0,copy:function(t){return Vt.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,a=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ge.copy(n.boundingSphere),Ge.applyMatrix4(a),!1===t.ray.intersectsSphere(Ge))return;if(He.copy(a).invert(),Be.copy(t.ray).applyMatrix4(He),null!==n.boundingBox&&!1===Be.intersectsBox(n.boundingBox))return;let r;if(n.isBufferGeometry){const a=n.index,s=n.attributes.position,o=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==a)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=a.getX(n),u=a.getX(n+1),d=a.getX(n+2);r=nn(this,f,t,Be,s,o,c,l,h,i,u,d),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=p.materialIndex,e.push(r))}}else for(let n=Math.max(0,d.start),u=Math.min(a.count,d.start+d.count);n<u;n+=3){const u=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);r=nn(this,i,t,Be,s,o,c,l,h,u,d,p),r&&(r.faceIndex=Math.floor(n/3),e.push(r))}else if(void 0!==s)if(Array.isArray(i))for(let n=0,a=u.length;n<a;n++){const a=u[n],p=i[a.materialIndex];for(let n=Math.max(a.start,d.start),i=Math.min(a.start+a.count,d.start+d.count);n<i;n+=3)r=nn(this,p,t,Be,s,o,c,l,h,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=a.materialIndex,e.push(r))}else for(let n=Math.max(0,d.start),a=Math.min(s.count,d.start+d.count);n<a;n+=3)r=nn(this,i,t,Be,s,o,c,l,h,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),e.push(r))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class an extends qe{constructor(t=1,e=1,n=1,i=1,a=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:a,depthSegments:r};const s=this;i=Math.floor(i),a=Math.floor(a),r=Math.floor(r);const o=[],c=[],l=[],h=[];let u=0,d=0;function p(t,e,n,i,a,r,p,f,m,g,v){const x=r/m,y=p/g,_=r/2,M=p/2,w=f/2,b=m+1,S=g+1;let T=0,E=0;const A=new U;for(let r=0;r<S;r++){const s=r*y-M;for(let o=0;o<b;o++){const u=o*x-_;A[t]=u*i,A[e]=s*a,A[n]=w,c.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,l.push(A.x,A.y,A.z),h.push(o/m),h.push(1-r/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+b*t,i=u+e+b*(t+1),a=u+(e+1)+b*(t+1),r=u+(e+1)+b*t;o.push(n,i,r),o.push(i,a,r),E+=6}s.addGroup(d,E,v),d+=E,u+=T}p("z","y","x",-1,-1,n,e,t,r,a,0),p("z","y","x",1,-1,n,e,-t,r,a,1),p("x","z","y",1,1,t,n,e,i,r,2),p("x","z","y",1,-1,t,n,-e,i,r,3),p("x","y","z",1,-1,t,e,n,i,a,4),p("x","y","z",-1,-1,t,e,-n,i,a,5),this.setIndex(o),this.setAttribute("position",new Ae(c,3)),this.setAttribute("normal",new Ae(l,3)),this.setAttribute("uv",new Ae(h,2))}}function rn(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const a=t[n][i];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?e[n][i]=a.clone():Array.isArray(a)?e[n][i]=a.slice():e[n][i]=a}}return e}function sn(t){const e={};for(let n=0;n<t.length;n++){const i=rn(t[n]);for(const t in i)e[t]=i[t]}return e}const on={clone:rn,merge:sn};function cn(t){oe.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function ln(){Vt.call(this),this.type="Camera",this.matrixWorldInverse=new yt,this.projectionMatrix=new yt,this.projectionMatrixInverse=new yt}function hn(t=50,e=1,n=.1,i=2e3){ln.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}cn.prototype=Object.create(oe.prototype),cn.prototype.constructor=cn,cn.prototype.isShaderMaterial=!0,cn.prototype.copy=function(t){return oe.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=rn(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},cn.prototype.toJSON=function(t){const e=oe.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},ln.prototype=Object.assign(Object.create(Vt.prototype),{constructor:ln,isCamera:!0,copy:function(t,e){return Vt.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new U),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Vt.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){Vt.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),hn.prototype=Object.assign(Object.create(ln.prototype),{constructor:hn,isPerspectiveCamera:!0,copy:function(t,e){return ln.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*P.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*P.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*P.RAD2DEG*Math.atan(Math.tan(.5*P.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,a,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*P.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,a=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,s=r.fullHeight;a+=r.offsetX*i/t,e-=r.offsetY*n/s,i*=r.width/t,n*=r.height/s}const s=this.filmOffset;0!==s&&(a+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Vt.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const un=90;class dn extends Vt{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new hn(un,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new U(1,0,0)),this.add(i);const a=new hn(un,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new U(-1,0,0)),this.add(a);const r=new hn(un,1,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new U(0,1,0)),this.add(r);const s=new hn(un,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new U(0,-1,0)),this.add(s);const o=new hn(un,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new U(0,0,1)),this.add(o);const c=new hn(un,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new U(0,0,-1)),this.add(c)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,a,r,s,o,c]=this.children,l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,a),t.setRenderTarget(n,2),t.render(e,r),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l}}class pn extends q{constructor(t,e,n,i,a,r,s,o,c,l){super(t=void 0!==t?t:[],e=void 0!==e?e:301,n,i,a,r,s=void 0!==s?s:p,o,c,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}pn.prototype.isCubeTexture=!0;class fn extends G{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new pn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:s,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=f,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",a="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new an(5,5,5),c=new cn({name:"CubemapFromEquirect",uniforms:rn(n),vertexShader:i,fragmentShader:a,side:1,blending:0});c.uniforms.tEquirect.value=e;const l=new en(r,c),h=e.minFilter;return e.minFilter===o&&(e.minFilter=s),new dn(1,10,this).update(t,l),e.minFilter=h,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,i){const a=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,i);t.setRenderTarget(a)}}fn.prototype.isWebGLCubeRenderTarget=!0;class mn extends q{constructor(t,e,n,i,a,s,o,c,l,h,u,d){super(null,s,o,c,l,h,i,a,u,d),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:r,this.minFilter=void 0!==h?h:r,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}mn.prototype.isDataTexture=!0;const gn=new ht,vn=new U;class xn{constructor(t=new Xt,e=new Xt,n=new Xt,i=new Xt,a=new Xt,r=new Xt){this.planes=[t,e,n,i,a,r]}set(t,e,n,i,a,r){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(a),s[5].copy(r),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],a=n[1],r=n[2],s=n[3],o=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],x=n[15];return e[0].setComponents(s-i,h-o,f-u,x-m).normalize(),e[1].setComponents(s+i,h+o,f+u,x+m).normalize(),e[2].setComponents(s+a,h+c,f+d,x+g).normalize(),e[3].setComponents(s-a,h-c,f-d,x-g).normalize(),e[4].setComponents(s-r,h-l,f-p,x-v).normalize(),e[5].setComponents(s+r,h+l,f+p,x+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),gn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(gn)}intersectsSprite(t){return gn.center.set(0,0,0),gn.radius=.7071067811865476,gn.applyMatrix4(t.matrixWorld),this.intersectsSphere(gn)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(vn.x=i.normal.x>0?t.max.x:t.min.x,vn.y=i.normal.y>0?t.max.y:t.min.y,vn.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(vn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function yn(){let t=null,e=!1,n=null,i=null;function a(e,r){n(e,r),i=t.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(a),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function _n(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,a){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const r=i.get(e);void 0===r?i.set(e,function(e,i){const a=e.array,r=e.usage,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,a,r),e.onUploadCallback();let o=5126;return a instanceof Float32Array?o=5126:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:a instanceof Int16Array?o=5122:a instanceof Uint32Array?o=5125:a instanceof Int32Array?o=5124:a instanceof Int8Array?o=5120:a instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:a.BYTES_PER_ELEMENT,version:e.version}}(e,a)):r.version<e.version&&(function(e,i,a){const r=i.array,s=i.updateRange;t.bindBuffer(a,e),-1===s.count?t.bufferSubData(a,0,r):(n?t.bufferSubData(a,s.offset*r.BYTES_PER_ELEMENT,r,s.offset,s.count):t.bufferSubData(a,s.offset*r.BYTES_PER_ELEMENT,r.subarray(s.offset,s.offset+s.count)),s.count=-1)}(r.buffer,e,a),r.version=e.version)}}}class Mn extends qe{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const a=t/2,r=e/2,s=Math.floor(n),o=Math.floor(i),c=s+1,l=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-r;for(let n=0;n<c;n++){const i=n*h-a;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+c*t,i=e+c*(t+1),a=e+1+c*(t+1),r=e+1+c*t;d.push(n,i,r),d.push(i,a,r)}this.setIndex(d),this.setAttribute("position",new Ae(p,3)),this.setAttribute("normal",new Ae(f,3)),this.setAttribute("uv",new Ae(m,2))}}const wn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},bn={common:{diffuse:{value:new fe(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new I},uv2Transform:{value:new I},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new D(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fe(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new I}},sprite:{diffuse:{value:new fe(15658734)},opacity:{value:1},center:{value:new D(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new I}}},Sn={basic:{uniforms:sn([bn.common,bn.specularmap,bn.envmap,bn.aomap,bn.lightmap,bn.fog]),vertexShader:wn.meshbasic_vert,fragmentShader:wn.meshbasic_frag},lambert:{uniforms:sn([bn.common,bn.specularmap,bn.envmap,bn.aomap,bn.lightmap,bn.emissivemap,bn.fog,bn.lights,{emissive:{value:new fe(0)}}]),vertexShader:wn.meshlambert_vert,fragmentShader:wn.meshlambert_frag},phong:{uniforms:sn([bn.common,bn.specularmap,bn.envmap,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.fog,bn.lights,{emissive:{value:new fe(0)},specular:{value:new fe(1118481)},shininess:{value:30}}]),vertexShader:wn.meshphong_vert,fragmentShader:wn.meshphong_frag},standard:{uniforms:sn([bn.common,bn.envmap,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.roughnessmap,bn.metalnessmap,bn.fog,bn.lights,{emissive:{value:new fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:wn.meshphysical_vert,fragmentShader:wn.meshphysical_frag},toon:{uniforms:sn([bn.common,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.gradientmap,bn.fog,bn.lights,{emissive:{value:new fe(0)}}]),vertexShader:wn.meshtoon_vert,fragmentShader:wn.meshtoon_frag},matcap:{uniforms:sn([bn.common,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.fog,{matcap:{value:null}}]),vertexShader:wn.meshmatcap_vert,fragmentShader:wn.meshmatcap_frag},points:{uniforms:sn([bn.points,bn.fog]),vertexShader:wn.points_vert,fragmentShader:wn.points_frag},dashed:{uniforms:sn([bn.common,bn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:wn.linedashed_vert,fragmentShader:wn.linedashed_frag},depth:{uniforms:sn([bn.common,bn.displacementmap]),vertexShader:wn.depth_vert,fragmentShader:wn.depth_frag},normal:{uniforms:sn([bn.common,bn.bumpmap,bn.normalmap,bn.displacementmap,{opacity:{value:1}}]),vertexShader:wn.normal_vert,fragmentShader:wn.normal_frag},sprite:{uniforms:sn([bn.sprite,bn.fog]),vertexShader:wn.sprite_vert,fragmentShader:wn.sprite_frag},background:{uniforms:{uvTransform:{value:new I},t2D:{value:null}},vertexShader:wn.background_vert,fragmentShader:wn.background_frag},cube:{uniforms:sn([bn.envmap,{opacity:{value:1}}]),vertexShader:wn.cube_vert,fragmentShader:wn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:wn.equirect_vert,fragmentShader:wn.equirect_frag},distanceRGBA:{uniforms:sn([bn.common,bn.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:wn.distanceRGBA_vert,fragmentShader:wn.distanceRGBA_frag},shadow:{uniforms:sn([bn.lights,bn.fog,{color:{value:new fe(0)},opacity:{value:1}}]),vertexShader:wn.shadow_vert,fragmentShader:wn.shadow_frag}};function Tn(t,e,n,i,a){const r=new fe(0);let s,o,c=0,l=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,a)}return{getClearColor:function(){return r},setClearColor:function(t,e=1){r.set(t),c=e,d(r,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,d(r,c)},render:function(n,a,p,f){let m=!0===a.isScene?a.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?d(r,c):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||306===m.mapping)?(void 0===o&&(o=new en(new an(1,1,1),new cn({name:"BackgroundCubeMaterial",uniforms:rn(Sn.cube.uniforms),vertexShader:Sn.cube.vertexShader,fragmentShader:Sn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),o.material.uniforms.envMap.value=m,o.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,l===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new en(new Mn(2,2),new cn({name:"BackgroundMaterial",uniforms:rn(Sn.background.uniforms),vertexShader:Sn.background.vertexShader,fragmentShader:Sn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version&&u===t.toneMapping||(s.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function En(t,e,n,i){const a=t.getParameter(34921),r=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==r,o={},c=d(null);let l=c;function h(e){return i.isWebGL2?t.bindVertexArray(e):r.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):r.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<a;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,a){const r=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;r[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==a&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,a),o[n]=a)}function g(){const e=l.newAttributes,n=l.enabledAttributes;for(let i=0,a=n.length;i<a;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function v(e,n,a,r,s,o){!0!==i.isWebGL2||5124!==a&&5125!==a?t.vertexAttribPointer(e,n,a,r,s,o):t.vertexAttribIPointer(e,n,a,s,o)}function x(){y(),l!==c&&(l=c,h(l.object))}function y(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(a,c,u,x,y){let _=!1;if(s){const e=function(e,n,a){const s=!0===a.wireframe;let c=o[e.id];void 0===c&&(c={},o[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let h=l[s];return void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():r.createVertexArrayOES()),l[s]=h),h}(x,u,c);l!==e&&(l=e,h(l.object)),_=function(t,e){const n=l.attributes,i=t.attributes;let a=0;for(const t in i){const e=n[t],r=i[t];if(void 0===e)return!0;if(e.attribute!==r)return!0;if(e.data!==r.data)return!0;a++}return l.attributesNum!==a||l.index!==e}(x,y),_&&function(t,e){const n={},i=t.attributes;let a=0;for(const t in i){const e=i[t],r={};r.attribute=e,e.data&&(r.data=e.data),n[t]=r,a++}l.attributes=n,l.attributesNum=a,l.index=e}(x,y)}else{const t=!0===c.wireframe;l.geometry===x.id&&l.program===u.id&&l.wireframe===t||(l.geometry=x.id,l.program=u.id,l.wireframe=t,_=!0)}!0===a.isInstancedMesh&&(_=!0),null!==y&&n.update(y,34963),_&&(function(a,r,s,o){if(!1===i.isWebGL2&&(a.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const c=o.attributes,l=s.getAttributes(),h=r.defaultAttributeValues;for(const e in l){const i=l[e];if(i>=0){const r=c[e];if(void 0!==r){const e=r.normalized,a=r.itemSize,s=n.get(r);if(void 0===s)continue;const c=s.buffer,l=s.type,h=s.bytesPerElement;if(r.isInterleavedBufferAttribute){const n=r.data,s=n.stride,u=r.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(34962,c),v(i,a,l,e,s*h,u*h)}else r.isInstancedBufferAttribute?(m(i,r.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=r.meshPerAttribute*r.count)):f(i),t.bindBuffer(34962,c),v(i,a,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(a.instanceMatrix);if(void 0===e)continue;const r=e.buffer,s=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(34962,r),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(a.instanceColor);if(void 0===e)continue;const r=e.buffer,s=e.type;m(i,1),t.bindBuffer(34962,r),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(a,c,u,x),null!==y&&t.bindBuffer(34963,n.get(y).buffer))},reset:x,resetDefaultState:y,dispose:function(){x();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function An(t,e,n,i){const a=i.isWebGL2;let r;this.setMode=function(t){r=t},this.render=function(e,i){t.drawArrays(r,e,i),n.update(i,r,1)},this.renderInstances=function(i,s,o){if(0===o)return;let c,l;if(a)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](r,i,s,o),n.update(s,r,o)}}function Ln(t,e,n){let i;function a(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),v=h>0,x=r||e.has("OES_texture_float");return{isWebGL2:r,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:a,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:r?t.getParameter(36183):0}}function Cn(t){const e=this;let n=null,i=0,a=!1,r=!1;const s=new Xt,o=new I,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,a){const r=null!==t?t.length:0;let l=null;if(0!==r){if(l=c.value,!0!==a||null===l){const e=i+4*r,a=n.matrixWorldInverse;o.getNormalMatrix(a),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=i;e!==r;++e,n+=4)s.copy(t[e]).applyMatrix4(a,o),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,r){const s=0!==t.length||e||0!==i||a;return a=e,n=h(t,r,0),i=t.length,s},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,l()},this.setState=function(e,s,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!a||null===u||0===u.length||r&&!p)r?h(null):l();else{const t=r?0:i,e=4*t;let a=f.clippingState||null;c.value=a,a=h(u,s,e,o);for(let t=0;t!==e;++t)a[t]=n[t];f.clippingState=a,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Rn(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const a=e.get(n);void 0!==a&&(e.delete(n),a.dispose())}return{get:function(a){if(a&&a.isTexture){const r=a.mapping;if(303===r||304===r){if(e.has(a))return n(e.get(a).texture,a.mapping);{const r=a.image;if(r&&r.height>0){const s=t.getRenderTarget(),o=new fn(r.height/2);return o.fromEquirectangularTexture(t,a),e.set(a,o),t.setRenderTarget(s),a.addEventListener("dispose",i),n(o.texture,a.mapping)}return null}}}return a},dispose:function(){e=new WeakMap}}}function Pn(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Dn(t,e,n,i){const a={},r=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",s),delete a[o.id];const c=r.get(o);c&&(e.remove(c),r.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,a=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],a=t[e+1],r=t[e+2];n.push(i,a,a,r,r,i)}}else{const t=a.array;s=a.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,a=e+2;n.push(t,i,i,a,a,t)}}const o=new(Ce(n)>65535?Te:be)(n,1);o.version=s;const c=r.get(t);c&&e.remove(c),r.set(t,o)}return{get:function(t,e){return!0===a[e.id]||(e.addEventListener("dispose",s),a[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return r.get(t)}}}function In(t,e,n,i){const a=i.isWebGL2;let r,s,o;this.setMode=function(t){r=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(r,i,s,e*o),n.update(i,r,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(a)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](r,c,s,i*o,l),n.update(c,r,l)}}function Nn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function On(t,e){return t[0]-e[0]}function zn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function qn(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(a,r,s,o){const c=a.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[r.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[r.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(zn);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(On);const u=s.morphTargets&&r.morphAttributes.position,d=s.morphNormals&&r.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],a=e[0],s=e[1];a!==Number.MAX_SAFE_INTEGER&&s?(u&&r.getAttribute("morphTarget"+t)!==u[a]&&r.setAttribute("morphTarget"+t,u[a]),d&&r.getAttribute("morphNormal"+t)!==d[a]&&r.setAttribute("morphNormal"+t,d[a]),n[t]=s,p+=s):(u&&!0===r.hasAttribute("morphTarget"+t)&&r.deleteAttribute("morphTarget"+t),d&&!0===r.hasAttribute("morphNormal"+t)&&r.deleteAttribute("morphNormal"+t),n[t]=0)}const f=r.morphTargetsRelative?1:1-p;o.getUniforms().setValue(t,"morphTargetBaseInfluence",f),o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function Hn(t,e,n,i){let a=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=i.render.frame,o=t.geometry,c=e.get(t,o);return a.get(c)!==s&&(e.update(c),a.set(c,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",r)&&t.addEventListener("dispose",r),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),c},dispose:function(){a=new WeakMap}}}Sn.physical={uniforms:sn([Sn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new D(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new fe(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:wn.meshphysical_vert,fragmentShader:wn.meshphysical_frag};class Bn extends q{constructor(t=null,e=1,n=1,a=1){super(null),this.image={data:t,width:e,height:n,depth:a},this.magFilter=r,this.minFilter=r,this.wrapR=i,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Bn.prototype.isDataTexture2DArray=!0;class Gn extends q{constructor(t=null,e=1,n=1,a=1){super(null),this.image={data:t,width:e,height:n,depth:a},this.magFilter=r,this.minFilter=r,this.wrapR=i,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Gn.prototype.isDataTexture3D=!0;const Fn=new q,Un=new Bn,kn=new Gn,Vn=new pn,Wn=[],Zn=[],jn=new Float32Array(16),Xn=new Float32Array(9),Yn=new Float32Array(4);function Jn(t,e,n){const i=t[0];if(i<=0||i>0)return t;const a=e*n;let r=Wn[a];if(void 0===r&&(r=new Float32Array(a),Wn[a]=r),0!==e){i.toArray(r,0);for(let i=1,a=0;i!==e;++i)a+=n,t[i].toArray(r,a)}return r}function Qn(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Kn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function $n(t,e){let n=Zn[e];void 0===n&&(n=new Int32Array(e),Zn[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function ti(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ei(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Qn(n,e))return;t.uniform2fv(this.addr,e),Kn(n,e)}}function ni(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Qn(n,e))return;t.uniform3fv(this.addr,e),Kn(n,e)}}function ii(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Qn(n,e))return;t.uniform4fv(this.addr,e),Kn(n,e)}}function ai(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Qn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Kn(n,e)}else{if(Qn(n,i))return;Yn.set(i),t.uniformMatrix2fv(this.addr,!1,Yn),Kn(n,i)}}function ri(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Qn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Kn(n,e)}else{if(Qn(n,i))return;Xn.set(i),t.uniformMatrix3fv(this.addr,!1,Xn),Kn(n,i)}}function si(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Qn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Kn(n,e)}else{if(Qn(n,i))return;jn.set(i),t.uniformMatrix4fv(this.addr,!1,jn),Kn(n,i)}}function oi(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ci(t,e){const n=this.cache;Qn(n,e)||(t.uniform2iv(this.addr,e),Kn(n,e))}function li(t,e){const n=this.cache;Qn(n,e)||(t.uniform3iv(this.addr,e),Kn(n,e))}function hi(t,e){const n=this.cache;Qn(n,e)||(t.uniform4iv(this.addr,e),Kn(n,e))}function ui(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function di(t,e){const n=this.cache;Qn(n,e)||(t.uniform2uiv(this.addr,e),Kn(n,e))}function pi(t,e){const n=this.cache;Qn(n,e)||(t.uniform3uiv(this.addr,e),Kn(n,e))}function fi(t,e){const n=this.cache;Qn(n,e)||(t.uniform4uiv(this.addr,e),Kn(n,e))}function mi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.safeSetTexture2D(e||Fn,a)}function gi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTexture3D(e||kn,a)}function vi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.safeSetTextureCube(e||Vn,a)}function xi(t,e,n){const i=this.cache,a=n.allocateTextureUnit();i[0]!==a&&(t.uniform1i(this.addr,a),i[0]=a),n.setTexture2DArray(e||Un,a)}function yi(t,e){t.uniform1fv(this.addr,e)}function _i(t,e){const n=Jn(e,this.size,2);t.uniform2fv(this.addr,n)}function Mi(t,e){const n=Jn(e,this.size,3);t.uniform3fv(this.addr,n)}function wi(t,e){const n=Jn(e,this.size,4);t.uniform4fv(this.addr,n)}function bi(t,e){const n=Jn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Si(t,e){const n=Jn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Ti(t,e){const n=Jn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ei(t,e){t.uniform1iv(this.addr,e)}function Ai(t,e){t.uniform2iv(this.addr,e)}function Li(t,e){t.uniform3iv(this.addr,e)}function Ci(t,e){t.uniform4iv(this.addr,e)}function Ri(t,e){t.uniform1uiv(this.addr,e)}function Pi(t,e){t.uniform2uiv(this.addr,e)}function Di(t,e){t.uniform3uiv(this.addr,e)}function Ii(t,e){t.uniform4uiv(this.addr,e)}function Ni(t,e,n){const i=e.length,a=$n(n,i);t.uniform1iv(this.addr,a);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||Fn,a[t])}function Oi(t,e,n){const i=e.length,a=$n(n,i);t.uniform1iv(this.addr,a);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Vn,a[t])}function zi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return ti;case 35664:return ei;case 35665:return ni;case 35666:return ii;case 35674:return ai;case 35675:return ri;case 35676:return si;case 5124:case 35670:return oi;case 35667:case 35671:return ci;case 35668:case 35672:return li;case 35669:case 35673:return hi;case 5125:return ui;case 36294:return di;case 36295:return pi;case 36296:return fi;case 35678:case 36198:case 36298:case 36306:case 35682:return mi;case 35679:case 36299:case 36307:return gi;case 35680:case 36300:case 36308:case 36293:return vi;case 36289:case 36303:case 36311:case 36292:return xi}}(e.type)}function qi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return yi;case 35664:return _i;case 35665:return Mi;case 35666:return wi;case 35674:return bi;case 35675:return Si;case 35676:return Ti;case 5124:case 35670:return Ei;case 35667:case 35671:return Ai;case 35668:case 35672:return Li;case 35669:case 35673:return Ci;case 5125:return Ri;case 36294:return Pi;case 36295:return Di;case 36296:return Ii;case 35678:case 36198:case 36298:case 36306:case 35682:return Ni;case 35680:case 36300:case 36308:case 36293:return Oi}}(e.type)}function Hi(t){this.id=t,this.seq=[],this.map={}}qi.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Kn(e,t)},Hi.prototype.setValue=function(t,e,n){const i=this.seq;for(let a=0,r=i.length;a!==r;++a){const r=i[a];r.setValue(t,e[r.id],n)}};const Bi=/(\w+)(\])?(\[|\.)?/g;function Gi(t,e){t.seq.push(e),t.map[e.id]=e}function Fi(t,e,n){const i=t.name,a=i.length;for(Bi.lastIndex=0;;){const r=Bi.exec(i),s=Bi.lastIndex;let o=r[1];const c="]"===r[2],l=r[3];if(c&&(o|=0),void 0===l||"["===l&&s+2===a){Gi(n,void 0===l?new zi(o,t,e):new qi(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Hi(o),Gi(n,t)),n=t}}}function Ui(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Fi(n,t.getUniformLocation(e,n.name),this)}}function ki(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}Ui.prototype.setValue=function(t,e,n,i){const a=this.map[e];void 0!==a&&a.setValue(t,n,i)},Ui.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},Ui.upload=function(t,e,n,i){for(let a=0,r=e.length;a!==r;++a){const r=e[a],s=n[r.id];!1!==s.needsUpdate&&r.setValue(t,s.value,i)}},Ui.seqWithValue=function(t,e){const n=[];for(let i=0,a=t.length;i!==a;++i){const a=t[i];a.id in e&&n.push(a)}return n};let Vi=0;function Wi(t){switch(t){case b:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Zi(t,e,n){const i=t.getShaderParameter(e,35713),a=t.getShaderInfoLog(e).trim();return i&&""===a?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+a+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function ji(t,e){const n=Wi(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Xi(t,e){const n=Wi(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Yi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ji(t){return""!==t}function Qi(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ki(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const $i=/^[ \t]*#include +<([\w\d./]+)>/gm;function ta(t){return t.replace($i,ea)}function ea(t,e){const n=wn[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return ta(n)}const na=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ia=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function aa(t){return t.replace(ia,sa).replace(na,ra)}function ra(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sa(0,e,n,i)}function sa(t,e,n,i){let a="";for(let t=parseInt(e);t<parseInt(n);t++)a+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return a}function oa(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ca(t,e,n,i){const a=t.getContext(),r=n.defines;let s=n.vertexShader,o=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ji).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(r),m=a.createProgram();let g,v,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Ji).join("\n"),g.length>0&&(g+="\n"),v=[p,f].filter(Ji).join("\n"),v.length>0&&(v+="\n")):(g=[oa(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ji).join("\n"),v=[p,oa(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?wn.tonemapping_pars_fragment:"",0!==n.toneMapping?Yi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",wn.encodings_pars_fragment,n.map?ji("mapTexelToLinear",n.mapEncoding):"",n.matcap?ji("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?ji("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?ji("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?ji("lightMapTexelToLinear",n.lightMapEncoding):"",Xi("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ji).join("\n")),s=ta(s),s=Qi(s,n),s=Ki(s,n),o=ta(o),o=Qi(o,n),o=Ki(o,n),s=aa(s),o=aa(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===A?"":"out highp vec4 pc_fragColor;",n.glslVersion===A?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const y=x+v+o,_=ki(a,35633,x+g+s),M=ki(a,35632,y);if(a.attachShader(m,_),a.attachShader(m,M),void 0!==n.index0AttributeName?a.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&a.bindAttribLocation(m,0,"position"),a.linkProgram(m),t.debug.checkShaderErrors){const t=a.getProgramInfoLog(m).trim(),e=a.getShaderInfoLog(_).trim(),n=a.getShaderInfoLog(M).trim();let i=!0,r=!0;if(!1===a.getProgramParameter(m,35714)){i=!1;const e=Zi(a,_,"vertex"),n=Zi(a,M,"fragment");console.error("THREE.WebGLProgram: shader error: ",a.getError(),"35715",a.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(r=!1);r&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}let w,b;return a.deleteShader(_),a.deleteShader(M),this.getUniforms=function(){return void 0===w&&(w=new Ui(a,m)),w},this.getAttributes=function(){return void 0===b&&(b=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let a=0;a<i;a++){const i=t.getActiveAttrib(e,a).name;n[i]=t.getAttribLocation(e,i)}return n}(a,m)),b},this.destroy=function(){i.releaseStatesOfProgram(this),a.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=Vi++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=M,this}function la(t,e,n,i,a,r){const s=[],o=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=b,e}return{getParameters:function(a,s,f,g,v){const x=g.fog,y=a.isMeshStandardMaterial?g.environment:null,_=e.get(a.envMap||y),M=p[a.type],w=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;let b,S;if(null!==a.precision&&(d=i.getMaxPrecision(a.precision),d!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",d,"instead.")),M){const t=Sn[M];b=t.vertexShader,S=t.fragmentShader}else b=a.vertexShader,S=a.fragmentShader;const T=t.getRenderTarget();return{isWebGL2:o,shaderID:M,shaderName:a.type,vertexShader:b,fragmentShader:S,defines:a.defines,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:u,outputEncoding:null!==T?m(T.texture):t.outputEncoding,map:!!a.map,mapEncoding:m(a.map),matcap:!!a.matcap,matcapEncoding:m(a.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:m(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!a.lightMap,lightMapEncoding:m(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:m(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:1===a.normalMapType,tangentSpaceNormalMap:0===a.normalMapType,clearcoatMap:!!a.clearcoatMap,clearcoatRoughnessMap:!!a.clearcoatRoughnessMap,clearcoatNormalMap:!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,gradientMap:!!a.gradientMap,sheen:!!a.sheen,transmissionMap:!!a.transmissionMap,combine:a.combine,vertexTangents:a.normalMap&&a.vertexTangents,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.displacementMap||a.transmissionMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmissionMap||!a.displacementMap),fog:!!x,useFog:a.fog,fogExp2:x&&x.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:a.skinning&&w>0,maxBones:w,useVertexTexture:l,morphTargets:a.morphTargets,morphNormals:a.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:a.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,alphaTest:a.alphaTest,doubleSided:2===a.side,flipSided:1===a.side,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=Sn[e];n=on.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new ca(t,n,e,a),s.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function ha(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function ua(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function da(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function pa(t){const e=[];let n=0;const i=[],a=[],r={id:-1};function s(i,a,s,o,c,l){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:a,material:s,program:u.program||r,groupOrder:o,renderOrder:i.renderOrder,z:c,group:l},e[n]=h):(h.id=i.id,h.object=i,h.geometry=a,h.material=s,h.program=u.program||r,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=c,h.group=l),n++,h}return{opaque:i,transparent:a,init:function(){n=0,i.length=0,a.length=0},push:function(t,e,n,r,o,c){const l=s(t,e,n,r,o,c);(!0===n.transparent?a:i).push(l)},unshift:function(t,e,n,r,o,c){const l=s(t,e,n,r,o,c);(!0===n.transparent?a:i).unshift(l)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||ua),a.length>1&&a.sort(e||da)}}}function fa(t){let e=new WeakMap;return{get:function(n,i){let a;return!1===e.has(n)?(a=new pa(t),e.set(n,[a])):i>=e.get(n).length?(a=new pa(t),e.get(n).push(a)):a=e.get(n)[i],a},dispose:function(){e=new WeakMap}}}function ma(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new U,color:new fe};break;case"SpotLight":n={position:new U,direction:new U,color:new fe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new U,color:new fe,distance:0,decay:0};break;case"HemisphereLight":n={direction:new U,skyColor:new fe,groundColor:new fe};break;case"RectAreaLight":n={color:new fe,position:new U,halfWidth:new U,halfHeight:new U}}return t[e.id]=n,n}}}let ga=0;function va(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function xa(t,e){const n=new ma,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)a.probe.push(new U);const r=new U,s=new yt,o=new yt;return{setup:function(r){let s=0,o=0,c=0;for(let t=0;t<9;t++)a.probe[t].set(0,0,0);let l=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;r.sort(va);for(let t=0,e=r.length;t<e;t++){const e=r[t],v=e.color,x=e.intensity,y=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=v.r*x,o+=v.g*x,c+=v.b*x;else if(e.isLightProbe)for(let t=0;t<9;t++)a.probe[t].addScaledVector(e.sh.coefficients[t],x);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,a.directionalShadow[l]=n,a.directionalShadowMap[l]=_,a.directionalShadowMatrix[l]=e.shadow.matrix,f++}a.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(v).multiplyScalar(x),t.distance=y,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,a.spotShadow[u]=n,a.spotShadowMap[u]=_,a.spotShadowMatrix[u]=e.shadow.matrix,g++}a.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(v).multiplyScalar(x),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),a.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,a.pointShadow[h]=n,a.pointShadowMap[h]=_,a.pointShadowMatrix[h]=e.shadow.matrix,m++}a.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(x),t.groundColor.copy(e.groundColor).multiplyScalar(x),a.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(a.rectAreaLTC1=bn.LTC_FLOAT_1,a.rectAreaLTC2=bn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(a.rectAreaLTC1=bn.LTC_HALF_1,a.rectAreaLTC2=bn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=s,a.ambient[1]=o,a.ambient[2]=c;const v=a.hash;v.directionalLength===l&&v.pointLength===h&&v.spotLength===u&&v.rectAreaLength===d&&v.hemiLength===p&&v.numDirectionalShadows===f&&v.numPointShadows===m&&v.numSpotShadows===g||(a.directional.length=l,a.spot.length=u,a.rectArea.length=d,a.point.length=h,a.hemi.length=p,a.directionalShadow.length=f,a.directionalShadowMap.length=f,a.pointShadow.length=m,a.pointShadowMap.length=m,a.spotShadow.length=g,a.spotShadowMap.length=g,a.directionalShadowMatrix.length=f,a.pointShadowMatrix.length=m,a.spotShadowMatrix.length=g,v.directionalLength=l,v.pointLength=h,v.spotLength=u,v.rectAreaLength=d,v.hemiLength=p,v.numDirectionalShadows=f,v.numPointShadows=m,v.numSpotShadows=g,a.version=ga++)},setupView:function(t,e){let n=0,i=0,c=0,l=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=a.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=a.spot[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),c++}else if(d.isRectAreaLight){const t=a.rectArea[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o.identity(),s.copy(d.matrixWorld),s.premultiply(u),o.extractRotation(s),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),l++}else if(d.isPointLight){const t=a.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=a.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:a}}function ya(t,e){const n=new xa(t,e),i=[],a=[];return{init:function(){i.length=0,a.length=0},state:{lightsArray:i,shadowsArray:a,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){a.push(t)}}}function _a(t,e){let n=new WeakMap;return{get:function(i,a=0){let r;return!1===n.has(i)?(r=new ya(t,e),n.set(i,[r])):a>=n.get(i).length?(r=new ya(t,e),n.get(i).push(r)):r=n.get(i)[a],r},dispose:function(){n=new WeakMap}}}class Ma extends oe{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Ma.prototype.isMeshDepthMaterial=!0;class wa extends oe{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new U,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function ba(t,e,n){let i=new xn;const a=new D,o=new D,c=new B,l=[],h=[],u={},d=n.maxTextureSize,p={0:1,1:0,2:2},m=new cn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new D},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const v=new qe;v.setAttribute("position",new xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new en(v,m),y=this;function _(n,i){const a=e.update(x);m.uniforms.shadow_pass.value=n.map.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,a,m,x,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,a,g,x,null)}function M(t,e,n){const i=t<<0|e<<1|n<<2;let a=l[i];return void 0===a&&(a=new Ma({depthPacking:3201,morphTargets:t,skinning:e}),l[i]=a),a}function w(t,e,n){const i=t<<0|e<<1|n<<2;let a=h[i];return void 0===a&&(a=new wa({morphTargets:t,skinning:e}),h[i]=a),a}function b(e,n,i,a,r,s,o){let c=null,l=M,h=e.customDepthMaterial;if(!0===a.isPointLight&&(l=w,h=e.customDistanceMaterial),void 0===h){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let a=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?a=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),c=l(t,a,!0===e.isInstancedMesh)}else c=h;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=u[t];void 0===n&&(n={},u[t]=n);let a=n[e];void 0===a&&(a=c.clone(),n[e]=a),c=a}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=3===o?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:p[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===a.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(a.matrixWorld),c.nearDistance=r,c.farDistance=s),c}function S(n,a,r,s,o){if(!1===n.visible)return;if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=e.update(n),a=n.material;if(Array.isArray(a)){const e=i.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],h=a[l.materialIndex];if(h&&h.visible){const e=b(n,i,h,s,r.near,r.far,o);t.renderBufferDirect(r,null,i,e,n,l)}}}else if(a.visible){const e=b(n,i,a,s,r.near,r.far,o);t.renderBufferDirect(r,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)S(c[t],a,r,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,l){if(!1===y.enabled)return;if(!1===y.autoUpdate&&!1===y.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),u=t.getActiveCubeFace(),p=t.getActiveMipmapLevel(),m=t.state;m.setBlending(0),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(let h=0,u=e.length;h<u;h++){const u=e[h],p=u.shadow;if(void 0===p){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===p.autoUpdate&&!1===p.needsUpdate)continue;a.copy(p.mapSize);const g=p.getFrameExtents();if(a.multiply(g),o.copy(p.mapSize),(a.x>d||a.y>d)&&(a.x>d&&(o.x=Math.floor(d/g.x),a.x=o.x*g.x,p.mapSize.x=o.x),a.y>d&&(o.y=Math.floor(d/g.y),a.y=o.y*g.y,p.mapSize.y=o.y)),null===p.map&&!p.isPointLightShadow&&3===this.type){const t={minFilter:s,magFilter:s,format:f};p.map=new G(a.x,a.y,t),p.map.texture.name=u.name+".shadowMap",p.mapPass=new G(a.x,a.y,t),p.camera.updateProjectionMatrix()}if(null===p.map){const t={minFilter:r,magFilter:r,format:f};p.map=new G(a.x,a.y,t),p.map.texture.name=u.name+".shadowMap",p.camera.updateProjectionMatrix()}t.setRenderTarget(p.map),t.clear();const v=p.getViewportCount();for(let t=0;t<v;t++){const e=p.getViewport(t);c.set(o.x*e.x,o.y*e.y,o.x*e.z,o.y*e.w),m.viewport(c),p.updateMatrices(u,t),i=p.getFrustum(),S(n,l,p.camera,u,this.type)}p.isPointLightShadow||3!==this.type||_(p,l),p.needsUpdate=!1}y.needsUpdate=!1,t.setRenderTarget(h,u,p)}}function Sa(e,n,i){const a=i.isWebGL2,r=new function(){let t=!1;const n=new B;let i=null;const a=new B(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,r,s,o){!0===o&&(t*=s,i*=s,r*=s),n.set(t,i,r,s),!1===a.equals(n)&&(e.clearColor(t,i,r,s),a.copy(n))},reset:function(){t=!1,i=null,a.set(-1,0,0,0)}}},s=new function(){let t=!1,n=null,i=null,a=null;return{setTest:function(t){t?z(2929):q(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){a!==t&&(e.clearDepth(t),a=t)},reset:function(){t=!1,n=null,i=null,a=null}}},o=new function(){let t=!1,n=null,i=null,a=null,r=null,s=null,o=null,c=null,l=null;return{setTest:function(e){t||(e?z(2960):q(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){i===t&&a===n&&r===s||(e.stencilFunc(t,n,s),i=t,a=n,r=s)},setOp:function(t,n,i){s===t&&o===n&&c===i||(e.stencilOp(t,n,i),s=t,o=n,c=i)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,i=null,a=null,r=null,s=null,o=null,c=null,l=null}}};let c={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,x=null,y=null,_=!1,M=null,w=null,b=null,S=null,T=null;const E=e.getParameter(35661);let A=!1,L=0;const C=e.getParameter(7938);-1!==C.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(C)[1]),A=L>=1):-1!==C.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(C)[1]),A=L>=2);let R=null,P={};const D=new B(0,0,e.canvas.width,e.canvas.height),I=new B(0,0,e.canvas.width,e.canvas.height);function N(t,n,i){const a=new Uint8Array(4),r=e.createTexture();e.bindTexture(t,r),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,a);return r}const O={};function z(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function q(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}O[3553]=N(3553,3553,1),O[34067]=N(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),o.setClear(0),z(2929),s.setFunc(3),U(!1),k(1),z(2884),F(0);const H={[t]:32774,101:32778,102:32779};if(a)H[103]=32775,H[104]=32776;else{const t=n.get("EXT_blend_minmax");null!==t&&(H[103]=t.MIN_EXT,H[104]=t.MAX_EXT)}const G={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function F(n,i,a,r,s,o,c,l){if(0!==n){if(!1===d&&(z(3042),d=!0),5===n)s=s||i,o=o||a,c=c||r,i===f&&s===v||(e.blendEquationSeparate(H[i],H[s]),f=i,v=s),a===m&&r===g&&o===x&&c===y||(e.blendFuncSeparate(G[a],G[r],G[o],G[c]),m=a,g=r,x=o,y=c),p=n,_=null;else if(n!==p||l!==_){if(f===t&&v===t||(e.blendEquation(32774),f=t,v=t),l)switch(n){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}else switch(n){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",n)}m=null,g=null,x=null,y=null,p=n,_=l}}else!0===d&&(q(3042),d=!1)}function U(t){M!==t&&(t?e.frontFace(2304):e.frontFace(2305),M=t)}function k(t){0!==t?(z(2884),t!==w&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):q(2884),w=t}function V(t,n,i){t?(z(32823),S===n&&T===i||(e.polygonOffset(n,i),S=n,T=i)):q(32823)}function W(t){void 0===t&&(t=33984+E-1),R!==t&&(e.activeTexture(t),R=t)}return{buffers:{color:r,depth:s,stencil:o},enable:z,disable:q,bindFramebuffer:function(t,n){null===n&&null!==l&&(n=l),h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n)},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:F,setMaterial:function(t,e){2===t.side?q(2884):z(2884);let n=1===t.side;e&&(n=!n),U(n),1===t.blending&&!1===t.transparent?F(0):F(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),r.setMask(t.colorWrite);const i=t.stencilWrite;o.setTest(i),i&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),V(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?z(32926):q(32926)},setFlipSided:U,setCullFace:k,setLineWidth:function(t){t!==b&&(A&&e.lineWidth(t),b=t)},setPolygonOffset:V,setScissorTest:function(t){t?z(3089):q(3089)},activeTexture:W,bindTexture:function(t,n){null===R&&W();let i=P[R];void 0===i&&(i={type:void 0,texture:void 0},P[R]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||O[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=P[R];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===D.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),D.copy(t))},viewport:function(t){!1===I.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),I.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===a&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},R=null,P={},l=null,h={},u=null,d=!1,p=null,f=null,m=null,g=null,v=null,x=null,y=null,_=!1,M=null,w=null,b=null,S=null,T=null,D.set(0,0,e.canvas.width,e.canvas.height),I.set(0,0,e.canvas.width,e.canvas.height),r.reset(),s.reset(),o.reset()}}}function Ta(t,n,v,x,y,_,M){const w=y.isWebGL2,b=y.maxTextures,S=y.maxCubemapSize,T=y.maxTextureSize,E=y.maxSamples,A=new WeakMap;let L,C=!1;try{C="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function R(t,e){return C?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function D(t,e,n,i){let a=1;if((t.width>i||t.height>i)&&(a=i/Math.max(t.width,t.height)),a<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?P.floorPowerOfTwo:Math.floor,r=i(a*t.width),s=i(a*t.height);void 0===L&&(L=R(r,s));const o=n?R(r,s):L;return o.width=r,o.height=s,o.getContext("2d").drawImage(t,0,0,r,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+r+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function I(t){return P.isPowerOfTwo(t.width)&&P.isPowerOfTwo(t.height)}function N(t,e){return t.generateMipmaps&&e&&t.minFilter!==r&&t.minFilter!==s}function O(e,n,i,a){t.generateMipmap(e),x.get(n).__maxMipLevel=Math.log2(Math.max(i,a))}function z(e,i,a){if(!1===w)return i;if(null!==e){if(void 0!==t[e])return t[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let r=i;return 6403===i&&(5126===a&&(r=33326),5131===a&&(r=33325),5121===a&&(r=33321)),6407===i&&(5126===a&&(r=34837),5131===a&&(r=34843),5121===a&&(r=32849)),6408===i&&(5126===a&&(r=34836),5131===a&&(r=34842),5121===a&&(r=32856)),33325!==r&&33326!==r&&34842!==r&&34836!==r||n.get("EXT_color_buffer_float"),r}function q(t){return t===r||1004===t||1005===t?9728:9729}function H(e){const n=e.target;n.removeEventListener("dispose",H),function(e){const n=x.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),x.remove(e))}(n),n.isVideoTexture&&A.delete(n),M.memory.textures--}function B(e){const n=e.target;n.removeEventListener("dispose",B),function(e){const n=e.texture,i=x.get(e),a=x.get(n);if(e){if(void 0!==a.__webglTexture&&t.deleteTexture(a.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);x.remove(n),x.remove(e)}}(n),M.memory.textures--}let G=0;function F(t,e){const n=x.get(t);if(t.isVideoTexture&&function(t){const e=M.render.frame;A.get(t)!==e&&(A.set(t,e),t.update())}(t),t.version>0&&n.__version!==t.version){const i=t.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void j(n,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}v.activeTexture(33984+e),v.bindTexture(3553,n.__webglTexture)}function U(e,n){const i=x.get(e);e.version>0&&i.__version!==e.version?function(e,n,i){if(6!==n.image.length)return;Z(e,n),v.activeTexture(33984+i),v.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const a=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),r=n.image[0]&&n.image[0].isDataTexture,s=[];for(let t=0;t<6;t++)s[t]=a||r?r?n.image[t].image:n.image[t]:D(n.image[t],!1,!0,S);const o=s[0],c=I(o)||w,l=_.convert(n.format),h=_.convert(n.type),u=z(n.internalFormat,l,h);let d;if(W(34067,n,c),a){for(let t=0;t<6;t++){d=s[t].mipmaps;for(let e=0;e<d.length;e++){const i=d[e];n.format!==f&&n.format!==p?null!==l?v.compressedTexImage2D(34069+t,e,u,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v.texImage2D(34069+t,e,u,i.width,i.height,0,l,h,i.data)}}e.__maxMipLevel=d.length-1}else{d=n.mipmaps;for(let t=0;t<6;t++)if(r){v.texImage2D(34069+t,0,u,s[t].width,s[t].height,0,l,h,s[t].data);for(let e=0;e<d.length;e++){const n=d[e].image[t].image;v.texImage2D(34069+t,e+1,u,n.width,n.height,0,l,h,n.data)}}else{v.texImage2D(34069+t,0,u,l,h,s[t]);for(let e=0;e<d.length;e++){const n=d[e];v.texImage2D(34069+t,e+1,u,l,h,n.image[t])}}e.__maxMipLevel=d.length}N(n,c)&&O(34067,n,o.width,o.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(i,e,n):(v.activeTexture(33984+n),v.bindTexture(34067,i.__webglTexture))}const k={[e]:10497,[i]:33071,[a]:33648},V={[r]:9728,1004:9984,1005:9986,[s]:9729,1007:9985,[o]:9987};function W(e,a,o){if(o?(t.texParameteri(e,10242,k[a.wrapS]),t.texParameteri(e,10243,k[a.wrapT]),32879!==e&&35866!==e||t.texParameteri(e,32882,k[a.wrapR]),t.texParameteri(e,10240,V[a.magFilter]),t.texParameteri(e,10241,V[a.minFilter])):(t.texParameteri(e,10242,33071),t.texParameteri(e,10243,33071),32879!==e&&35866!==e||t.texParameteri(e,32882,33071),a.wrapS===i&&a.wrapT===i||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(e,10240,q(a.magFilter)),t.texParameteri(e,10241,q(a.minFilter)),a.minFilter!==r&&a.minFilter!==s&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){const i=n.get("EXT_texture_filter_anisotropic");if(a.type===h&&!1===n.has("OES_texture_float_linear"))return;if(!1===w&&a.type===u&&!1===n.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||x.get(a).__currentAnisotropy)&&(t.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,y.getMaxAnisotropy())),x.get(a).__currentAnisotropy=a.anisotropy)}}function Z(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",H),e.__webglTexture=t.createTexture(),M.memory.textures++)}function j(e,n,a){let o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),Z(e,n),v.activeTexture(33984+a),v.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const u=function(t){return!w&&(t.wrapS!==i||t.wrapT!==i||t.minFilter!==r&&t.minFilter!==s)}(n)&&!1===I(n.image),x=D(n.image,u,!1,T),y=I(x)||w,M=_.convert(n.format);let b,S=_.convert(n.type),E=z(n.internalFormat,M,S);W(o,n,y);const A=n.mipmaps;if(n.isDepthTexture)E=6402,w?E=n.type===h?36012:n.type===l?33190:n.type===d?35056:33189:n.type===h&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===m&&6402===E&&n.type!==c&&n.type!==l&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=c,S=_.convert(n.type)),n.format===g&&6402===E&&(E=34041,n.type!==d&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=d,S=_.convert(n.type))),v.texImage2D(3553,0,E,x.width,x.height,0,M,S,null);else if(n.isDataTexture)if(A.length>0&&y){for(let t=0,e=A.length;t<e;t++)b=A[t],v.texImage2D(3553,t,E,b.width,b.height,0,M,S,b.data);n.generateMipmaps=!1,e.__maxMipLevel=A.length-1}else v.texImage2D(3553,0,E,x.width,x.height,0,M,S,x.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=A.length;t<e;t++)b=A[t],n.format!==f&&n.format!==p?null!==M?v.compressedTexImage2D(3553,t,E,b.width,b.height,0,b.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):v.texImage2D(3553,t,E,b.width,b.height,0,M,S,b.data);e.__maxMipLevel=A.length-1}else if(n.isDataTexture2DArray)v.texImage3D(35866,0,E,x.width,x.height,x.depth,0,M,S,x.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)v.texImage3D(32879,0,E,x.width,x.height,x.depth,0,M,S,x.data),e.__maxMipLevel=0;else if(A.length>0&&y){for(let t=0,e=A.length;t<e;t++)b=A[t],v.texImage2D(3553,t,E,M,S,b);n.generateMipmaps=!1,e.__maxMipLevel=A.length-1}else v.texImage2D(3553,0,E,M,S,x),e.__maxMipLevel=0;N(n,y)&&O(o,n,x.width,x.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function X(e,n,i,a){const r=n.texture,s=_.convert(r.format),o=_.convert(r.type),c=z(r.internalFormat,s,o);32879===a||35866===a?v.texImage3D(a,0,c,n.width,n.height,n.depth,0,s,o,null):v.texImage2D(a,0,c,n.width,n.height,0,s,o,null),v.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,i,a,x.get(r).__webglTexture,0),v.bindFramebuffer(36160,null)}function Y(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let a=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===h?a=36012:e.type===l&&(a=33190));const i=J(n);t.renderbufferStorageMultisample(36161,i,a,n.width,n.height)}else t.renderbufferStorage(36161,a,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,a=_.convert(e.format),r=_.convert(e.type),s=z(e.internalFormat,a,r);if(i){const e=J(n);t.renderbufferStorageMultisample(36161,e,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height)}t.bindRenderbuffer(36161,null)}function J(t){return w&&t.isWebGLMultisampleRenderTarget?Math.min(E,t.samples):0}let Q=!1,K=!1;this.allocateTextureUnit=function(){const t=G;return t>=b&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+b),G+=1,t},this.resetTextureUnits=function(){G=0},this.setTexture2D=F,this.setTexture2DArray=function(t,e){const n=x.get(t);t.version>0&&n.__version!==t.version?j(n,t,e):(v.activeTexture(33984+e),v.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){const n=x.get(t);t.version>0&&n.__version!==t.version?j(n,t,e):(v.activeTexture(33984+e),v.bindTexture(32879,n.__webglTexture))},this.setTextureCube=U,this.setupRenderTarget=function(e){const n=e.texture,i=x.get(e),a=x.get(n);e.addEventListener("dispose",B),a.__webglTexture=t.createTexture(),a.__version=n.version,M.memory.textures++;const r=!0===e.isWebGLCubeRenderTarget,s=!0===e.isWebGLMultisampleRenderTarget,o=n.isDataTexture3D||n.isDataTexture2DArray,c=I(e)||w;if(!w||n.format!==p||n.type!==h&&n.type!==u||(n.format=f,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),r){i.__webglFramebuffer=[];for(let e=0;e<6;e++)i.__webglFramebuffer[e]=t.createFramebuffer()}else if(i.__webglFramebuffer=t.createFramebuffer(),s)if(w){i.__webglMultisampledFramebuffer=t.createFramebuffer(),i.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const a=_.convert(n.format),r=_.convert(n.type),s=z(n.internalFormat,a,r),o=J(e);t.renderbufferStorageMultisample(36161,o,s,e.width,e.height),v.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(i.__webglDepthRenderbuffer=t.createRenderbuffer(),Y(i.__webglDepthRenderbuffer,e,!0)),v.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(r){v.bindTexture(34067,a.__webglTexture),W(34067,n,c);for(let t=0;t<6;t++)X(i.__webglFramebuffer[t],e,36064,34069+t);N(n,c)&&O(34067,n,e.width,e.height),v.bindTexture(34067,null)}else{let t=3553;o&&(w?t=n.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),v.bindTexture(t,a.__webglTexture),W(t,n,c),X(i.__webglFramebuffer,e,36064,t),N(n,c)&&O(3553,n,e.width,e.height),v.bindTexture(3553,null)}e.depthBuffer&&function(e){const n=x.get(e),i=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(v.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");x.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),F(n.depthTexture,0);const i=x.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===m)t.framebufferTexture2D(36160,36096,3553,i,0);else{if(n.depthTexture.format!==g)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,i,0)}}(n.__webglFramebuffer,e)}else if(i){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)v.bindFramebuffer(36160,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),Y(n.__webglDepthbuffer[i],e,!1)}else v.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),Y(n.__webglDepthbuffer,e,!1);v.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(N(e,I(t)||w)){const n=t.isWebGLCubeRenderTarget?34067:3553,i=x.get(e).__webglTexture;v.bindTexture(n,i),O(n,e,t.width,t.height),v.bindTexture(n,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(w){const n=x.get(e);v.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),v.bindFramebuffer(36009,n.__webglFramebuffer);const i=e.width,a=e.height;let r=16384;e.depthBuffer&&(r|=256),e.stencilBuffer&&(r|=1024),t.blitFramebuffer(0,0,i,a,0,0,i,a,r,9728),v.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===Q&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),t=t.texture),F(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===K&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),K=!0),t=t.texture),U(t,e)}}function Ea(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===c)return 5123;if(1013===t)return 5124;if(t===l)return 5125;if(t===h)return 5126;if(t===u)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===p)return 6407;if(t===f)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===m)return 6402;if(t===g)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===d?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}wa.prototype.isMeshDistanceMaterial=!0;class Aa extends hn{constructor(t=[]){super(),this.cameras=t}}Aa.prototype.isArrayCamera=!0;class La extends Vt{constructor(){super(),this.type="Group"}}function Ca(){this._targetRay=null,this._grip=null,this._hand=null}function Ra(t,e){const n=this,i=t.state;let a=null,r=1,s=null,o="local-floor",c=null;const l=[],h=new Map,u=new hn;u.layers.enable(1),u.viewport=new B;const d=new hn;d.layers.enable(2),d.viewport=new B;const p=[u,d],f=new Aa;f.layers.enable(1),f.layers.enable(2);let m=null,g=null;function v(t){const e=h.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function x(){h.forEach((function(t,e){t.disconnect(e)})),h.clear(),m=null,g=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function y(t){const e=a.inputSources;for(let t=0;t<l.length;t++)h.set(e[t],l[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=h.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),h.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=h.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new Ca,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new Ca,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new Ca,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return a},this.setSession=async function(t){if(a=t,null!==a){a.addEventListener("select",v),a.addEventListener("selectstart",v),a.addEventListener("selectend",v),a.addEventListener("squeeze",v),a.addEventListener("squeezestart",v),a.addEventListener("squeezeend",v),a.addEventListener("end",x),a.addEventListener("inputsourceschange",y);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const i={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:r},c=new XRWebGLLayer(a,e,i);a.updateRenderState({baseLayer:c}),s=await a.requestReferenceSpace(o),S.setContext(a),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const _=new U,M=new U;function w(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){f.near=d.near=u.near=t.near,f.far=d.far=u.far=t.far,m===f.near&&g===f.far||(a.updateRenderState({depthNear:f.near,depthFar:f.far}),m=f.near,g=f.far);const e=t.parent,n=f.cameras;w(f,e);for(let t=0;t<n.length;t++)w(n[t],e);t.matrixWorld.copy(f.matrixWorld),t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){_.setFromMatrixPosition(e.matrixWorld),M.setFromMatrixPosition(n.matrixWorld);const i=_.distanceTo(M),a=e.projectionMatrix.elements,r=n.projectionMatrix.elements,s=a[14]/(a[10]-1),o=a[14]/(a[10]+1),c=(a[9]+1)/a[5],l=(a[9]-1)/a[5],h=(a[8]-1)/a[0],u=(r[8]+1)/r[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=o+f,x=d-m,y=p+(i-m),w=c*o/v*g,b=l*o/v*g;t.projectionMatrix.makePerspective(x,y,w,b,g,v)}(f,u,d):f.projectionMatrix.copy(u.projectionMatrix),f};let b=null;const S=new yn;S.setAnimationLoop((function(t,e){if(c=e.getViewerPose(s),null!==c){const t=c.views,e=a.renderState.baseLayer;i.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const a=t[i],r=e.getViewport(a),s=p[i];s.matrix.fromArray(a.transform.matrix),s.projectionMatrix.fromArray(a.projectionMatrix),s.viewport.set(r.x,r.y,r.width,r.height),0===i&&f.matrix.copy(s.matrix),!0===n&&f.cameras.push(s)}}const n=a.inputSources;for(let t=0;t<l.length;t++){const i=l[t],a=n[t];i.update(a,e,s)}b&&b(t,e)})),this.setAnimationLoop=function(t){b=t},this.dispose=function(){}}function Pa(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const a=t.get(i).__maxMipLevel;void 0!==a&&(e.maxMipLevel.value=a)}let a,r;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?a=n.map:n.specularMap?a=n.specularMap:n.displacementMap?a=n.displacementMap:n.normalMap?a=n.normalMap:n.bumpMap?a=n.bumpMap:n.roughnessMap?a=n.roughnessMap:n.metalnessMap?a=n.metalnessMap:n.alphaMap?a=n.alphaMap:n.emissiveMap?a=n.emissiveMap:n.clearcoatMap?a=n.clearcoatMap:n.clearcoatNormalMap?a=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(a=n.clearcoatRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uvTransform.value.copy(a.matrix)),n.aoMap?r=n.aoMap:n.lightMap&&(r=n.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uv2Transform.value.copy(r.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,a,r){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){let a;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?a=e.map:e.alphaMap&&(a=e.alphaMap),void 0!==a&&(!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uvTransform.value.copy(a.matrix))}(t,i,a,r):i.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Da(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,a=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",d=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let p=null,m=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=b,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const x=this;let y=!1,_=0,M=0,w=null,S=-1,T=null;const E=new B,A=new B;let L=null,C=e.width,R=e.height,I=1,N=null,O=null;const z=new B(0,0,C,R),q=new B(0,0,C,R);let H=!1;const G=new xn;let F=!1,k=!1;const V=new yt,W=new U,Z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function j(){return null===w?I:1}let X,Y,J,Q,K,$,tt,et,nt,it,at,rt,st,ot,ct,lt,ht,ut,dt,pt,ft,mt,gt=n;function vt(t,n){for(let i=0;i<t.length;i++){const a=t[i],r=e.getContext(a,n);if(null!==r)return r}return null}try{const t={alpha:i,depth:a,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:d};if(e.addEventListener("webglcontextlost",Mt,!1),e.addEventListener("webglcontextrestored",wt,!1),null===gt){const e=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&e.shift(),gt=vt(e,t),null===gt)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===gt.getShaderPrecisionFormat&&(gt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function xt(){X=new Pn(gt),Y=new Ln(gt,X,t),X.init(Y),ft=new Ea(gt,X,Y),J=new Sa(gt,X,Y),Q=new Nn(gt),K=new ha,$=new Ta(gt,X,J,K,Y,ft,Q),tt=new Rn(x),et=new _n(gt,Y),mt=new En(gt,X,et,Y),nt=new Dn(gt,et,Q,mt),it=new Hn(gt,nt,et,Q),ut=new qn(gt),ct=new Cn(K),at=new la(x,tt,X,Y,mt,ct),rt=new Pa(K),st=new fa(K),ot=new _a(X,Y),ht=new Tn(x,tt,J,it,o),lt=new ba(x,it,Y),dt=new An(gt,X,Q,Y),pt=new In(gt,X,Q,Y),Q.programs=at.programs,x.capabilities=Y,x.extensions=X,x.properties=K,x.renderLists=st,x.shadowMap=lt,x.state=J,x.info=Q}xt();const _t=new Ra(x,gt);function Mt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function wt(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const t=Q.autoReset,e=lt.enabled,n=lt.autoUpdate,i=lt.needsUpdate,a=lt.type;xt(),Q.autoReset=t,lt.enabled=e,lt.autoUpdate=n,lt.needsUpdate=i,lt.type=a}function bt(t){const e=t.target;e.removeEventListener("dispose",bt),function(t){(function(t){const e=K.get(t).programs;void 0!==e&&e.forEach((function(t){at.releaseProgram(t)}))})(t),K.remove(t)}(e)}this.xr=_t,this.getContext=function(){return gt},this.getContextAttributes=function(){return gt.getContextAttributes()},this.forceContextLoss=function(){const t=X.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=X.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(t){void 0!==t&&(I=t,this.setSize(C,R,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new D),t.set(C,R)},this.setSize=function(t,n,i){_t.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(C=t,R=n,e.width=Math.floor(t*I),e.height=Math.floor(n*I),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new D),t.set(C*I,R*I).floor()},this.setDrawingBufferSize=function(t,n,i){C=t,R=n,I=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new B),t.copy(E)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),J.viewport(E.copy(z).multiplyScalar(I).floor())},this.getScissor=function(t){return t.copy(q)},this.setScissor=function(t,e,n,i){t.isVector4?q.set(t.x,t.y,t.z,t.w):q.set(t,e,n,i),J.scissor(A.copy(q).multiplyScalar(I).floor())},this.getScissorTest=function(){return H},this.setScissorTest=function(t){J.setScissorTest(H=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){O=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new fe),t.copy(ht.getClearColor())},this.setClearColor=function(){ht.setClearColor.apply(ht,arguments)},this.getClearAlpha=function(){return ht.getClearAlpha()},this.setClearAlpha=function(){ht.setClearAlpha.apply(ht,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),gt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Mt,!1),e.removeEventListener("webglcontextrestored",wt,!1),st.dispose(),ot.dispose(),K.dispose(),tt.dispose(),it.dispose(),mt.dispose(),_t.dispose(),_t.removeEventListener("sessionstart",Tt),_t.removeEventListener("sessionend",Et),At.stop()},this.renderBufferImmediate=function(t,e){mt.initAttributes();const n=K.get(t);t.hasPositions&&!n.position&&(n.position=gt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=gt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=gt.createBuffer()),t.hasColors&&!n.color&&(n.color=gt.createBuffer());const i=e.getAttributes();t.hasPositions&&(gt.bindBuffer(34962,n.position),gt.bufferData(34962,t.positionArray,35048),mt.enableAttribute(i.position),gt.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(gt.bindBuffer(34962,n.normal),gt.bufferData(34962,t.normalArray,35048),mt.enableAttribute(i.normal),gt.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(gt.bindBuffer(34962,n.uv),gt.bufferData(34962,t.uvArray,35048),mt.enableAttribute(i.uv),gt.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(gt.bindBuffer(34962,n.color),gt.bufferData(34962,t.colorArray,35048),mt.enableAttribute(i.color),gt.vertexAttribPointer(i.color,3,5126,!1,0,0)),mt.disableUnusedAttributes(),gt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,a,r){null===e&&(e=Z);const s=a.isMesh&&a.matrixWorld.determinant()<0,o=It(t,e,i,a);J.setMaterial(i,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let h,u=1;!0===i.wireframe&&(c=nt.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&ut.update(a,n,i,o),mt.setup(a,i,o,n,c);let d=dt;null!==c&&(h=et.get(c),d=pt,d.setIndex(h));const p=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==r?r.start*u:0,v=null!==r?r.count*u:1/0,x=Math.max(f,g),y=Math.min(p,f+m,g+v)-1,_=Math.max(0,y-x+1);if(0!==_){if(a.isMesh)!0===i.wireframe?(J.setLineWidth(i.wireframeLinewidth*j()),d.setMode(1)):d.setMode(4);else if(a.isLine){let t=i.linewidth;void 0===t&&(t=1),J.setLineWidth(t*j()),a.isLineSegments?d.setMode(1):a.isLineLoop?d.setMode(2):d.setMode(3)}else a.isPoints?d.setMode(0):a.isSprite&&d.setMode(4);if(a.isInstancedMesh)d.renderInstances(x,_,a.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(x,_,t)}else d.render(x,_)}},this.compile=function(t,e){m=ot.get(t),m.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++)Pt(n[i],t,e);else Pt(n,t,e)}))};let St=null;function Tt(){At.stop()}function Et(){At.start()}const At=new yn;function Lt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||G.intersectsSprite(t)){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=it.update(t),a=t.material;a.visible&&p.push(t,e,a,n,W.z,null)}}else if(t.isImmediateRenderObject)i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V),p.push(t,null,t.material,n,W.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==Q.render.frame&&(t.skeleton.update(),t.skeleton.frame=Q.render.frame),!t.frustumCulled||G.intersectsObject(t))){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=it.update(t),a=t.material;if(Array.isArray(a)){const i=e.groups;for(let r=0,s=i.length;r<s;r++){const s=i[r],o=a[s.materialIndex];o&&o.visible&&p.push(t,e,o,n,W.z,s)}}else a.visible&&p.push(t,e,a,n,W.z,null)}const a=t.children;for(let t=0,r=a.length;t<r;t++)Lt(a[t],e,n,i)}function Ct(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let a=0,r=t.length;a<r;a++){const r=t[a],s=r.object,o=r.geometry,c=null===i?r.material:i,l=r.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(J.viewport(E.copy(i.viewport)),m.setupLightsView(i),Rt(s,e,i,o,c,l))}}else Rt(s,e,n,o,c,l)}}function Rt(t,e,n,i,a,r){if(t.onBeforeRender(x,e,n,i,a,r),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=It(n,e,a,t);J.setMaterial(a),mt.reset(),function(t,e){t.render((function(t){x.renderBufferImmediate(t,e)}))}(t,i)}else x.renderBufferDirect(n,e,i,a,t,r);t.onAfterRender(x,e,n,i,a,r)}function Pt(t,e,n){!0!==e.isScene&&(e=Z);const i=K.get(t),a=m.state.lights,r=m.state.shadowsArray,s=a.state.version,o=at.getParameters(t,a.state,r,e,n),c=at.getProgramCacheKey(o);let l=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=tt.get(t.envMap||i.environment),void 0===l&&(t.addEventListener("dispose",bt),l=new Map,i.programs=l);let h=l.get(c);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Dt(t,o),h}else o.uniforms=at.getUniforms(t),t.onBeforeCompile(o,x),h=at.acquireProgram(o,c),l.set(c,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Dt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=a.state.ambient,u.lightProbe.value=a.state.probe,u.directionalLights.value=a.state.directional,u.directionalLightShadows.value=a.state.directionalShadow,u.spotLights.value=a.state.spot,u.spotLightShadows.value=a.state.spotShadow,u.rectAreaLights.value=a.state.rectArea,u.ltc_1.value=a.state.rectAreaLTC1,u.ltc_2.value=a.state.rectAreaLTC2,u.pointLights.value=a.state.point,u.pointLightShadows.value=a.state.pointShadow,u.hemisphereLights.value=a.state.hemi,u.directionalShadowMap.value=a.state.directionalShadowMap,u.directionalShadowMatrix.value=a.state.directionalShadowMatrix,u.spotShadowMap.value=a.state.spotShadowMap,u.spotShadowMatrix.value=a.state.spotShadowMatrix,u.pointShadowMap.value=a.state.pointShadowMap,u.pointShadowMatrix.value=a.state.pointShadowMatrix);const d=h.getUniforms(),p=Ui.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Dt(t,e){const n=K.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function It(t,e,n,i){!0!==e.isScene&&(e=Z),$.resetTextureUnits();const a=e.fog,r=n.isMeshStandardMaterial?e.environment:null,s=null===w?x.outputEncoding:w.texture.encoding,o=tt.get(n.envMap||r),c=!0===n.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,l=K.get(n),u=m.state.lights;if(!0===F&&(!0===k||t!==T)){const e=t===T&&n.id===S;ct.setState(n,t,e)}let d=!1;n.version===l.__version?l.needsLights&&l.lightsStateVersion!==u.state.version||l.outputEncoding!==s||i.isInstancedMesh&&!1===l.instancing?d=!0:i.isInstancedMesh||!0!==l.instancing?l.envMap!==o||n.fog&&l.fog!==a?d=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===ct.numPlanes&&l.numIntersection===ct.numIntersection?l.vertexAlphas!==c&&(d=!0):d=!0:d=!0:(d=!0,l.__version=n.version);let p=l.currentProgram;!0===d&&(p=Pt(n,e,i));let g=!1,v=!1,y=!1;const _=p.getUniforms(),M=l.uniforms;if(J.useProgram(p.program)&&(g=!0,v=!0,y=!0),n.id!==S&&(S=n.id,v=!0),g||T!==t){if(_.setValue(gt,"projectionMatrix",t.projectionMatrix),Y.logarithmicDepthBuffer&&_.setValue(gt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,v=!0,y=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=_.map.cameraPosition;void 0!==e&&e.setValue(gt,W.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&_.setValue(gt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&_.setValue(gt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){_.setOptional(gt,i,"bindMatrix"),_.setOptional(gt,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(Y.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=P.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const a=new mn(i,n,n,f,h);t.boneMatrices=i,t.boneTexture=a,t.boneTextureSize=n}_.setValue(gt,"boneTexture",t.boneTexture,$),_.setValue(gt,"boneTextureSize",t.boneTextureSize)}else _.setOptional(gt,t,"boneMatrices")}}var b,E;return(v||l.receiveShadow!==i.receiveShadow)&&(l.receiveShadow=i.receiveShadow,_.setValue(gt,"receiveShadow",i.receiveShadow)),v&&(_.setValue(gt,"toneMappingExposure",x.toneMappingExposure),l.needsLights&&(E=y,(b=M).ambientLightColor.needsUpdate=E,b.lightProbe.needsUpdate=E,b.directionalLights.needsUpdate=E,b.directionalLightShadows.needsUpdate=E,b.pointLights.needsUpdate=E,b.pointLightShadows.needsUpdate=E,b.spotLights.needsUpdate=E,b.spotLightShadows.needsUpdate=E,b.rectAreaLights.needsUpdate=E,b.hemisphereLights.needsUpdate=E),a&&n.fog&&rt.refreshFogUniforms(M,a),rt.refreshMaterialUniforms(M,n,I,R),Ui.upload(gt,l.uniformsList,M,$)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ui.upload(gt,l.uniformsList,M,$),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&_.setValue(gt,"center",i.center),_.setValue(gt,"modelViewMatrix",i.modelViewMatrix),_.setValue(gt,"normalMatrix",i.normalMatrix),_.setValue(gt,"modelMatrix",i.matrixWorld),p}At.setAnimationLoop((function(t){St&&St(t)})),"undefined"!=typeof window&&At.setContext(window),this.setAnimationLoop=function(t){St=t,_t.setAnimationLoop(t),null===t?At.stop():At.start()},_t.addEventListener("sessionstart",Tt),_t.addEventListener("sessionend",Et),this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===y)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===_t.enabled&&!0===_t.isPresenting&&(e=_t.getCamera(e)),!0===t.isScene&&t.onBeforeRender(x,t,e,n||w),m=ot.get(t,v.length),m.init(),v.push(m),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),G.setFromProjectionMatrix(V),k=this.localClippingEnabled,F=ct.init(this.clippingPlanes,k,e),p=st.get(t,g.length),p.init(),g.push(p),Lt(t,e,0,x.sortObjects),p.finish(),!0===x.sortObjects&&p.sort(N,O),!0===F&&ct.beginShadows();const a=m.state.shadowsArray;lt.render(a,t,e),m.setupLights(),m.setupLightsView(e),!0===F&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ht.render(p,t,e,i);const r=p.opaque,s=p.transparent;r.length>0&&Ct(r,t,e),s.length>0&&Ct(s,t,e),null!==w&&($.updateRenderTargetMipmap(w),$.updateMultisampleRenderTarget(w)),!0===t.isScene&&t.onAfterRender(x,t,e),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1),mt.resetDefaultState(),S=-1,T=null,v.pop(),m=v.length>0?v[v.length-1]:null,g.pop(),p=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return w},this.setRenderTarget=function(t,e=0,n=0){w=t,_=e,M=n,t&&void 0===K.get(t).__webglFramebuffer&&$.setupRenderTarget(t);let i=null,a=!1,r=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(r=!0);const s=K.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=s[e],a=!0):i=t.isWebGLMultisampleRenderTarget?K.get(t).__webglMultisampledFramebuffer:s,E.copy(t.viewport),A.copy(t.scissor),L=t.scissorTest}else E.copy(z).multiplyScalar(I).floor(),A.copy(q).multiplyScalar(I).floor(),L=H;if(J.bindFramebuffer(36160,i),J.viewport(E),J.scissor(A),J.setScissorTest(L),a){const i=K.get(t.texture);gt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}else if(r){const i=K.get(t.texture),a=e||0;gt.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,a)}},this.readRenderTargetPixels=function(t,e,n,i,a,r,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){J.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,c=s.type;if(o!==f&&ft.convert(o)!==gt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===u&&(X.has("EXT_color_buffer_half_float")||Y.isWebGL2&&X.has("EXT_color_buffer_float"));if(!(1009===c||ft.convert(c)===gt.getParameter(35738)||c===h&&(Y.isWebGL2||X.has("OES_texture_float")||X.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===gt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-a&&gt.readPixels(e,n,i,a,ft.convert(o),ft.convert(c),r):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==w?K.get(w).__webglFramebuffer:null;J.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),a=Math.floor(e.image.width*i),r=Math.floor(e.image.height*i),s=ft.convert(e.format);$.setTexture2D(e,0),gt.copyTexImage2D(3553,n,s,t.x,t.y,a,r,0),J.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const a=e.image.width,r=e.image.height,s=ft.convert(n.format),o=ft.convert(n.type);$.setTexture2D(n,0),gt.pixelStorei(37440,n.flipY),gt.pixelStorei(37441,n.premultiplyAlpha),gt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?gt.texSubImage2D(3553,i,t.x,t.y,a,r,s,o,e.image.data):e.isCompressedTexture?gt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):gt.texSubImage2D(3553,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&gt.generateMipmap(3553),J.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,a=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:r,height:s,data:o}=n.image,c=ft.convert(i.format),l=ft.convert(i.type);let h;if(i.isDataTexture3D)$.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(i,0),h=35866}gt.pixelStorei(37440,i.flipY),gt.pixelStorei(37441,i.premultiplyAlpha),gt.pixelStorei(3317,i.unpackAlignment);const u=gt.getParameter(3314),d=gt.getParameter(32878),p=gt.getParameter(3316),f=gt.getParameter(3315),m=gt.getParameter(32877);gt.pixelStorei(3314,r),gt.pixelStorei(32878,s),gt.pixelStorei(3316,t.min.x),gt.pixelStorei(3315,t.min.y),gt.pixelStorei(32877,t.min.z),gt.texSubImage3D(h,a,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,l,o),gt.pixelStorei(3314,u),gt.pixelStorei(32878,d),gt.pixelStorei(3316,p),gt.pixelStorei(3315,f),gt.pixelStorei(32877,m),0===a&&i.generateMipmaps&&gt.generateMipmap(h),J.unbindTexture()},this.initTexture=function(t){$.setTexture2D(t,0),J.unbindTexture()},this.resetState=function(){_=0,M=0,w=null,J.reset(),mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}La.prototype.isGroup=!0,Object.assign(Ca.prototype,{constructor:Ca,getHandSpace:function(){return null===this._hand&&(this._hand=new La,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new La,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new La,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,a=null,r=null;const s=this._targetRay,o=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),c&&t.hand){r=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===c.joints[i.jointName]){const t=new La;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[i.jointName]=t,c.add(t)}const a=c.joints[i.jointName];null!==t&&(a.matrix.fromArray(t.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.jointRadius=t.radius),a.visible=null!==t}const i=c.joints["index-finger-tip"],a=c.joints["thumb-tip"],s=i.position.distanceTo(a.position),o=.02,l=.005;c.inputState.pinching&&s>o+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&s<=o-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(a=e.getPose(t.gripSpace,n),null!==a&&(o.matrix.fromArray(a.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==a),null!==c&&(c.visible=null!==r),this}}),Object.assign(Ra.prototype,L.prototype),class extends Da{}.prototype.isWebGL1Renderer=!0;class Ia{constructor(t,e=25e-5){this.name="",this.color=new fe(t),this.density=e}clone(){return new Ia(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ia.prototype.isFogExp2=!0;class Na{constructor(t,e=1,n=1e3){this.name="",this.color=new fe(t),this.near=e,this.far=n}clone(){return new Na(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Na.prototype.isFog=!0;class Oa extends Vt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function za(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=T,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=P.generateUUID()}Oa.prototype.isScene=!0,Object.defineProperty(za.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(za.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,a=this.stride;i<a;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=P.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new za(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=P.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const qa=new U;function Ha(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}Object.defineProperties(Ha.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Ha.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)qa.x=this.getX(e),qa.y=this.getY(e),qa.z=this.getZ(e),qa.applyMatrix4(t),this.setXYZ(e,qa.x,qa.y,qa.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)qa.x=this.getX(e),qa.y=this.getY(e),qa.z=this.getZ(e),qa.applyNormalMatrix(t),this.setXYZ(e,qa.x,qa.y,qa.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)qa.x=this.getX(e),qa.y=this.getY(e),qa.z=this.getZ(e),qa.transformDirection(t),this.setXYZ(e,qa.x,qa.y,qa.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,a){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=a,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new xe(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ha(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class Ba extends oe{constructor(t){super(),this.type="SpriteMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let Ga;Ba.prototype.isSpriteMaterial=!0;const Fa=new U,Ua=new U,ka=new U,Va=new D,Wa=new D,Za=new yt,ja=new U,Xa=new U,Ya=new U,Ja=new D,Qa=new D,Ka=new D;function $a(t,e,n,i,a,r){Va.subVectors(t,n).addScalar(.5).multiply(i),void 0!==a?(Wa.x=r*Va.x-a*Va.y,Wa.y=a*Va.x+r*Va.y):Wa.copy(Va),t.copy(e),t.x+=Wa.x,t.y+=Wa.y,t.applyMatrix4(Za)}(class extends Vt{constructor(t){if(super(),this.type="Sprite",void 0===Ga){Ga=new qe;const t=new za(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Ga.setIndex([0,1,2,0,2,3]),Ga.setAttribute("position",new Ha(t,3,0,!1)),Ga.setAttribute("uv",new Ha(t,2,3,!1))}this.geometry=Ga,this.material=void 0!==t?t:new Ba,this.center=new D(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ua.setFromMatrixScale(this.matrixWorld),Za.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ka.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ua.multiplyScalar(-ka.z);const n=this.material.rotation;let i,a;0!==n&&(a=Math.cos(n),i=Math.sin(n));const r=this.center;$a(ja.set(-.5,-.5,0),ka,r,Ua,i,a),$a(Xa.set(.5,-.5,0),ka,r,Ua,i,a),$a(Ya.set(.5,.5,0),ka,r,Ua,i,a),Ja.set(0,0),Qa.set(1,0),Ka.set(1,1);let s=t.ray.intersectTriangle(ja,Xa,Ya,!1,Fa);if(null===s&&($a(Xa.set(-.5,.5,0),ka,r,Ua,i,a),Qa.set(0,1),s=t.ray.intersectTriangle(ja,Ya,Xa,!1,Fa),null===s))return;const o=t.ray.origin.distanceTo(Fa);o<t.near||o>t.far||e.push({distance:o,point:Fa.clone(),uv:re.getUV(Fa,ja,Xa,Ya,Ja,Qa,Ka,new D),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}).prototype.isSprite=!0;const tr=new U,er=new B,nr=new B,ir=new U,ar=new yt;function rr(t,e){en.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new yt,this.bindMatrixInverse=new yt}function sr(){Vt.call(this),this.type="Bone"}rr.prototype=Object.assign(Object.create(en.prototype),{constructor:rr,isSkinnedMesh:!0,copy:function(t){return en.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new B,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){en.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;er.fromBufferAttribute(i.attributes.skinIndex,t),nr.fromBufferAttribute(i.attributes.skinWeight,t),tr.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=nr.getComponent(t);if(0!==i){const a=er.getComponent(t);ar.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(ir.copy(tr).applyMatrix4(ar),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}),sr.prototype=Object.assign(Object.create(Vt.prototype),{constructor:sr,isBone:!0});const or=new yt,cr=new yt,lr=[],hr=new en;function ur(t,e,n){en.call(this,t,e),this.instanceMatrix=new xe(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}ur.prototype=Object.assign(Object.create(en.prototype),{constructor:ur,isInstancedMesh:!0,copy:function(t){return en.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(hr.geometry=this.geometry,hr.material=this.material,void 0!==hr.material)for(let a=0;a<i;a++){this.getMatrixAt(a,or),cr.multiplyMatrices(n,or),hr.matrixWorld=cr,hr.raycast(t,lr);for(let t=0,n=lr.length;t<n;t++){const n=lr[t];n.instanceId=a,n.object=this,e.push(n)}lr.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new xe(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class dr extends oe{constructor(t){super(),this.type="LineBasicMaterial",this.color=new fe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}dr.prototype.isLineBasicMaterial=!0;const pr=new U,fr=new U,mr=new yt,gr=new xt,vr=new ht;function xr(t=new qe,e=new dr){Vt.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}xr.prototype=Object.assign(Object.create(Vt.prototype),{constructor:xr,isLine:!0,copy:function(t){return Vt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)pr.fromBufferAttribute(e,t-1),fr.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=pr.distanceTo(fr);t.setAttribute("lineDistance",new Ae(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,a=t.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),vr.copy(n.boundingSphere),vr.applyMatrix4(i),vr.radius+=a,!1===t.ray.intersectsSphere(vr))return;mr.copy(i).invert(),gr.copy(t.ray).applyMatrix4(mr);const s=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,c=new U,l=new U,h=new U,u=new U,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,a=n.attributes.position;if(null!==i)for(let n=Math.max(0,r.start),s=Math.min(i.count,r.start+r.count)-1;n<s;n+=d){const r=i.getX(n),s=i.getX(n+1);if(c.fromBufferAttribute(a,r),l.fromBufferAttribute(a,s),gr.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(u);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,r.start),i=Math.min(a.count,r.start+r.count)-1;n<i;n+=d){if(c.fromBufferAttribute(a,n),l.fromBufferAttribute(a,n+1),gr.distanceSqToSegment(c,l,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const yr=new U,_r=new U;function Mr(t,e){xr.call(this,t,e),this.type="LineSegments"}Mr.prototype=Object.assign(Object.create(xr.prototype),{constructor:Mr,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)yr.fromBufferAttribute(e,t),_r.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+yr.distanceTo(_r);t.setAttribute("lineDistance",new Ae(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});(class extends xr{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class wr extends oe{constructor(t){super(),this.type="PointsMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}wr.prototype.isPointsMaterial=!0;const br=new yt,Sr=new xt,Tr=new ht,Er=new U;function Ar(t=new qe,e=new wr){Vt.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function Lr(t,e,n,i,a,r,s){const o=Sr.distanceSqToPoint(t);if(o<n){const n=new U;Sr.closestPointToPoint(t,n),n.applyMatrix4(i);const c=a.ray.origin.distanceTo(n);if(c<a.near||c>a.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:s})}}Ar.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Ar,isPoints:!0,copy:function(t){return Vt.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,a=t.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Tr.copy(n.boundingSphere),Tr.applyMatrix4(i),Tr.radius+=a,!1===t.ray.intersectsSphere(Tr))return;br.copy(i).invert(),Sr.copy(t.ray).applyMatrix4(br);const s=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,s=n.attributes.position;if(null!==a)for(let n=Math.max(0,r.start),c=Math.min(a.count,r.start+r.count);n<c;n++){const r=a.getX(n);Er.fromBufferAttribute(s,r),Lr(Er,r,o,i,t,e,this)}else for(let n=Math.max(0,r.start),a=Math.min(s.count,r.start+r.count);n<a;n++)Er.fromBufferAttribute(s,n),Lr(Er,n,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),class extends q{constructor(t,e,n,i,a,r,o,c,l){super(t,e,n,i,a,r,o,c,l),this.format=void 0!==o?o:p,this.minFilter=void 0!==r?r:s,this.magFilter=void 0!==a?a:s,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;class Cr extends q{constructor(t,e,n,i,a,r,s,o,c,l,h,u){super(null,r,s,o,c,l,i,a,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Cr.prototype.isCompressedTexture=!0,class extends q{constructor(t,e,n,i,a,r,s,o,c){super(t,e,n,i,a,r,s,o,c),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends q{constructor(t,e,n,i,a,s,o,l,h,u){if((u=void 0!==u?u:m)!==m&&u!==g)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===m&&(n=c),void 0===n&&u===g&&(n=d),super(null,i,a,s,o,l,u,n,h),this.image={width:t,height:e},this.magFilter=void 0!==o?o:r,this.minFilter=void 0!==l?l:r,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0,new U,new U,new U,new re;function Rr(t,e,n,i,a){let r,s;if(a===function(t,e,n,i){let a=0;for(let r=e,s=n-i;r<n;r+=i)a+=(t[s]-t[r])*(t[r+1]+t[s+1]),s=r;return a}(t,e,n,i)>0)for(r=e;r<n;r+=i)s=Qr(r,t[r],t[r+1],s);else for(r=n-i;r>=e;r-=i)s=Qr(r,t[r],t[r+1],s);return s&&Wr(s,s.next)&&(Kr(s),s=s.next),s}function Pr(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Wr(i,i.next)&&0!==Vr(i.prev,i,i.next))i=i.next;else{if(Kr(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Dr(t,e,n,i,a,r,s){if(!t)return;!s&&r&&function(t,e,n,i){let a=t;do{null===a.z&&(a.z=Gr(a.x,a.y,e,n,i)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next}while(a!==t);a.prevZ.nextZ=null,a.prevZ=null,function(t){let e,n,i,a,r,s,o,c,l=1;do{for(n=t,t=null,r=null,s=0;n;){for(s++,i=n,o=0,e=0;e<l&&(o++,i=i.nextZ,i);e++);for(c=l;o>0||c>0&&i;)0!==o&&(0===c||!i||n.z<=i.z)?(a=n,n=n.nextZ,o--):(a=i,i=i.nextZ,c--),r?r.nextZ=a:t=a,a.prevZ=r,r=a;n=i}r.nextZ=null,l*=2}while(s>1)}(a)}(t,i,a,r);let o,c,l=t;for(;t.prev!==t.next;)if(o=t.prev,c=t.next,r?Nr(t,i,a,r):Ir(t))e.push(o.i/n),e.push(t.i/n),e.push(c.i/n),Kr(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?Dr(t=Or(Pr(t),e,n),e,n,i,a,r,2):2===s&&zr(t,e,n,i,a,r):Dr(Pr(t),e,n,i,a,r,1);break}}function Ir(t){const e=t.prev,n=t,i=t.next;if(Vr(e,n,i)>=0)return!1;let a=t.next.next;for(;a!==t.prev;){if(Ur(e.x,e.y,n.x,n.y,i.x,i.y,a.x,a.y)&&Vr(a.prev,a,a.next)>=0)return!1;a=a.next}return!0}function Nr(t,e,n,i){const a=t.prev,r=t,s=t.next;if(Vr(a,r,s)>=0)return!1;const o=a.x<r.x?a.x<s.x?a.x:s.x:r.x<s.x?r.x:s.x,c=a.y<r.y?a.y<s.y?a.y:s.y:r.y<s.y?r.y:s.y,l=a.x>r.x?a.x>s.x?a.x:s.x:r.x>s.x?r.x:s.x,h=a.y>r.y?a.y>s.y?a.y:s.y:r.y>s.y?r.y:s.y,u=Gr(o,c,e,n,i),d=Gr(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Ur(a.x,a.y,r.x,r.y,s.x,s.y,p.x,p.y)&&Vr(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Ur(a.x,a.y,r.x,r.y,s.x,s.y,f.x,f.y)&&Vr(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Ur(a.x,a.y,r.x,r.y,s.x,s.y,p.x,p.y)&&Vr(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Ur(a.x,a.y,r.x,r.y,s.x,s.y,f.x,f.y)&&Vr(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Or(t,e,n){let i=t;do{const a=i.prev,r=i.next.next;!Wr(a,r)&&Zr(a,i,i.next,r)&&Yr(a,r)&&Yr(r,a)&&(e.push(a.i/n),e.push(i.i/n),e.push(r.i/n),Kr(i),Kr(i.next),i=t=r),i=i.next}while(i!==t);return Pr(i)}function zr(t,e,n,i,a,r){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&kr(s,t)){let o=Jr(s,t);return s=Pr(s,s.next),o=Pr(o,o.next),Dr(s,e,n,i,a,r),void Dr(o,e,n,i,a,r)}t=t.next}s=s.next}while(s!==t)}function qr(t,e){return t.x-e.x}function Hr(t,e){if(e=function(t,e){let n=e;const i=t.x,a=t.y;let r,s=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){const t=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(a===n.y)return n;if(a===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!r)return null;if(i===s)return r;const o=r,c=r.x,l=r.y;let h,u=1/0;n=r;do{i>=n.x&&n.x>=c&&i!==n.x&&Ur(a<l?i:s,a,c,l,a<l?s:i,a,n.x,n.y)&&(h=Math.abs(a-n.y)/(i-n.x),Yr(n,t)&&(h<u||h===u&&(n.x>r.x||n.x===r.x&&Br(r,n)))&&(r=n,u=h)),n=n.next}while(n!==o);return r}(t,e)){const n=Jr(e,t);Pr(e,e.next),Pr(n,n.next)}}function Br(t,e){return Vr(t.prev,t,e.prev)<0&&Vr(e.next,t,t.next)<0}function Gr(t,e,n,i,a){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*a)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*a)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Fr(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Ur(t,e,n,i,a,r,s,o){return(a-s)*(e-o)-(t-s)*(r-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(r-o)-(a-s)*(i-o)>=0}function kr(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Zr(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Yr(t,e)&&Yr(e,t)&&function(t,e){let n=t,i=!1;const a=(t.x+e.x)/2,r=(t.y+e.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&a<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Vr(t.prev,t,e.prev)||Vr(t,e.prev,e))||Wr(t,e)&&Vr(t.prev,t,t.next)>0&&Vr(e.prev,e,e.next)>0)}function Vr(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Wr(t,e){return t.x===e.x&&t.y===e.y}function Zr(t,e,n,i){const a=Xr(Vr(t,e,n)),r=Xr(Vr(t,e,i)),s=Xr(Vr(n,i,t)),o=Xr(Vr(n,i,e));return a!==r&&s!==o||!(0!==a||!jr(t,n,e))||!(0!==r||!jr(t,i,e))||!(0!==s||!jr(n,t,i))||!(0!==o||!jr(n,e,i))}function jr(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Xr(t){return t>0?1:t<0?-1:0}function Yr(t,e){return Vr(t.prev,t,t.next)<0?Vr(t,e,t.next)>=0&&Vr(t,t.prev,e)>=0:Vr(t,e,t.prev)<0||Vr(t,t.next,e)<0}function Jr(t,e){const n=new $r(t.i,t.x,t.y),i=new $r(e.i,e.x,e.y),a=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=a,a.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function Qr(t,e,n,i){const a=new $r(t,e,n);return i?(a.next=i.next,a.prev=i,i.next.prev=a,i.next=a):(a.prev=a,a.next=a),a}function Kr(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function $r(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const ts={area:function(t){const e=t.length;let n=0;for(let i=e-1,a=0;a<e;i=a++)n+=t[i].x*t[a].y-t[a].x*t[i].y;return.5*n},isClockWise:function(t){return ts.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],a=[];es(t),ns(n,t);let r=t.length;e.forEach(es);for(let t=0;t<e.length;t++)i.push(r),r+=e[t].length,ns(n,e[t]);const s=function(t,e,n){n=n||2;const i=e&&e.length,a=i?e[0]*n:t.length;let r=Rr(t,0,a,n,!0);const s=[];if(!r||r.next===r.prev)return s;let o,c,l,h,u,d,p;if(i&&(r=function(t,e,n,i){const a=[];let r,s,o,c,l;for(r=0,s=e.length;r<s;r++)o=e[r]*i,c=r<s-1?e[r+1]*i:t.length,l=Rr(t,o,c,i,!1),l===l.next&&(l.steiner=!0),a.push(Fr(l));for(a.sort(qr),r=0;r<a.length;r++)Hr(a[r],n),n=Pr(n,n.next);return n}(t,e,r,n)),t.length>80*n){o=l=t[0],c=h=t[1];for(let e=n;e<a;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=Math.max(l-o,h-c),p=0!==p?1/p:0}return Dr(r,s,n,o,c,p),s}(n,i);for(let t=0;t<s.length;t+=3)a.push(s.slice(t,t+3));return a}};function es(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function ns(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class is extends qe{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],a=[];for(let e=0,n=t.length;e<n;e++)r(t[e]);function r(t){const r=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:as;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,v,x,y,_,M=!1;f&&(g=f.getSpacedPoints(o),M=!0,l=!1,v=f.computeFrenetFrames(o,!1),x=new U,y=new U,_=new U),l||(p=0,h=0,u=0,d=0);const w=t.extractPoints(s);let b=w.shape;const S=w.holes;if(!ts.isClockWise(b)){b=b.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];ts.isClockWise(e)&&(S[t]=e.reverse())}}const T=ts.triangulateShape(b,S),E=b;for(let t=0,e=S.length;t<e;t++){const e=S[t];b=b.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const L=b.length,C=T.length;function R(t,e,n){let i,a,r;const s=t.x-e.x,o=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=s*s+o*o,u=s*l-o*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-o/u,f=e.y+s/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-o*c);i=p+s*m-t.x,a=f+o*m-t.y;const g=i*i+a*a;if(g<=2)return new D(i,a);r=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(l)&&(t=!0),t?(i=-o,a=s,r=Math.sqrt(h)):(i=s,a=o,r=Math.sqrt(h/2))}return new D(i/r,a/r)}const P=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),P[t]=R(E[t],E[n],E[i]);const I=[];let N,O=P.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];N=[];for(let t=0,n=e.length,i=n-1,a=t+1;t<n;t++,i++,a++)i===n&&(i=0),a===n&&(a=0),N[t]=R(e[t],e[i],e[a]);I.push(N),O=O.concat(N)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);H(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=I[t];for(let t=0,a=e.length;t<a;t++){const a=A(e[t],N[t],i);H(a.x,a.y,-n)}}}const z=u+d;for(let t=0;t<L;t++){const e=l?A(b[t],O[t],z):b[t];M?(y.copy(v.normals[0]).multiplyScalar(e.x),x.copy(v.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(y).add(x),H(_.x,_.y,_.z)):H(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<L;e++){const n=l?A(b[e],O[e],z):b[e];M?(y.copy(v.normals[t]).multiplyScalar(n.x),x.copy(v.binormals[t]).multiplyScalar(n.y),_.copy(g[t]).add(y).add(x),H(_.x,_.y,_.z)):H(n.x,n.y,c/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],P[t],i);H(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];N=I[t];for(let t=0,a=e.length;t<a;t++){const a=A(e[t],N[t],i);M?H(a.x,a.y+g[o-1].y,g[o-1].x+n):H(a.x,a.y,c+n)}}}function q(t,e){let n=t.length;for(;--n>=0;){const i=n;let a=n-1;a<0&&(a=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=L*t,r=L*(t+1);G(e+i+n,e+a+n,e+a+r,e+i+r)}}}function H(t,e,n){r.push(t),r.push(e),r.push(n)}function B(t,e,a){F(t),F(e),F(a);const r=i.length/3,s=m.generateTopUV(n,i,r-3,r-2,r-1);k(s[0]),k(s[1]),k(s[2])}function G(t,e,a,r){F(t),F(e),F(r),F(e),F(a),F(r);const s=i.length/3,o=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);k(o[0]),k(o[1]),k(o[3]),k(o[1]),k(o[2]),k(o[3])}function F(t){i.push(r[3*t+0]),i.push(r[3*t+1]),i.push(r[3*t+2])}function k(t){a.push(t.x),a.push(t.y)}!function(){const t=i.length/3;if(l){let t=0,e=L*t;for(let t=0;t<C;t++){const n=T[t];B(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=L*t;for(let t=0;t<C;t++){const n=T[t];B(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<C;t++){const e=T[t];B(e[2],e[1],e[0])}for(let t=0;t<C;t++){const e=T[t];B(e[0]+L*o,e[1]+L*o,e[2]+L*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;q(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];q(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Ae(i,3)),this.setAttribute("uv",new Ae(a,2)),this.computeVertexNormals()}toJSON(){const t=qe.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const as={generateTopUV:function(t,e,n,i,a){const r=e[3*n],s=e[3*n+1],o=e[3*i],c=e[3*i+1],l=e[3*a],h=e[3*a+1];return[new D(r,s),new D(o,c),new D(l,h)]},generateSideWallUV:function(t,e,n,i,a,r){const s=e[3*n],o=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*a],p=e[3*a+1],f=e[3*a+2],m=e[3*r],g=e[3*r+1],v=e[3*r+2];return Math.abs(o-h)<.01?[new D(s,1-c),new D(l,1-u),new D(d,1-f),new D(m,1-v)]:[new D(o,1-c),new D(h,1-u),new D(p,1-f),new D(g,1-v)]}};function rs(t,e,n){qe.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],a=[],r=[],s=[],o=1e-5,c=new U,l=new U,h=new U,u=new U,d=new U;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let i=0;i<=n;i++){const p=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,p,l),a.push(l.x,l.y,l.z),i-o>=0?(t(i-o,p,h),u.subVectors(l,h)):(t(i+o,p,h),u.subVectors(h,l)),p-o>=0?(t(i,p-o,h),d.subVectors(l,h)):(t(i,p+o,h),d.subVectors(h,l)),c.crossVectors(u,d).normalize(),r.push(c.x,c.y,c.z),s.push(i,p)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*p+n,a=t*p+n+1,r=(t+1)*p+n+1,s=(t+1)*p+n;i.push(e,a,s),i.push(a,r,s)}this.setIndex(i),this.setAttribute("position",new Ae(a,3)),this.setAttribute("normal",new Ae(r,3)),this.setAttribute("uv",new Ae(s,2))}rs.prototype=Object.create(qe.prototype),rs.prototype.constructor=rs;class ss extends qe{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],a=[],r=[];let s=0,o=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(s,o,e),s+=o,o=0;function c(t){const s=i.length/3,c=t.extractPoints(e);let l=c.shape;const h=c.holes;!1===ts.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ts.isClockWise(e)&&(h[t]=e.reverse())}const u=ts.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];i.push(e.x,e.y,0),a.push(0,0,1),r.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+s,a=e[1]+s,r=e[2]+s;n.push(i,a,r),o+=3}}this.setIndex(n),this.setAttribute("position",new Ae(i,3)),this.setAttribute("normal",new Ae(a,3)),this.setAttribute("uv",new Ae(r,2))}toJSON(){const t=qe.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}(class extends oe{constructor(t){super(),this.type="ShadowMaterial",this.color=new fe(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;function os(t){oe.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}function cs(t){os.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new D(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=P.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}(class extends cn{constructor(t){super(t),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0,os.prototype=Object.create(oe.prototype),os.prototype.constructor=os,os.prototype.isMeshStandardMaterial=!0,os.prototype.copy=function(t){return oe.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this},cs.prototype=Object.create(os.prototype),cs.prototype.constructor=cs,cs.prototype.isMeshPhysicalMaterial=!0,cs.prototype.copy=function(t){return os.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new fe).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};(class extends oe{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new fe(16777215),this.specular=new fe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshPhongMaterial=!0;(class extends oe{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new fe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class extends oe{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends oe{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class extends oe{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new fe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends dr{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const ls={arraySlice:function(t,e,n){return ls.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,a=new t.constructor(i);for(let r=0,s=0;s!==i;++r){const i=n[r]*e;for(let n=0;n!==e;++n)a[s++]=t[i+n]}return a},flattenJSON:function(t,e,n,i){let a=1,r=t[0];for(;void 0!==r&&void 0===r[i];)r=t[a++];if(void 0===r)return;let s=r[i];if(void 0!==s)if(Array.isArray(s))do{s=r[i],void 0!==s&&(e.push(r.time),n.push.apply(n,s)),r=t[a++]}while(void 0!==r);else if(void 0!==s.toArray)do{s=r[i],void 0!==s&&(e.push(r.time),s.toArray(n,n.length)),r=t[a++]}while(void 0!==r);else do{s=r[i],void 0!==s&&(e.push(r.time),n.push(s)),r=t[a++]}while(void 0!==r)},subclip:function(t,e,n,i,a=30){const r=t.clone();r.name=e;const s=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],o=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*a;if(!(r<n||r>=i)){c.push(e.times[t]);for(let n=0;n<o;++n)l.push(e.values[t*o+n])}}0!==c.length&&(e.times=ls.convertArray(c,e.times.constructor),e.values=ls.convertArray(l,e.values.constructor),s.push(e))}r.tracks=s;let o=1/0;for(let t=0;t<r.tracks.length;++t)o>r.tracks[t].times[0]&&(o=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const a=n.tracks.length,r=e/i;for(let e=0;e<a;++e){const i=n.tracks[e],a=i.ValueTypeName;if("bool"===a||"string"===a)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===a}));if(void 0===s)continue;let o=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=c/3);let l=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(r<=i.times[0]){const t=o,e=c-o;d=ls.arraySlice(i.values,t,e)}else if(r>=i.times[u]){const t=u*c+o,e=t+c-o;d=ls.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=o,n=c-o;t.evaluate(r),d=ls.arraySlice(t.resultBuffer,e,n)}"quaternion"===a&&(new F).fromArray(d).normalize().conjugate().toArray(d);const p=s.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===a)F.multiplyQuaternionsFlat(s.values,e,d,0,s.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)s.values[e+n]-=d[n]}}}return t.blendMode=2501,t}};function hs(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function us(t,e,n,i){hs.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function ds(t,e,n,i){hs.call(this,t,e,n,i)}function ps(t,e,n,i){hs.call(this,t,e,n,i)}Object.assign(hs.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],a=e[n-1];t:{e:{let r;n:{i:if(!(t<i)){for(let r=n+2;;){if(void 0===i){if(t<a)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,a)}if(n===r)break;if(a=i,i=e[++n],t<i)break e}r=e.length;break n}if(t>=a)break t;{const s=e[1];t<s&&(n=2,a=s);for(let r=n-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===r)break;if(i=a,a=e[--n-1],t>=a)break e}r=n,n=0}}for(;n<r;){const i=n+r>>>1;t<e[i]?r=i:n=i+1}if(i=e[n],a=e[n-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,a,t)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,a=t*i;for(let t=0;t!==i;++t)e[t]=n[a+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(hs.prototype,{beforeStart_:hs.prototype.copySampleValue_,afterEnd_:hs.prototype.copySampleValue_}),us.prototype=Object.assign(Object.create(hs.prototype),{constructor:us,DefaultSettings_:{endingStart:_,endingEnd:_},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let a=t-2,r=t+1,s=i[a],o=i[r];if(void 0===s)switch(this.getSettings_().endingStart){case M:a=t,s=2*e-n;break;case w:a=i.length-2,s=e+i[a]-i[a+1];break;default:a=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case M:r=t,o=2*n-e;break;case w:r=1,o=n+i[1]-i[0];break;default:r=t-1,o=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(o-n),this._offsetPrev=a*l,this._offsetNext=r*l},interpolate_:function(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,y=d*m-d*f;for(let t=0;t!==s;++t)a[t]=g*r[l+t]+v*r[c+t]+x*r[o+t]+y*r[h+t];return a}}),ds.prototype=Object.assign(Object.create(hs.prototype),{constructor:ds,interpolate_:function(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=t*s,c=o-s,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==s;++t)a[t]=r[c+t]*h+r[o+t]*l;return a}}),ps.prototype=Object.assign(Object.create(hs.prototype),{constructor:ps,interpolate_:function(t){return this.copySampleValue_(t-1)}});class fs{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ls.convertArray(e,this.TimeBufferType),this.values=ls.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:ls.convertArray(t.times,Array),values:ls.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new ps(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ds(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new us(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case v:e=this.InterpolantFactoryMethodDiscrete;break;case x:e=this.InterpolantFactoryMethodLinear;break;case y:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return v;case this.InterpolantFactoryMethodLinear:return x;case this.InterpolantFactoryMethodSmooth:return y}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let a=0,r=i-1;for(;a!==i&&n[a]<t;)++a;for(;-1!==r&&n[r]>e;)--r;if(++r,0!==a||r!==i){a>=r&&(r=Math.max(r,1),a=r-1);const t=this.getValueSize();this.times=ls.arraySlice(n,a,r),this.values=ls.arraySlice(this.values,a*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,a=n.length;0===a&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==a;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,r),t=!1;break}r=i}if(void 0!==i&&ls.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=ls.arraySlice(this.times),e=ls.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===y,a=t.length-1;let r=1;for(let s=1;s<a;++s){let a=!1;const o=t[s];if(o!==t[s+1]&&(1!==s||o!==t[0]))if(i)a=!0;else{const t=s*n,i=t-n,r=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[r+s]){a=!0;break}}}if(a){if(s!==r){t[r]=t[s];const i=s*n,a=r*n;for(let t=0;t!==n;++t)e[a+t]=e[i+t]}++r}}if(a>0){t[r]=t[a];for(let t=a*n,i=r*n,s=0;s!==n;++s)e[i+s]=e[t+s];++r}return r!==t.length?(this.times=ls.arraySlice(t,0,r),this.values=ls.arraySlice(e,0,r*n)):(this.times=t,this.values=e),this}clone(){const t=ls.arraySlice(this.times,0),e=ls.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}fs.prototype.TimeBufferType=Float32Array,fs.prototype.ValueBufferType=Float32Array,fs.prototype.DefaultInterpolation=x;class ms extends fs{}ms.prototype.ValueTypeName="bool",ms.prototype.ValueBufferType=Array,ms.prototype.DefaultInterpolation=v,ms.prototype.InterpolantFactoryMethodLinear=void 0,ms.prototype.InterpolantFactoryMethodSmooth=void 0;class gs extends fs{}gs.prototype.ValueTypeName="color";class vs extends fs{}function xs(t,e,n,i){hs.call(this,t,e,n,i)}vs.prototype.ValueTypeName="number",xs.prototype=Object.assign(Object.create(hs.prototype),{constructor:xs,interpolate_:function(t,e,n,i){const a=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=(n-e)/(i-e);let c=t*s;for(let t=c+s;c!==t;c+=4)F.slerpFlat(a,0,r,c-s,r,c,o);return a}});class ys extends fs{InterpolantFactoryMethodLinear(t){return new xs(this.times,this.values,this.getValueSize(),t)}}ys.prototype.ValueTypeName="quaternion",ys.prototype.DefaultInterpolation=x,ys.prototype.InterpolantFactoryMethodSmooth=void 0;class _s extends fs{}_s.prototype.ValueTypeName="string",_s.prototype.ValueBufferType=Array,_s.prototype.DefaultInterpolation=v,_s.prototype.InterpolantFactoryMethodLinear=void 0,_s.prototype.InterpolantFactoryMethodSmooth=void 0;class Ms extends fs{}Ms.prototype.ValueTypeName="vector";class ws{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=P.generateUUID(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,a=n.length;t!==a;++t)e.push(bs(n[t]).scale(i));const a=new this(t.name,t.duration,e,t.blendMode);return a.uuid=t.uuid,a}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(fs.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const a=e.length,r=[];for(let t=0;t<a;t++){let s=[],o=[];s.push((t+a-1)%a,t,(t+1)%a),o.push(0,1,0);const c=ls.getKeyframeOrder(s);s=ls.sortedArray(s,1,c),o=ls.sortedArray(o,1,c),i||0!==s[0]||(s.push(a),o.push(o[0])),r.push(new vs(".morphTargetInfluences["+e[t].name+"]",s,o).scale(1/n))}return new this(t,-1,r)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},a=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.name.match(a);if(r&&r.length>1){const t=r[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const r=[];for(const t in i)r.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return r}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,a){if(0!==n.length){const r=[],s=[];ls.flattenJSON(n,r,s,i),0!==r.length&&a.push(new t(e,r,s))}},i=[],a=t.name||"default",r=t.fps||30,s=t.blendMode;let o=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const a=c[t].keys;if(a&&0!==a.length)if(a[0].morphTargets){const t={};let e;for(e=0;e<a.length;e++)if(a[e].morphTargets)for(let n=0;n<a[e].morphTargets.length;n++)t[a[e].morphTargets[n]]=-1;for(const n in t){const t=[],r=[];for(let i=0;i!==a[e].morphTargets.length;++i){const i=a[e];t.push(i.time),r.push(i.morphTarget===n?1:0)}i.push(new vs(".morphTargetInfluence["+n+"]",t,r))}o=t.length*(r||1)}else{const r=".bones["+e[t].name+"]";n(Ms,r+".position",a,"pos",i),n(ys,r+".quaternion",a,"rot",i),n(Ms,r+".scale",a,"scl",i)}}return 0===i.length?null:new this(a,o,i,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function bs(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return vs;case"vector":case"vector2":case"vector3":case"vector4":return Ms;case"color":return gs;case"quaternion":return ys;case"bool":case"boolean":return ms;case"string":return _s}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];ls.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Ss={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const Ts=new function(t,e,n){const i=this;let a,r=!1,s=0,o=0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===r&&void 0!==i.onStart&&i.onStart(t,s,o),r=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}};function Es(t){this.manager=void 0!==t?t:Ts,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Es.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,a){n.load(t,i,e,a)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const As={};function Ls(t){Es.call(this,t)}function Cs(t){Es.call(this,t)}Ls.prototype=Object.assign(Object.create(Es.prototype),{constructor:Ls,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,r=Ss.get(t);if(void 0!==r)return a.manager.itemStart(t),setTimeout((function(){e&&e(r),a.manager.itemEnd(t)}),0),r;if(void 0!==As[t])return void As[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let o;if(s){const n=s[1],r=!!s[2];let o=s[3];o=decodeURIComponent(o),r&&(o=atob(o));try{let i;const r=(this.responseType||"").toLowerCase();switch(r){case"arraybuffer":case"blob":const t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o.charCodeAt(e);i="blob"===r?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(o,n);break;case"json":i=JSON.parse(o);break;default:i=o}setTimeout((function(){e&&e(i),a.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)}),0)}}else{As[t]=[],As[t].push({onLoad:e,onProgress:n,onError:i}),o=new XMLHttpRequest,o.open("GET",t,!0),o.addEventListener("load",(function(e){const n=this.response,i=As[t];if(delete As[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ss.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}a.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}a.manager.itemError(t),a.manager.itemEnd(t)}}),!1),o.addEventListener("progress",(function(e){const n=As[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),o.addEventListener("error",(function(e){const n=As[t];delete As[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}a.manager.itemError(t),a.manager.itemEnd(t)}),!1),o.addEventListener("abort",(function(e){const n=As[t];delete As[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}a.manager.itemError(t),a.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(o.responseType=this.responseType),void 0!==this.withCredentials&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)o.setRequestHeader(t,this.requestHeader[t]);o.send(null)}return a.manager.itemStart(t),o},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Cs.prototype=Object.assign(Object.create(Es.prototype),{constructor:Cs,load:function(t,e,n,i){const a=this,r=[],o=new Cr,c=new Ls(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(a.withCredentials);let l=0;function h(h){c.load(t[h],(function(t){const n=a.parse(t,!0);r[h]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(o.minFilter=s),o.image=r,o.format=n.format,o.needsUpdate=!0,e&&e(o))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)h(e);else c.load(t,(function(t){const n=a.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){r[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)r[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),r[e].format=n.format,r[e].width=n.width,r[e].height=n.height}o.image=r}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=s),o.format=n.format,o.needsUpdate=!0,e&&e(o)}),n,i);return o}});class Rs extends Es{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,r=Ss.get(t);if(void 0!==r)return a.manager.itemStart(t),setTimeout((function(){e&&e(r),a.manager.itemEnd(t)}),0),r;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),Ss.add(t,this),e&&e(this),a.manager.itemEnd(t)}function c(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",c,!1),i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),a.manager.itemStart(t),s.src=t,s}}class Ps extends Es{constructor(t){super(t)}load(t,e,n,i){const a=new pn,r=new Rs(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let s=0;function o(n){r.load(t[n],(function(t){a.images[n]=t,s++,6===s&&(a.needsUpdate=!0,e&&e(a))}),void 0,i)}for(let e=0;e<t.length;++e)o(e);return a}}function Ds(t){Es.call(this,t)}function Is(t){Es.call(this,t)}function Ns(){this.type="Curve",this.arcLengthDivisions=200}Ds.prototype=Object.assign(Object.create(Es.prototype),{constructor:Ds,load:function(t,e,n,a){const r=this,c=new mn,l=new Ls(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(r.withCredentials),l.load(t,(function(t){const n=r.parse(t);n&&(void 0!==n.image?c.image=n.image:void 0!==n.data&&(c.image.width=n.width,c.image.height=n.height,c.image.data=n.data),c.wrapS=void 0!==n.wrapS?n.wrapS:i,c.wrapT=void 0!==n.wrapT?n.wrapT:i,c.magFilter=void 0!==n.magFilter?n.magFilter:s,c.minFilter=void 0!==n.minFilter?n.minFilter:s,c.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(c.encoding=n.encoding),void 0!==n.flipY&&(c.flipY=n.flipY),void 0!==n.format&&(c.format=n.format),void 0!==n.type&&(c.type=n.type),void 0!==n.mipmaps&&(c.mipmaps=n.mipmaps,c.minFilter=o),1===n.mipmapCount&&(c.minFilter=s),void 0!==n.generateMipmaps&&(c.generateMipmaps=n.generateMipmaps),c.needsUpdate=!0,e&&e(c,n))}),n,a),c}}),Is.prototype=Object.assign(Object.create(Es.prototype),{constructor:Is,load:function(t,e,n,i){const a=new q,r=new Rs(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,(function(n){a.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);a.format=i?p:f,a.needsUpdate=!0,void 0!==e&&e(a)}),n,i),a}}),Object.assign(Ns.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),a=0;e.push(0);for(let r=1;r<=t;r++)n=this.getPoint(r/t),a+=n.distanceTo(i),e.push(a),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const a=n.length;let r;r=e||t*n[a-1];let s,o=0,c=a-1;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),s=n[i]-r,s<0)o=i+1;else{if(!(s>0)){c=i;break}c=i-1}if(i=c,n[i]===r)return i/(a-1);const l=n[i];return(i+(r-l)/(n[i+1]-l))/(a-1)},getTangent:function(t,e){const n=1e-4;let i=t-n,a=t+n;i<0&&(i=0),a>1&&(a=1);const r=this.getPoint(i),s=this.getPoint(a),o=e||(r.isVector2?new D:new U);return o.copy(s).sub(r).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new U,i=[],a=[],r=[],s=new U,o=new yt;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new U),i[e].normalize()}a[0]=new U,r[0]=new U;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),a[0].crossVectors(i[0],s),r[0].crossVectors(i[0],a[0]);for(let e=1;e<=t;e++){if(a[e]=a[e-1].clone(),r[e]=r[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(P.clamp(i[e-1].dot(i[e]),-1,1));a[e].applyMatrix4(o.makeRotationAxis(s,t))}r[e].crossVectors(i[e],a[e])}if(!0===e){let e=Math.acos(P.clamp(a[0].dot(a[t]),-1,1));e/=t,i[0].dot(s.crossVectors(a[0],a[t]))>0&&(e=-e);for(let n=1;n<=t;n++)a[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),r[n].crossVectors(i[n],a[n])}return{tangents:i,normals:a,binormals:r}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});class Os extends Ns{constructor(t=0,e=0,n=1,i=1,a=0,r=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=a,this.aEndAngle=r,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new D,i=2*Math.PI;let a=this.aEndAngle-this.aStartAngle;const r=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=i;for(;a>i;)a-=i;a<Number.EPSILON&&(a=r?0:i),!0!==this.aClockwise||r||(a===i?a=-i:a-=i);const s=this.aStartAngle+t*a;let o=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=c-this.aY;o=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(o,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Os.prototype.isEllipseCurve=!0;class zs extends Os{constructor(t,e,n,i,a,r){super(t,e,n,n,i,a,r),this.type="ArcCurve"}}function qs(){let t=0,e=0,n=0,i=0;function a(a,r,s,o){t=a,e=s,n=-3*a+3*r-2*s-o,i=2*a-2*r+s+o}return{initCatmullRom:function(t,e,n,i,r){a(e,n,r*(n-t),r*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,r,s,o){let c=(e-t)/r-(n-t)/(r+s)+(n-e)/s,l=(n-e)/s-(i-e)/(s+o)+(i-n)/o;c*=s,l*=s,a(e,n,c,l)},calc:function(a){const r=a*a;return t+e*a+n*r+i*(r*a)}}}zs.prototype.isArcCurve=!0;const Hs=new U,Bs=new qs,Gs=new qs,Fs=new qs;class Us extends Ns{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new U){const n=e,i=this.points,a=i.length,r=(a-(this.closed?0:1))*t;let s,o,c=Math.floor(r),l=r-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/a)+1)*a:0===l&&c===a-1&&(c=a-2,l=1),this.closed||c>0?s=i[(c-1)%a]:(Hs.subVectors(i[0],i[1]).add(i[0]),s=Hs);const h=i[c%a],u=i[(c+1)%a];if(this.closed||c+2<a?o=i[(c+2)%a]:(Hs.subVectors(i[a-1],i[a-2]).add(i[a-1]),o=Hs),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Bs.initNonuniformCatmullRom(s.x,h.x,u.x,o.x,e,n,i),Gs.initNonuniformCatmullRom(s.y,h.y,u.y,o.y,e,n,i),Fs.initNonuniformCatmullRom(s.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Bs.initCatmullRom(s.x,h.x,u.x,o.x,this.tension),Gs.initCatmullRom(s.y,h.y,u.y,o.y,this.tension),Fs.initCatmullRom(s.z,h.z,u.z,o.z,this.tension));return n.set(Bs.calc(l),Gs.calc(l),Fs.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new U).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function ks(t,e,n,i,a){const r=.5*(i-e),s=.5*(a-n),o=t*t;return(2*n-2*i+r+s)*(t*o)+(-3*n+3*i-2*r-s)*o+r*t+n}function Vs(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Ws(t,e,n,i,a){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,a)}Us.prototype.isCatmullRomCurve3=!0;class Zs extends Ns{constructor(t=new D,e=new D,n=new D,i=new D){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new D){const n=e,i=this.v0,a=this.v1,r=this.v2,s=this.v3;return n.set(Ws(t,i.x,a.x,r.x,s.x),Ws(t,i.y,a.y,r.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Zs.prototype.isCubicBezierCurve=!0;class js extends Ns{constructor(t=new U,e=new U,n=new U,i=new U){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new U){const n=e,i=this.v0,a=this.v1,r=this.v2,s=this.v3;return n.set(Ws(t,i.x,a.x,r.x,s.x),Ws(t,i.y,a.y,r.y,s.y),Ws(t,i.z,a.z,r.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}js.prototype.isCubicBezierCurve3=!0;class Xs extends Ns{constructor(t=new D,e=new D){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new D){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new D;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Xs.prototype.isLineCurve=!0;class Ys extends Ns{constructor(t=new D,e=new D,n=new D){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new D){const n=e,i=this.v0,a=this.v1,r=this.v2;return n.set(Vs(t,i.x,a.x,r.x),Vs(t,i.y,a.y,r.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ys.prototype.isQuadraticBezierCurve=!0;class Js extends Ns{constructor(t=new U,e=new U,n=new U){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new U){const n=e,i=this.v0,a=this.v1,r=this.v2;return n.set(Vs(t,i.x,a.x,r.x),Vs(t,i.y,a.y,r.y),Vs(t,i.z,a.z,r.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Js.prototype.isQuadraticBezierCurve3=!0;class Qs extends Ns{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new D){const n=e,i=this.points,a=(i.length-1)*t,r=Math.floor(a),s=a-r,o=i[0===r?r:r-1],c=i[r],l=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return n.set(ks(s,o.x,c.x,l.x,h.x),ks(s,o.y,c.y,l.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new D).fromArray(n))}return this}}Qs.prototype.isSplineCurve=!0;var Ks=Object.freeze({__proto__:null,ArcCurve:zs,CatmullRomCurve3:Us,CubicBezierCurve:Zs,CubicBezierCurve3:js,EllipseCurve:Os,LineCurve:Xs,LineCurve3:class extends Ns{constructor(t=new U,e=new U){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new U){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:Ys,QuadraticBezierCurve3:Js,SplineCurve:Qs});class $s extends Ns{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Xs(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,a=this.curves[i],r=a.getLength(),s=0===r?0:1-t/r;return a.getPointAt(s)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,a=this.curves;i<a.length;i++){const r=a[i],s=r&&r.isEllipseCurve?2*t:r&&(r.isLineCurve||r.isLineCurve3)?1:r&&r.isSplineCurve?t*r.points.length:t,o=r.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Ks[n.type]).fromJSON(n))}return this}}class to extends $s{constructor(t){super(),this.type="Path",this.currentPoint=new D,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Xs(this.currentPoint.clone(),new D(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const a=new Ys(this.currentPoint.clone(),new D(t,e),new D(n,i));return this.curves.push(a),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,a,r){const s=new Zs(this.currentPoint.clone(),new D(t,e),new D(n,i),new D(a,r));return this.curves.push(s),this.currentPoint.set(a,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Qs(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,a,r){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,a,r),this}absarc(t,e,n,i,a,r){return this.absellipse(t,e,n,n,i,a,r),this}ellipse(t,e,n,i,a,r,s,o){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,a,r,s,o),this}absellipse(t,e,n,i,a,r,s,o){const c=new Os(t,e,n,i,a,r,s,o);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class eo extends to{constructor(t){super(t),this.uuid=P.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new to).fromJSON(n))}return this}}class no extends Vt{constructor(t,e=1){super(),this.type="Light",this.color=new fe(t),this.intensity=e}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}no.prototype.isLight=!0;(class extends no{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Vt.DefaultUp),this.updateMatrix(),this.groundColor=new fe(e)}copy(t){return no.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const io=new yt,ao=new U,ro=new U;class so{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new D(512,512),this.map=null,this.mapPass=null,this.matrix=new yt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new xn,this._frameExtents=new D(1,1),this._viewportCount=1,this._viewports=[new B(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;ao.setFromMatrixPosition(t.matrixWorld),e.position.copy(ao),ro.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(ro),e.updateMatrixWorld(),io.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(io),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class oo extends so{constructor(){super(new hn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*P.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,a=t.distance||e.far;n===e.fov&&i===e.aspect&&a===e.far||(e.fov=n,e.aspect=i,e.far=a,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}oo.prototype.isSpotLightShadow=!0;(class extends no{constructor(t,e,n=0,i=Math.PI/3,a=0,r=1){super(t,e),this.type="SpotLight",this.position.copy(Vt.DefaultUp),this.updateMatrix(),this.target=new Vt,this.distance=n,this.angle=i,this.penumbra=a,this.decay=r,this.shadow=new oo}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isSpotLight=!0;const co=new yt,lo=new U,ho=new U;class uo extends so{constructor(){super(new hn(90,1,.5,500)),this._frameExtents=new D(4,2),this._viewportCount=6,this._viewports=[new B(2,1,1,1),new B(0,1,1,1),new B(3,1,1,1),new B(1,1,1,1),new B(3,0,1,1),new B(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,a=t.distance||n.far;a!==n.far&&(n.far=a,n.updateProjectionMatrix()),lo.setFromMatrixPosition(t.matrixWorld),n.position.copy(lo),ho.copy(n.position),ho.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(ho),n.updateMatrixWorld(),i.makeTranslation(-lo.x,-lo.y,-lo.z),co.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(co)}}uo.prototype.isPointLightShadow=!0;(class extends no{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new uo}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class po extends ln{constructor(t=-1,e=1,n=1,i=-1,a=.1,r=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=a,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,a,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let a=n-t,r=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=t*this.view.offsetX,r=a+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(a,r,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=Vt.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}po.prototype.isOrthographicCamera=!0;class fo extends so{constructor(){super(new po(-5,5,5,-5,.5,500))}}fo.prototype.isDirectionalLightShadow=!0;(class extends no{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Vt.DefaultUp),this.updateMatrix(),this.target=new Vt,this.shadow=new fo}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isDirectionalLight=!0;(class extends no{constructor(t,e){super(t,e),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends no{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class mo{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new U)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,a=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*i),e.addScaledVector(r[2],.488603*a),e.addScaledVector(r[3],.488603*n),e.addScaledVector(r[4],n*i*1.092548),e.addScaledVector(r[5],i*a*1.092548),e.addScaledVector(r[6],.315392*(3*a*a-1)),e.addScaledVector(r[7],n*a*1.092548),e.addScaledVector(r[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,a=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*i),e.addScaledVector(r[2],1.023328*a),e.addScaledVector(r[3],1.023328*n),e.addScaledVector(r[4],.858086*n*i),e.addScaledVector(r[5],.858086*i*a),e.addScaledVector(r[6],.743125*a*a-.247708),e.addScaledVector(r[7],.858086*n*a),e.addScaledVector(r[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,a=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*a,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*a,e[6]=.315392*(3*a*a-1),e[7]=1.092548*n*a,e[8]=.546274*(n*n-i*i)}}mo.prototype.isSphericalHarmonics3=!0;class go extends no{constructor(t=new mo,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}go.prototype.isLightProbe=!0;function vo(){qe.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function xo(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),xe.call(this,t,e,n),this.meshPerAttribute=i||1}function yo(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Es.call(this,t),this.options={premultiplyAlpha:"none"}}vo.prototype=Object.assign(Object.create(qe.prototype),{constructor:vo,isInstancedBufferGeometry:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=qe.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),xo.prototype=Object.assign(Object.create(xe.prototype),{constructor:xo,isInstancedBufferAttribute:!0,copy:function(t){return xe.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=xe.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),yo.prototype=Object.assign(Object.create(Es.prototype),{constructor:yo,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,r=Ss.get(t);if(void 0!==r)return a.manager.itemStart(t),setTimeout((function(){e&&e(r),a.manager.itemEnd(t)}),0),r;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(a.options,{colorSpaceConversion:"none"}))})).then((function(n){Ss.add(t,n),e&&e(n),a.manager.itemEnd(t)})).catch((function(e){i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)})),a.manager.itemStart(t)}});let _o;class Mo extends Es{constructor(t){super(t)}load(t,e,n,i){const a=this,r=new Ls(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(n){try{const t=n.slice(0);(void 0===_o&&(_o=new(window.AudioContext||window.webkitAudioContext)),_o).decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),a.manager.itemError(t)}}),n,i)}}(class extends go{constructor(t,e,n=1){super(void 0,n);const i=(new fe).set(t),a=(new fe).set(e),r=new U(i.r,i.g,i.b),s=new U(a.r,a.g,a.b),o=Math.sqrt(Math.PI),c=o*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(r).sub(s).multiplyScalar(c)}}).prototype.isHemisphereLightProbe=!0,class extends go{constructor(t,e=1){super(void 0,e);const n=(new fe).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0,new yt,new yt;class wo{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=bo(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=bo();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function bo(){return("undefined"==typeof performance?Date:performance).now()}class So{constructor(t,e,n){let i,a,r;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,a=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,a=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,a=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=a,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,a=t*i+i;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==i;++t)n[a+t]=n[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(n,a,0,t,i)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,a=this.cumulativeWeight,r=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-a,e)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,a=e+e;t!==a;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,a=i;t!==a;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,a){if(i>=.5)for(let i=0;i!==a;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){F.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,a){const r=this._workIndex*a;F.multiplyQuaternionsFlat(t,r,t,e,t,n),F.slerpFlat(t,e,t,e,t,r,i)}_lerp(t,e,n,i,a){const r=1-i;for(let s=0;s!==a;++s){const a=e+s;t[a]=t[a]*r+t[n+s]*i}}_lerpAdditive(t,e,n,i,a){for(let r=0;r!==a;++r){const a=e+r;t[a]=t[a]+t[n+r]*i}}}const To=new RegExp("[\\[\\]\\.:\\/]","g"),Eo="[^\\[\\]\\.:\\/]",Ao="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Lo=/((?:WC+[\/:])*)/.source.replace("WC",Eo),Co=/(WCOD+)?/.source.replace("WCOD",Ao),Ro=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Eo),Po=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Eo),Do=new RegExp("^"+Lo+Co+Ro+Po+"$"),Io=["material","materials","bones"];function No(t,e,n){const i=n||Oo.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Oo(t,e,n){this.path=e,this.parsedPath=n||Oo.parseTrackName(e),this.node=Oo.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(No.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=n.length;i!==a;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Oo,{Composite:No,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Oo.Composite(t,e,n):new Oo(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(To,"")},parseTrackName:function(t){const e=Do.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Io.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const a=t[i];if(a.name===e||a.uuid===e)return a;const r=n(a.children);if(r)return r}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(Oo.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(t||(t=Oo.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const r=t[i];if(void 0===r){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=a}else void 0!==r.fromArray&&void 0!==r.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Oo.prototype,{_getValue_unbound:Oo.prototype.getValue,_setValue_unbound:Oo.prototype.setValue});class zo{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const a=e.tracks,r=a.length,s=new Array(r),o={endingStart:_,endingEnd:_};for(let t=0;t!==r;++t){const e=a[t].createInterpolant(null);s[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,a=i/n,r=n/i;t.warp(1,a,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,a=i.time,r=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,c=s.sampleValues;return o[0]=a,o[1]=a+n,c[0]=t/r,c[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const a=this._startTime;if(null!==a){const i=(t-a)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const r=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(r),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,a=t.length;n!==a;++n)t[n].evaluate(r),e[n].accumulate(i,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,a=this._loopCount;const r=2202===n;if(0===t)return-1===a?i:r&&1==(1&a)?e-i:i;if(2200===n){-1===a&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===a&&(t>=0?(a=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,a+=Math.abs(n);const s=this.repetitions-a;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=a,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(r&&1==(1&a))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=M,i.endingEnd=M):(i.endingStart=t?this.zeroSlopeAtStart?M:_:w,i.endingEnd=e?this.zeroSlopeAtEnd?M:_:w)}_scheduleFading(t,e,n){const i=this._mixer,a=i.time;let r=this._weightInterpolant;null===r&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const s=r.parameterPositions,o=r.sampleValues;return s[0]=a,o[0]=e,s[1]=a+t,o[1]=n,this}}(class extends L{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,a=i.length,r=t._propertyBindings,s=t._interpolants,o=n.uuid,c=this._bindingsByRootAndName;let l=c[o];void 0===l&&(l={},c[o]=l);for(let t=0;t!==a;++t){const a=i[t],c=a.name;let h=l[c];if(void 0!==h)r[t]=h;else{if(h=r[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new So(Oo.create(n,c,i),a.ValueTypeName,a.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,c),r[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,a=this._actionsByClip;let r=a[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,a[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),r.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const a=t._clip.uuid,r=this._actionsByClip,s=r[a],o=s.knownActions,c=o[o.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,o[l]=c,o.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete r[a],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,a=this._bindings;let r=i[e];void 0===r&&(r={},i[e]=r),r[n]=t,t._cacheIndex=a.length,a.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,a=n.path,r=this._bindingsByRootAndName,s=r[i],o=e[e.length-1],c=t._cacheIndex;o._cacheIndex=c,e[c]=o,e.pop(),delete s[a],0===Object.keys(s).length&&delete r[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,a=e[i];t._cacheIndex=i,e[i]=t,a._cacheIndex=n,e[n]=a}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new ds(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,a=e[i];t.__cacheIndex=i,e[i]=t,a.__cacheIndex=n,e[n]=a}clipAction(t,e,n){const i=e||this._root,a=i.uuid;let r="string"==typeof t?ws.findByName(i,t):t;const s=null!==r?r.uuid:t,o=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==r?r.blendMode:2500),void 0!==o){const t=o.actionByRoot[a];if(void 0!==t&&t.blendMode===n)return t;c=o.knownActions[0],null===r&&(r=c._clip)}if(null===r)return null;const l=new zo(this,r,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,a),l}existingAction(t,e){const n=e||this._root,i=n.uuid,a="string"==typeof t?ws.findByName(n,t):t,r=a?a.uuid:t,s=this._actionsByClip[r];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,a=Math.sign(t),r=this._accuIndex^=1;for(let s=0;s!==n;++s)e[s]._update(i,t,a,r);const s=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)s[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,a=i[n];if(void 0!==a){const t=a.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const a=i._cacheIndex,r=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,r._cacheIndex=a,e[a]=r,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class qo{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new qo(void 0===this.value.clone?this.value:this.value.clone())}}function Ho(t,e,n){za.call(this,t,e),this.meshPerAttribute=n||1}function Bo(t,e,n,i,a){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=a,this.version=0}function Go(t,e,n=0,i=1/0){this.ray=new xt(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Rt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Fo(t,e){return t.distance-e.distance}function Uo(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,a=i.length;t<a;t++)Uo(i[t],e,n,!0)}}Ho.prototype=Object.assign(Object.create(za.prototype),{constructor:Ho,isInstancedInterleavedBuffer:!0,copy:function(t){return za.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=za.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=za.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Bo.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Bo.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Go.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e=!1,n=[]){return Uo(t,this,n,e),n.sort(Fo),n},intersectObjects:function(t,e=!1,n=[]){for(let i=0,a=t.length;i<a;i++)Uo(t[i],this,n,e);return n.sort(Fo),n}});const ko=new D;class Vo{constructor(t=new D(1/0,1/0),e=new D(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ko.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new D),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new D),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new D),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new D),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return ko.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function Wo(t){Vt.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Vo.prototype.isBox2=!0,Wo.prototype=Object.create(Vt.prototype),Wo.prototype.constructor=Wo,Wo.prototype.isImmediateRenderObject=!0;const Zo=new U,jo=new yt,Xo=new yt;function Yo(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Yo(t.children[n]));return e}const Jo=new Float32Array(1),Qo=(new Int32Array(Jo.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),Ko=5+Qo.length,$o=new me({side:1,depthWrite:!1,depthTest:!1}),{_lodPlanes:tc,_sizeLods:ec,_sigmas:nc}=(new en(new an,$o),ic());function ic(){const t=[],e=[],n=[];let i=8;for(let a=0;a<Ko;a++){const r=Math.pow(2,i);e.push(r);let s=1/r;a>4?s=Qo[a-8+4-1]:0==a&&(s=0),n.push(s);const o=1/(r-1),c=-o/2,l=1+o/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),v=new Float32Array(f*d*u),x=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),v.set(h,f*d*t);const a=[t,t,t,t,t,t];x.set(a,m*d*t)}const y=new qe;y.setAttribute("position",new xe(g,p)),y.setAttribute("uv",new xe(v,f)),y.setAttribute("faceIndex",new xe(x,m)),t.push(y),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}Math.sqrt(5),Ns.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ns.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},to.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends Mr{constructor(t=10,e=10,n=4473924,i=8947848){n=new fe(n),i=new fe(i);const a=e/2,r=t/e,s=t/2,o=[],c=[];for(let t=0,l=0,h=-s;t<=e;t++,h+=r){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);const e=t===a?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new qe;l.setAttribute("position",new Ae(o,3)),l.setAttribute("color",new Ae(c,3)),super(l,new dr({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends Mr{constructor(t){const e=Yo(t),n=new qe,i=[],a=[],r=new fe(0,0,1),s=new fe(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),a.push(r.r,r.g,r.b),a.push(s.r,s.g,s.b))}n.setAttribute("position",new Ae(i,3)),n.setAttribute("color",new Ae(a,3)),super(n,new dr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Xo.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const a=e[t];a.parent&&a.parent.isBone&&(jo.multiplyMatrices(Xo,a.matrixWorld),Zo.setFromMatrixPosition(jo),i.setXYZ(n,Zo.x,Zo.y,Zo.z),jo.multiplyMatrices(Xo,a.parent.matrixWorld),Zo.setFromMatrixPosition(jo),i.setXYZ(n+1,Zo.x,Zo.y,Zo.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Es.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}(t)},Es.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Vo.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Vo.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Vo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Vo.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},W.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},W.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},W.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},W.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},W.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},ht.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},xn.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},P.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},P.nearestPowerOfTwo=function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),P.floorPowerOfTwo(t)},P.nextPowerOfTwo=function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),P.ceilPowerOfTwo(t)},I.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},I.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},I.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},I.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},I.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},I.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},yt.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},yt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},yt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new U).setFromMatrixColumn(this,3)},yt.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},yt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},yt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},yt.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},yt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},yt.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},yt.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},yt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},yt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},yt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},yt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},yt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},yt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},yt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},yt.prototype.makeFrustum=function(t,e,n,i,a,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,a,r)},yt.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Xt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},F.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},F.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},xt.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},xt.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},xt.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},re.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},re.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},re.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},re.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},re.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},re.barycoordFromPoint=function(t,e,n,i,a){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),re.getBarycoord(t,e,n,i,a)},re.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),re.getNormal(t,e,n,i)},eo.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},eo.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new is(this,t)},eo.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ss(this,t)},D.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},D.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},D.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},U.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},U.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},U.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},U.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},U.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},U.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},U.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},U.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},U.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},B.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},B.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Vt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Vt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Vt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Vt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Vt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Vt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),en.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(en.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),rr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Ns.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),hn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(no.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(xe.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===E},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(E)}}}),xe.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?E:T),this},xe.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},xe.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},qe.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},qe.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new xe(arguments[1],arguments[2])))},qe.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},qe.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},qe.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},qe.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},qe.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(qe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(vo.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Go.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(za.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===E},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),za.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?E:T),this},za.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},is.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},is.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},is.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Oa.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},qo.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(oe.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new fe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(cs.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(cn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Da.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},Da.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Da.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Da.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Da.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Da.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Da.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Da.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Da.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Da.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Da.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Da.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Da.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Da.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Da.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Da.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Da.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Da.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Da.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Da.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Da.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Da.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Da.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Da.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Da.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Da.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:b}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(ba.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(G.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),class extends Vt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Mo).load(t,(function(t){e.setBuffer(t)})),this},dn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},dn.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},O.crossOrigin=void 0,O.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const a=new Is;a.setCrossOrigin(this.crossOrigin);const r=a.load(t,n,void 0,i);return e&&(r.mapping=e),r},O.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const a=new Ps;a.setCrossOrigin(this.crossOrigin);const r=a.load(t,n,void 0,i);return e&&(r.mapping=e),r},O.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},O.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"127"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="127");var ac=n(343),rc=n.n(ac),sc=n(270),oc=n.n(sc);(new class{constructor(){this.scene=new Oa,this.camera=new hn(45,window.innerWidth/window.innerHeight,.1,100),this.camera.position.z=1,this.camera.zoom=.075,this.renderer=new Da({alpha:!0,antialias:!0}),document.querySelector(".wave-canvas").appendChild(this.renderer.domElement),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(0,0),this.clock=new wo,this.onResize()}init(){this.createMesh()}createMesh(){var t=document.createElement("canvas");t.width=10089,t.height=6862;var e=t.getContext("2d"),n=document.createElement("img");n.setAttribute("src","data:image/svg+xml;base64,"+window.btoa(unescape(encodeURIComponent('<svg id="Слой_1" data-name="Слой 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1115.27 758.52"><defs><style>.cls-1{opacity:0.5;}.cls-2{fill:url(#Безымянный_градиент_125);}.cls-3{fill:#fff;}.cls-4{fill:url(#Безымянный_градиент_125-2);}.cls-5{fill:url(#Безымянный_градиент_125-3);}.cls-6{fill:url(#Безымянный_градиент_125-4);}.cls-7{fill:url(#Безымянный_градиент_125-5);}.cls-8{fill:url(#Безымянный_градиент_125-6);}.cls-9{fill:url(#Безымянный_градиент_125-7);}.cls-10{fill:url(#Безымянный_градиент_125-8);}.cls-11{fill:url(#Безымянный_градиент_125-9);}.cls-12{fill:url(#Безымянный_градиент_125-10);}.cls-13{fill:url(#Безымянный_градиент_125-11);}.cls-14{fill:url(#Безымянный_градиент_125-12);}.cls-15{fill:url(#Безымянный_градиент_125-13);}.cls-16{fill:url(#Безымянный_градиент_125-14);}.cls-17{fill:url(#Безымянный_градиент_125-15);}.cls-18{fill:url(#Безымянный_градиент_125-16);}.cls-19{fill:url(#Безымянный_градиент_125-17);}.cls-20{fill:url(#Безымянный_градиент_125-18);}.cls-21{fill:url(#Безымянный_градиент_125-19);}.cls-22{fill:url(#Безымянный_градиент_125-20);}.cls-23{fill:url(#Безымянный_градиент_125-21);}.cls-24{fill:url(#Безымянный_градиент_125-22);}.cls-25{fill:url(#Безымянный_градиент_125-23);}.cls-26{fill:url(#Безымянный_градиент_125-24);}.cls-27{fill:url(#Безымянный_градиент_125-25);}.cls-28{fill:url(#Безымянный_градиент_125-26);}.cls-29{fill:url(#Безымянный_градиент_125-27);}.cls-30{fill:url(#Безымянный_градиент_125-28);}.cls-31{fill:url(#Безымянный_градиент_125-29);}.cls-32{fill:url(#Безымянный_градиент_125-30);}.cls-33{fill:url(#Безымянный_градиент_125-31);}.cls-34{fill:url(#Безымянный_градиент_125-32);}.cls-35{fill:url(#Безымянный_градиент_125-33);}.cls-36{fill:url(#Безымянный_градиент_125-34);}.cls-37{fill:url(#Безымянный_градиент_125-35);}.cls-38{fill:url(#Безымянный_градиент_125-36);}.cls-39{fill:url(#Безымянный_градиент_125-37);}.cls-40{fill:url(#Безымянный_градиент_125-38);}.cls-41{fill:url(#Безымянный_градиент_125-39);}.cls-42{fill:url(#Безымянный_градиент_125-40);}.cls-43{fill:url(#Безымянный_градиент_125-41);}.cls-44{fill:url(#Безымянный_градиент_125-42);}.cls-45{fill:url(#Безымянный_градиент_125-43);}.cls-46{fill:url(#Безымянный_градиент_125-44);}.cls-47{fill:url(#Безымянный_градиент_125-45);}.cls-48{fill:url(#Безымянный_градиент_125-46);}.cls-49{fill:url(#Безымянный_градиент_125-47);}.cls-50{fill:url(#Безымянный_градиент_125-48);}.cls-51{fill:url(#Безымянный_градиент_125-49);}.cls-52{fill:url(#Безымянный_градиент_125-50);}.cls-53{fill:url(#Безымянный_градиент_125-51);}.cls-54{fill:url(#Безымянный_градиент_125-52);}.cls-55{fill:url(#Безымянный_градиент_125-53);}.cls-56{fill:url(#Безымянный_градиент_125-54);}.cls-57{fill:url(#Безымянный_градиент_125-55);}.cls-58{fill:url(#Безымянный_градиент_125-56);}.cls-59{fill:url(#Безымянный_градиент_125-57);}.cls-60{fill:url(#Безымянный_градиент_125-58);}.cls-61{fill:url(#Безымянный_градиент_125-59);}.cls-62{fill:url(#Безымянный_градиент_125-60);}.cls-63{fill:url(#Безымянный_градиент_125-61);}.cls-64{fill:url(#Безымянный_градиент_125-62);}.cls-65{fill:url(#Безымянный_градиент_125-63);}.cls-66{fill:url(#Безымянный_градиент_125-64);}.cls-67{fill:url(#Безымянный_градиент_125-65);}.cls-68{fill:url(#Безымянный_градиент_125-66);}.cls-69{fill:url(#Безымянный_градиент_125-67);}.cls-70{fill:url(#Безымянный_градиент_125-68);}.cls-71{fill:url(#Безымянный_градиент_125-69);}.cls-72{fill:url(#Безымянный_градиент_125-70);}.cls-73{fill:url(#Безымянный_градиент_125-71);}.cls-74{fill:url(#Безымянный_градиент_125-72);}.cls-75{fill:url(#Безымянный_градиент_125-73);}.cls-76{fill:url(#Безымянный_градиент_125-74);}.cls-77{fill:url(#Безымянный_градиент_125-75);}.cls-78{fill:url(#Безымянный_градиент_125-76);}.cls-79{fill:url(#Безымянный_градиент_125-77);}.cls-80{fill:url(#Безымянный_градиент_125-78);}.cls-81{fill:url(#Безымянный_градиент_125-79);}.cls-82{fill:url(#Безымянный_градиент_125-80);}.cls-83{fill:url(#Безымянный_градиент_125-81);}.cls-84{fill:url(#Безымянный_градиент_125-82);}.cls-85{fill:url(#Безымянный_градиент_125-83);}.cls-86{fill:url(#Безымянный_градиент_125-84);}.cls-87{fill:url(#Безымянный_градиент_125-85);}.cls-88{fill:url(#Безымянный_градиент_125-86);}.cls-89{fill:url(#Безымянный_градиент_125-87);}.cls-90{fill:url(#Безымянный_градиент_125-88);}.cls-91{fill:url(#Безымянный_градиент_125-89);}.cls-92{fill:url(#Безымянный_градиент_125-90);}.cls-93{fill:url(#Безымянный_градиент_125-91);}.cls-94{fill:url(#Безымянный_градиент_125-92);}.cls-95{fill:url(#Безымянный_градиент_125-93);}.cls-96{fill:url(#Безымянный_градиент_125-94);}.cls-97{fill:url(#Безымянный_градиент_125-95);}.cls-98{fill:url(#Безымянный_градиент_125-96);}.cls-99{fill:url(#Безымянный_градиент_125-97);}.cls-100{fill:url(#Безымянный_градиент_125-98);}.cls-101{fill:url(#Безымянный_градиент_125-99);}.cls-102{fill:url(#Безымянный_градиент_125-100);}.cls-103{fill:url(#Безымянный_градиент_125-101);}.cls-104{fill:url(#Безымянный_градиент_125-102);}.cls-105{fill:url(#Безымянный_градиент_125-103);}.cls-106{fill:url(#Безымянный_градиент_125-104);}.cls-107{fill:url(#Безымянный_градиент_125-105);}.cls-108{fill:url(#Безымянный_градиент_125-106);}.cls-109{fill:url(#Безымянный_градиент_125-107);}.cls-110{fill:url(#Безымянный_градиент_125-108);}.cls-111{fill:url(#Безымянный_градиент_125-109);}.cls-112{fill:url(#Безымянный_градиент_125-110);}.cls-113{fill:url(#Безымянный_градиент_125-111);}.cls-114{fill:url(#Безымянный_градиент_125-112);}.cls-115{fill:url(#Безымянный_градиент_125-113);}.cls-116{fill:url(#Безымянный_градиент_125-114);}.cls-117{fill:url(#Безымянный_градиент_125-115);}.cls-118{fill:url(#Безымянный_градиент_125-116);}.cls-119{fill:url(#Безымянный_градиент_125-117);}.cls-120{fill:url(#Безымянный_градиент_125-118);}.cls-121{fill:url(#Безымянный_градиент_125-119);}.cls-122{fill:url(#Безымянный_градиент_125-120);}.cls-123{fill:url(#Безымянный_градиент_125-121);}.cls-124{fill:url(#Безымянный_градиент_125-122);}.cls-125{fill:url(#Безымянный_градиент_125-123);}.cls-126{fill:url(#Безымянный_градиент_125-124);}.cls-127{fill:url(#Безымянный_градиент_125-125);}.cls-128{fill:url(#Безымянный_градиент_125-126);}.cls-129{fill:url(#Безымянный_градиент_125-127);}.cls-130{fill:url(#Безымянный_градиент_125-128);}.cls-131{fill:url(#Безымянный_градиент_125-129);}.cls-132{fill:url(#Безымянный_градиент_125-130);}.cls-133{fill:url(#Безымянный_градиент_125-131);}.cls-134{fill:url(#Безымянный_градиент_125-132);}.cls-135{fill:url(#Безымянный_градиент_125-133);}.cls-136{fill:url(#Безымянный_градиент_125-134);}.cls-137{fill:url(#Безымянный_градиент_125-135);}.cls-138{fill:url(#Безымянный_градиент_125-136);}.cls-139{fill:url(#Безымянный_градиент_125-137);}.cls-140{fill:url(#Безымянный_градиент_125-138);}</style><linearGradient id="Безымянный_градиент_125" x1="-41.04" y1="-166.23" x2="436.8" y2="109.65" gradientTransform="translate(254.26 190.77) rotate(21.18)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#23b1c0"/><stop offset="0.08" stop-color="#25b2c1"/><stop offset="0.1" stop-color="#2cb4c3"/><stop offset="0.12" stop-color="#38b8c6"/><stop offset="0.14" stop-color="#49becb"/><stop offset="0.15" stop-color="#5fc6d1"/><stop offset="0.17" stop-color="#7ad0d9"/><stop offset="0.18" stop-color="#9bdce2"/><stop offset="0.19" stop-color="#c1e9ed"/><stop offset="0.2" stop-color="#ebf8f9"/><stop offset="0.2" stop-color="#fff"/><stop offset="0.2" stop-color="#eff8f9"/><stop offset="0.21" stop-color="#c0e3e9"/><stop offset="0.22" stop-color="#96d1da"/><stop offset="0.23" stop-color="#72c2cd"/><stop offset="0.24" stop-color="#55b5c3"/><stop offset="0.25" stop-color="#3fabbb"/><stop offset="0.26" stop-color="#2fa4b5"/><stop offset="0.27" stop-color="#26a0b2"/><stop offset="0.29" stop-color="#239fb1"/><stop offset="0.29" stop-color="#3a95b2"/><stop offset="0.3" stop-color="#538bb4"/><stop offset="0.32" stop-color="#6782b5"/><stop offset="0.33" stop-color="#757cb5"/><stop offset="0.35" stop-color="#7d79b6"/><stop offset="0.38" stop-color="#7f78b6"/><stop offset="0.38" stop-color="#8c86bd"/><stop offset="0.39" stop-color="#bdbada"/><stop offset="0.41" stop-color="#e1dfee"/><stop offset="0.42" stop-color="#f7f7fa"/><stop offset="0.43" stop-color="#fff"/><stop offset="0.44" stop-color="#fbe5ec"/><stop offset="0.46" stop-color="#f7c9d8"/><stop offset="0.48" stop-color="#f3b3c7"/><stop offset="0.5" stop-color="#f1a3bc"/><stop offset="0.52" stop-color="#ef9ab5"/><stop offset="0.55" stop-color="#ef97b3"/><stop offset="0.57" stop-color="#ef99b5"/><stop offset="0.58" stop-color="#f1a1ba"/><stop offset="0.58" stop-color="#f3aec4"/><stop offset="0.59" stop-color="#f5c1d2"/><stop offset="0.59" stop-color="#f9d9e3"/><stop offset="0.59" stop-color="#fef6f9"/><stop offset="0.6" stop-color="#fff"/><stop offset="0.6" stop-color="#fceef2"/><stop offset="0.61" stop-color="#f8cfdc"/><stop offset="0.62" stop-color="#f4b6ca"/><stop offset="0.64" stop-color="#f1a3bc"/><stop offset="0.65" stop-color="#ef95b2"/><stop offset="0.67" stop-color="#ed8dac"/><stop offset="0.71" stop-color="#ed8baa"/><stop offset="0.73" stop-color="#ee8fad"/><stop offset="0.75" stop-color="#ef9ab5"/><stop offset="0.76" stop-color="#f2acc2"/><stop offset="0.78" stop-color="#f6c7d6"/><stop offset="0.8" stop-color="#fbe8ee"/><stop offset="0.81" stop-color="#fff"/><stop offset="0.83" stop-color="#fadfe7"/><stop offset="0.85" stop-color="#f4bcce"/><stop offset="0.87" stop-color="#f09fb9"/><stop offset="0.9" stop-color="#ec89a8"/><stop offset="0.93" stop-color="#ea799d"/><stop offset="0.96" stop-color="#e87096"/><stop offset="1" stop-color="#e86d94"/></linearGradient><linearGradient id="Безымянный_градиент_125-2" x1="-41.05" y1="-162.07" x2="436.78" y2="113.8" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-3" x1="-41.07" y1="-158.06" x2="436.76" y2="117.82" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-4" x1="-41.11" y1="-154.11" x2="436.72" y2="121.77" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-5" x1="-41.12" y1="-149.95" x2="436.71" y2="125.92" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-6" x1="-41.14" y1="-145.94" x2="436.69" y2="129.93" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-7" x1="-41.15" y1="-141.98" x2="436.68" y2="133.9" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-8" x1="-41.16" y1="-137.82" x2="436.66" y2="138.05" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-9" x1="-41.19" y1="-133.81" x2="436.64" y2="142.07" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-10" x1="-41.22" y1="-129.85" x2="436.6" y2="146.02" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-11" x1="-41.23" y1="-125.7" x2="436.59" y2="150.17" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-12" x1="-41.25" y1="-121.68" x2="436.56" y2="154.18" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-13" x1="-41.16" y1="-117.85" x2="436.66" y2="158.03" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-14" x1="-41.18" y1="-113.69" x2="436.65" y2="162.18" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-15" x1="-41.2" y1="-109.68" x2="436.63" y2="166.2" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-16" x1="-41.23" y1="-105.72" x2="436.59" y2="170.14" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-17" x1="-41.25" y1="-101.57" x2="436.57" y2="174.3" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-18" x1="-41.27" y1="-97.56" x2="436.55" y2="178.31" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-19" x1="-41.27" y1="-93.59" x2="436.54" y2="182.28" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-20" x1="-41.29" y1="-89.43" x2="436.53" y2="186.43" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-21" x1="-41.31" y1="-85.42" x2="436.5" y2="190.44" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-22" x1="-41.34" y1="-81.47" x2="436.46" y2="194.39" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-23" x1="-41.36" y1="-77.31" x2="436.45" y2="198.55" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-24" x1="-41.38" y1="-73.3" x2="436.43" y2="202.56" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-25" x1="-41.27" y1="-69.55" x2="436.54" y2="206.31" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-26" x1="-41.29" y1="-65.4" x2="436.53" y2="210.47" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-27" x1="-41.31" y1="-61.39" x2="436.5" y2="214.48" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-28" x1="-41.34" y1="-57.43" x2="436.47" y2="218.43" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-29" x1="-41.36" y1="-53.28" x2="436.45" y2="222.58" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-30" x1="-41.38" y1="-49.26" x2="436.43" y2="226.6" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-31" x1="-41.38" y1="-45.3" x2="436.42" y2="230.56" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-32" x1="-41.4" y1="-41.14" x2="436.4" y2="234.72" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-33" x1="-41.42" y1="-37.13" x2="436.38" y2="238.73" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-34" x1="-41.45" y1="-33.18" x2="436.34" y2="242.68" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-35" x1="-41.47" y1="-29.02" x2="436.33" y2="246.83" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-36" x1="-41.49" y1="-25.01" x2="436.31" y2="250.85" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-37" x1="-41.4" y1="-21.17" x2="436.41" y2="254.69" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-38" x1="-41.41" y1="-17.01" x2="436.39" y2="258.85" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-39" x1="-41.43" y1="-13" x2="436.37" y2="262.86" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-40" x1="-41.47" y1="-9.05" x2="436.33" y2="266.81" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-41" x1="-41.48" y1="-4.89" x2="436.31" y2="270.96" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-42" x1="-41.5" y1="-0.88" x2="436.29" y2="274.97" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-43" x1="-41.51" y1="3.09" x2="436.28" y2="278.94" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-44" x1="-41.52" y1="7.24" x2="436.27" y2="283.09" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-45" x1="-41.54" y1="11.26" x2="436.24" y2="287.11" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-46" x1="-41.58" y1="15.21" x2="436.21" y2="291.06" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-47" x1="-41.59" y1="19.36" x2="436.19" y2="295.21" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-48" x1="-41.61" y1="23.38" x2="436.17" y2="299.22" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-49" x1="-41.56" y1="27.34" x2="436.23" y2="303.19" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-50" x1="-41.57" y1="31.49" x2="436.21" y2="307.34" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-51" x1="-41.59" y1="35.51" x2="436.19" y2="311.36" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-52" x1="-41.63" y1="39.46" x2="436.15" y2="315.3" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-53" x1="-41.64" y1="43.61" x2="436.14" y2="319.46" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-54" x1="-41.66" y1="47.63" x2="436.11" y2="323.47" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-55" x1="-41.67" y1="51.59" x2="436.11" y2="327.44" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-56" x1="-41.69" y1="55.75" x2="436.09" y2="331.59" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-57" x1="-41.71" y1="59.76" x2="436.07" y2="335.6" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-58" x1="-41.74" y1="63.71" x2="436.03" y2="339.55" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-59" x1="-41.75" y1="67.87" x2="436.01" y2="343.71" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-60" x1="-41.77" y1="71.88" x2="435.99" y2="347.72" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-61" x1="-41.68" y1="75.72" x2="436.09" y2="351.57" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-62" x1="-41.7" y1="79.88" x2="436.08" y2="355.72" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-63" x1="-41.72" y1="83.89" x2="436.05" y2="359.73" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-64" x1="-41.75" y1="87.84" x2="436.02" y2="363.68" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-65" x1="-41.77" y1="92" x2="436" y2="367.84" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-66" x1="-41.79" y1="96.01" x2="435.98" y2="371.85" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-67" x1="-41.79" y1="99.98" x2="435.97" y2="375.81" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-68" x1="-41.81" y1="104.13" x2="435.95" y2="379.97" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-69" x1="-41.83" y1="108.15" x2="435.93" y2="383.98" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-70" x1="2493.42" y1="-156.19" x2="2934.37" y2="98.39" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-71" x1="2493.41" y1="-152.03" x2="2934.35" y2="102.55" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-72" x1="2493.39" y1="-148.02" x2="2934.33" y2="106.56" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-73" x1="2493.36" y1="-144.07" x2="2934.3" y2="110.51" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-74" x1="2493.34" y1="-139.91" x2="2934.28" y2="114.66" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-75" x1="2493.33" y1="-135.9" x2="2934.26" y2="118.68" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-76" x1="2493.32" y1="-131.93" x2="2934.25" y2="122.64" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-77" x1="2493.31" y1="-127.78" x2="2934.24" y2="126.79" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-78" x1="2493.29" y1="-123.76" x2="2934.22" y2="130.81" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-79" x1="2493.26" y1="-119.81" x2="2934.18" y2="134.76" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-80" x1="2493.24" y1="-115.66" x2="2934.17" y2="138.91" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-81" x1="2493.23" y1="-111.64" x2="2934.15" y2="142.92" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-82" x1="2493.31" y1="-107.8" x2="2934.24" y2="146.77" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-83" x1="2493.3" y1="-103.65" x2="2934.23" y2="150.92" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-84" x1="2493.28" y1="-99.63" x2="2934.21" y2="154.94" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-85" x1="2493.25" y1="-95.68" x2="2934.17" y2="158.88" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-86" x1="2493.23" y1="-91.53" x2="2934.16" y2="163.04" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-87" x1="2493.21" y1="-87.51" x2="2934.14" y2="167.05" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-88" x1="2493.21" y1="-83.55" x2="2934.13" y2="171.02" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-89" x1="2493.19" y1="-79.39" x2="2934.11" y2="175.17" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-90" x1="2493.18" y1="-75.38" x2="2934.09" y2="179.18" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-91" x1="2493.15" y1="-71.43" x2="2934.06" y2="183.13" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-92" x1="2493.13" y1="-67.27" x2="2934.04" y2="187.29" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-93" x1="2493.11" y1="-63.26" x2="2934.02" y2="191.3" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-94" x1="2493.21" y1="-59.51" x2="2934.13" y2="195.05" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-95" x1="2493.2" y1="-55.36" x2="2934.12" y2="199.21" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-96" x1="2493.18" y1="-51.34" x2="2934.09" y2="203.22" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-97" x1="2493.15" y1="-47.39" x2="2934.06" y2="207.17" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-98" x1="2493.13" y1="-43.24" x2="2934.05" y2="211.32" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-99" x1="2493.11" y1="-39.22" x2="2934.02" y2="215.34" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-100" x1="2493.11" y1="-35.26" x2="2934.02" y2="219.3" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-101" x1="2493.1" y1="-31.1" x2="2934" y2="223.46" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-102" x1="2493.08" y1="-27.09" x2="2933.98" y2="227.47" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-103" x1="2493.05" y1="-23.14" x2="2933.95" y2="231.42" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-104" x1="2493.03" y1="-18.98" x2="2933.93" y2="235.57" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-105" x1="2493.01" y1="-14.97" x2="2933.91" y2="239.58" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-106" x1="2493.1" y1="-11.13" x2="2934" y2="243.43" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-107" x1="2493.08" y1="-6.97" x2="2933.99" y2="247.58" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-108" x1="2493.07" y1="-2.96" x2="2933.97" y2="251.6" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-109" x1="2493.03" y1="0.99" x2="2933.94" y2="255.55" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-110" x1="2493.02" y1="5.15" x2="2933.92" y2="259.7" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-111" x1="2493" y1="9.16" x2="2933.9" y2="263.71" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-112" x1="2493" y1="13.13" x2="2933.89" y2="267.68" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-113" x1="2492.98" y1="17.28" x2="2933.88" y2="271.83" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-114" x1="2492.96" y1="21.3" x2="2933.86" y2="275.85" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-115" x1="2492.93" y1="25.25" x2="2933.82" y2="279.79" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-116" x1="2492.92" y1="29.4" x2="2933.81" y2="283.95" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-117" x1="2492.9" y1="33.42" x2="2933.79" y2="287.96" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-118" x1="2492.95" y1="37.38" x2="2933.84" y2="291.93" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-119" x1="2492.94" y1="41.53" x2="2933.83" y2="296.08" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-120" x1="2492.92" y1="45.55" x2="2933.81" y2="300.09" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-121" x1="2492.89" y1="49.5" x2="2933.77" y2="304.04" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-122" x1="2492.88" y1="53.66" x2="2933.76" y2="308.2" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-123" x1="2492.86" y1="57.67" x2="2933.74" y2="312.21" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-124" x1="2492.85" y1="61.63" x2="2933.73" y2="316.18" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-125" x1="2492.84" y1="65.79" x2="2933.71" y2="320.33" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-126" x1="2492.82" y1="69.8" x2="2933.69" y2="324.34" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-127" x1="2492.79" y1="73.75" x2="2933.66" y2="328.29" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-128" x1="2492.78" y1="77.91" x2="2933.64" y2="332.45" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-129" x1="2492.76" y1="81.92" x2="2933.62" y2="336.46" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-130" x1="2492.84" y1="85.76" x2="2933.72" y2="340.3" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-131" x1="2492.83" y1="89.92" x2="2933.7" y2="344.46" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-132" x1="2492.81" y1="93.93" x2="2933.68" y2="348.47" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-133" x1="2492.78" y1="97.88" x2="2933.65" y2="352.42" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-134" x1="2492.76" y1="102.04" x2="2933.63" y2="356.58" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-135" x1="2492.75" y1="106.05" x2="2933.61" y2="360.59" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-136" x1="2492.74" y1="110.02" x2="2933.6" y2="364.55" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-137" x1="2492.73" y1="114.18" x2="2933.59" y2="368.71" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/><linearGradient id="Безымянный_градиент_125-138" x1="2492.71" y1="118.19" x2="2933.57" y2="372.72" gradientTransform="matrix(-1.04, -0.4, -0.36, 0.93, 3509.72, 1452.19)" xlink:href="#Безымянный_градиент_125"/></defs><g class="cls-1"><path class="cls-2" d="M537.2,384.3l-1.65-.88a109.09,109.09,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,69.13,69.13,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.42,50.42,0,0,1-2.53-14,56.08,56.08,0,0,1,1.25-14.15,49,49,0,0,1,5.23-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73A22.65,22.65,0,0,1,256,94.4a13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77V89l0-.22,0-.22c0-.07,0-.14.05-.21a4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.73,15.73,0,0,0,3-1.9A5.17,5.17,0,0,0,278,73.84a3,3,0,0,0,.33-.86,2.53,2.53,0,0,0,0-.91,7.86,7.86,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29A47.23,47.23,0,0,0,265.92,60c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.47-6.86-2.1c-1.16-.32-2.31-.62-3.48-.9-.58-.13-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.06-.22,0c-.08,0-.15,0-.26.06l.08,0h.39l.45.06.88.16,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49c2.22.9,4.4,1.87,6.53,3A47.68,47.68,0,0,1,272,63.74,26,26,0,0,1,274.75,66,14.52,14.52,0,0,1,277,68.77a7.9,7.9,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3.08,3.08,0,0,1-.31.81,5.2,5.2,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,24.13,24.13,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,45.55,45.55,0,0,0-6.29,3.52,29.83,29.83,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87s-.13.6-.18.91a8.73,8.73,0,0,0,.35,3.63,12.55,12.55,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h.9c.3,0,.6,0,.9,0l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,29.47,29.47,0,0,0,3.08-1.88,22.71,22.71,0,0,0,2.78-2.31,13,13,0,0,0,1.2-1.36,12.81,12.81,0,0,0,1-1.49,14,14,0,0,0,1.42-3.33A13.73,13.73,0,0,0,351,200a15.61,15.61,0,0,0,.17-1.81,19.74,19.74,0,0,0-.23-3.6,30,30,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93a99.24,99.24,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,48.17,48.17,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,7-9.61,10.67A85.16,85.16,0,0,0,500.69,301a49.52,49.52,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.61,0,.91,0,.6,0,1.2.05,1.8a51.25,51.25,0,0,0,2.6,14.16A56.3,56.3,0,0,0,503,355.88,69.54,69.54,0,0,0,512.12,367a89.87,89.87,0,0,0,11,9.29,108.94,108.94,0,0,0,12.2,7.6l1.71.91ZM341.27,175.52a67.52,67.52,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.77,29.77,0,0,1,2,6.82,16.66,16.66,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.81,19.81,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.14,33.14,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.29,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62q3.12-.61,6.26-1.13C340.29,174.23,340.79,174.87,341.27,175.52Z"/><polygon class="cls-3" points="339.43 173.14 339.8 173.07 340.15 173.54 339.77 173.59 339.43 173.14"/></g><g class="cls-1"><path class="cls-4" d="M535.7,388.17l-1.66-.88a108.17,108.17,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18A84.15,84.15,0,0,1,508,293.56c3-3.69,6.24-7.21,9.58-10.62,6.67-6.82,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.35,49.35,0,0,0,3.9-6.07,29.52,29.52,0,0,0,2.7-6.73,19.67,19.67,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.24,20.24,0,0,0-1.46-3.34,28,28,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3A100.07,100.07,0,0,0,529.7,198c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.23-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.21a4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-2c1.05-.56,2.13-1.07,3.23-1.54,2.19-1,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a16.11,16.11,0,0,0,3.06-1.9,5.35,5.35,0,0,0,1.18-1.37,3.4,3.4,0,0,0,.33-.85,3.16,3.16,0,0,0,0-.92,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9-.58-.13-1.17-.27-1.75-.38-.3-.06-.59-.12-.89-.16a3.11,3.11,0,0,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.46.46,0,0,1,.18,0h.22l.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.87,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75A7.8,7.8,0,0,1,276.68,76a2.83,2.83,0,0,1,0,.87,2.79,2.79,0,0,1-.32.81A5,5,0,0,1,275.17,79a15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.18,1-3.24,1.55a17.86,17.86,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.39,6.39,0,0,0-1,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,23,23,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.42,3.55,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09A113.05,113.05,0,0,0,318,181.75a70.88,70.88,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,29.83,29.83,0,0,0-5.48,4.68,22.39,22.39,0,0,0-3.94,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.16.89.13c.6.1,1.19.16,1.79.22,1.2.12,2.4.2,3.6.21H324l.9,0,.9-.06a38.18,38.18,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.53,27.53,0,0,0,3.08-1.88,21.3,21.3,0,0,0,2.78-2.31,14.32,14.32,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.57,15.57,0,0,0,.53-3.59,19.74,19.74,0,0,0-.23-3.6,29.49,29.49,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,68.31,68.31,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.37-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.51,2.88c4.75.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57c.46.39.9.79,1.34,1.18.88.79,1.74,1.62,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,19.13,19.13,0,0,1,1.4,3.22,17.61,17.61,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7A29,29,0,0,1,556,240.7a50.6,50.6,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.54,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.59,7-9.62,10.67a85.09,85.09,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.31,0,.61,0,.91,0,.6,0,1.2,0,1.8a52.43,52.43,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7,56.71,56.71,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6l1.73.91ZM339.76,179.39c1.43,1.9,2.78,3.87,4,5.91a48.75,48.75,0,0,1,3.26,6.35,29.28,29.28,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,13.31,13.31,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.07,8.07,0,0,1-.32-3.45,6.35,6.35,0,0,1,.16-.85c.08-.27.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.46,45.46,0,0,1,6.22-3.46,65.52,65.52,0,0,1,6.64-2.64A111.1,111.1,0,0,1,332,178.59q3.12-.61,6.27-1.13C338.78,178.1,339.27,178.74,339.76,179.39Z"/><polygon class="cls-3" points="337.91 177.01 338.28 176.94 338.63 177.41 338.26 177.46 337.91 177.01"/></g><g class="cls-1"><path class="cls-5" d="M534.25,391.92l-1.68-.89a109.73,109.73,0,0,1-12.11-7.59,88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.78,55.78,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56.13,56.13,0,0,1,1.26-14.16A49,49,0,0,1,498.38,309a84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.12,50.12,0,0,0,3.9-6.07,29.7,29.7,0,0,0,2.7-6.73,19.51,19.51,0,0,0,.5-7.26,18.9,18.9,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.26,28.26,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.39-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.07q-7.06-1.22-14.17-2.27c-4.72-.71-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.25s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a45.1,45.1,0,0,1-4.27-5.73A22.06,22.06,0,0,1,253,102a13.16,13.16,0,0,1-.94-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.15,0-.22a5.4,5.4,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,9.24,9.24,0,0,1,1.26-1.24,17.37,17.37,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.23-1.55,2.19-.94,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.28-1.46a15.16,15.16,0,0,0,3.06-1.9A5.19,5.19,0,0,0,275,81.44a3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,27.48,27.48,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.68c-2.13-1.09-4.31-2.07-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.29,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.9,2.3.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3A48.07,48.07,0,0,1,269,71.34a25.29,25.29,0,0,1,2.75,2.29A14.2,14.2,0,0,1,274,76.37a7.8,7.8,0,0,1,1.18,3.32,2.81,2.81,0,0,1,0,.87,2.59,2.59,0,0,1-.32.81,4.72,4.72,0,0,1-1.15,1.33,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.6,9.6,0,0,0-1.29,1.26,6.45,6.45,0,0,0-1,1.55,4.39,4.39,0,0,0-.27.87c0,.07,0,.14-.05.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.55,10.61,9.65s7.34,6.14,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.08a111.33,111.33,0,0,0-13.89,3.66,68.28,68.28,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.56,30.56,0,0,0-5.47,4.69,22.14,22.14,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.14,24.14,0,0,0,5.94,4.08,36,36,0,0,0,6.74,2.53c1.16.31,2.34.58,3.52.79l.88.15c.3.06.6.09.89.14.6.09,1.2.15,1.79.22,1.2.11,2.4.2,3.6.21h1.8l.9,0c.3,0,.6,0,.9-.06a38,38,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.45,27.45,0,0,0,3.08-1.87,20.6,20.6,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.06,12.06,0,0,0,1-1.5,13.29,13.29,0,0,0,1.43-3.33,15.46,15.46,0,0,0,.37-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,49,49,0,0,0-3.3-6.4,69.71,69.71,0,0,0-4.05-5.93c-.45-.6-.91-1.2-1.37-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.68s19.11.59,28.64,1.29,19,1.68,28.52,2.87c4.74.6,9.46,1.28,14.19,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28,2.25.8,4.47,1.67,6.67,2.58s4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12q3,2,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.88.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,19.13,19.13,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.54,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84A49.58,49.58,0,0,0,492.43,322a59.44,59.44,0,0,0-1.08,7.14c0,.29-.06.59-.08.89l-.06.9c0,.6,0,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a52.11,52.11,0,0,0,.8,7.16,53.85,53.85,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69.46,69.46,0,0,0,9.08,11.15,88.34,88.34,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l1.75.92Zm-196-208.8c1.43,1.91,2.78,3.88,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.14,21.14,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19l-.89.05-.89,0H320.7c-1.19,0-2.37-.1-3.56-.22-.59-.06-1.18-.12-1.77-.22l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.09,8.09,0,0,1-.32-3.45,6.07,6.07,0,0,1,.16-.85q.12-.42.27-.84a16.54,16.54,0,0,1,.64-1.65,21.61,21.61,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47A65.45,65.45,0,0,1,316.7,186a111.6,111.6,0,0,1,13.83-3.63q3.12-.62,6.27-1.12C337.31,181.83,337.8,182.47,338.29,183.12Z"/><polygon class="cls-3" points="336.44 180.74 336.81 180.68 337.16 181.14 336.79 181.2 336.44 180.74"/></g><g class="cls-1"><path class="cls-6" d="M532.82,395.6q-.86-.44-1.71-.9A110.67,110.67,0,0,1,519,387.11a88,88,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06A55.58,55.58,0,0,1,493,354a53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56,56,0,0,1,1.26-14.15,48.9,48.9,0,0,1,5.23-13.19A84.65,84.65,0,0,1,505,301c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.89,3.44-3.33,6.83-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.17,18.17,0,0,0-.81-3.56,21.18,21.18,0,0,0-1.45-3.35,28.61,28.61,0,0,0-4.3-5.83c-.83-.88-1.7-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.69-.58-.69-.58c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.58-6.56-3c-2.22-.91-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.62c-1.69-1.68-3.35-3.41-4.91-5.22a44.4,44.4,0,0,1-4.27-5.73,22.48,22.48,0,0,1-1.63-3.16,13.23,13.23,0,0,1-.94-3.43,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.22a4.23,4.23,0,0,1,.27-.83,5.51,5.51,0,0,1,.92-1.5A8.76,8.76,0,0,1,253.15,96a18,18,0,0,1,3-2c1.05-.57,2.13-1.07,3.23-1.54,2.19-1,4.43-1.79,6.64-2.69,1.11-.45,2.21-.93,3.29-1.46a15.09,15.09,0,0,0,3-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91A8,8,0,0,0,272.68,80a14.8,14.8,0,0,0-2.29-2.77,25.12,25.12,0,0,0-2.76-2.28,46.9,46.9,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3A46.35,46.35,0,0,1,267.55,75a24.11,24.11,0,0,1,2.75,2.28A14.51,14.51,0,0,1,272.57,80a7.8,7.8,0,0,1,1.18,3.32,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,4.82,4.82,0,0,1-1.15,1.32,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,5.16,5.16,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.59,13.59,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,45.59,45.59,0,0,0,4.28,5.77c1.56,1.81,3.22,3.54,4.92,5.23,3.4,3.36,7,6.54,10.61,9.64s7.34,6.14,11.06,9.15l11.17,9c7.44,6,14.86,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a111.29,111.29,0,0,0-13.89,3.65,70.88,70.88,0,0,0-6.68,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.27,22.27,0,0,0-3.95,6c-.24.55-.46,1.11-.65,1.69-.09.28-.19.56-.27.87a6.83,6.83,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.54,35.54,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.16.9.13c.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21H321l.9,0c.3,0,.6,0,.9,0a37.12,37.12,0,0,0,7.1-1.21,33.75,33.75,0,0,0,6.7-2.62,26,26,0,0,0,3.08-1.87,20.6,20.6,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,15.6,15.6,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.68s19.11.59,28.64,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a99.12,99.12,0,0,1,12.37,7.12c2,1.34,3.89,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.89.79,1.74,1.61,2.55,2.47A27.93,27.93,0,0,1,554,228a20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.54,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84A49.58,49.58,0,0,0,491,325.71a59.44,59.44,0,0,0-1.08,7.14c0,.3-.06.6-.07.9l-.07.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a51.09,51.09,0,0,0,2.6,14.15,56.54,56.54,0,0,0,6.27,13,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,112.77,112.77,0,0,0,12.19,7.6c.59.32,1.18.63,1.78.93Zm-196-208.81q2.16,2.86,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29.5,29.5,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.78,32.78,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19c-.3,0-.59,0-.89,0l-.89,0h-1.79c-1.18,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,24.14,24.14,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.09,8.09,0,0,1-.32-3.45,6.07,6.07,0,0,1,.16-.85q.12-.42.27-.84a16.54,16.54,0,0,1,.64-1.65,21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,44.48,44.48,0,0,1,6.22-3.47,67.88,67.88,0,0,1,6.64-2.63A113.87,113.87,0,0,1,329.07,186q3.14-.62,6.27-1.12C335.85,185.51,336.34,186.15,336.83,186.79Z"/><polygon class="cls-3" points="334.98 184.41 335.36 184.35 335.7 184.81 335.33 184.87 334.98 184.41"/></g><g class="cls-1"><path class="cls-7" d="M531.31,399.48l-1.71-.91A110.8,110.8,0,0,1,517.48,391a88.74,88.74,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,52.82,52.82,0,0,1-1.75-6.9,51,51,0,0,1-.78-7.07,55.55,55.55,0,0,1,1.26-14.15,48.87,48.87,0,0,1,5.22-13.19,83.86,83.86,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.44-3.33,6.82-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a50.19,50.19,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.53-.45-.39-.89-.8-1.35-1.18l-.69-.58-.7-.57c-1.86-1.53-3.79-2.95-5.77-4.3a99,99,0,0,0-12.48-7.16c-2.15-1.05-4.35-2-6.56-2.94s-4.45-1.79-6.7-2.59c-4.52-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.23-1.78-28.55-2.85c-9.55-.7-19.11-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a43.5,43.5,0,0,1-4.27-5.73,23.66,23.66,0,0,1-1.64-3.16,13.21,13.21,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a2.07,2.07,0,0,1,0-.22,5,5,0,0,1,.26-.83,6,6,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.5,18.5,0,0,1,3-2c1-.57,2.13-1.07,3.22-1.54,2.19-1,4.43-1.79,6.65-2.69,1.11-.45,2.21-.92,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9A5,5,0,0,0,272,89a2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.81,14.81,0,0,0-2.29-2.76,24.22,24.22,0,0,0-2.77-2.29A46.14,46.14,0,0,0,260,75.1c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.49-4.56-1.46-6.86-2.1c-1.15-.31-2.31-.61-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06h-.22c-.08,0-.15,0-.25.06l.07,0h.17l.23,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.28,2.31.58,3.47.9q3.45,1,6.85,2.1c2.26.77,4.5,1.59,6.72,2.49s4.39,1.88,6.52,3A47.68,47.68,0,0,1,266,78.89a26,26,0,0,1,2.75,2.28,14.46,14.46,0,0,1,2.26,2.74,7.82,7.82,0,0,1,1.19,3.32,2.8,2.8,0,0,1,0,.87,3.41,3.41,0,0,1-.32.82,5,5,0,0,1-1.15,1.32,14.76,14.76,0,0,1-3,1.88c-1.06.53-2.16,1-3.27,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.21,18.21,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.59,13.59,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,44.64,44.64,0,0,0,4.28,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.4,3.36,7,6.54,10.62,9.64s7.34,6.14,11.05,9.15l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09A113.05,113.05,0,0,0,313.57,193a68.79,68.79,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.66,1.69-.09.28-.19.56-.27.87s-.13.6-.17.9a8.77,8.77,0,0,0,.34,3.64A12.55,12.55,0,0,0,292,220.3a16.39,16.39,0,0,0,2.36,2.76,24.59,24.59,0,0,0,5.93,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.9l.91,0,.9,0c.3,0,.59,0,.89-.06a37.12,37.12,0,0,0,7.1-1.21,33.6,33.6,0,0,0,6.71-2.62,26.88,26.88,0,0,0,3.08-1.87,21.92,21.92,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,14.07,14.07,0,0,0,1-1.49,13.49,13.49,0,0,0,1.42-3.34,13.27,13.27,0,0,0,.38-1.77,15.6,15.6,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.58,29.58,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.4,1.65,18.77,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.58s4.37,1.89,6.52,2.94a99.85,99.85,0,0,1,12.37,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.47a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7A29,29,0,0,1,551.5,252a48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-9.95,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.29,49.29,0,0,0-5.29,13.39,61.51,61.51,0,0,0-1.08,7.14c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7A56.58,56.58,0,0,0,497.08,371a69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,109.37,109.37,0,0,0,12.19,7.6c.59.32,1.19.63,1.79.94Zm-196-208.81a69.7,69.7,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.48,29.48,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7A13.26,13.26,0,0,1,342.9,220a14.45,14.45,0,0,1-1,1.45,13.4,13.4,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,26.7,26.7,0,0,1-3,1.84,32.69,32.69,0,0,1-6.62,2.58,37.16,37.16,0,0,1-7,1.19c-.29,0-.59.05-.89.05l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,44.59,44.59,0,0,1,6.23-3.47,67.88,67.88,0,0,1,6.64-2.63,112.91,112.91,0,0,1,13.83-3.63q3.12-.62,6.27-1.12C334.33,189.38,334.83,190,335.32,190.67Z"/><polygon class="cls-3" points="333.47 188.28 333.84 188.22 334.19 188.68 333.81 188.74 333.47 188.28"/></g><g class="cls-1"><path class="cls-8" d="M529.86,403.23c-.58-.3-1.16-.61-1.73-.93A109.22,109.22,0,0,1,516,394.72a88.82,88.82,0,0,1-10.87-9.25,68.7,68.7,0,0,1-9-11.07A56.21,56.21,0,0,1,490,361.6a52.67,52.67,0,0,1-1.75-6.89,51.11,51.11,0,0,1-.78-7.08,55.63,55.63,0,0,1,1.26-14.15,48.81,48.81,0,0,1,5.22-13.18,83.28,83.28,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.63,6.68-6.82,13.77-13.23,20.65-19.89,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.54-5.59a49.42,49.42,0,0,0,3.91-6.07,29.31,29.31,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.3A100.12,100.12,0,0,0,523.78,213q-3.22-1.57-6.56-2.95c-2.21-.92-4.45-1.78-6.7-2.59-4.52-1.61-9.1-3-13.72-4.27-9.24-2.52-18.63-4.43-28.05-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.24-1.78-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.34-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.68-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.75,8.75,0,0,1,0-1.77l0-.23,0-.21,0-.22a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.19,19.19,0,0,1,3-2c1-.56,2.13-1.06,3.22-1.54,2.19-.95,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.84,2.84,0,0,0,.05-.92,8,8,0,0,0-1.21-3.37,14.87,14.87,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16c-.15,0-.3,0-.45-.06l-.22,0c-.08,0-.15,0-.25.06l.07,0a.72.72,0,0,1,.18,0h.22l.44.07c.29,0,.59.1.88.16l1.75.38c1.16.28,2.31.58,3.47.9,2.3.64,4.58,1.35,6.85,2.11s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47.61,47.61,0,0,1,6.13,3.68,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75A7.82,7.82,0,0,1,270.77,91a2.83,2.83,0,0,1,0,.87,3.34,3.34,0,0,1-.32.81A5,5,0,0,1,269.26,94a15.42,15.42,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a19.27,19.27,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6,6,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87,1.85,1.85,0,0,1,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.19,5.49,7.55,8.41q-3,.49-6,1.09a111.33,111.33,0,0,0-13.89,3.66,64.05,64.05,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69l-.27.87a9.12,9.12,0,0,0-.17.91,8.73,8.73,0,0,0,.34,3.63,12.76,12.76,0,0,0,1.59,3.28,17.22,17.22,0,0,0,2.36,2.76,24.56,24.56,0,0,0,5.93,4.08,35.63,35.63,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.21h1.81l.9,0c.3,0,.6,0,.89-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,21,21,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,15.32,15.32,0,0,0,1-1.5,13.58,13.58,0,0,0,1.42-3.33,13.41,13.41,0,0,0,.38-1.78,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.65,29.65,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.54-.63,19.1-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.57,28,6.09q6.92,1.88,13.66,4.28c2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.79,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.37,20.37,0,0,1,1.4,3.22,18.38,18.38,0,0,1,.77,3.42,19,19,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.68a84.41,84.41,0,0,0-8.18,11.83,49.67,49.67,0,0,0-5.29,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.07,1.8V345c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.27,52.27,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61l1.8.95Zm-196-208.83c1.43,1.91,2.78,3.88,4,5.91a48.22,48.22,0,0,1,3.27,6.35,29.7,29.7,0,0,1,2,6.83,16.84,16.84,0,0,1-.3,7,13,13,0,0,1-1.39,3.23,13.52,13.52,0,0,1-1,1.46,13.29,13.29,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,26.77,26.77,0,0,1-3,1.85,33.29,33.29,0,0,1-6.62,2.58,37.15,37.15,0,0,1-7,1.18c-.29,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.79A35.82,35.82,0,0,1,299,230.5a24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.24,12.24,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.57.26-.84.19-.56.41-1.12.64-1.66a22,22,0,0,1,3.87-5.91,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.61,6.27-1.12C332.86,193.11,333.36,193.75,333.85,194.4Z"/><polygon class="cls-3" points="332 192.02 332.37 191.96 332.72 192.42 332.35 192.48 332 192.02"/></g><g class="cls-1"><path class="cls-9" d="M528.43,406.93l-1.74-.93a110.8,110.8,0,0,1-12.12-7.59,88.82,88.82,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06,56.41,56.41,0,0,1-6.18-12.8,53.23,53.23,0,0,1-1.75-6.9,51,51,0,0,1-.78-7.07,56,56,0,0,1,1.26-14.15A48.87,48.87,0,0,1,492.49,324a84.72,84.72,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.44-3.34,6.82-6.73,10-10.33,1.58-1.8,3.11-3.65,4.54-5.58a50.19,50.19,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.9,18.9,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.56,28.56,0,0,0-4.29-5.83c-.83-.88-1.7-1.72-2.6-2.53-.45-.39-.89-.8-1.35-1.18l-.69-.58-.7-.58c-1.85-1.52-3.79-2.94-5.77-4.29a99,99,0,0,0-12.48-7.16q-3.23-1.57-6.56-2.95c-2.21-.92-4.45-1.78-6.7-2.58-4.52-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.79-28.55-2.85c-9.55-.7-19.11-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.34-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a43.5,43.5,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13,13,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a2.07,2.07,0,0,1,0-.22,5,5,0,0,1,.26-.83,6,6,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.5,18.5,0,0,1,3-1.95c1-.57,2.13-1.07,3.22-1.54,2.19-1,4.44-1.79,6.65-2.69,1.11-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38A15.2,15.2,0,0,0,266,88.5a25.23,25.23,0,0,0-2.77-2.28,46.14,46.14,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.73-6.73-2.49-4.56-1.46-6.86-2.1c-1.15-.31-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.25.07l.07,0a.72.72,0,0,1,.18,0l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.27,2.31.58,3.47.9,2.3.63,4.58,1.34,6.85,2.1s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.46,14.46,0,0,1,2.26,2.74,7.82,7.82,0,0,1,1.19,3.32,2.81,2.81,0,0,1,0,.87,3.18,3.18,0,0,1-.32.81,4.89,4.89,0,0,1-1.15,1.33,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.64,18.64,0,0,0-3,2,9.53,9.53,0,0,0-1.28,1.26,6,6,0,0,0-1,1.55,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,1,0,.22l0,.22,0,.23,0,.23a9,9,0,0,0,0,1.8,13.59,13.59,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,44.64,44.64,0,0,0,4.28,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.41,3.36,7,6.54,10.62,9.64s7.34,6.14,11.05,9.15l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a111.29,111.29,0,0,0-13.89,3.65,66.34,66.34,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.68-.1.29-.19.57-.28.88a8.93,8.93,0,0,0-.17.9,8.77,8.77,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,16.39,16.39,0,0,0,2.36,2.76,24.59,24.59,0,0,0,5.93,4.09,36.33,36.33,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.15c.3.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.81l.9,0c.3,0,.6,0,.89-.05a37.12,37.12,0,0,0,7.1-1.21,33.6,33.6,0,0,0,6.71-2.62,28.38,28.38,0,0,0,3.08-1.87,21.24,21.24,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,14.07,14.07,0,0,0,1-1.49,14.3,14.3,0,0,0,1.8-5.11,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.58,29.58,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.4,1.65,18.77,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.58s4.37,1.89,6.52,2.94a99.85,99.85,0,0,1,12.37,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84A49.61,49.61,0,0,0,486.54,337a61.51,61.51,0,0,0-1.08,7.14c0,.3,0,.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,110.86,110.86,0,0,0,12.19,7.6l1.81,1Zm-196-208.84c1.43,1.91,2.78,3.88,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29.48,29.48,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,14.45,14.45,0,0,1-1,1.45,13.4,13.4,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,26.7,26.7,0,0,1-3,1.84,32.69,32.69,0,0,1-6.62,2.58,37.16,37.16,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.16q-1.75-.32-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91A29.73,29.73,0,0,1,298,207a44.59,44.59,0,0,1,6.23-3.47,67.88,67.88,0,0,1,6.64-2.63,112.91,112.91,0,0,1,13.83-3.63q3.12-.61,6.27-1.12Z"/><polygon class="cls-3" points="330.56 195.71 330.93 195.65 331.28 196.11 330.9 196.17 330.56 195.71"/></g><g class="cls-1"><path class="cls-10" d="M526.93,410.8c-.59-.3-1.18-.61-1.76-.93a110.67,110.67,0,0,1-12.11-7.59A88,88,0,0,1,502.18,393a68.56,68.56,0,0,1-9-11.06,55.58,55.58,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56,56,0,0,1,1.26-14.15A48.9,48.9,0,0,1,491,327.86a84.65,84.65,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.65-19.89,3.43-3.34,6.82-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.17,18.17,0,0,0-.81-3.56,20.3,20.3,0,0,0-1.45-3.35,28.61,28.61,0,0,0-4.3-5.83c-.83-.88-1.7-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.68-.58-.7-.58c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95c-2.22-.91-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.71-3-7.42-6-11.06-9.12s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a43.57,43.57,0,0,1-4.28-5.73,22.06,22.06,0,0,1-1.63-3.17,13.05,13.05,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.43,1.43,0,0,0,0-.22,5,5,0,0,1,.27-.83,5.51,5.51,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.41,18.41,0,0,1,3-2c1.05-.57,2.13-1.07,3.23-1.54,2.19-1,4.43-1.79,6.64-2.69,1.11-.46,2.21-.93,3.29-1.46a15.09,15.09,0,0,0,3-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,7.86,7.86,0,0,0-1.21-3.38,14.42,14.42,0,0,0-2.29-2.77,25.12,25.12,0,0,0-2.76-2.28,46.9,46.9,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.62-3.47-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.23,0c-.08,0-.14,0-.25.07l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.3,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.51,14.51,0,0,1,2.27,2.74,7.8,7.8,0,0,1,1.18,3.32,2.54,2.54,0,0,1,0,.87,2.83,2.83,0,0,1-.31.81,5.06,5.06,0,0,1-1.15,1.33,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,5.16,5.16,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22v.23a9,9,0,0,0,0,1.8,13.22,13.22,0,0,0,.95,3.48,23.41,23.41,0,0,0,1.64,3.19,45.59,45.59,0,0,0,4.28,5.77c1.57,1.81,3.22,3.54,4.92,5.23,3.4,3.36,7,6.54,10.61,9.64s7.34,6.14,11.06,9.15l11.17,9c7.45,6,14.86,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a110.83,110.83,0,0,0-13.89,3.65,67.47,67.47,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.27,22.27,0,0,0-3.95,6c-.24.55-.46,1.11-.65,1.69-.09.28-.19.56-.27.87a6.83,6.83,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0c.3,0,.6,0,.9-.05a37.12,37.12,0,0,0,7.1-1.21,33.75,33.75,0,0,0,6.7-2.62,28.52,28.52,0,0,0,3.09-1.87,21.15,21.15,0,0,0,2.77-2.32,14.05,14.05,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15.46,15.46,0,0,0,.37-1.77,15.8,15.8,0,0,0,.16-1.81,18.16,18.16,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.92-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a99.12,99.12,0,0,1,12.37,7.12c2,1.34,3.89,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.35,1.18.88.79,1.73,1.61,2.54,2.47a27.56,27.56,0,0,1,4.17,5.69,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,7-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84A49.58,49.58,0,0,0,485,340.88,59.44,59.44,0,0,0,484,348c0,.3-.05.6-.07.9l-.07.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21,0,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.54,56.54,0,0,0,6.27,12.95,69.56,69.56,0,0,0,9.08,11.15,90,90,0,0,0,11,9.3,112.77,112.77,0,0,0,12.19,7.6l1.83,1ZM330.89,202a69.22,69.22,0,0,1,4,5.92,48.75,48.75,0,0,1,3.26,6.35,29.5,29.5,0,0,1,2,6.82,16.83,16.83,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.78,32.78,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19L316,242l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.23l-.89-.13-.87-.16q-1.77-.32-3.48-.78a35,35,0,0,1-6.67-2.5,24.14,24.14,0,0,1-5.83-4,15.84,15.84,0,0,1-2.28-2.69,11.66,11.66,0,0,1-1.54-3.15,8.41,8.41,0,0,1-.32-3.45,8,8,0,0,1,.16-.85c.08-.28.18-.56.27-.84.19-.56.4-1.11.64-1.65A21.87,21.87,0,0,1,291,215.5a29.39,29.39,0,0,1,5.4-4.61,44.48,44.48,0,0,1,6.22-3.47,68.89,68.89,0,0,1,6.64-2.63,113.87,113.87,0,0,1,13.83-3.63q3.14-.61,6.27-1.12C329.91,200.68,330.4,201.32,330.89,202Z"/><polygon class="cls-3" points="329.04 199.58 329.42 199.52 329.76 199.98 329.39 200.04 329.04 199.58"/></g><g class="cls-1"><path class="cls-11" d="M525.48,414.55c-.6-.31-1.19-.63-1.78-.95A109.09,109.09,0,0,1,511.59,406a88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.38,55.38,0,0,1-6.18-12.8,50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.83,48.83,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.2,9.58-10.62,6.67-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.8-2.95-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.68.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.07-9.13s-7.21-6.26-10.61-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a44.94,44.94,0,0,1-4.28-5.73,22.59,22.59,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,9.54,9.54,0,0,1,0-1.77l0-.23,0-.22,0-.21a2.07,2.07,0,0,0,0-.22,4.84,4.84,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19.1,19.1,0,0,1,3-2c1.05-.56,2.13-1.06,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.55,15.55,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,2.84,2.84,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37A14.13,14.13,0,0,0,263,96.11a25.21,25.21,0,0,0-2.76-2.29,48.6,48.6,0,0,0-6.15-3.69c-2.14-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38-.88-.16a3.47,3.47,0,0,0-.45-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0h.22l.44.07c.3,0,.59.1.88.16.59.11,1.17.25,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28A14.2,14.2,0,0,1,265.16,99a7.8,7.8,0,0,1,1.18,3.32,2.32,2.32,0,0,1,0,.87,3,3,0,0,1-.31.81,5.23,5.23,0,0,1-1.15,1.33,15.67,15.67,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.21.9-4.46,1.73-6.66,2.68-1.09.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,10.31,10.31,0,0,0-1.29,1.27,6.59,6.59,0,0,0-1,1.54,5.16,5.16,0,0,0-.27.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.22v.23a9.13,9.13,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,23.53,23.53,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.81,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a110.87,110.87,0,0,0-13.89,3.66,65.11,65.11,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.42,22.42,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,12.14,12.14,0,0,0,1.59,3.28,17.16,17.16,0,0,0,2.35,2.75,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.78.23,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,14.05,14.05,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.63,15.63,0,0,0,.37-1.78,13.68,13.68,0,0,0,.16-1.8,18.16,18.16,0,0,0-.23-3.61,29.63,29.63,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.92-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.19,97.19,0,0,1,12.37,7.12c2,1.34,3.89,2.75,5.73,4.26l.68.57.68.58c.46.38.9.78,1.35,1.17.88.79,1.73,1.62,2.54,2.48a27.5,27.5,0,0,1,4.17,5.68,20.42,20.42,0,0,1,1.41,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.9-2.93,3.74-4.51,5.52-3.16,3.58-6.53,6.95-10,10.28-6.86,6.64-14,13.07-20.65,19.92-3.34,3.42-6.59,7-9.62,10.68a85.26,85.26,0,0,0-8.18,11.83,49.65,49.65,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6,0,1.2-.07,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a53.86,53.86,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.47,56.47,0,0,0,6.27,12.94,70.08,70.08,0,0,0,9.08,11.16,90,90,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61l1.84,1ZM329.42,205.7a69.06,69.06,0,0,1,4,5.91A49.39,49.39,0,0,1,336.7,218a29.3,29.3,0,0,1,2,6.82,16.88,16.88,0,0,1-.31,7,13.19,13.19,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22l-.89-.13-.87-.16c-1.17-.21-2.34-.48-3.48-.79a35.65,35.65,0,0,1-6.67-2.49,24.62,24.62,0,0,1-5.83-4,16.24,16.24,0,0,1-2.28-2.69,11.54,11.54,0,0,1-1.53-3.16,8.19,8.19,0,0,1-.33-3.44,8,8,0,0,1,.16-.85c.08-.28.18-.57.27-.85.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,69,69,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62q3.13-.61,6.27-1.12C328.44,204.41,328.94,205.05,329.42,205.7Z"/><polygon class="cls-3" points="327.57 203.32 327.95 203.26 328.29 203.72 327.92 203.78 327.57 203.32"/></g><g class="cls-1"><path class="cls-12" d="M524.05,418.24l-1.81-1a110.67,110.67,0,0,1-12.11-7.59,88.08,88.08,0,0,1-10.87-9.25,68.09,68.09,0,0,1-9-11.06,55.65,55.65,0,0,1-6.18-12.81,50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.25-7.21,9.58-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.55,51.55,0,0,0,3.91-6.08,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,18.73,18.73,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.71-2.59-2.52-.45-.4-.9-.8-1.36-1.18l-.68-.59-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.3A100,100,0,0,0,517.9,228q-3.24-1.57-6.56-2.95t-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.27-9.24-2.52-18.63-4.42-28.06-6.07-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.37-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.68.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.07-9.12s-7.21-6.27-10.61-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.11,22.11,0,0,1-1.64-3.17,13.16,13.16,0,0,1-.94-3.42,8.73,8.73,0,0,1,0-1.77v-.22l0-.22,0-.22a2.07,2.07,0,0,0,0-.22,5.88,5.88,0,0,1,.27-.84,6.11,6.11,0,0,1,.92-1.5,9.23,9.23,0,0,1,1.26-1.24,18.18,18.18,0,0,1,3-1.95c1.05-.57,2.14-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.65-2.68,1.1-.46,2.2-.93,3.28-1.46a15.55,15.55,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.86,7.86,0,0,0-1.21-3.38,14.44,14.44,0,0,0-2.28-2.77,26.3,26.3,0,0,0-2.77-2.29,48.6,48.6,0,0,0-6.15-3.69c-2.14-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.85-2.1c-1.16-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0a3.11,3.11,0,0,1,.44.06c.3,0,.59.1.88.16.59.12,1.17.25,1.75.39,1.17.27,2.32.57,3.47.89,2.3.64,4.59,1.35,6.85,2.11S243.82,90,246,90.94s4.4,1.88,6.52,3a47,47,0,0,1,6.14,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.8,7.8,0,0,1,1.18,3.32,2.32,2.32,0,0,1,0,.87,3,3,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.21.9-4.46,1.74-6.65,2.68-1.1.48-2.19,1-3.25,1.55a19.18,19.18,0,0,0-3,2,10.24,10.24,0,0,0-1.28,1.27,6.31,6.31,0,0,0-1,1.54,6.73,6.73,0,0,0-.27.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.43,13.43,0,0,0,1,3.47,23.53,23.53,0,0,0,1.64,3.2,44.78,44.78,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.62,9.65s7.33,6.13,11,9.14l11.17,9c7.45,6,14.86,12.05,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.41q-3,.5-6,1.08a111.33,111.33,0,0,0-13.89,3.66,67.47,67.47,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.25.56-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.63,8.63,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,36.1,36.1,0,0,0,6.75,2.53c1.16.31,2.33.57,3.51.79l.89.15.89.14c.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0c.3,0,.6,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,20.32,20.32,0,0,0,2.77-2.31,12.83,12.83,0,0,0,1.21-1.35,13.75,13.75,0,0,0,1-1.5,13.45,13.45,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,13.53,13.53,0,0,0,.16-1.8,18.94,18.94,0,0,0-.22-3.61,30.29,30.29,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39c-1.24-2-2.6-4-4-5.94q-.67-.9-1.38-1.77c7.2-1.16,14.47-1.9,21.75-2.39,9.53-.63,19.09-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.26,9.17,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94A98,98,0,0,1,530,235.78c2,1.34,3.88,2.75,5.72,4.26l.69.57.67.58c.46.38.9.78,1.35,1.17.88.8,1.73,1.62,2.54,2.48a28.2,28.2,0,0,1,4.18,5.68,21,21,0,0,1,1.4,3.23,18.08,18.08,0,0,1,.76,3.41,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.91-2.93,3.74-4.51,5.53-3.16,3.57-6.53,6.94-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.42-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.46,49.46,0,0,0-5.28,13.39,59.58,59.58,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a53.68,53.68,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.17,56.17,0,0,0,6.28,12.95,69.36,69.36,0,0,0,9.08,11.15,88.25,88.25,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61c.62.33,1.24.66,1.87,1ZM328,209.37a69.22,69.22,0,0,1,4,5.92,48,48,0,0,1,3.26,6.34,29.24,29.24,0,0,1,2,6.83,16.67,16.67,0,0,1-.31,7,13,13,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,16.36,16.36,0,0,1-1.18,1.32,21.14,21.14,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.3,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.34-.48-3.48-.78a36,36,0,0,1-6.67-2.5,24.37,24.37,0,0,1-5.82-4,15.83,15.83,0,0,1-2.29-2.69,11.49,11.49,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.4-1.11.64-1.66a22,22,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,45.06,45.06,0,0,1,6.22-3.47,66.39,66.39,0,0,1,6.64-2.63,110,110,0,0,1,13.84-3.63q3.12-.62,6.26-1.12C327,208.08,327.48,208.72,328,209.37Z"/><polygon class="cls-3" points="326.11 206.99 326.49 206.93 326.83 207.39 326.46 207.45 326.11 206.99"/></g><g class="cls-1"><path class="cls-13" d="M522.55,422.11l-1.82-1a110.8,110.8,0,0,1-12.12-7.59,89.58,89.58,0,0,1-10.87-9.25,68.56,68.56,0,0,1-9-11.06,55.65,55.65,0,0,1-6.18-12.81,52.71,52.71,0,0,1-1.76-6.89,50.94,50.94,0,0,1-.78-7.08,56.09,56.09,0,0,1,1.26-14.15,48.64,48.64,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.76-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.55-5.58a50.23,50.23,0,0,0,3.9-6.08,29.79,29.79,0,0,0,2.7-6.73,19.87,19.87,0,0,0,.5-7.25,18.73,18.73,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.59-2.52-.46-.4-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.3a100.12,100.12,0,0,0-12.48-7.15q-3.23-1.57-6.56-2.95c-2.21-.92-4.45-1.78-6.7-2.59-4.51-1.61-9.09-3-13.72-4.27-9.24-2.52-18.63-4.42-28-6.07-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.37-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.54,13.54,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,8.69,8.69,0,0,1,1.26-1.24,17.37,17.37,0,0,1,3-2c1.05-.57,2.13-1.07,3.23-1.55,2.19-1,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.28-1.46a15.26,15.26,0,0,0,3.05-1.9,5.2,5.2,0,0,0,1.19-1.37,3,3,0,0,0,.37-1.76,8,8,0,0,0-1.21-3.38,14.49,14.49,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.76-.39l-.88-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.77.77,0,0,1,.18,0l.22,0,.44.06c.29,0,.59.1.88.16.58.12,1.17.25,1.75.39,1.16.27,2.32.57,3.47.89,2.3.64,4.58,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a46.94,46.94,0,0,1,6.13,3.68,26.19,26.19,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.74-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.73,18.73,0,0,0-3,2,10.32,10.32,0,0,0-1.29,1.27,6.27,6.27,0,0,0-1,1.54,4.84,4.84,0,0,0-.27.87c0,.08,0,.15-.05.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12.05,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.64,2.69,5.19,5.48,7.55,8.41q-3,.49-6,1.08a111.33,111.33,0,0,0-13.89,3.66,67.29,67.29,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.55,22.55,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.79,8.79,0,0,0,.34,3.64,12.42,12.42,0,0,0,1.6,3.27,17.16,17.16,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,36,36,0,0,0,6.74,2.53c1.16.31,2.33.57,3.52.79l.88.15.89.14c.6.09,1.19.15,1.79.22,1.2.11,2.39.2,3.6.21h1.8l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,26.12,26.12,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,12.85,12.85,0,0,0,1-1.5,13.45,13.45,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.8,29.8,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.6-4-4-5.94q-.68-.9-1.38-1.77c7.21-1.16,14.48-1.9,21.76-2.39,9.53-.63,19.09-.8,28.64-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.41,1.66,18.77,3.57,28,6.09,4.61,1.26,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.08,20.08,0,0,1,1.4,3.23,17.29,17.29,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29,29,0,0,1-2.62,6.54,49.55,49.55,0,0,1-3.86,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.42-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.61,59.61,0,0,0-1.09,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2,0,1.8a50.58,50.58,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69.91,69.91,0,0,0,9.08,11.15,88.34,88.34,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l1.89,1ZM326.45,213.24c1.43,1.91,2.78,3.88,4,5.92a49.27,49.27,0,0,1,3.26,6.34,29.7,29.7,0,0,1,2,6.83,16.84,16.84,0,0,1-.3,7A13.26,13.26,0,0,1,334,242.6a13,13,0,0,1-1,1.45,13.27,13.27,0,0,1-1.18,1.32,21,21,0,0,1-2.72,2.26,26.22,26.22,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.09,12.09,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.08-.28.17-.56.26-.84.19-.56.41-1.11.65-1.66a21.76,21.76,0,0,1,3.86-5.91,30.14,30.14,0,0,1,5.41-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63,109.42,109.42,0,0,1,13.83-3.63q3.12-.62,6.27-1.12C325.46,212,326,212.59,326.45,213.24Z"/><polygon class="cls-3" points="324.6 210.86 324.97 210.8 325.32 211.26 324.95 211.32 324.6 210.86"/></g><g class="cls-1"><path class="cls-14" d="M521.1,425.86c-.62-.32-1.23-.65-1.84-1a108.25,108.25,0,0,1-12.11-7.59,88,88,0,0,1-10.88-9.24,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,50.8,50.8,0,0,1-.78-7.07,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.83,13.76-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.33,1.58-1.79,3.11-3.65,4.55-5.58a49.35,49.35,0,0,0,3.9-6.07,30,30,0,0,0,2.7-6.73,19.89,19.89,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.24,20.24,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.46-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a99.48,99.48,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.85-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.8,5.8,0,0,1,.93-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-2c1.05-.56,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a15.73,15.73,0,0,0,3.05-1.9,5.37,5.37,0,0,0,1.19-1.37,3,3,0,0,0,.32-.86,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.09c-1.15-.32-2.31-.62-3.47-.9-.58-.14-1.17-.27-1.75-.38-.3-.06-.59-.12-.89-.16l-.44-.07h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.11c2.26.76,4.51,1.59,6.72,2.49s4.39,1.87,6.52,3a47,47,0,0,1,6.13,3.69,25,25,0,0,1,2.75,2.28,14.26,14.26,0,0,1,2.27,2.75,7.71,7.71,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.13,18.13,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.09,6.09,0,0,0-1,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,45.24,45.24,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7.05,6.47,10.38,9.88,2.64,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.58,8.58,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.52.79l.88.16.89.13c.6.09,1.19.15,1.79.22,1.2.11,2.39.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.15,37.15,0,0,0,7.09-1.21,33,33,0,0,0,6.71-2.61,27.53,27.53,0,0,0,3.08-1.88,21.3,21.3,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.57,15.57,0,0,0,.53-3.59,19.68,19.68,0,0,0-.23-3.6,29.51,29.51,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39,70.62,70.62,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2t14.15,2.29c9.41,1.65,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.27q3.38,1.22,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93A99.12,99.12,0,0,1,527,243.38c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.88.79,1.74,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,19.29,19.29,0,0,1-.49,7,29.43,29.43,0,0,1-2.63,6.55,50.6,50.6,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.52,5.53-3.15,3.57-6.53,6.95-9.95,10.28-6.86,6.64-14,13.06-20.65,19.91-3.35,3.43-6.59,7-9.62,10.68a85.09,85.09,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4A59,59,0,0,0,478,363c0,.3,0,.6-.07.9l-.06.9c0,.6,0,1.2-.07,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a50.91,50.91,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,88.42,88.42,0,0,0,11,9.3,109.73,109.73,0,0,0,12.19,7.6c.63.34,1.27.68,1.91,1ZM325,217c1.43,1.9,2.78,3.87,4,5.91a48.75,48.75,0,0,1,3.26,6.35,29.14,29.14,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,21.12,21.12,0,0,1-2.72,2.27,29.32,29.32,0,0,1-3,1.85A33.62,33.62,0,0,1,318,255.8a38,38,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.08-.27.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.61,21.61,0,0,1,3.86-5.91,29.79,29.79,0,0,1,5.41-4.61,45.52,45.52,0,0,1,6.22-3.47,67.88,67.88,0,0,1,6.64-2.63,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C324,215.69,324.49,216.33,325,217Z"/><polygon class="cls-3" points="323.13 214.59 323.5 214.53 323.85 215 323.48 215.05 323.13 214.59"/></g><g class="cls-1"><path class="cls-15" d="M519.71,429.43l-1.75-.94a109.22,109.22,0,0,1-12.12-7.58A88.82,88.82,0,0,1,495,411.66a69.13,69.13,0,0,1-9-11.07,56.21,56.21,0,0,1-6.18-12.8,54.46,54.46,0,0,1-1.75-6.9,50.8,50.8,0,0,1-.78-7.07,56.09,56.09,0,0,1,1.26-14.15,48.51,48.51,0,0,1,5.23-13.18,83.3,83.3,0,0,1,8.11-11.73c3-3.69,6.24-7.2,9.58-10.62,6.67-6.82,13.76-13.24,20.64-19.89,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.54-5.59a49.42,49.42,0,0,0,3.91-6.07,29.79,29.79,0,0,0,2.7-6.73,19.87,19.87,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-3-5.77-4.3a101.46,101.46,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.51-1.61-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.26-10.62-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.75,8.75,0,0,1,0-1.77l0-.23,0-.22,0-.21a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,9.38,9.38,0,0,1,1.27-1.25,18.64,18.64,0,0,1,3-2c1.05-.56,2.13-1.06,3.22-1.54,2.2-.95,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.84,2.84,0,0,0,.05-.92,8,8,0,0,0-1.21-3.37,14.87,14.87,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9L223,96.2l-.88-.16a3.47,3.47,0,0,0-.45-.06l-.22,0c-.08,0-.14,0-.25.06l.07,0a.72.72,0,0,1,.18,0h.22l.44.07c.29,0,.59.1.88.16.58.11,1.17.25,1.75.38,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.11t6.72,2.49c2.21.9,4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.68,7.68,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.91,15.91,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.73,18.73,0,0,0-3,2A9.11,9.11,0,0,0,238.6,131a6.27,6.27,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.85,1.85,0,0,1,0,.23l0,.22,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.19,5.48,7.55,8.41q-3,.49-6,1.09A111.33,111.33,0,0,0,301.93,223a64.94,64.94,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.73,8.73,0,0,0,.34,3.63,12.76,12.76,0,0,0,1.59,3.28,16.73,16.73,0,0,0,2.36,2.75,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.21h1.81l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,13.75,13.75,0,0,0,1-1.5,13.58,13.58,0,0,0,1.42-3.33,13.76,13.76,0,0,0,.38-1.78,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.65,29.65,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39,70.62,70.62,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.47-1.9,21.76-2.38,9.53-.63,19.09-.8,28.64-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.94A98.59,98.59,0,0,1,525.67,247c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.79,1.73,1.62,2.54,2.48a27.55,27.55,0,0,1,4.18,5.68,20.37,20.37,0,0,1,1.4,3.22,17.61,17.61,0,0,1,.77,3.42,19,19,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.41,1.9-2.93,3.74-4.51,5.52-3.15,3.58-6.53,7-10,10.28-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.68a84.41,84.41,0,0,0-8.18,11.83,49.67,49.67,0,0,0-5.29,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.91q0,.45,0,.9c0,.6,0,1.2,0,1.8a52.27,52.27,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7A56.51,56.51,0,0,0,485.44,401a69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29A109.45,109.45,0,0,0,517.68,429l1.82,1Zm-196-208.84c1.43,1.91,2.78,3.87,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.77,29.77,0,0,1,2,6.82,16.88,16.88,0,0,1-.3,7,13.19,13.19,0,0,1-1.39,3.23,12.23,12.23,0,0,1-1,1.46,13.29,13.29,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,26.64,26.64,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.9,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13L299,260c-1.17-.21-2.33-.48-3.48-.79a35.82,35.82,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.19,8.19,0,0,1-.33-3.44,8,8,0,0,1,.17-.85c.07-.28.17-.57.26-.85.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,30.43,30.43,0,0,1,5.4-4.6,45.17,45.17,0,0,1,6.23-3.47,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.61,6.27-1.12C322.69,219.3,323.19,219.94,323.68,220.59Z"/><polygon class="cls-3" points="321.83 218.21 322.2 218.15 322.55 218.61 322.18 218.67 321.83 218.21"/></g><g class="cls-1"><path class="cls-16" d="M518.21,433.3c-.59-.3-1.18-.62-1.77-.94a109.09,109.09,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.6,68.6,0,0,1-9-11.07,55.38,55.38,0,0,1-6.18-12.8,50.74,50.74,0,0,1-2.54-14A56.09,56.09,0,0,1,477,363.54a48.83,48.83,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.2,9.58-10.62,6.67-6.82,13.77-13.23,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.8-2.94-5.78-4.3a100,100,0,0,0-12.47-7.15q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.59-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.37-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.68.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.07-9.13s-7.21-6.26-10.61-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.65,22.65,0,0,1-1.64-3.17,13.27,13.27,0,0,1-.94-3.42,9.54,9.54,0,0,1,0-1.77l0-.23,0-.22,0-.21a2.07,2.07,0,0,0,0-.22,4.84,4.84,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-2c1-.56,2.13-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.55,15.55,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,2.58,2.58,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37,14.13,14.13,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48.6,48.6,0,0,0-6.15-3.69c-2.14-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.3-.62-3.47-.9l-1.75-.38-.88-.16a3.47,3.47,0,0,0-.45-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0h.22l.44.07c.3,0,.59.1.88.16.59.11,1.17.25,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a47.45,47.45,0,0,1,6.13,3.69,25.12,25.12,0,0,1,2.76,2.28,14.52,14.52,0,0,1,2.26,2.75,7.8,7.8,0,0,1,1.18,3.32,2.32,2.32,0,0,1,0,.87,3,3,0,0,1-.31.81,5.23,5.23,0,0,1-1.15,1.33,15.67,15.67,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.21.9-4.46,1.73-6.66,2.68-1.09.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,10.31,10.31,0,0,0-1.29,1.27,6.59,6.59,0,0,0-1,1.54,5.16,5.16,0,0,0-.27.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,23.53,23.53,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.81,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a110.87,110.87,0,0,0-13.89,3.66,65.11,65.11,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.42,22.42,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,12.14,12.14,0,0,0,1.59,3.28,17.68,17.68,0,0,0,2.35,2.76,24.7,24.7,0,0,0,5.94,4.08,35.38,35.38,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.78.23,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,14.05,14.05,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.63,15.63,0,0,0,.37-1.78,13.68,13.68,0,0,0,.16-1.8,18.94,18.94,0,0,0-.22-3.61,30.14,30.14,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.19,97.19,0,0,1,12.37,7.12c2,1.34,3.89,2.75,5.73,4.26l.68.57.68.58c.46.38.9.78,1.35,1.17.88.79,1.73,1.62,2.54,2.48a27.5,27.5,0,0,1,4.17,5.68,20.42,20.42,0,0,1,1.41,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.9-2.93,3.74-4.51,5.52-3.16,3.58-6.53,7-10,10.28-6.86,6.64-14,13.07-20.65,19.92-3.34,3.42-6.59,6.95-9.62,10.68A85.26,85.26,0,0,0,481.58,350a49.65,49.65,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8V375c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a53.86,53.86,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.47,56.47,0,0,0,6.27,12.94A70.08,70.08,0,0,0,493,416a90,90,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61l1.83,1Zm-196-208.84a70.67,70.67,0,0,1,4,5.91,48.15,48.15,0,0,1,3.26,6.35,29.3,29.3,0,0,1,2,6.82,16.88,16.88,0,0,1-.31,7,13.19,13.19,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22l-.89-.13-.87-.16c-1.17-.21-2.34-.48-3.48-.79a35.91,35.91,0,0,1-6.67-2.49,24.62,24.62,0,0,1-5.83-4,16.24,16.24,0,0,1-2.28-2.69,11.54,11.54,0,0,1-1.53-3.16,8.19,8.19,0,0,1-.33-3.44,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.57.26-.84.19-.57.4-1.12.64-1.66a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,69,69,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62q3.14-.61,6.27-1.12C321.18,223.17,321.68,223.81,322.16,224.46Z"/><polygon class="cls-3" points="320.31 222.08 320.69 222.02 321.04 222.48 320.66 222.54 320.31 222.08"/></g><g class="cls-1"><path class="cls-17" d="M516.76,437.05,515,436.1a110.67,110.67,0,0,1-12.11-7.59A88,88,0,0,1,492,419.27a68.6,68.6,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56,56,0,0,1,1.26-14.15,48.9,48.9,0,0,1,5.23-13.19,84.65,84.65,0,0,1,8.11-11.72c3-3.7,6.25-7.21,9.58-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.68-.58-.7-.58c-1.86-1.52-3.79-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.58-6.56-2.94c-2.21-.92-4.45-1.79-6.71-2.59-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.43-6-11.07-9.12s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a42.63,42.63,0,0,1-4.27-5.73,22.54,22.54,0,0,1-1.64-3.16,13.23,13.23,0,0,1-.94-3.43,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.43,1.43,0,0,0,0-.22,6.18,6.18,0,0,1,.27-.83,5.76,5.76,0,0,1,.92-1.5,9.3,9.3,0,0,1,1.26-1.25,18.86,18.86,0,0,1,3-1.95c1-.57,2.14-1.07,3.23-1.54,2.19-1,4.43-1.79,6.65-2.69,1.1-.45,2.2-.93,3.28-1.46a15.09,15.09,0,0,0,3-1.9,5,5,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.86,7.86,0,0,0-1.21-3.38,14.38,14.38,0,0,0-2.28-2.76,25.12,25.12,0,0,0-2.77-2.29,47.45,47.45,0,0,0-6.15-3.69c-2.14-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.85-2.1c-1.16-.31-2.31-.61-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.17.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,25.12,25.12,0,0,1,2.76,2.28,14.46,14.46,0,0,1,2.26,2.74,7.8,7.8,0,0,1,1.18,3.32,2.3,2.3,0,0,1,0,.87,3,3,0,0,1-.31.82,5,5,0,0,1-1.15,1.32,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6.13,6.13,0,0,0-1,1.54,6.28,6.28,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.61,13.61,0,0,0,.95,3.48,23.41,23.41,0,0,0,1.64,3.19,45.59,45.59,0,0,0,4.28,5.77c1.57,1.81,3.22,3.54,4.92,5.23,3.4,3.36,7,6.54,10.62,9.64s7.33,6.14,11.05,9.15l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09A112.58,112.58,0,0,0,299,230.56a70,70,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6,16.44,16.44,0,0,0-.66,1.69c-.09.28-.19.56-.27.87a6.83,6.83,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,33.84,33.84,0,0,0,6.71-2.62,27.77,27.77,0,0,0,3.08-1.87,21.15,21.15,0,0,0,2.77-2.32,14.4,14.4,0,0,0,2.24-2.84,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,13.67,13.67,0,0,0,.16-1.81,18.94,18.94,0,0,0-.22-3.61,30.06,30.06,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.17,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a99.24,99.24,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.67.58c.46.38.9.78,1.35,1.18.88.79,1.73,1.61,2.54,2.47a28,28,0,0,1,4.18,5.69,20.9,20.9,0,0,1,1.4,3.22A18.18,18.18,0,0,1,540,276a18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.93,3.75-4.51,5.53-3.16,3.57-6.53,6.95-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.44,59.44,0,0,0-1.08,7.14c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.17,56.17,0,0,0,6.28,12.95,69,69,0,0,0,9.07,11.15,90,90,0,0,0,11,9.3,110.42,110.42,0,0,0,12.2,7.6l1.85,1ZM320.69,228.19a69.22,69.22,0,0,1,4,5.92,47.54,47.54,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.78,32.78,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19c-.3,0-.59.05-.89.05l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.23l-.89-.13-.87-.16c-1.17-.21-2.34-.47-3.48-.78a35.25,35.25,0,0,1-6.67-2.5,24.08,24.08,0,0,1-5.82-4,15.45,15.45,0,0,1-2.29-2.69,11.35,11.35,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.06,45.06,0,0,1,6.22-3.47A68.89,68.89,0,0,1,299.1,231a113.54,113.54,0,0,1,13.84-3.63q3.12-.62,6.26-1.12C319.71,226.91,320.21,227.55,320.69,228.19Z"/><polygon class="cls-3" points="318.84 225.81 319.22 225.75 319.56 226.21 319.19 226.27 318.84 225.81"/></g><g class="cls-1"><path class="cls-18" d="M515.33,440.74l-1.82-1a109.17,109.17,0,0,1-12.11-7.59,87.14,87.14,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,54,54,0,0,1-.78-7.07A56.05,56.05,0,0,1,474.09,371a48.7,48.7,0,0,1,5.23-13.18A83.37,83.37,0,0,1,487.44,346c3-3.69,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a50.63,50.63,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.13.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.41-6.84-6.69-10.41-9.87-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.65,22.65,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.22l0-.22,0-.22c0-.07,0-.14.05-.21a4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-2c1.05-.56,2.14-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.73,15.73,0,0,0,3.05-1.9,5.33,5.33,0,0,0,1.18-1.37,3,3,0,0,0,.33-.86,2.54,2.54,0,0,0,0-.91,7.82,7.82,0,0,0-1.21-3.37,14.14,14.14,0,0,0-2.28-2.77A25.12,25.12,0,0,0,250,120a47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.85-2.09c-1.16-.32-2.31-.62-3.48-.9-.58-.14-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.07H217c-.08,0-.14,0-.25.06l.08,0H217l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49c2.22.9,4.4,1.87,6.52,3a47.11,47.11,0,0,1,6.14,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.86,7.86,0,0,1,1.19,3.31,2.53,2.53,0,0,1-.05.87,3,3,0,0,1-.31.82,5.2,5.2,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.91,13.91,0,0,0,.95,3.48,24.13,24.13,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.47,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,70,70,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.47,1.11-.66,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.75,8.75,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,33,33,0,0,0,6.71-2.61,29.47,29.47,0,0,0,3.08-1.88,21.89,21.89,0,0,0,2.77-2.31,12.93,12.93,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.63,15.63,0,0,0,.37-1.78,13.67,13.67,0,0,0,.16-1.81,18.83,18.83,0,0,0-.22-3.6,30,30,0,0,0-2-6.91,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T454,235.27c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.27q3.36,1.22,6.66,2.59c2.2.91,4.38,1.89,6.52,2.93a99.24,99.24,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,20.9,20.9,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.35,49.35,0,0,1-3.85,6c-1.42,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.91-3.34,3.43-6.59,7-9.62,10.68a86,86,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,59,59,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.17,56.17,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,88.33,88.33,0,0,0,11,9.3,108.94,108.94,0,0,0,12.2,7.6c.62.34,1.25.67,1.88,1ZM319.23,231.87a67.52,67.52,0,0,1,4,5.91,47.54,47.54,0,0,1,3.26,6.35,29.16,29.16,0,0,1,2,6.82,16.66,16.66,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,29.32,29.32,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.54,11.54,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,6.39,6.39,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.64,45.64,0,0,1,6.23-3.47,67.7,67.7,0,0,1,6.63-2.63,111.71,111.71,0,0,1,13.84-3.62c2.08-.42,4.17-.79,6.26-1.13C318.25,230.58,318.75,231.22,319.23,231.87Z"/><polygon class="cls-3" points="317.38 229.49 317.76 229.42 318.11 229.89 317.73 229.94 317.38 229.49"/></g><g class="cls-1"><path class="cls-19" d="M513.83,444.61c-.61-.32-1.23-.64-1.83-1a109.65,109.65,0,0,1-12.11-7.58A88.92,88.92,0,0,1,489,426.81a69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,50.8,50.8,0,0,1-.78-7.07,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.33,1.58-1.79,3.12-3.65,4.55-5.58a49.35,49.35,0,0,0,3.9-6.07,30,30,0,0,0,2.7-6.73,19.89,19.89,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.24,20.24,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a99.48,99.48,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.85-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6,6,0,0,1,.93-1.5A8.76,8.76,0,0,1,234,145a18.64,18.64,0,0,1,3-2c1-.56,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a16.11,16.11,0,0,0,3.06-1.9,5.53,5.53,0,0,0,1.18-1.37,3.33,3.33,0,0,0,.33-.86,3.08,3.08,0,0,0,0-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.09c-1.15-.32-2.31-.62-3.47-.9-.58-.14-1.17-.27-1.75-.38-.3-.06-.59-.12-.89-.16l-.44-.07h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.11c2.26.76,4.51,1.59,6.72,2.49s4.39,1.87,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.26,14.26,0,0,1,2.27,2.75,7.76,7.76,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.09,6.09,0,0,0-.95,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,45.24,45.24,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7.05,6.47,10.38,9.88,2.64,2.7,5.19,5.48,7.56,8.41q-3,.49-6,1.09A113.05,113.05,0,0,0,296,238.1a69.82,69.82,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.52.79l.88.16.89.13c.6.09,1.19.15,1.79.22,1.2.12,2.39.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.15,37.15,0,0,0,7.09-1.21,33,33,0,0,0,6.71-2.61,27.53,27.53,0,0,0,3.08-1.88,21.3,21.3,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.57,15.57,0,0,0,.53-3.59,19.74,19.74,0,0,0-.23-3.6,29.51,29.51,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39,68.31,68.31,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2t14.15,2.29c9.41,1.65,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.27q3.38,1.22,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.88.79,1.74,1.61,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29.43,29.43,0,0,1-2.63,6.55,50.6,50.6,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.52,5.53-3.15,3.57-6.53,6.95-9.95,10.28-6.86,6.64-14,13.06-20.65,19.91-3.35,3.43-6.59,7-9.62,10.68a85.09,85.09,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,61,61,0,0,0-1.09,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a50.91,50.91,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,88.42,88.42,0,0,0,11,9.3,109.73,109.73,0,0,0,12.19,7.6l1.9,1ZM317.72,235.74c1.43,1.9,2.78,3.87,4,5.91A48.75,48.75,0,0,1,325,248a29.14,29.14,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,21.12,21.12,0,0,1-2.72,2.27,29.32,29.32,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.08-.27.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.61,21.61,0,0,1,3.86-5.91,29.79,29.79,0,0,1,5.41-4.61,45.52,45.52,0,0,1,6.22-3.47,67.88,67.88,0,0,1,6.64-2.63A111.1,111.1,0,0,1,310,234.94c2.08-.42,4.17-.79,6.27-1.13C316.73,234.45,317.23,235.09,317.72,235.74Z"/><polygon class="cls-3" points="315.87 233.35 316.24 233.29 316.59 233.76 316.22 233.81 315.87 233.35"/></g><g class="cls-1"><path class="cls-20" d="M512.38,448.36l-1.85-1a109.73,109.73,0,0,1-12.11-7.59,88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.65,55.65,0,0,1-6.18-12.81,50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.23,50.23,0,0,0,3.9-6.08,29.44,29.44,0,0,0,2.7-6.72,19.72,19.72,0,0,0,.5-7.26,18.73,18.73,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.4-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.25,98.25,0,0,0-12.48-7.16q-3.23-1.58-6.56-3t-6.7-2.58c-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.07-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.37-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,5.09,5.09,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,9.24,9.24,0,0,1,1.26-1.24,17.37,17.37,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.28-1.46a15.16,15.16,0,0,0,3.06-1.9,5.35,5.35,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.49,14.49,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0a3.32,3.32,0,0,1,.44.06c.29,0,.59.1.88.16.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.89,2.3.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a48.07,48.07,0,0,1,6.13,3.68,25.21,25.21,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,4.86,4.86,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.44-2.21.9-4.45,1.74-6.65,2.68-1.1.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,10.32,10.32,0,0,0-1.29,1.27,6.15,6.15,0,0,0-.95,1.55,4.51,4.51,0,0,0-.27.86c0,.08,0,.15,0,.23l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.41,3.37,7,6.55,10.62,9.65s7.34,6.14,11.06,9.14l11.17,9c7.44,6,14.85,12.05,22,18.42,3.56,3.19,7.05,6.46,10.38,9.88,2.64,2.69,5.19,5.48,7.56,8.41q-3,.5-6,1.08a111.33,111.33,0,0,0-13.89,3.66,67.29,67.29,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.55,22.55,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.63,8.63,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,36,36,0,0,0,6.74,2.53c1.16.31,2.33.57,3.52.79l.88.15c.3.06.6.09.89.14.6.09,1.19.15,1.79.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,26.12,26.12,0,0,0,3.08-1.88,19.82,19.82,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,12.85,12.85,0,0,0,1-1.5,13.45,13.45,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,30.27,30.27,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,68.16,68.16,0,0,0-4.05-5.93c-.45-.6-.91-1.2-1.38-1.78,7.21-1.16,14.48-1.9,21.76-2.39,9.53-.62,19.09-.8,28.64-.67s19.11.59,28.64,1.29,19,1.67,28.51,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.41,1.66,18.77,3.58,28,6.09,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.88.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,19.13,19.13,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29.07,29.07,0,0,1-2.63,6.54,50.72,50.72,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.52,5.53-3.15,3.57-6.53,6.94-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68A83.92,83.92,0,0,0,475.67,365a49.58,49.58,0,0,0-5.28,13.39,59.58,59.58,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.08,52.08,0,0,0,.8,7.17,53.85,53.85,0,0,0,1.79,7A56.58,56.58,0,0,0,478,419.84,69.91,69.91,0,0,0,487.09,431a88.34,88.34,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l1.92,1ZM316.25,239.47c1.43,1.91,2.78,3.88,4,5.92a49.27,49.27,0,0,1,3.26,6.34,29.21,29.21,0,0,1,2,6.83,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,13,13,0,0,1-1,1.45,13.27,13.27,0,0,1-1.18,1.32,21,21,0,0,1-2.72,2.26,26.22,26.22,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16q-1.76-.32-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.08-.28.17-.56.26-.84.19-.56.41-1.11.65-1.66A21.56,21.56,0,0,1,276.4,253a29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63,109.42,109.42,0,0,1,13.83-3.63q3.12-.61,6.27-1.12C315.26,238.18,315.76,238.82,316.25,239.47Z"/><polygon class="cls-3" points="314.4 237.09 314.77 237.03 315.12 237.49 314.75 237.55 314.4 237.09"/></g><g class="cls-1"><path class="cls-21" d="M510.94,452.06l-1.85-1A108.25,108.25,0,0,1,497,443.48a88,88,0,0,1-10.88-9.24,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.05,56.05,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18A84.15,84.15,0,0,1,483,357.34c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a49.35,49.35,0,0,0,3.9-6.07,29.52,29.52,0,0,0,2.7-6.73,19.69,19.69,0,0,0,.5-7.25,18.83,18.83,0,0,0-.8-3.57,19.88,19.88,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.53l-1.36-1.18-.69-.58-.69-.57c-1.86-1.53-3.8-2.95-5.78-4.3a98.25,98.25,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.55-2.94s-4.45-1.79-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.85-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,23.15,23.15,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,5.8,5.8,0,0,1,.93-1.5,8.76,8.76,0,0,1,1.26-1.25,18,18,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.54,2.19-1,4.43-1.79,6.64-2.69,1.11-.45,2.21-.92,3.28-1.46a15.58,15.58,0,0,0,3.06-1.89,5.53,5.53,0,0,0,1.18-1.37,3.33,3.33,0,0,0,.33-.86,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.61-3.47-.89-.58-.14-1.17-.27-1.75-.38l-.89-.17-.44-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.5,4.39,1.87,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.26,14.26,0,0,1,2.27,2.75,7.71,7.71,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5,5,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,45.24,45.24,0,0,0,4.28,5.76c1.56,1.81,3.21,3.54,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.41,3.55,3.19,7,6.47,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.69-.1.29-.19.57-.27.87a7.17,7.17,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.52.79l.88.16.89.13c.6.09,1.19.15,1.79.22,1.2.11,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.15,37.15,0,0,0,7.09-1.21,33.57,33.57,0,0,0,6.71-2.61,27.53,27.53,0,0,0,3.08-1.88,21.3,21.3,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,15.6,15.6,0,0,0,.16-1.81,19.85,19.85,0,0,0-.23-3.61,30,30,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,68.31,68.31,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.51,2.88q7.11.9,14.2,2t14.15,2.29c9.41,1.65,18.77,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.21,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.88.79,1.74,1.61,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,19.13,19.13,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,51.43,51.43,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.54,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.91-3.35,3.43-6.59,7-9.62,10.68a84.51,84.51,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,59,59,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a52.43,52.43,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,109.73,109.73,0,0,0,12.19,7.6c.64.35,1.28.68,1.93,1ZM314.81,243.17c1.43,1.9,2.78,3.87,4,5.91a48.75,48.75,0,0,1,3.26,6.35,29.14,29.14,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,13.31,13.31,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.91,21.91,0,0,1-2.73,2.27,29.32,29.32,0,0,1-3,1.85,33,33,0,0,1-6.63,2.57,37.2,37.2,0,0,1-7,1.19l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.14-.88-.15c-1.17-.22-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.68,12.15,12.15,0,0,1-1.53-3.16A8.25,8.25,0,0,1,270,266a8.52,8.52,0,0,1,.17-.85c.08-.27.17-.56.26-.84.19-.56.41-1.11.65-1.65A21.41,21.41,0,0,1,275,256.7a29.39,29.39,0,0,1,5.4-4.61,45.52,45.52,0,0,1,6.22-3.47,67.88,67.88,0,0,1,6.64-2.63,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C313.82,241.88,314.32,242.52,314.81,243.17Z"/><polygon class="cls-3" points="312.96 240.78 313.33 240.72 313.68 241.19 313.31 241.24 312.96 240.78"/></g><g class="cls-1"><path class="cls-22" d="M509.44,455.93c-.62-.32-1.25-.65-1.87-1a109.17,109.17,0,0,1-12.11-7.59,87.14,87.14,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.42,50.42,0,0,1-2.53-14,56,56,0,0,1,1.25-14.15,49,49,0,0,1,5.23-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.86-1.53-3.79-2.95-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.79-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.41-6.84-6.69-10.41-9.87-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,23.22,23.22,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.21a4.81,4.81,0,0,1,.26-.84,5.76,5.76,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-1.95c1-.57,2.14-1.07,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.46a15.22,15.22,0,0,0,3.05-1.89,5.33,5.33,0,0,0,1.18-1.37,3,3,0,0,0,.33-.86,2.54,2.54,0,0,0,0-.91,7.81,7.81,0,0,0-1.2-3.37,14.55,14.55,0,0,0-2.29-2.77,25.12,25.12,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.49-4.56-1.46-6.86-2.09c-1.16-.32-2.31-.62-3.48-.9-.58-.14-1.16-.27-1.75-.38l-.88-.17-.45-.06H211c-.08,0-.15,0-.26.06l.08,0H211l.22,0,.45.06.88.16q.87.18,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.1c2.27.77,4.51,1.59,6.72,2.5s4.4,1.87,6.53,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.86,7.86,0,0,1,1.19,3.31,2.53,2.53,0,0,1-.05.87,3,3,0,0,1-.31.82,5.2,5.2,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,24.13,24.13,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.47,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,45.49,45.49,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.66,1.69-.09.29-.19.57-.27.87s-.13.6-.18.9a8.78,8.78,0,0,0,.35,3.64,12.55,12.55,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09A35.63,35.63,0,0,0,285,286c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,33.57,33.57,0,0,0,6.71-2.61,29.47,29.47,0,0,0,3.08-1.88,22.71,22.71,0,0,0,2.78-2.31,14.06,14.06,0,0,0,1.2-1.36,12.81,12.81,0,0,0,1-1.49,13.88,13.88,0,0,0,1.42-3.34,11.84,11.84,0,0,0,.37-1.77,15.61,15.61,0,0,0,.17-1.81,19.68,19.68,0,0,0-.23-3.6,30,30,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.59s4.37,1.89,6.51,2.93a99.24,99.24,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,48.17,48.17,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.91-3.34,3.43-6.59,7-9.61,10.68a85.16,85.16,0,0,0-8.19,11.84,49.52,49.52,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a52.09,52.09,0,0,0,2.6,14.15,56.17,56.17,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,90,90,0,0,0,11,9.3,108.94,108.94,0,0,0,12.2,7.6c.64.35,1.29.69,1.93,1ZM313.29,247a67.52,67.52,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.62,29.62,0,0,1,2,6.82,16.66,16.66,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,29.32,29.32,0,0,1-3,1.85,32.52,32.52,0,0,1-6.63,2.57,37.06,37.06,0,0,1-7,1.19c-.29,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.14-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,16.23,16.23,0,0,1-2.29-2.68,11.84,11.84,0,0,1-1.53-3.16,8.25,8.25,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.64,45.64,0,0,1,6.23-3.47,68.71,68.71,0,0,1,6.63-2.63,111.71,111.71,0,0,1,13.84-3.62c2.08-.42,4.17-.79,6.26-1.13C312.31,245.75,312.81,246.39,313.29,247Z"/><polygon class="cls-3" points="311.44 244.65 311.82 244.59 312.17 245.06 311.79 245.11 311.44 244.65"/></g><g class="cls-1"><path class="cls-23" d="M508,459.68l-1.89-1A110.67,110.67,0,0,1,494,451.09a88.08,88.08,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06A56.06,56.06,0,0,1,468,418a51.23,51.23,0,0,1-2.53-14,56.08,56.08,0,0,1,1.25-14.15,49.29,49.29,0,0,1,5.23-13.18A83.28,83.28,0,0,1,480,365c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.31,50.31,0,0,0,3.91-6.08,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,18.73,18.73,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.6-2.52-.45-.4-.89-.8-1.35-1.18l-.69-.59-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.3a100,100,0,0,0-12.47-7.15q-3.24-1.57-6.56-3t-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.27-9.24-2.52-18.63-4.42-28-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.24-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.55-12.41-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.11,22.11,0,0,1-1.64-3.17,13.14,13.14,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,9.84,9.84,0,0,1,1.26-1.24,18.18,18.18,0,0,1,3-1.95c1-.57,2.14-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.65-2.68,1.1-.46,2.21-.93,3.28-1.46a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.87,14.87,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.46-6.86-2.1c-1.16-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.26.06l.08,0a.67.67,0,0,1,.17,0l.22,0a3.47,3.47,0,0,1,.45.06c.29,0,.58.1.88.16l1.75.39c1.16.27,2.31.57,3.46.89,2.31.64,4.59,1.35,6.86,2.11s4.5,1.59,6.71,2.49,4.4,1.88,6.53,3a47.61,47.61,0,0,1,6.13,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3,3,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.16,1-3.27,1.44-2.21.9-4.45,1.74-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.82,18.82,0,0,0-3,2,10.24,10.24,0,0,0-1.28,1.27,6,6,0,0,0-.95,1.54,5.86,5.86,0,0,0-.28.87c0,.08,0,.15,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,43.94,43.94,0,0,0,4.29,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.4,3.37,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.18,9c7.44,6,14.85,12.05,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.08a111.33,111.33,0,0,0-13.89,3.66,66.34,66.34,0,0,0-6.68,2.66,44.48,44.48,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69-.09.29-.19.57-.27.87a9.12,9.12,0,0,0-.17.91,8.63,8.63,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.61,24.61,0,0,0,5.94,4.08,36.36,36.36,0,0,0,6.75,2.53c1.16.31,2.33.57,3.51.79l.89.15.89.14c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21H296l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,21,21,0,0,0,2.78-2.31,13.81,13.81,0,0,0,3.66-6.18,13.41,13.41,0,0,0,.38-1.78,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,30.29,30.29,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94q-.68-.9-1.38-1.77c7.2-1.16,14.47-1.9,21.75-2.39,9.54-.63,19.1-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.14,2.29c9.41,1.66,18.78,3.57,28,6.09,4.61,1.26,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.94a98,98,0,0,1,12.38,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.08,20.08,0,0,1,1.4,3.23,18.83,18.83,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29.07,29.07,0,0,1-2.63,6.54,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.42-6.59,7-9.61,10.68a84,84,0,0,0-8.19,11.84A49.46,49.46,0,0,0,466,389.69a61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2,0,1.8a52.1,52.1,0,0,0,.81,7.17,52.68,52.68,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69.91,69.91,0,0,0,9.08,11.15,88.34,88.34,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61l1.95,1ZM311.83,250.77a71.5,71.5,0,0,1,4,5.92,49.34,49.34,0,0,1,3.27,6.34,29.7,29.7,0,0,1,2,6.83,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,20.48,20.48,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.14,33.14,0,0,1-6.63,2.58,36.91,36.91,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.78a35.59,35.59,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.3,16.3,0,0,1-2.29-2.69,11.78,11.78,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.66A22,22,0,0,1,272,264.3a30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,66.22,66.22,0,0,1,6.63-2.63A110,110,0,0,1,304.07,250q3.12-.61,6.26-1.12Q311.09,249.8,311.83,250.77Z"/><polygon class="cls-3" points="309.98 248.39 310.35 248.33 310.7 248.79 310.32 248.85 309.98 248.39"/></g><g class="cls-1"><path class="cls-24" d="M506.56,463.36l-1.91-1a109.86,109.86,0,0,1-12.12-7.59,88.82,88.82,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06,56.61,56.61,0,0,1-6.18-12.8,53.23,53.23,0,0,1-1.75-6.9,51,51,0,0,1-.78-7.07,55.67,55.67,0,0,1,1.26-14.16,48.94,48.94,0,0,1,5.22-13.18,83.28,83.28,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.19,50.19,0,0,0,3.91-6.07,30.14,30.14,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.9,18.9,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.62,28.62,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.6-2.52-.45-.39-.89-.8-1.35-1.18l-.69-.59-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16c-2.15-1.05-4.35-2-6.56-2.95s-4.45-1.78-6.7-2.58c-4.52-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.07q-7.08-1.22-14.17-2.27c-4.73-.71-9.47-1.38-14.21-2q-14.24-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.25s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.45-2.42-3-5-5.82-7.71-8.57-3.35-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a43.27,43.27,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.14,13.14,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,5.4,5.4,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,10.54,10.54,0,0,1,1.26-1.24,17.85,17.85,0,0,1,3-1.95c1-.57,2.13-1.07,3.22-1.55,2.19-.94,4.43-1.78,6.65-2.68,1.11-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,15.2,15.2,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,47.16,47.16,0,0,0-6.15-3.68c-2.13-1.09-4.32-2.07-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.25.06l.07,0a.67.67,0,0,1,.17,0l.23,0,.44.06.88.16,1.75.39c1.16.27,2.31.58,3.47.9,2.3.63,4.58,1.34,6.85,2.1s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.15,14.15,0,0,1,2.26,2.74,7.82,7.82,0,0,1,1.19,3.32,2.81,2.81,0,0,1,0,.87,3.18,3.18,0,0,1-.32.81,4.89,4.89,0,0,1-1.15,1.33,14.76,14.76,0,0,1-3,1.88c-1.06.53-2.16,1-3.27,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.21,18.21,0,0,0-3,2,9.53,9.53,0,0,0-1.28,1.26,5.87,5.87,0,0,0-.95,1.55,5.19,5.19,0,0,0-.28.87c0,.07,0,.14,0,.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.4,3.37,7,6.55,10.62,9.65s7.34,6.14,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.08a111.33,111.33,0,0,0-13.89,3.66,66.34,66.34,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.1,22.1,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69-.09.29-.19.57-.27.87s-.13.61-.17.91a8.77,8.77,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,16.8,16.8,0,0,0,2.36,2.76,24.09,24.09,0,0,0,5.93,4.08,36.36,36.36,0,0,0,6.75,2.53c1.16.31,2.33.58,3.51.79l.89.15c.3.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.8l.91,0,.89-.05a38.75,38.75,0,0,0,7.1-1.21,33.6,33.6,0,0,0,6.71-2.62,28.38,28.38,0,0,0,3.08-1.87,21.92,21.92,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,13.72,13.72,0,0,0,2.45-4.83,13.62,13.62,0,0,0,.38-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,30.06,30.06,0,0,0-2-6.9,48.91,48.91,0,0,0-3.29-6.4c-1.25-2-2.61-4-4.05-5.93-.45-.6-.91-1.2-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.14,2.3c9.41,1.65,18.78,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.58s4.37,1.89,6.51,2.94a98,98,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29.14,29.14,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.66,19.92-3.34,3.43-6.59,7-9.61,10.68A83.92,83.92,0,0,0,469.79,380a49.29,49.29,0,0,0-5.29,13.39,61.51,61.51,0,0,0-1.08,7.14c0,.29-.05.59-.07.89l-.06.9c0,.6-.05,1.21-.08,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a52.13,52.13,0,0,0,.81,7.16,53.85,53.85,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95A69.46,69.46,0,0,0,481.21,446a88.34,88.34,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61l2,1ZM310.37,254.44a71.5,71.5,0,0,1,4,5.92,48.81,48.81,0,0,1,3.27,6.35,29.48,29.48,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7A13.26,13.26,0,0,1,318,283.8a14.45,14.45,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.48,20.48,0,0,1-2.73,2.26,25.4,25.4,0,0,1-3,1.85,33.29,33.29,0,0,1-6.62,2.58,37.16,37.16,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.22-.59-.06-1.18-.12-1.77-.22l-.88-.13-.88-.16q-1.76-.31-3.48-.78a34.9,34.9,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.65a22.08,22.08,0,0,1,3.87-5.92,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,65.45,65.45,0,0,1,6.64-2.63,111.14,111.14,0,0,1,13.83-3.63q3.12-.62,6.27-1.12C309.38,253.15,309.88,253.79,310.37,254.44Z"/><polygon class="cls-3" points="308.52 252.06 308.89 252 309.24 252.46 308.87 252.52 308.52 252.06"/></g><g class="cls-1"><path class="cls-25" d="M505.06,467.24c-.65-.33-1.29-.67-1.93-1A110.67,110.67,0,0,1,491,458.63a88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.78,55.78,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56.13,56.13,0,0,1,1.26-14.16,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.9,3.44-3.33,6.83-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30.14,30.14,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.17,18.17,0,0,0-.81-3.56,21.18,21.18,0,0,0-1.45-3.35,28.67,28.67,0,0,0-4.3-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.39-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29A98.83,98.83,0,0,0,498.79,277q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.07-4.71-.81-9.44-1.56-14.16-2.27s-9.47-1.38-14.22-2Q401.14,255,386.82,254c-9.54-.69-19.1-1.13-28.67-1.25s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.62c-1.69-1.68-3.35-3.41-4.91-5.22a45.1,45.1,0,0,1-4.27-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,0,0-.22,4.55,4.55,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,9.24,9.24,0,0,1,1.26-1.24,17.77,17.77,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.55,2.19-.94,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.29-1.46a15.09,15.09,0,0,0,3.05-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,26.4,26.4,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.68c-2.13-1.09-4.31-2.07-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.3,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.9,2.3.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.2,14.2,0,0,1,2.27,2.74,7.8,7.8,0,0,1,1.18,3.32,2.73,2.73,0,0,1-.35,1.68,4.92,4.92,0,0,1-1.16,1.33,14.69,14.69,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,10.23,10.23,0,0,0-1.29,1.26,6.45,6.45,0,0,0-1,1.55,5.16,5.16,0,0,0-.27.87,1.43,1.43,0,0,0,0,.22l0,.22,0,.23,0,.22a9.94,9.94,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,22.44,22.44,0,0,0,1.64,3.2,44.78,44.78,0,0,0,4.28,5.76c1.56,1.82,3.22,3.55,4.92,5.24,3.4,3.36,7,6.54,10.61,9.64s7.34,6.14,11.06,9.14l11.17,9c7.44,6,14.86,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.08a111.48,111.48,0,0,0-13.9,3.66,68.28,68.28,0,0,0-6.68,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.37,22.37,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,37,37,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.15c.3.06.6.09.9.14.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9,0a38.75,38.75,0,0,0,7.1-1.21,33.75,33.75,0,0,0,6.7-2.62,28.52,28.52,0,0,0,3.09-1.87,21.15,21.15,0,0,0,2.77-2.32,15.53,15.53,0,0,0,1.21-1.35,12.06,12.06,0,0,0,1-1.5,13.29,13.29,0,0,0,1.43-3.33,15.46,15.46,0,0,0,.37-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,49.61,49.61,0,0,0-3.3-6.4c-1.24-2-2.6-4-4-5.93-.46-.6-.92-1.2-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.68s19.11.59,28.64,1.29,19,1.68,28.52,2.88c4.74.59,9.47,1.27,14.19,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.21,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.89,2.76,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.89.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84A49.58,49.58,0,0,0,463,397.23a59.44,59.44,0,0,0-1.08,7.14c0,.29-.05.59-.07.89l-.07.9c0,.61,0,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a51.27,51.27,0,0,0,2.6,14.15,56.54,56.54,0,0,0,6.27,12.95,69.46,69.46,0,0,0,9.08,11.15,89.08,89.08,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l2,1ZM308.85,258.31q2.16,2.87,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29.5,29.5,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,20.35,20.35,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.22-.6-.06-1.19-.12-1.77-.22l-.89-.13-.88-.16q-1.76-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,24.14,24.14,0,0,1-5.83-4,15.84,15.84,0,0,1-2.28-2.69,11.66,11.66,0,0,1-1.54-3.15,8.09,8.09,0,0,1-.32-3.45,8,8,0,0,1,.16-.85q.12-.42.27-.84a16.54,16.54,0,0,1,.64-1.65,21.61,21.61,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63,112.06,112.06,0,0,1,13.83-3.63q3.14-.61,6.27-1.12C307.87,257,308.36,257.66,308.85,258.31Z"/><polygon class="cls-3" points="307 255.93 307.38 255.87 307.72 256.33 307.35 256.39 307 255.93"/></g><g class="cls-1"><path class="cls-26" d="M503.61,471l-1.95-1a109.09,109.09,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15A48.7,48.7,0,0,1,467.47,388a84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07A29.76,29.76,0,0,0,527,317a19.67,19.67,0,0,0,.51-7.25,18.27,18.27,0,0,0-.81-3.57,21.48,21.48,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.8-2.95-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.23-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.21-6.27-10.62-9.62c-1.69-1.68-3.34-3.41-4.9-5.21a44.94,44.94,0,0,1-4.28-5.73,22.59,22.59,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,9.63,9.63,0,0,1,0-1.78l0-.22,0-.22,0-.22a1.55,1.55,0,0,0,0-.21,4.84,4.84,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19.1,19.1,0,0,1,3-2c1-.56,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.45a15.55,15.55,0,0,0,3-1.9,5.35,5.35,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,3.16,3.16,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3S221,141.8,218.76,141s-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38c-.3-.06-.59-.12-.89-.16a3.11,3.11,0,0,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.46.46,0,0,1,.18,0h.22l.44.06.88.17c.59.11,1.17.24,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5.24,5.24,0,0,1-1.16,1.33,14.81,14.81,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.48-2.18,1-3.24,1.55a18.49,18.49,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.59,6.59,0,0,0-1,1.54,5.16,5.16,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a10,10,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,22.44,22.44,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.86,12,22,18.42,3.55,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a112.58,112.58,0,0,0-13.89,3.65,67.54,67.54,0,0,0-6.69,2.67,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.42,22.42,0,0,0-3.95,6c-.24.55-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.54,35.54,0,0,0,6.74,2.52c1.17.31,2.34.58,3.52.79l.89.16.89.13c.59.1,1.19.16,1.78.22,1.2.12,2.4.21,3.6.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,15.53,15.53,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.57,15.57,0,0,0,.53-3.59,19.74,19.74,0,0,0-.23-3.6,29.63,29.63,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.93a100.39,100.39,0,0,1,12.37,7.12c2,1.35,3.89,2.76,5.72,4.27l.69.57.68.57c.46.39.9.79,1.35,1.18.88.79,1.73,1.62,2.54,2.48a27.24,27.24,0,0,1,4.17,5.68,20.42,20.42,0,0,1,1.41,3.22,18.35,18.35,0,0,1,.76,3.42,18.84,18.84,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.27,50.27,0,0,1-3.85,6c-1.42,1.9-2.94,3.74-4.51,5.52-3.16,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,6.95-9.62,10.68a85.26,85.26,0,0,0-8.18,11.83,49.52,49.52,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6-.05,1.2-.07,1.8v.9c0,.31,0,.61,0,.91,0,.6,0,1.2,0,1.8a51.25,51.25,0,0,0,2.6,14.16,56.47,56.47,0,0,0,6.27,12.94,69.54,69.54,0,0,0,9.08,11.16,90,90,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6c.67.36,1.35.72,2,1.06ZM307.38,262.05a67.52,67.52,0,0,1,4,5.91,49.39,49.39,0,0,1,3.26,6.35,29.79,29.79,0,0,1,2,6.82,16.82,16.82,0,0,1-.31,7A13.1,13.1,0,0,1,315,291.4a12,12,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.6-.07-1.19-.13-1.77-.22-.3-.05-.59-.08-.89-.14l-.87-.15c-1.18-.21-2.34-.48-3.48-.79a35,35,0,0,1-6.67-2.5,24.1,24.1,0,0,1-5.83-4,16.66,16.66,0,0,1-2.28-2.69,11.87,11.87,0,0,1-1.54-3.16,7.88,7.88,0,0,1-.16-4.3c.08-.27.18-.56.27-.84.19-.56.4-1.11.64-1.65a21.64,21.64,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.46,45.46,0,0,1,6.22-3.46,66.46,66.46,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62c2.09-.41,4.18-.79,6.27-1.12C306.4,260.76,306.89,261.4,307.38,262.05Z"/><polygon class="cls-3" points="305.53 259.67 305.91 259.61 306.25 260.07 305.88 260.13 305.53 259.67"/></g><g class="cls-1"><path class="cls-27" d="M502.26,474.47c-.62-.33-1.24-.65-1.85-1a109.22,109.22,0,0,1-12.12-7.58,88.82,88.82,0,0,1-10.87-9.25,69.13,69.13,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,52.82,52.82,0,0,1-1.75-6.9,50.8,50.8,0,0,1-.78-7.07A55.63,55.63,0,0,1,461,404.66a48.68,48.68,0,0,1,5.22-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.44-3.33,6.82-6.73,10-10.32,1.58-1.8,3.11-3.65,4.54-5.59a49.42,49.42,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.95-5.77-4.3a100.19,100.19,0,0,0-12.48-7.16c-2.15-1-4.35-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.52-1.61-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.23-1.79-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.57-3.34-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.19,19.19,0,0,1,3-2c1-.56,2.13-1.07,3.22-1.54,2.19-.95,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.73,15.73,0,0,0,3-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.85,2.85,0,0,0,.05-.92,8,8,0,0,0-1.21-3.37,14.55,14.55,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.76-.38c-.29-.06-.58-.12-.88-.16a3.47,3.47,0,0,0-.45-.06l-.22,0c-.08,0-.15,0-.25.06l.07,0a.42.42,0,0,1,.18,0h.22l.44.06.88.17c.58.11,1.17.24,1.75.38,1.16.28,2.31.58,3.47.9q3.45,1,6.85,2.11t6.72,2.49c2.21.9,4.39,1.88,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.82,7.82,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,3.5,3.5,0,0,1-.32.81,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a17.54,17.54,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-1,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,1,0,.22l0,.23,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,23,23,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.19,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,46.14,46.14,0,0,0-6.29,3.52,30.22,30.22,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.55-.46,1.12-.66,1.69l-.27.87a9.12,9.12,0,0,0-.17.91,8.73,8.73,0,0,0,.34,3.63,12.55,12.55,0,0,0,1.59,3.27,16.39,16.39,0,0,0,2.36,2.76,24.59,24.59,0,0,0,5.93,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h1.81l.9,0c.3,0,.59,0,.89-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,28.46,28.46,0,0,0,3.08-1.88A21.84,21.84,0,0,0,311.8,298a14.32,14.32,0,0,0,1.21-1.36,14.07,14.07,0,0,0,1-1.49,13.58,13.58,0,0,0,1.42-3.33,13.76,13.76,0,0,0,.38-1.78,15.6,15.6,0,0,0,.16-1.81,19.74,19.74,0,0,0-.23-3.6,29.65,29.65,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2T440.92,269c9.4,1.65,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.52,2.93A101.13,101.13,0,0,1,508.12,292c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.38,18.38,0,0,1,.77,3.42,19.06,19.06,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,49,49,0,0,1-3.85,6c-1.41,1.9-2.93,3.74-4.51,5.52-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.6,7-9.62,10.68a84.41,84.41,0,0,0-8.18,11.83,49.54,49.54,0,0,0-5.29,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.31,0,.61,0,.91,0,.6,0,1.2.05,1.8a52.45,52.45,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94A69.54,69.54,0,0,0,477,457.1a89.21,89.21,0,0,0,11,9.29,107.91,107.91,0,0,0,12.19,7.6l1.92,1ZM306.13,265.58a69.7,69.7,0,0,1,4,5.91,48.22,48.22,0,0,1,3.27,6.35,29.77,29.77,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,19.81,19.81,0,0,1-2.73,2.27,26.77,26.77,0,0,1-3,1.85,33.29,33.29,0,0,1-6.62,2.58,38,38,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61A45.58,45.58,0,0,1,277.9,271a65.52,65.52,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.61,6.27-1.13C305.14,264.29,305.64,264.93,306.13,265.58Z"/><polygon class="cls-3" points="304.28 263.2 304.65 263.13 305 263.6 304.63 263.65 304.28 263.2"/></g><g class="cls-1"><path class="cls-28" d="M500.76,478.34c-.63-.32-1.25-.65-1.87-1a109.09,109.09,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,18.27,18.27,0,0,0-.81-3.57,21.07,21.07,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.8-3-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.71-3-7.42-6-11.06-9.13s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.21A44.94,44.94,0,0,1,221,191.5a22.59,22.59,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,9.5,9.5,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,0,0-.21,4.84,4.84,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19.1,19.1,0,0,1,3-1.95c1.05-.56,2.13-1.07,3.23-1.54,2.19-1,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.45a16,16,0,0,0,3.05-1.9,5.35,5.35,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,3.16,3.16,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38c-.29-.06-.59-.12-.88-.16a3.47,3.47,0,0,0-.45-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.46.46,0,0,1,.18,0h.22l.44.06.88.17c.59.11,1.17.24,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.55,2.55,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81A5.24,5.24,0,0,1,240,169a14.81,14.81,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.48-2.18,1-3.24,1.55a18.49,18.49,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,5.16,5.16,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a10,10,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,24.13,24.13,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.86,12,22,18.42,3.55,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a112.58,112.58,0,0,0-13.89,3.65,67.54,67.54,0,0,0-6.69,2.67A44.93,44.93,0,0,0,269.9,278a30.22,30.22,0,0,0-5.48,4.68,22.42,22.42,0,0,0-3.95,6c-.24.55-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.78.22,1.2.12,2.4.21,3.6.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,21.07,21.07,0,0,0,2.77-2.31,14.32,14.32,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.57,15.57,0,0,0,.53-3.59,18.11,18.11,0,0,0-.23-3.6,29.63,29.63,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.93a100.39,100.39,0,0,1,12.37,7.12c2,1.35,3.89,2.76,5.72,4.27l.69.57.68.57c.46.39.9.79,1.35,1.18.88.79,1.73,1.62,2.54,2.48a27.24,27.24,0,0,1,4.17,5.68,20,20,0,0,1,1.41,3.22,18.35,18.35,0,0,1,.76,3.42,18.84,18.84,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.27,50.27,0,0,1-3.85,6c-1.42,1.9-2.94,3.74-4.51,5.52-3.16,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,7-9.62,10.68A85.26,85.26,0,0,0,464,395a49.52,49.52,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6,0,1.2-.07,1.8v.9c0,.31,0,.61,0,.91,0,.6,0,1.2.05,1.8a54,54,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.47,56.47,0,0,0,6.27,12.94A69.54,69.54,0,0,0,475.45,461a90,90,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6c.65.35,1.29.69,1.94,1ZM304.61,269.45a67.52,67.52,0,0,1,4,5.91,49.39,49.39,0,0,1,3.26,6.35,29.79,29.79,0,0,1,2,6.82,16.82,16.82,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0-.89,0H287c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22-.3-.05-.59-.08-.89-.14l-.87-.15c-1.18-.21-2.34-.48-3.48-.79a35,35,0,0,1-6.67-2.5,24.1,24.1,0,0,1-5.83-4,16.66,16.66,0,0,1-2.28-2.69,11.87,11.87,0,0,1-1.54-3.16,7.88,7.88,0,0,1-.16-4.3c.08-.27.18-.56.27-.84.19-.56.4-1.11.64-1.65a21.64,21.64,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.46,45.46,0,0,1,6.22-3.46,66.46,66.46,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62c2.09-.41,4.18-.79,6.27-1.12C303.63,268.16,304.12,268.8,304.61,269.45Z"/><polygon class="cls-3" points="302.76 267.07 303.14 267 303.48 267.47 303.11 267.52 302.76 267.07"/></g><g class="cls-1"><path class="cls-29" d="M499.31,482.09l-1.89-1a110.67,110.67,0,0,1-12.11-7.59,88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.78,55.78,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07A56.13,56.13,0,0,1,458,412.26a49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30.14,30.14,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.17,18.17,0,0,0-.81-3.56A20.3,20.3,0,0,0,521,314a28.67,28.67,0,0,0-4.3-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.39-.9-.8-1.36-1.18l-.68-.59-.7-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.07q-7.07-1.21-14.16-2.27c-4.73-.71-9.47-1.38-14.22-2q-14.24-1.79-28.55-2.84c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.71-3-7.42-6-11.06-9.12s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a44.24,44.24,0,0,1-4.28-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,0,0-.22,5.46,5.46,0,0,1,.27-.84,5.61,5.61,0,0,1,.92-1.49,8.76,8.76,0,0,1,1.26-1.25,17.77,17.77,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.23-1.55,2.19-.94,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.29-1.46a15.09,15.09,0,0,0,3.05-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,2.79,2.79,0,0,0,0-.91,7.86,7.86,0,0,0-1.21-3.38,14.42,14.42,0,0,0-2.29-2.77,26.4,26.4,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.68c-2.13-1.09-4.31-2.07-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.3,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.9,2.3.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.2,14.2,0,0,1,2.27,2.74,7.8,7.8,0,0,1,1.18,3.32,2.54,2.54,0,0,1,0,.87,2.83,2.83,0,0,1-.31.81,5.06,5.06,0,0,1-1.15,1.33,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,10.23,10.23,0,0,0-1.29,1.26,6.45,6.45,0,0,0-.95,1.55,5.16,5.16,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.22,0,.23v.22a9.11,9.11,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,23.53,23.53,0,0,0,1.64,3.2,44.78,44.78,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.24,3.4,3.36,7,6.54,10.62,9.64s7.33,6.14,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.08a110.87,110.87,0,0,0-13.89,3.66,67.47,67.47,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.37,22.37,0,0,0-3.95,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36.78,36.78,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9,0a38.75,38.75,0,0,0,7.1-1.21,33.75,33.75,0,0,0,6.7-2.62A28.52,28.52,0,0,0,306,307.9a21.15,21.15,0,0,0,2.77-2.32,14.05,14.05,0,0,0,1.21-1.35,12.06,12.06,0,0,0,1-1.5,13.29,13.29,0,0,0,1.43-3.33,15.46,15.46,0,0,0,.37-1.77,13.83,13.83,0,0,0,.16-1.81,18.16,18.16,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,49.61,49.61,0,0,0-3.3-6.4c-1.24-2-2.6-4-4-5.93-.45-.6-.92-1.2-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.59,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.21,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.19,97.19,0,0,1,12.37,7.12c2,1.34,3.89,2.76,5.73,4.26l.68.57.68.58c.46.38.9.78,1.35,1.17.88.8,1.73,1.62,2.54,2.48a27.56,27.56,0,0,1,4.17,5.69,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.44,59.44,0,0,0-1.08,7.14c0,.29-.05.59-.07.89l-.07.9c0,.61-.05,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.21,0,1.81a53.72,53.72,0,0,0,.8,7.16,52.32,52.32,0,0,0,1.8,7,56.54,56.54,0,0,0,6.27,12.95A70,70,0,0,0,474,464.7a90,90,0,0,0,11,9.3,111.94,111.94,0,0,0,12.2,7.6c.64.35,1.29.69,2,1ZM303.14,273.18a69.22,69.22,0,0,1,4,5.92,48.75,48.75,0,0,1,3.26,6.35,29.5,29.5,0,0,1,2,6.82,16.83,16.83,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,33.38,33.38,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.22-.59-.06-1.19-.12-1.77-.22l-.89-.13-.87-.16q-1.77-.31-3.48-.78a35,35,0,0,1-6.67-2.5,24.14,24.14,0,0,1-5.83-4,15.84,15.84,0,0,1-2.28-2.69,11.66,11.66,0,0,1-1.54-3.15,8.41,8.41,0,0,1-.32-3.45,8,8,0,0,1,.16-.85c.08-.28.18-.56.27-.84.19-.56.4-1.11.64-1.65a22.08,22.08,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,66.39,66.39,0,0,1,6.64-2.63,112.06,112.06,0,0,1,13.83-3.63q3.14-.61,6.27-1.12C302.16,271.89,302.65,272.53,303.14,273.18Z"/><polygon class="cls-3" points="301.29 270.8 301.67 270.74 302.01 271.2 301.64 271.26 301.29 270.8"/></g><g class="cls-1"><path class="cls-30" d="M497.88,485.78l-1.92-1a110.67,110.67,0,0,1-12.11-7.59A88,88,0,0,1,473,467.93a68.6,68.6,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56,56,0,0,1,1.26-14.15,48.9,48.9,0,0,1,5.23-13.19A84.65,84.65,0,0,1,469.88,391c3-3.7,6.25-7.21,9.58-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25A18.83,18.83,0,0,0,521,321a20.72,20.72,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.68-.58-.7-.57c-1.86-1.53-3.8-2.95-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.79-6.71-2.59c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.41-9.87-7.13-6.38-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.07-9.12s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a42.63,42.63,0,0,1-4.27-5.73,22.54,22.54,0,0,1-1.64-3.16,13.23,13.23,0,0,1-.94-3.43,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.43,1.43,0,0,0,0-.22,6.18,6.18,0,0,1,.27-.83,5.76,5.76,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.86,18.86,0,0,1,3-2c1.05-.57,2.13-1.07,3.23-1.54,2.19-1,4.43-1.79,6.65-2.69,1.1-.45,2.2-.92,3.28-1.46a15.09,15.09,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.91,7.91,0,0,0-1.21-3.38,14.38,14.38,0,0,0-2.28-2.76,25.12,25.12,0,0,0-2.77-2.29,48.6,48.6,0,0,0-6.15-3.69c-2.14-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.85-2.1c-1.16-.31-2.31-.61-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,25.12,25.12,0,0,1,2.76,2.28,14.46,14.46,0,0,1,2.26,2.74,7.8,7.8,0,0,1,1.18,3.32,2.3,2.3,0,0,1,0,.87,3,3,0,0,1-.31.82,5.18,5.18,0,0,1-1.15,1.32,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,6.28,6.28,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.61,13.61,0,0,0,1,3.48,23.41,23.41,0,0,0,1.64,3.19,45.59,45.59,0,0,0,4.28,5.77c1.57,1.81,3.22,3.54,4.92,5.23,3.4,3.36,7,6.54,10.62,9.64s7.33,6.14,11.05,9.15l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a112.58,112.58,0,0,0-13.89,3.65,70,70,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6,16.44,16.44,0,0,0-.66,1.69c-.09.28-.19.57-.27.87a7.17,7.17,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,34.43,34.43,0,0,0,6.71-2.61,29.47,29.47,0,0,0,3.08-1.88,21.15,21.15,0,0,0,2.77-2.32,14.05,14.05,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,13.67,13.67,0,0,0,.16-1.81,19,19,0,0,0-.22-3.61,30.06,30.06,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.17,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a98.41,98.41,0,0,1,12.37,7.12c2,1.34,3.89,2.76,5.73,4.27l.68.56.68.58c.46.38.9.78,1.35,1.18.88.79,1.73,1.61,2.54,2.47a28,28,0,0,1,4.18,5.69,20.9,20.9,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.93,3.75-4.51,5.53-3.16,3.57-6.53,6.95-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,59,59,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.54,56.54,0,0,0,6.27,13,69.56,69.56,0,0,0,9.08,11.15,90,90,0,0,0,11,9.3,110.42,110.42,0,0,0,12.2,7.6c.65.36,1.32.7,2,1ZM301.68,276.86a67.52,67.52,0,0,1,4,5.91,47.54,47.54,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.82,16.82,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.2,32.2,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19c-.3,0-.59.05-.89.05l-.89,0H284.1c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.23l-.89-.13-.87-.15c-1.17-.22-2.34-.48-3.48-.79a35.25,35.25,0,0,1-6.67-2.5,23.8,23.8,0,0,1-5.82-4,15.45,15.45,0,0,1-2.29-2.69,11.35,11.35,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.06,45.06,0,0,1,6.22-3.47,68.89,68.89,0,0,1,6.64-2.63,113.54,113.54,0,0,1,13.84-3.63q3.12-.62,6.26-1.12C300.7,275.57,301.2,276.21,301.68,276.86Z"/><polygon class="cls-3" points="299.83 274.47 300.21 274.41 300.56 274.87 300.18 274.93 299.83 274.47"/></g><g class="cls-1"><path class="cls-31" d="M496.38,489.65c-.65-.33-1.29-.67-1.93-1A110.8,110.8,0,0,1,482.33,481a89.5,89.5,0,0,1-10.87-9.24,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,50.8,50.8,0,0,1-.78-7.07A56,56,0,0,1,455,419.81a48.57,48.57,0,0,1,5.23-13.19,83.79,83.79,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.76-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.33,1.58-1.79,3.11-3.65,4.55-5.58a50.12,50.12,0,0,0,3.9-6.07,30,30,0,0,0,2.7-6.73,19.9,19.9,0,0,0,.5-7.25,18.83,18.83,0,0,0-.8-3.57,19.88,19.88,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.53-.46-.39-.9-.8-1.36-1.18l-.69-.58-.69-.57c-1.86-1.53-3.8-2.95-5.78-4.3a99,99,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.79-6.7-2.59c-4.51-1.62-9.09-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.42-6.85-6.69-10.41-9.87-7.14-6.38-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,24.4,24.4,0,0,1-1.64-3.17,13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6,6,0,0,1,.92-1.5,9.38,9.38,0,0,1,1.27-1.25,18,18,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.22-1.54,2.2-1,4.44-1.79,6.65-2.69,1.11-.45,2.21-.92,3.28-1.46a14.82,14.82,0,0,0,3-1.9,5,5,0,0,0,1.19-1.37,3.11,3.11,0,0,0,.32-.85,2.79,2.79,0,0,0,0-.91A8,8,0,0,0,236,173.9a14.43,14.43,0,0,0-2.29-2.76,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.61-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.44-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.1c2.26.77,4.51,1.59,6.72,2.49s4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,25,25,0,0,1,2.75,2.28A14.21,14.21,0,0,1,235.9,174a7.6,7.6,0,0,1,1.19,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.13,18.13,0,0,0-3,2,8.61,8.61,0,0,0-1.29,1.27,6.09,6.09,0,0,0-1,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,44.64,44.64,0,0,0,4.28,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7.05,6.46,10.38,9.88,2.64,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51A30.27,30.27,0,0,0,260,294a22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.69q-.15.42-.27.87a7.17,7.17,0,0,0-.18.9,8.77,8.77,0,0,0,.34,3.64,12.27,12.27,0,0,0,1.6,3.27,15.89,15.89,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.6.09,1.19.15,1.79.22,1.19.11,2.39.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.15,37.15,0,0,0,7.09-1.21,33.57,33.57,0,0,0,6.71-2.61,27.53,27.53,0,0,0,3.08-1.88,21.24,21.24,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.91,13.91,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,15.6,15.6,0,0,0,.16-1.81,19.85,19.85,0,0,0-.23-3.61,29.58,29.58,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39,70.62,70.62,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.41,1.65,18.77,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.59s4.38,1.89,6.52,2.93a99.85,99.85,0,0,1,12.37,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,28.93,28.93,0,0,1-2.62,6.55,50.23,50.23,0,0,1-3.86,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-9.95,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.54,49.54,0,0,0-5.29,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6,0,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21,0,1.81a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95A69,69,0,0,0,471,472.24a89.29,89.29,0,0,0,11,9.3,108.81,108.81,0,0,0,12.19,7.6c.66.36,1.33.71,2,1.05ZM300.17,280.73c1.43,1.9,2.78,3.87,4,5.91a48.75,48.75,0,0,1,3.26,6.35,29.48,29.48,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.06,13.06,0,0,1-2.4,4.69,12.24,12.24,0,0,1-1.18,1.32,21.12,21.12,0,0,1-2.72,2.27,27.6,27.6,0,0,1-3,1.84,32.42,32.42,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19c-.3,0-.6,0-.89,0l-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.15c-1.17-.22-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69A11.93,11.93,0,0,1,255.7,307a8.25,8.25,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,30.07,30.07,0,0,1,5.4-4.61,45.17,45.17,0,0,1,6.23-3.47,67.88,67.88,0,0,1,6.64-2.63,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C299.18,279.44,299.68,280.08,300.17,280.73Z"/><polygon class="cls-3" points="298.32 278.34 298.69 278.28 299.04 278.74 298.67 278.8 298.32 278.34"/></g><g class="cls-1"><path class="cls-32" d="M494.92,493.4c-.65-.34-1.3-.68-1.94-1a109.73,109.73,0,0,1-12.11-7.59A88.92,88.92,0,0,1,470,475.53a68.64,68.64,0,0,1-9-11.07,55.38,55.38,0,0,1-6.18-12.8,52.71,52.71,0,0,1-1.76-6.89,51.11,51.11,0,0,1-.78-7.08,56.09,56.09,0,0,1,1.26-14.15,48.64,48.64,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.63,6.67-6.82,13.76-13.23,20.64-19.89,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.55-5.58a50.23,50.23,0,0,0,3.9-6.08,29.79,29.79,0,0,0,2.7-6.73,19.87,19.87,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.46-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.3a99.41,99.41,0,0,0-12.48-7.15q-3.22-1.58-6.56-3c-2.21-.92-4.45-1.78-6.7-2.59-4.51-1.61-9.09-3-13.71-4.27-9.25-2.52-18.64-4.42-28.06-6.07-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.37-14.21-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.66,13.66,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,8.69,8.69,0,0,1,1.26-1.24,18,18,0,0,1,3-2c1.05-.56,2.13-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3-1.9,5.2,5.2,0,0,0,1.19-1.37,2.92,2.92,0,0,0,.32-.85,2.84,2.84,0,0,0,0-.92,8,8,0,0,0-1.21-3.37,14.49,14.49,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16c-.15,0-.29,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.77.77,0,0,1,.18,0l.22,0a3.32,3.32,0,0,1,.44.06c.29,0,.59.1.88.16l1.75.38c1.16.28,2.32.58,3.47.9,2.3.64,4.58,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a46.94,46.94,0,0,1,6.13,3.68,26.19,26.19,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.73,18.73,0,0,0-3,2,9.68,9.68,0,0,0-1.29,1.27,6.27,6.27,0,0,0-1,1.54,4.6,4.6,0,0,0-.27.87c0,.08,0,.15-.05.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.64,2.69,5.19,5.48,7.55,8.4q-3,.5-6,1.09A111.33,111.33,0,0,0,277,286.83a64.94,64.94,0,0,0-6.68,2.66A45,45,0,0,0,264,293a30.22,30.22,0,0,0-5.48,4.68,22.55,22.55,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.63,8.63,0,0,0,.35,3.64,12.23,12.23,0,0,0,1.59,3.27,17.16,17.16,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,35.29,35.29,0,0,0,6.74,2.52c1.16.32,2.33.58,3.52.79l.88.16.89.13c.6.1,1.19.16,1.79.23,1.2.11,2.39.2,3.6.21h1.8l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,26.12,26.12,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.19,15.19,0,0,0,.37-1.78,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.8,29.8,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.6-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.89,21.76-2.38,9.53-.63,19.09-.8,28.64-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.41,1.66,18.77,3.57,28,6.09q6.91,1.88,13.66,4.28c2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.08,20.08,0,0,1,1.4,3.23,17.35,17.35,0,0,1,.77,3.41,19.26,19.26,0,0,1-.49,7,29.43,29.43,0,0,1-2.63,6.55,49.55,49.55,0,0,1-3.86,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.68A84.41,84.41,0,0,0,458.12,410a49.65,49.65,0,0,0-5.28,13.4,59.61,59.61,0,0,0-1.09,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8V435c0,.3,0,.6,0,.9,0,.6,0,1.2,0,1.8a50.74,50.74,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94A69.54,69.54,0,0,0,469.54,476a89.21,89.21,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l2,1.06ZM298.7,284.46c1.43,1.91,2.78,3.88,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.21,29.21,0,0,1,2,6.83,16.84,16.84,0,0,1-.3,7,13,13,0,0,1-1.39,3.23,13.83,13.83,0,0,1-2.19,2.77,20.33,20.33,0,0,1-2.72,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.79a35.12,35.12,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.09,12.09,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.08-.28.17-.56.26-.84.19-.56.41-1.11.65-1.66a21.76,21.76,0,0,1,3.86-5.91,30.14,30.14,0,0,1,5.41-4.6,44.48,44.48,0,0,1,6.22-3.47,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.62,6.27-1.12C297.71,283.17,298.21,283.81,298.7,284.46Z"/><polygon class="cls-3" points="296.85 282.08 297.22 282.02 297.57 282.48 297.2 282.54 296.85 282.08"/></g><g class="cls-1"><path class="cls-33" d="M493.49,497.1l-1.95-1a109.73,109.73,0,0,1-12.11-7.59,88,88,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.58,55.58,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,51,51,0,0,1-.78-7.07,56,56,0,0,1,1.26-14.15,48.57,48.57,0,0,1,5.23-13.19,84.65,84.65,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.76-13.24,20.64-19.89,3.44-3.34,6.82-6.73,10-10.33,1.58-1.8,3.11-3.65,4.55-5.58a50.12,50.12,0,0,0,3.9-6.07,30,30,0,0,0,2.7-6.73,19.94,19.94,0,0,0,.5-7.26,18.9,18.9,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.56,28.56,0,0,0-4.29-5.83c-.83-.88-1.7-1.72-2.59-2.53-.46-.39-.9-.8-1.36-1.18l-.69-.58-.69-.58c-1.86-1.52-3.8-2.94-5.78-4.29a98.25,98.25,0,0,0-12.48-7.16q-3.22-1.57-6.56-3c-2.21-.91-4.45-1.78-6.7-2.58-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.23-1.79-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a44.4,44.4,0,0,1-4.27-5.73A23.66,23.66,0,0,1,212,207a13.62,13.62,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a2.07,2.07,0,0,1,0-.22,5,5,0,0,1,.26-.83,5.8,5.8,0,0,1,.93-1.5,8.76,8.76,0,0,1,1.26-1.25,18,18,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.64-2.69,1.11-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3-1.9,5,5,0,0,0,1.19-1.37,3,3,0,0,0,.37-1.76,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,25.23,25.23,0,0,0-2.77-2.28,46.14,46.14,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06H195c-.08,0-.14,0-.25.06l.07,0a.77.77,0,0,1,.18,0l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.1c2.26.77,4.51,1.59,6.72,2.49s4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,25,25,0,0,1,2.75,2.28A14.51,14.51,0,0,1,233,181.4a7.8,7.8,0,0,1,1.18,3.32,2.81,2.81,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5,5,0,0,1-1.15,1.32,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.13,18.13,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.09,6.09,0,0,0-1,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.59,13.59,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,44.64,44.64,0,0,0,4.28,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.41,3.36,7,6.54,10.62,9.64s7.34,6.14,11.06,9.15l11.17,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.64,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a111.29,111.29,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.69-.1.28-.19.56-.27.87a6.83,6.83,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36,36,0,0,0,6.74,2.52c1.16.31,2.33.58,3.52.79l.88.15c.3.06.6.09.89.14.6.09,1.19.15,1.79.22,1.2.11,2.39.2,3.6.21h1.8l.9,0c.3,0,.6,0,.9-.05a37.15,37.15,0,0,0,7.09-1.21,33.6,33.6,0,0,0,6.71-2.62,26,26,0,0,0,3.08-1.87,20.6,20.6,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15.46,15.46,0,0,0,.37-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.58,29.58,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39,70.62,70.62,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.41,1.65,18.77,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28q3.38,1.21,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a99.12,99.12,0,0,1,12.37,7.12q3,2,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.88.79,1.73,1.61,2.54,2.47a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,19.29,19.29,0,0,1-.49,7,29.43,29.43,0,0,1-2.63,6.55,51.43,51.43,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.52,5.53-3.15,3.57-6.53,6.95-9.95,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.46,59.46,0,0,0-1.09,7.14c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21,0,1.81a50.91,50.91,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7A56.58,56.58,0,0,0,459,468.52a69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,112.77,112.77,0,0,0,12.19,7.6l2,1.06Zm-196.23-209c1.43,1.91,2.78,3.88,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,13,13,0,0,1-1,1.45,12.24,12.24,0,0,1-1.18,1.32,21.12,21.12,0,0,1-2.72,2.27,27.6,27.6,0,0,1-3,1.84,33,33,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19c-.3,0-.6,0-.89,0l-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.08-.28.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.61,21.61,0,0,1,3.86-5.91,29.79,29.79,0,0,1,5.41-4.61,44.48,44.48,0,0,1,6.22-3.47,67.88,67.88,0,0,1,6.64-2.63,112.91,112.91,0,0,1,13.83-3.63q3.12-.62,6.27-1.12Z"/><polygon class="cls-3" points="295.41 285.77 295.78 285.71 296.13 286.17 295.76 286.23 295.41 285.77"/></g><g class="cls-1"><path class="cls-34" d="M492,501l-2-1a110.67,110.67,0,0,1-12.11-7.59A87.22,87.22,0,0,1,467,483.09a68.62,68.62,0,0,1-9-11.06,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,54.21,54.21,0,0,1-.78-7.07,56.47,56.47,0,0,1,1.26-14.15,48.9,48.9,0,0,1,5.23-13.19A83.86,83.86,0,0,1,464,406.2c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.9,18.9,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.61,28.61,0,0,0-4.3-5.83c-.82-.88-1.69-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.68-.58-.7-.58c-1.86-1.52-3.79-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-3c-2.21-.91-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.13.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.43-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a42.63,42.63,0,0,1-4.27-5.73,22.54,22.54,0,0,1-1.64-3.16,13.21,13.21,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77v-.22l0-.22,0-.22c0-.07,0-.14.05-.22a5,5,0,0,1,.26-.83,5.76,5.76,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.86,18.86,0,0,1,3-1.95c1.05-.57,2.14-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.65-2.69,1.1-.45,2.2-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.86,7.86,0,0,0-1.21-3.38,14.38,14.38,0,0,0-2.28-2.76,25.12,25.12,0,0,0-2.77-2.29,46.14,46.14,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.85-2.1c-1.16-.31-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06h-.22c-.09,0-.15,0-.26.06l.08,0h.17l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.1c2.27.77,4.51,1.59,6.72,2.49s4.4,1.88,6.52,3a47.11,47.11,0,0,1,6.14,3.69,26,26,0,0,1,2.75,2.28,14.46,14.46,0,0,1,2.26,2.74,8,8,0,0,1,1.19,3.32,2.53,2.53,0,0,1,0,.87,3,3,0,0,1-.31.82,5,5,0,0,1-1.15,1.32,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,14,14,0,0,0,1,3.48,23.41,23.41,0,0,0,1.64,3.19,44.72,44.72,0,0,0,4.29,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.4,3.36,7,6.54,10.62,9.64s7.33,6.14,11.05,9.15L254,253c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09A111.29,111.29,0,0,0,274,294.39a68.79,68.79,0,0,0-6.68,2.66,45.49,45.49,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.47,1.11-.66,1.69-.09.28-.19.56-.27.87a6.83,6.83,0,0,0-.18.9,8.78,8.78,0,0,0,.35,3.64,12.24,12.24,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21H280l.9,0c.3,0,.6,0,.9-.05a37.12,37.12,0,0,0,7.1-1.21,33.6,33.6,0,0,0,6.71-2.62,27.77,27.77,0,0,0,3.08-1.87,21.15,21.15,0,0,0,2.77-2.32,14.4,14.4,0,0,0,2.24-2.84,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,13.67,13.67,0,0,0,.16-1.81,18.94,18.94,0,0,0-.22-3.61,30.06,30.06,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.17,2.67,13.66,4.28q3.36,1.21,6.66,2.58c2.2.92,4.38,1.89,6.52,2.94a99.24,99.24,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.47a28,28,0,0,1,4.18,5.69,20.9,20.9,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.44,59.44,0,0,0-1.08,7.14c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.17,56.17,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,89.2,89.2,0,0,0,11,9.3,111.94,111.94,0,0,0,12.2,7.6l2,1.07ZM295.74,292a69.22,69.22,0,0,1,4,5.92,47.54,47.54,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.78,32.78,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19c-.29,0-.59.05-.89.05l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.16q-1.76-.31-3.48-.78a34.9,34.9,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.35,11.35,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,44.59,44.59,0,0,1,6.23-3.47,67.7,67.7,0,0,1,6.63-2.63A113.54,113.54,0,0,1,288,291.22q3.12-.62,6.26-1.12C294.76,290.74,295.26,291.38,295.74,292Z"/><polygon class="cls-3" points="293.89 289.64 294.27 289.58 294.62 290.04 294.24 290.1 293.89 289.64"/></g><g class="cls-1"><path class="cls-35" d="M490.54,504.72l-2-1.06a109.09,109.09,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.7,68.7,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,52.71,52.71,0,0,1-1.76-6.89,54.36,54.36,0,0,1-.78-7.08,56.56,56.56,0,0,1,1.26-14.15,48.83,48.83,0,0,1,5.23-13.18,82.7,82.7,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.63,6.68-6.82,13.77-13.23,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.3a100,100,0,0,0-12.47-7.15q-3.24-1.57-6.56-2.95t-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.27-9.24-2.52-18.63-4.43-28.05-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.68-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.65,22.65,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.75,8.75,0,0,1,0-1.77v-.23l0-.22,0-.21c0-.08,0-.15.05-.22a4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-1.95c1.05-.56,2.14-1.06,3.23-1.54,2.19-1,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.58,2.58,0,0,0,0-.92,7.74,7.74,0,0,0-1.21-3.37,14.44,14.44,0,0,0-2.28-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.85-2.1c-1.16-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16c-.15,0-.3-.05-.45-.06l-.22,0c-.08,0-.15,0-.26.06l.08,0a.67.67,0,0,1,.17,0h.22l.45.07c.29,0,.58.1.88.16.58.11,1.16.25,1.74.38,1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49c2.22.9,4.4,1.88,6.52,3A47,47,0,0,1,225,184a26,26,0,0,1,2.75,2.28A14.52,14.52,0,0,1,230,189a8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1,0,.87,3,3,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.21.9-4.46,1.73-6.65,2.68-1.1.48-2.19,1-3.25,1.55a19.18,19.18,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6,6,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.37,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,64.05,64.05,0,0,0-6.68,2.66,44.48,44.48,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.56-.47,1.12-.66,1.69-.09.29-.19.57-.27.87s-.13.6-.18.91a8.73,8.73,0,0,0,.35,3.63A12.45,12.45,0,0,0,251,325.4a17.68,17.68,0,0,0,2.35,2.76,24.61,24.61,0,0,0,5.94,4.08,35.63,35.63,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,20.32,20.32,0,0,0,2.77-2.31,12.83,12.83,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,16.37,16.37,0,0,0,.54-3.58,19.79,19.79,0,0,0-.23-3.61,30.14,30.14,0,0,0-2-6.91,48.26,48.26,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.94a98,98,0,0,1,12.38,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.79,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,21.33,21.33,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.42,1.91-2.93,3.74-4.51,5.52-3.15,3.58-6.53,6.95-10,10.28-6.86,6.64-13.95,13.07-20.65,19.92-3.34,3.42-6.59,7-9.61,10.68a84.47,84.47,0,0,0-8.19,11.83,49.65,49.65,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a51.25,51.25,0,0,0,2.6,14.16A56.1,56.1,0,0,0,456,476.12a69.54,69.54,0,0,0,9.08,11.16,89.12,89.12,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61c.68.36,1.36.72,2.05,1.07Zm-196.27-209a70.67,70.67,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.77,29.77,0,0,1,2,6.82,16.71,16.71,0,0,1-.31,7,13,13,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.79a35.55,35.55,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.3,16.3,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.57.26-.84.19-.57.41-1.12.64-1.66a22,22,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,68.78,68.78,0,0,1,6.63-2.64A111.71,111.71,0,0,1,286.52,295q3.12-.61,6.26-1.12C293.29,294.47,293.79,295.11,294.27,295.76Z"/><polygon class="cls-3" points="292.43 293.38 292.8 293.32 293.15 293.78 292.77 293.84 292.43 293.38"/></g><g class="cls-1"><path class="cls-36" d="M489.11,508.4l-2-1.06A110.67,110.67,0,0,1,475,499.75a88.08,88.08,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06A56.06,56.06,0,0,1,449,466.63a51.23,51.23,0,0,1-2.53-14,56.08,56.08,0,0,1,1.25-14.15,49.29,49.29,0,0,1,5.23-13.18A83.28,83.28,0,0,1,461,413.61c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.31,50.31,0,0,0,3.91-6.08,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,18.73,18.73,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.6-2.52-.45-.4-.89-.8-1.35-1.18l-.69-.59-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95t-6.71-2.58c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.23-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.07-28.69.71c-7.39.5-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.55-12.41-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.11,22.11,0,0,1-1.64-3.17,13.14,13.14,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.15.05-.22a4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,10.54,10.54,0,0,1,1.26-1.24,18.18,18.18,0,0,1,3-1.95c1-.57,2.14-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.65-2.68,1.1-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3-1.9,5.17,5.17,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.85,7.85,0,0,0-1.2-3.38,14.87,14.87,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.48-4.56-1.46-6.86-2.1c-1.16-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.26.06l.08,0a.67.67,0,0,1,.17,0l.22,0a3.47,3.47,0,0,1,.45.06c.29,0,.58.1.88.16l1.74.39c1.17.27,2.32.57,3.47.89,2.31.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.53,3a48.77,48.77,0,0,1,6.13,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3,3,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.16,1-3.27,1.44-2.21.9-4.46,1.74-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.82,18.82,0,0,0-3,2,10.24,10.24,0,0,0-1.28,1.27,6,6,0,0,0-1,1.54,5.86,5.86,0,0,0-.28.87c0,.08,0,.15,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,43.94,43.94,0,0,0,4.29,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.4,3.37,7,6.54,10.62,9.65s7.34,6.14,11,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.08a111.33,111.33,0,0,0-13.89,3.66,66.34,66.34,0,0,0-6.68,2.66A44.48,44.48,0,0,0,258.1,308a30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69-.09.29-.19.57-.27.87a9.12,9.12,0,0,0-.17.91,8.63,8.63,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.61,24.61,0,0,0,5.94,4.08,36.36,36.36,0,0,0,6.75,2.53c1.16.31,2.33.57,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21H277l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,21,21,0,0,0,2.78-2.31,14,14,0,0,0,1.2-1.35,12.93,12.93,0,0,0,1-1.5,13.81,13.81,0,0,0,1.42-3.33,12,12,0,0,0,.37-1.78,15.44,15.44,0,0,0,.17-1.8,19.79,19.79,0,0,0-.23-3.61,30.29,30.29,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.59-.91-1.19-1.38-1.77,7.2-1.16,14.47-1.9,21.75-2.39,9.54-.62,19.1-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.61,1.26,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.94a98,98,0,0,1,12.38,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,18.83,18.83,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29.07,29.07,0,0,1-2.63,6.54,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.43-6.59,7-9.61,10.68A84,84,0,0,0,452.23,425,49.58,49.58,0,0,0,447,438.35a61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.1,52.1,0,0,0,.81,7.17,52.68,52.68,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95A69.91,69.91,0,0,0,463.66,491a89,89,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61l2.08,1.09Zm-196.3-209a69.22,69.22,0,0,1,4,5.92,49.34,49.34,0,0,1,3.27,6.34,29.7,29.7,0,0,1,2,6.83,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,20.48,20.48,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.14,33.14,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22L269,339l-.88-.16q-1.75-.31-3.48-.78a35.59,35.59,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.3,16.3,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.66A22,22,0,0,1,253,313a30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,66.22,66.22,0,0,1,6.63-2.63,110,110,0,0,1,13.84-3.63q3.12-.61,6.26-1.12C291.83,298.14,292.33,298.78,292.81,299.43Z"/><polygon class="cls-3" points="290.97 297.05 291.34 296.99 291.69 297.45 291.31 297.51 290.97 297.05"/></g><g class="cls-1"><path class="cls-37" d="M487.61,512.28l-2-1.07a109.73,109.73,0,0,1-12.11-7.59,88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.65,55.65,0,0,1-6.18-12.81,50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.23,50.23,0,0,0,3.9-6.08,29.44,29.44,0,0,0,2.7-6.72,19.51,19.51,0,0,0,.5-7.26,18.73,18.73,0,0,0-.8-3.56,21.18,21.18,0,0,0-1.45-3.35,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.4-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.07-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.37-14.21-2Q383.59,300,369.27,299c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.5-14.76,1.26-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.15,0-.22a4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,9.24,9.24,0,0,1,1.26-1.24,17.37,17.37,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.28-1.46a15.16,15.16,0,0,0,3.06-1.9,5.35,5.35,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.49,14.49,0,0,0-2.29-2.77,27.48,27.48,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.08-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0a3.32,3.32,0,0,1,.44.06c.3,0,.59.1.88.16.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.89,2.3.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a48.07,48.07,0,0,1,6.13,3.68,25.21,25.21,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,4.86,4.86,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.44-2.22.9-4.46,1.74-6.66,2.68-1.1.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,10.32,10.32,0,0,0-1.29,1.27,6.59,6.59,0,0,0-.95,1.54,4.84,4.84,0,0,0-.27.87c0,.08,0,.15-.05.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.61,9.65s7.34,6.14,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.42,3.55,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.41q-3,.49-6,1.08a111.33,111.33,0,0,0-13.89,3.66,68.28,68.28,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.5,30.5,0,0,0-5.47,4.68,22.34,22.34,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.63,8.63,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,36,36,0,0,0,6.74,2.53c1.16.31,2.34.57,3.52.79l.88.15c.3.06.6.09.89.14.6.09,1.2.15,1.79.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a38,38,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,26.12,26.12,0,0,0,3.08-1.88A19.82,19.82,0,0,0,297,335.7a15.53,15.53,0,0,0,1.21-1.35,12.85,12.85,0,0,0,1-1.5,13.45,13.45,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.77,29.77,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,68.16,68.16,0,0,0-4.05-5.93c-.45-.6-.91-1.2-1.37-1.78,7.2-1.16,14.47-1.9,21.75-2.39,9.53-.62,19.09-.8,28.64-.67s19.11.59,28.64,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.44,1.47,14.15,2.29c9.41,1.66,18.78,3.58,28,6.09,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.88.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,19.13,19.13,0,0,1,1.4,3.22,17.29,17.29,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29.07,29.07,0,0,1-2.63,6.54,49.47,49.47,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.54,6.94-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.58,59.58,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.08,52.08,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69.91,69.91,0,0,0,9.08,11.15,88.34,88.34,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l2.1,1.1ZM291.3,303.3c1.43,1.91,2.78,3.88,4,5.92a49.27,49.27,0,0,1,3.26,6.34,29.21,29.21,0,0,1,2,6.83,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.14,21.14,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.09,8.09,0,0,1-.32-3.45,6.07,6.07,0,0,1,.16-.85q.12-.42.27-.84a17.72,17.72,0,0,1,.64-1.66,21.56,21.56,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63,109.86,109.86,0,0,1,13.83-3.63q3.12-.62,6.27-1.12C290.32,302,290.81,302.65,291.3,303.3Z"/><polygon class="cls-3" points="289.45 300.92 289.82 300.86 290.17 301.32 289.8 301.38 289.45 300.92"/></g><g class="cls-1"><path class="cls-38" d="M486.16,516l-2.05-1.09A110.59,110.59,0,0,1,472,507.36a88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18A84.15,84.15,0,0,1,458,421.21c3-3.69,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07A30,30,0,0,0,509.4,362a19.46,19.46,0,0,0,.5-7.25,18.25,18.25,0,0,0-.8-3.57,21.07,21.07,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.84-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,9.5,9.5,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.21A4.12,4.12,0,0,1,204,219a5.66,5.66,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-1.95c1.05-.56,2.13-1.07,3.23-1.54,2.19-1,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.45a16.36,16.36,0,0,0,3.05-1.9,5.53,5.53,0,0,0,1.18-1.37,3.33,3.33,0,0,0,.33-.86,3.08,3.08,0,0,0,0-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.12,24.12,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.09c-1.15-.32-2.31-.62-3.47-.9-.58-.14-1.17-.27-1.75-.38-.3-.06-.59-.12-.89-.16l-.44-.07h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.87,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.26,14.26,0,0,1,2.27,2.75,7.76,7.76,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5,5,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,5.16,5.16,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,46.21,46.21,0,0,0,4.28,5.76c1.56,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65S233.18,256,236.9,259l11.17,9c7.44,6,14.85,12,22,18.41,3.55,3.19,7,6.47,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,70.88,70.88,0,0,0-6.68,2.66,45,45,0,0,0-6.28,3.52,29.83,29.83,0,0,0-5.48,4.68,22.27,22.27,0,0,0-3.95,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.54,35.54,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.16.89.13c.6.1,1.2.15,1.79.22,1.2.12,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.26,37.26,0,0,0,7.1-1.21,33.12,33.12,0,0,0,6.7-2.61,27.53,27.53,0,0,0,3.08-1.88,21.3,21.3,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.57,15.57,0,0,0,.53-3.59,19.74,19.74,0,0,0-.23-3.6,29.49,29.49,0,0,0-2-6.91,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.27q3.38,1.21,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.46.39.9.78,1.34,1.18.89.79,1.74,1.61,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.35,49.35,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.54,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.91-3.35,3.43-6.59,7-9.62,10.68a86,86,0,0,0-8.18,11.84A49.52,49.52,0,0,0,444,446a59.27,59.27,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a52.43,52.43,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7,57,57,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,88.42,88.42,0,0,0,11,9.3,109.73,109.73,0,0,0,12.19,7.6c.7.38,1.41.75,2.12,1.11ZM289.83,307a69.81,69.81,0,0,1,4,5.91,48.75,48.75,0,0,1,3.26,6.35,29.65,29.65,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,13.31,13.31,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18c-.3,0-.59,0-.89.06l-.89,0h-1.79c-1.18,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29,0-.58-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.07,8.07,0,0,1-.32-3.45,6.35,6.35,0,0,1,.16-.85c.08-.27.17-.56.27-.84a16.54,16.54,0,0,1,.64-1.65,21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.46,45.46,0,0,1,6.22-3.46,65.52,65.52,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62c2.09-.42,4.18-.79,6.27-1.13C288.85,305.75,289.34,306.39,289.83,307Z"/><polygon class="cls-3" points="287.98 304.65 288.36 304.59 288.7 305.06 288.33 305.11 287.98 304.65"/></g><g class="cls-1"><path class="cls-39" d="M484.77,519.6c-.65-.35-1.31-.69-2-1.05A108.17,108.17,0,0,1,470.7,511a88.92,88.92,0,0,1-10.88-9.25,68.64,68.64,0,0,1-9-11.07,55.38,55.38,0,0,1-6.18-12.8,52.71,52.71,0,0,1-1.76-6.89,51.11,51.11,0,0,1-.78-7.08,56.09,56.09,0,0,1,1.26-14.15,48.83,48.83,0,0,1,5.23-13.18,83.47,83.47,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.63C473,407.38,480.08,401,487,394.31c3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.12-3.65,4.55-5.59a49.35,49.35,0,0,0,3.9-6.07,29.33,29.33,0,0,0,2.7-6.73,19.87,19.87,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.3a99.41,99.41,0,0,0-12.48-7.15q-3.22-1.57-6.56-3c-2.21-.92-4.45-1.78-6.7-2.59-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.37-14.21-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.76,1.26-22.08,2.45-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.68-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,8.75,8.75,0,0,1,0-1.77l0-.23,0-.22,0-.21a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,9.31,9.31,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-2c1-.56,2.13-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a15.62,15.62,0,0,0,3.06-1.9,5.35,5.35,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,3.15,3.15,0,0,0,0-.92,8,8,0,0,0-1.21-3.37,14.49,14.49,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38-.89-.16c-.15,0-.29,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0h.22l.44.07c.29,0,.59.1.88.16.59.11,1.17.25,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a46.94,46.94,0,0,1,6.13,3.68,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,4.86,4.86,0,0,1-1.15,1.33,15.91,15.91,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,9.68,9.68,0,0,0-1.29,1.27,6.27,6.27,0,0,0-.95,1.54,4.39,4.39,0,0,0-.27.87c0,.08,0,.15,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7.05,6.46,10.38,9.87,2.64,2.7,5.19,5.48,7.56,8.41q-3,.5-6,1.09A111.33,111.33,0,0,0,266.78,313a64.94,64.94,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.39,22.39,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,12.14,12.14,0,0,0,1.59,3.28,17.16,17.16,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,35.29,35.29,0,0,0,6.74,2.52c1.16.32,2.33.58,3.52.79l.88.16.89.13c.6.1,1.19.16,1.79.23,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,26.12,26.12,0,0,0,3.08-1.88,19.82,19.82,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.6,15.6,0,0,0,.53-3.58,19.79,19.79,0,0,0-.23-3.61,30.12,30.12,0,0,0-2-6.91,50.78,50.78,0,0,0-3.3-6.39,68.31,68.31,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.89,21.76-2.38,9.53-.63,19.09-.8,28.64-.67s19.11.58,28.64,1.29,19,1.67,28.51,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.41,1.66,18.77,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.88.79,1.74,1.62,2.55,2.48a28.15,28.15,0,0,1,4.17,5.68,20.37,20.37,0,0,1,1.4,3.22,17.61,17.61,0,0,1,.77,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.72,50.72,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.52,5.52-3.15,3.58-6.53,7-10,10.28-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.59,6.95-9.62,10.68A84.41,84.41,0,0,0,448,436.17a49.65,49.65,0,0,0-5.28,13.4,61.37,61.37,0,0,0-1.09,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a50.74,50.74,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7A56.51,56.51,0,0,0,450.29,491a69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61l2,1.06Zm-196.24-209c1.43,1.91,2.78,3.88,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.28,29.28,0,0,1,2,6.82,16.88,16.88,0,0,1-.3,7,13,13,0,0,1-1.39,3.23,13.83,13.83,0,0,1-2.19,2.77A20.33,20.33,0,0,1,291.2,345a27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.79a35.82,35.82,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.24,12.24,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.08-.28.17-.57.26-.84.19-.57.41-1.12.65-1.66a21.56,21.56,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.62,6.27-1.12C287.54,309.36,288,310,288.53,310.65Z"/><polygon class="cls-3" points="286.68 308.27 287.05 308.21 287.4 308.67 287.03 308.73 286.68 308.27"/></g><g class="cls-1"><path class="cls-40" d="M483.27,523.47l-2-1a110.67,110.67,0,0,1-12.11-7.59,88.08,88.08,0,0,1-10.87-9.25,68.7,68.7,0,0,1-9-11.07,55.79,55.79,0,0,1-6.18-12.8,50.24,50.24,0,0,1-2.53-14,56.08,56.08,0,0,1,1.25-14.15,48.83,48.83,0,0,1,5.23-13.18,83.28,83.28,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.63,6.68-6.82,13.77-13.23,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.3A100,100,0,0,0,477,333.16q-3.24-1.57-6.56-3t-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.27-9.24-2.52-18.63-4.43-28.05-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.68-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.65,22.65,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.75,8.75,0,0,1,0-1.77V228l0-.21,0-.22c0-.08,0-.15,0-.22a4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-2c1.05-.56,2.14-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37A2.94,2.94,0,0,0,224,212a2.58,2.58,0,0,0,0-.92,7.86,7.86,0,0,0-1.2-3.37,14.87,14.87,0,0,0-2.29-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.85-2.1c-1.16-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16c-.15,0-.3-.05-.45-.06l-.22,0c-.08,0-.15,0-.26.06l.08,0a.67.67,0,0,1,.17,0H185l.45.07c.29,0,.58.1.88.16l1.74.38c1.17.28,2.32.58,3.47.9,2.31.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.53,3a47.61,47.61,0,0,1,6.13,3.68,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1-.05.87,3,3,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.21.9-4.46,1.73-6.65,2.68-1.1.48-2.19,1-3.25,1.55a19.18,19.18,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6,6,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23.53,23.53,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.37,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.49,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,64.05,64.05,0,0,0-6.68,2.66,44.48,44.48,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.47,1.12-.66,1.69-.09.29-.19.57-.27.87s-.13.6-.18.91a8.73,8.73,0,0,0,.35,3.63,12.76,12.76,0,0,0,1.59,3.28,17.68,17.68,0,0,0,2.35,2.76A24.61,24.61,0,0,0,252,351a35.63,35.63,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,20.32,20.32,0,0,0,2.77-2.31,12.83,12.83,0,0,0,1.21-1.35,15.42,15.42,0,0,0,1-1.5,14,14,0,0,0,1.42-3.33,13.39,13.39,0,0,0,.37-1.78,15.65,15.65,0,0,0,.17-1.8,19.79,19.79,0,0,0-.23-3.61,30.14,30.14,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.94A98,98,0,0,1,489,340.93c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.79,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.37,20.37,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-10,10.27-6.86,6.64-13.95,13.07-20.65,19.92-3.34,3.42-6.59,7-9.61,10.68A84.47,84.47,0,0,0,446.43,440a49.65,49.65,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2,0,1.8a51.25,51.25,0,0,0,2.6,14.16,56.1,56.1,0,0,0,6.28,12.94A69.54,69.54,0,0,0,457.86,506a89.12,89.12,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61l2,1.07ZM287,314.52a70.67,70.67,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.7,29.7,0,0,1,2,6.83,16.67,16.67,0,0,1-.31,7,13,13,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.14,33.14,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.79a35.55,35.55,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.3,16.3,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.57.26-.84.19-.56.41-1.12.64-1.66a22,22,0,0,1,3.87-5.91,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,68.78,68.78,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62q3.12-.62,6.26-1.12C286,313.23,286.53,313.87,287,314.52Z"/><polygon class="cls-3" points="285.17 312.14 285.54 312.08 285.89 312.54 285.51 312.6 285.17 312.14"/></g><g class="cls-1"><path class="cls-41" d="M481.82,527.22l-2-1.06a110.67,110.67,0,0,1-12.11-7.59,88,88,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,50.42,50.42,0,0,1-2.53-14,56,56,0,0,1,1.25-14.15,49.22,49.22,0,0,1,5.23-13.19,83.86,83.86,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62C470,415,477.09,408.57,484,401.92c3.43-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a50.19,50.19,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28,28,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.53-.45-.39-.89-.8-1.35-1.18l-.69-.58-.7-.57c-1.86-1.53-3.79-3-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.79-6.71-2.59c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.78-28.56-2.85c-9.54-.7-19.1-1.14-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.41-9.87C258.83,291,251.4,285,244,279l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,23.22,23.22,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.22a5,5,0,0,1,.26-.83,6,6,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.86,18.86,0,0,1,3-1.95c1-.57,2.14-1.07,3.23-1.54,2.19-1,4.43-1.79,6.65-2.69,1.1-.45,2.21-.92,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.9,7.9,0,0,0-1.2-3.38,14.81,14.81,0,0,0-2.29-2.76,25.12,25.12,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.49-4.56-1.46-6.86-2.1c-1.16-.31-2.31-.61-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06h-.22c-.08,0-.15,0-.26.06l.08,0h.17l.22,0,.45.06.88.16q.87.18,1.74.39c1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.1c2.27.77,4.51,1.59,6.72,2.49s4.4,1.88,6.53,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.46,14.46,0,0,1,2.26,2.74,8,8,0,0,1,1.19,3.32,2.53,2.53,0,0,1-.05.87,3,3,0,0,1-.31.82,5.2,5.2,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.16,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.21,18.21,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23.41,23.41,0,0,0,1.64,3.19,44.72,44.72,0,0,0,4.29,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.4,3.36,7,6.54,10.62,9.64s7.34,6.14,11.05,9.15l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,45.49,45.49,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.66,1.69-.09.28-.19.57-.27.87s-.13.6-.17.9a8.61,8.61,0,0,0,.34,3.64,12.55,12.55,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,33.57,33.57,0,0,0,6.71-2.61,29.47,29.47,0,0,0,3.08-1.88,21.92,21.92,0,0,0,2.78-2.32,14,14,0,0,0,1.2-1.35,12.81,12.81,0,0,0,1-1.49,13.88,13.88,0,0,0,1.42-3.34,11.84,11.84,0,0,0,.37-1.77,15.61,15.61,0,0,0,.17-1.81,19.85,19.85,0,0,0-.23-3.61,30.06,30.06,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.59s4.37,1.89,6.51,2.93a99.24,99.24,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18,18,0,0,1,.27,10.39,29,29,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.61,10.68A84,84,0,0,0,445,443.78a49.52,49.52,0,0,0-5.28,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a52.09,52.09,0,0,0,2.6,14.15,56.58,56.58,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,90,90,0,0,0,11,9.3,108.94,108.94,0,0,0,12.2,7.6c.68.37,1.37.73,2.06,1.08Zm-196.28-209a67.52,67.52,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.48,29.48,0,0,1,2,6.82,16.66,16.66,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32,32,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19c-.29,0-.59.05-.89.05l-.89,0H268c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.15c-1.17-.22-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,44.59,44.59,0,0,1,6.23-3.47,68.71,68.71,0,0,1,6.63-2.63,111.71,111.71,0,0,1,13.84-3.62c2.08-.42,4.17-.79,6.26-1.13C284.56,317,285.06,317.61,285.54,318.26Z"/><polygon class="cls-3" points="283.7 315.87 284.07 315.81 284.42 316.27 284.04 316.33 283.7 315.87"/></g><g class="cls-1"><path class="cls-42" d="M480.39,530.9c-.68-.35-1.35-.7-2-1.07a110.59,110.59,0,0,1-12.11-7.58A88.82,88.82,0,0,1,455.38,513a69.13,69.13,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,51.42,51.42,0,0,1-2.53-14A55.63,55.63,0,0,1,439,461a48.68,48.68,0,0,1,5.22-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a49.42,49.42,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57q-2.79-2.28-5.78-4.3A100.07,100.07,0,0,0,474,340.56c-2.15-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.52-1.61-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.41-6.84-6.69-10.4-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.23,6.23,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.19,19.19,0,0,1,3-2c1-.56,2.13-1.07,3.22-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.21-.92,3.28-1.45a15.73,15.73,0,0,0,3.05-1.9,5.33,5.33,0,0,0,1.18-1.37,3,3,0,0,0,.33-.86,2.78,2.78,0,0,0,.05-.91,8,8,0,0,0-1.21-3.37,14.55,14.55,0,0,0-2.29-2.77,25.12,25.12,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.72-2.49-4.56-1.46-6.86-2.09q-1.73-.48-3.48-.9c-.58-.14-1.16-.27-1.75-.38-.29-.06-.59-.12-.88-.16l-.45-.07h-.22c-.08,0-.15,0-.25.06l.07,0h.17l.22,0,.45.06.88.16,1.75.39c1.16.28,2.31.58,3.46.9,2.31.64,4.59,1.34,6.86,2.11s4.5,1.59,6.72,2.49,4.39,1.87,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.77,7.77,0,0,1,1.19,3.31,2.53,2.53,0,0,1,0,.87,3,3,0,0,1-.31.82,5.2,5.2,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.06.53-2.16,1-3.27,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.21,18.21,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,24.13,24.13,0,0,0,1.64,3.2,45.31,45.31,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.47,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.66,1.69-.09.29-.19.57-.27.87a9.12,9.12,0,0,0-.17.91,8.73,8.73,0,0,0,.34,3.63,12.55,12.55,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.15,1.79.22,1.19.12,2.39.2,3.59.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,33,33,0,0,0,6.71-2.61,28.46,28.46,0,0,0,3.08-1.88,22.71,22.71,0,0,0,2.78-2.31A15.66,15.66,0,0,0,291,353a14.07,14.07,0,0,0,1-1.49,13.58,13.58,0,0,0,1.42-3.33,13.76,13.76,0,0,0,.38-1.78,15.6,15.6,0,0,0,.16-1.81,19.74,19.74,0,0,0-.23-3.6,30,30,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2t14.14,2.29c9.41,1.65,18.78,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.27,2.24.81,4.47,1.67,6.67,2.59s4.37,1.89,6.51,2.93a99.24,99.24,0,0,1,12.38,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58,1.34,1.18c.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.17,48.17,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.66,19.91-3.34,3.43-6.59,7-9.61,10.68a86,86,0,0,0-8.19,11.84,49.52,49.52,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,88.42,88.42,0,0,0,11,9.3,107.91,107.91,0,0,0,12.19,7.6c.69.38,1.39.74,2.09,1.1Zm-196.3-209a69.7,69.7,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.62,29.62,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.9,13.9,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,20.55,20.55,0,0,1-2.73,2.27,26.77,26.77,0,0,1-3,1.85,33.14,33.14,0,0,1-6.63,2.58,37.72,37.72,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0H266.5c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,65.52,65.52,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C283.1,320.64,283.6,321.28,284.09,321.93Z"/><polygon class="cls-3" points="282.24 319.55 282.61 319.48 282.96 319.95 282.58 320 282.24 319.55"/></g><g class="cls-1"><path class="cls-43" d="M478.89,534.78q-1-.53-2-1.08a110.59,110.59,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18A84.15,84.15,0,0,1,450.77,440c3-3.69,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.66,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.46,19.46,0,0,0,.5-7.25,18.25,18.25,0,0,0-.8-3.57,21.07,21.07,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.23-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.84-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,9.5,9.5,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.21a4.12,4.12,0,0,1,.27-.84,5.66,5.66,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-2c1-.56,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.45a16,16,0,0,0,3.05-1.9,5.53,5.53,0,0,0,1.18-1.37,3.33,3.33,0,0,0,.33-.86,3.08,3.08,0,0,0,0-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.12,24.12,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9-.58-.13-1.17-.27-1.75-.38-.3-.06-.59-.12-.89-.16l-.44-.07h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.87,6.52,3a46.35,46.35,0,0,1,6.13,3.69A24.11,24.11,0,0,1,216,216.3a14.26,14.26,0,0,1,2.27,2.75,7.76,7.76,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5,5,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-1,1.54,5.16,5.16,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.52,13.52,0,0,0,.94,3.47,23,23,0,0,0,1.65,3.2,46.21,46.21,0,0,0,4.28,5.76c1.56,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.42,3.55,3.18,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,70.88,70.88,0,0,0-6.68,2.66,45,45,0,0,0-6.28,3.52,29.83,29.83,0,0,0-5.48,4.68,22.27,22.27,0,0,0-3.95,6c-.24.55-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.54,35.54,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.16.9.13c.59.1,1.19.15,1.78.22,1.2.12,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.26,37.26,0,0,0,7.1-1.21,33.12,33.12,0,0,0,6.7-2.61,27.53,27.53,0,0,0,3.08-1.88,21.3,21.3,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,15.57,15.57,0,0,0,.53-3.59,19.74,19.74,0,0,0-.23-3.6,29.49,29.49,0,0,0-2-6.91,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.27q3.38,1.21,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12c2,1.35,3.89,2.76,5.72,4.27l.69.57.68.57c.46.39.9.78,1.34,1.18.89.79,1.74,1.61,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.35,49.35,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.54,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.59,6.95-9.62,10.67A86,86,0,0,0,442,451.32a49.52,49.52,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.61,0,.91,0,.6,0,1.2,0,1.8a52.43,52.43,0,0,0,.8,7.17,54.69,54.69,0,0,0,1.79,7,57.12,57.12,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6c.7.38,1.41.75,2.11,1.11Zm-196.32-209a69.81,69.81,0,0,1,4,5.91,48.75,48.75,0,0,1,3.26,6.35,29.65,29.65,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0H265c-1.18,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.58-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,24.1,24.1,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69A12.15,12.15,0,0,1,238.1,352a8.07,8.07,0,0,1-.32-3.45,6.35,6.35,0,0,1,.16-.85c.08-.27.17-.56.27-.84a16.54,16.54,0,0,1,.64-1.65,21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.46,45.46,0,0,1,6.22-3.46,65.52,65.52,0,0,1,6.64-2.64A112,112,0,0,1,274.81,325q3.13-.62,6.27-1.13C281.59,324.51,282.08,325.15,282.57,325.8Z"/><polygon class="cls-3" points="280.72 323.42 281.1 323.35 281.44 323.82 281.07 323.87 280.72 323.42"/></g><g class="cls-1"><path class="cls-44" d="M477.44,538.53c-.69-.36-1.38-.72-2.06-1.09a110.67,110.67,0,0,1-12.11-7.59,88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.65,55.65,0,0,1-6.18-12.81,50.74,50.74,0,0,1-2.54-14A56.09,56.09,0,0,1,436,468.61a49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.55,51.55,0,0,0,3.91-6.08,29.87,29.87,0,0,0,2.69-6.72,19.73,19.73,0,0,0,.51-7.26,18,18,0,0,0-.81-3.56,21.18,21.18,0,0,0-1.45-3.35,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.4-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29A98.83,98.83,0,0,0,471,348.17q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.07-4.71-.82-9.44-1.56-14.16-2.28s-9.47-1.37-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.25s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.63c-1.69-1.67-3.35-3.4-4.9-5.21a44.24,44.24,0,0,1-4.28-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,0,0-.22,4.32,4.32,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,9.24,9.24,0,0,1,1.26-1.24,17.77,17.77,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.29-1.46a15.09,15.09,0,0,0,3.05-1.9,5.35,5.35,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,26.4,26.4,0,0,0-2.76-2.29,46.83,46.83,0,0,0-6.16-3.68c-2.13-1.09-4.31-2.07-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0a3.11,3.11,0,0,1,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.89,2.3.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a47.38,47.38,0,0,1,6.13,3.68,24.19,24.19,0,0,1,2.75,2.29,14.2,14.2,0,0,1,2.27,2.74A7.8,7.8,0,0,1,218,226.1a2.83,2.83,0,0,1,0,.87,3,3,0,0,1-.31.81,5.08,5.08,0,0,1-1.16,1.33,15.13,15.13,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.44-2.22.91-4.46,1.74-6.66,2.68-1.09.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,11.05,11.05,0,0,0-1.29,1.27,6.45,6.45,0,0,0-1,1.55,5.35,5.35,0,0,0-.27.86,1.85,1.85,0,0,0,0,.23l0,.22,0,.23,0,.22a9.94,9.94,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,22.44,22.44,0,0,0,1.64,3.2,44.78,44.78,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.55,10.61,9.65s7.34,6.14,11.06,9.14l11.17,9c7.44,6,14.86,12.05,22,18.42,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.08a110.87,110.87,0,0,0-13.89,3.66,67.47,67.47,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.58,22.58,0,0,0-3.95,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,36.27,36.27,0,0,0,6.74,2.53c1.16.31,2.34.57,3.52.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,15.53,15.53,0,0,0,1.21-1.35,12.85,12.85,0,0,0,1-1.5,13.29,13.29,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.77,29.77,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.35,70.35,0,0,0-4-5.93c-.46-.6-.92-1.2-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.39,9.53-.62,19.09-.8,28.64-.67s19.11.59,28.64,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.89,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.89.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29.33,29.33,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,6.94-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.58,59.58,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6,0,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a51.25,51.25,0,0,0,2.6,14.16,56.54,56.54,0,0,0,6.27,12.95,69.91,69.91,0,0,0,9.08,11.15,89.08,89.08,0,0,0,11,9.29A111.31,111.31,0,0,0,475.1,538q1.06.57,2.13,1.11Zm-196.34-209q2.16,2.87,4,5.92a49.27,49.27,0,0,1,3.26,6.34,29.73,29.73,0,0,1,2,6.83,17,17,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.14,21.14,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.09-3.56-.21-.6-.07-1.19-.12-1.77-.22l-.89-.13-.88-.16c-1.17-.21-2.33-.47-3.47-.78a35.68,35.68,0,0,1-6.67-2.5,24.42,24.42,0,0,1-5.83-4,16.24,16.24,0,0,1-2.28-2.69,11.66,11.66,0,0,1-1.54-3.15,8.09,8.09,0,0,1-.32-3.45,8,8,0,0,1,.16-.85q.12-.42.27-.84a16.54,16.54,0,0,1,.64-1.65,21.69,21.69,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63,110.31,110.31,0,0,1,13.83-3.63q3.14-.62,6.27-1.12C280.12,328.24,280.61,328.88,281.1,329.53Z"/><polygon class="cls-3" points="279.25 327.15 279.63 327.09 279.97 327.55 279.6 327.61 279.25 327.15"/></g><g class="cls-1"><path class="cls-45" d="M476,542.22c-.7-.35-1.39-.72-2.07-1.09a109.17,109.17,0,0,1-12.11-7.59A88,88,0,0,1,451,524.3a69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.05,56.05,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a50.63,50.63,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.11,18.11,0,0,0-.81-3.57,21.07,21.07,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.53-3.8-2.95-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.84-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.62c-1.69-1.68-3.34-3.41-4.9-5.21a44.94,44.94,0,0,1-4.28-5.73,23.15,23.15,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,9.5,9.5,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,0,0-.21,4.12,4.12,0,0,1,.27-.84,5.51,5.51,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,19.1,19.1,0,0,1,3-1.95c1-.56,2.13-1.07,3.23-1.54,2.19-1,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.46a15.5,15.5,0,0,0,3-1.89,5.53,5.53,0,0,0,1.18-1.37,3.33,3.33,0,0,0,.33-.86,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.12,24.12,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.09c-1.15-.32-2.31-.62-3.47-.9-.58-.14-1.17-.27-1.75-.38-.3-.06-.59-.12-.89-.16l-.44-.07h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.87,6.52,3a46.35,46.35,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.26,14.26,0,0,1,2.27,2.75,7.71,7.71,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,3,3,0,0,1-.31.82,5.24,5.24,0,0,1-1.16,1.33,15.08,15.08,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-1,1.54,5.16,5.16,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9.83,9.83,0,0,0,0,1.8,13.11,13.11,0,0,0,.95,3.48,23,23,0,0,0,1.64,3.2,46.21,46.21,0,0,0,4.28,5.76c1.57,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.86,12,22,18.41,3.55,3.19,7,6.47,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a112.58,112.58,0,0,0-13.89,3.65,70,70,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.27,22.27,0,0,0-3.95,6c-.24.55-.46,1.11-.65,1.69-.09.29-.19.57-.27.87a7.17,7.17,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.54,35.54,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.89.16.89.13c.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,33.72,33.72,0,0,0,6.7-2.61,28.6,28.6,0,0,0,3.09-1.88,21.89,21.89,0,0,0,2.77-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,15.6,15.6,0,0,0,.16-1.81,19.68,19.68,0,0,0-.23-3.6,29.49,29.49,0,0,0-2-6.91A48.85,48.85,0,0,0,284,339a70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.22,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12c2,1.35,3.89,2.76,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.89.79,1.74,1.61,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,20,20,0,0,1,1.41,3.22A18.18,18.18,0,0,1,499,381a18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.35,49.35,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.91-3.34,3.43-6.59,7-9.62,10.68a86,86,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,59,59,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2.05,1.8a51.09,51.09,0,0,0,2.6,14.15,56.54,56.54,0,0,0,6.27,13,69,69,0,0,0,9.08,11.15,89.16,89.16,0,0,0,11,9.3,109.73,109.73,0,0,0,12.19,7.6l2.14,1.12Zm-196.35-209a67.52,67.52,0,0,1,4,5.91,48.75,48.75,0,0,1,3.26,6.35,29.65,29.65,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,29.32,29.32,0,0,1-3,1.85,32.75,32.75,0,0,1-6.63,2.57,37.06,37.06,0,0,1-7,1.19c-.3,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.6-.07-1.19-.13-1.77-.22-.3,0-.59-.08-.89-.14l-.88-.15c-1.17-.21-2.33-.48-3.47-.79a35,35,0,0,1-6.67-2.5,23.86,23.86,0,0,1-5.83-4,16.17,16.17,0,0,1-2.28-2.68,11.87,11.87,0,0,1-1.54-3.16,8.25,8.25,0,0,1-.32-3.45,8.46,8.46,0,0,1,.16-.85c.08-.27.17-.56.27-.84a16.54,16.54,0,0,1,.64-1.65,21.64,21.64,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.52,45.52,0,0,1,6.22-3.47,68.89,68.89,0,0,1,6.64-2.63,112,112,0,0,1,13.83-3.62c2.09-.42,4.18-.79,6.27-1.13C278.68,331.94,279.17,332.58,279.66,333.23Z"/><polygon class="cls-3" points="277.81 330.84 278.19 330.78 278.53 331.25 278.16 331.3 277.81 330.84"/></g><g class="cls-1"><path class="cls-46" d="M474.5,546.1c-.69-.36-1.39-.72-2.07-1.1a109.3,109.3,0,0,1-12.12-7.59,87.87,87.87,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,52.82,52.82,0,0,1-1.75-6.9,50.8,50.8,0,0,1-.78-7.07A55.63,55.63,0,0,1,433,476.18,48.68,48.68,0,0,1,438.23,463a83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.44-3.33,6.82-6.73,10-10.33,1.58-1.79,3.11-3.65,4.54-5.58a49.42,49.42,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.95-5.77-4.3a100.19,100.19,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.52-1.61-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.34-3.41-6.84-6.69-10.4-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6,6,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.19,19.19,0,0,1,3-1.95c1.05-.56,2.13-1.07,3.22-1.54,2.19-1,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.73,15.73,0,0,0,3.05-1.9,5.33,5.33,0,0,0,1.18-1.37,3,3,0,0,0,.33-.86,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.37,14.55,14.55,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.49-4.56-1.46-6.86-2.09c-1.15-.32-2.31-.62-3.47-.9-.59-.14-1.17-.27-1.76-.38-.29-.06-.58-.12-.88-.16l-.45-.07h-.22c-.08,0-.15,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.28,2.31.58,3.47.9q3.45,1,6.85,2.11t6.72,2.49c2.21.9,4.39,1.87,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.77,7.77,0,0,1,1.19,3.31,2.8,2.8,0,0,1,0,.87,3.41,3.41,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.64,18.64,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,1,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,45.24,45.24,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65S221.5,286,225.21,289l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.47,10.38,9.88,2.63,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.66,1.69-.09.29-.18.57-.27.87a9.12,9.12,0,0,0-.17.91,8.74,8.74,0,0,0,.34,3.63,12.55,12.55,0,0,0,1.59,3.27,16.39,16.39,0,0,0,2.36,2.76,24.59,24.59,0,0,0,5.93,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.9l.91,0,.9,0c.3,0,.6,0,.89-.06a37.12,37.12,0,0,0,7.1-1.21,33,33,0,0,0,6.71-2.61,28.46,28.46,0,0,0,3.08-1.88,22.71,22.71,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,14.07,14.07,0,0,0,1-1.49,13.58,13.58,0,0,0,1.42-3.33,13.76,13.76,0,0,0,.38-1.78,15.6,15.6,0,0,0,.16-1.81,19.68,19.68,0,0,0-.23-3.6,29.51,29.51,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2t14.15,2.29c9.4,1.65,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.27,2.24.81,4.47,1.67,6.67,2.59s4.37,1.89,6.52,2.93a99.85,99.85,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.17,48.17,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.91-3.35,3.43-6.6,7-9.62,10.68a85.09,85.09,0,0,0-8.18,11.84,49.54,49.54,0,0,0-5.29,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.91,0,.6,0,1.2,0,1.8a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,13A69,69,0,0,0,449,528.61a88.42,88.42,0,0,0,11,9.3,107.91,107.91,0,0,0,12.19,7.6c.71.39,1.43.76,2.14,1.13Zm-196.35-209a69.7,69.7,0,0,1,4,5.91,47.6,47.6,0,0,1,3.27,6.35,29.62,29.62,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,20.55,20.55,0,0,1-2.73,2.27,28.3,28.3,0,0,1-3,1.85,33.29,33.29,0,0,1-6.62,2.58,38,38,0,0,1-7,1.18c-.29,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.64,45.64,0,0,1,6.23-3.47,67.88,67.88,0,0,1,6.64-2.63,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C277.16,335.81,277.66,336.45,278.15,337.1Z"/><polygon class="cls-3" points="276.3 334.71 276.67 334.65 277.02 335.12 276.64 335.17 276.3 334.71"/></g><g class="cls-1"><path class="cls-47" d="M473.05,549.85,471,548.74a110.8,110.8,0,0,1-12.12-7.59A88.82,88.82,0,0,1,448,531.9a68.62,68.62,0,0,1-9-11.06A56.48,56.48,0,0,1,432.81,508a54.32,54.32,0,0,1-1.75-6.89,50.94,50.94,0,0,1-.78-7.08,56.09,56.09,0,0,1,1.26-14.15,48.94,48.94,0,0,1,5.22-13.18A84.12,84.12,0,0,1,444.88,455c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.54-5.58a50.31,50.31,0,0,0,3.91-6.08,29.41,29.41,0,0,0,2.69-6.72,19.73,19.73,0,0,0,.51-7.26A18.73,18.73,0,0,0,496,385a21.22,21.22,0,0,0-1.46-3.35,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.6-2.52-.45-.4-.89-.8-1.35-1.18l-.69-.59-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.29a99,99,0,0,0-12.48-7.16q-3.23-1.58-6.56-3c-2.21-.92-4.45-1.78-6.7-2.58-4.51-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.24-1.79-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.5-14.77,1.26-22.08,2.45-2.41-3-5-5.83-7.71-8.57-3.34-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.14,13.14,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,10.54,10.54,0,0,1,1.26-1.24,17.85,17.85,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.22-1.55,2.19-.95,4.44-1.78,6.65-2.68,1.11-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.87,14.87,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.45-.06-.22,0c-.08,0-.14,0-.25.06l.07,0a.72.72,0,0,1,.18,0l.22,0,.44.06c.29,0,.59.1.88.16.58.12,1.17.25,1.75.39,1.16.27,2.31.58,3.47.89,2.3.64,4.58,1.35,6.85,2.11s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a48.77,48.77,0,0,1,6.13,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.82,7.82,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.74-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.73,18.73,0,0,0-3,2,9.69,9.69,0,0,0-1.29,1.27,6.27,6.27,0,0,0-.95,1.54,5.86,5.86,0,0,0-.28.87,1.85,1.85,0,0,1,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.14,11.05,9.14l11.18,9c7.44,6,14.85,12.05,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.19,5.48,7.55,8.41q-3,.5-6,1.08a111.33,111.33,0,0,0-13.89,3.66,66.34,66.34,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.28.87a9.12,9.12,0,0,0-.17.91,8.79,8.79,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,17.22,17.22,0,0,0,2.36,2.76,24.42,24.42,0,0,0,5.94,4.08,36,36,0,0,0,6.74,2.53c1.16.31,2.33.57,3.51.79l.89.15c.3.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.81l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,14.21,14.21,0,0,0,1-1.5,14.14,14.14,0,0,0,1.8-5.11,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.8,29.8,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.93-.45-.6-.91-1.2-1.38-1.78,7.21-1.16,14.47-1.9,21.75-2.39,9.54-.62,19.1-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.58,28,6.09,4.61,1.26,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,18,18,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29.07,29.07,0,0,1-2.63,6.54,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.61,49.61,0,0,0-5.29,13.39,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.1,52.1,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,13,69.91,69.91,0,0,0,9.08,11.15,88.34,88.34,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61l2.16,1.13Zm-196.37-209c1.43,1.91,2.78,3.88,4,5.92a49.27,49.27,0,0,1,3.26,6.34,29.7,29.7,0,0,1,2,6.83,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,14.45,14.45,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.48,20.48,0,0,1-2.73,2.26,25.28,25.28,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.9,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.66a22,22,0,0,1,3.87-5.91,30.43,30.43,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,65.45,65.45,0,0,1,6.64-2.63A109.42,109.42,0,0,1,268.92,340q3.12-.61,6.27-1.12C275.69,339.54,276.19,340.18,276.68,340.83Z"/><polygon class="cls-3" points="274.83 338.45 275.2 338.39 275.55 338.85 275.18 338.91 274.83 338.45"/></g><g class="cls-1"><path class="cls-48" d="M471.62,553.53c-.71-.37-1.42-.74-2.12-1.12a110.8,110.8,0,0,1-12.12-7.59,89.58,89.58,0,0,1-10.87-9.25,68.56,68.56,0,0,1-9-11.06,56.23,56.23,0,0,1-6.19-12.8,54.9,54.9,0,0,1-1.75-6.9,51,51,0,0,1-.78-7.07,56.13,56.13,0,0,1,1.26-14.16,48.64,48.64,0,0,1,5.23-13.18,83.21,83.21,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.76-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.55-5.58a50.12,50.12,0,0,0,3.9-6.07,30.17,30.17,0,0,0,2.7-6.73,19.94,19.94,0,0,0,.5-7.26,18.9,18.9,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.62,28.62,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.59-2.52-.46-.39-.9-.8-1.36-1.18l-.69-.59-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.29a99,99,0,0,0-12.48-7.16q-3.22-1.58-6.56-2.95c-2.21-.92-4.45-1.78-6.7-2.58-4.51-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.07Q403.06,346,396,345c-4.73-.71-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.84c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a44.17,44.17,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17A13.14,13.14,0,0,1,189,260a8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,5.4,5.4,0,0,1,.26-.84,6.17,6.17,0,0,1,.92-1.49,9.38,9.38,0,0,1,1.27-1.25,17.37,17.37,0,0,1,3-1.95c1-.57,2.13-1.07,3.22-1.54,2.2-1,4.44-1.79,6.65-2.69,1.11-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,4.85,4.85,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,47.16,47.16,0,0,0-6.15-3.68c-2.13-1.09-4.32-2.07-6.53-3s-4.47-1.73-6.73-2.49-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.72.72,0,0,1,.18,0l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.9,2.3.63,4.58,1.34,6.85,2.1s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.15,14.15,0,0,1,2.26,2.74,7.68,7.68,0,0,1,1.19,3.32,2.81,2.81,0,0,1,0,.87,2.59,2.59,0,0,1-.32.81,4.89,4.89,0,0,1-1.15,1.33,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.13,18.13,0,0,0-3,2,9,9,0,0,0-1.29,1.26,6.15,6.15,0,0,0-.95,1.55,4.39,4.39,0,0,0-.27.87c0,.07,0,.15,0,.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.24,3.41,3.36,7,6.54,10.62,9.64s7.34,6.14,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7.05,6.46,10.38,9.88,2.64,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.08a111.33,111.33,0,0,0-13.89,3.66,67.29,67.29,0,0,0-6.68,2.66A46.08,46.08,0,0,0,240.5,353a30.27,30.27,0,0,0-5.48,4.69,22.34,22.34,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.77,8.77,0,0,0,.34,3.64,12.42,12.42,0,0,0,1.6,3.27,16.27,16.27,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36.68,36.68,0,0,0,6.74,2.52c1.16.31,2.33.58,3.51.79l.89.15c.3.06.6.09.89.14.6.09,1.19.15,1.79.22,1.19.11,2.39.2,3.6.21h1.8l.9,0,.9-.05a38.79,38.79,0,0,0,7.09-1.21,33.6,33.6,0,0,0,6.71-2.62,27.45,27.45,0,0,0,3.08-1.87,21.24,21.24,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.06,12.06,0,0,0,1-1.5,13.26,13.26,0,0,0,1.42-3.33,13.62,13.62,0,0,0,.38-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.58,29.58,0,0,0-2-6.9,49.55,49.55,0,0,0-3.29-6.4q-1.87-3.06-4.05-5.93c-.45-.6-.91-1.2-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.41,1.65,18.77,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.58s4.38,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.76,5.72,4.26l.69.57.68.58c.45.38.9.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29.11,29.11,0,0,1-2.62,6.55,50.23,50.23,0,0,1-3.86,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.6,7-9.62,10.68A83.92,83.92,0,0,0,434.64,470a49.61,49.61,0,0,0-5.29,13.39,61.51,61.51,0,0,0-1.08,7.14c0,.29,0,.59-.07.89l-.06.9c0,.61-.05,1.21-.07,1.81v.9q0,.45,0,.9c0,.6,0,1.21,0,1.81a52.13,52.13,0,0,0,.81,7.16,53.85,53.85,0,0,0,1.79,7A56.58,56.58,0,0,0,437,524.87,69,69,0,0,0,446.06,536a89.29,89.29,0,0,0,11,9.3,110.86,110.86,0,0,0,12.19,7.6l2.2,1.15Zm-196.4-209c1.43,1.91,2.78,3.88,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29.48,29.48,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,13,13,0,0,1-1,1.45,12.24,12.24,0,0,1-1.18,1.32,21.12,21.12,0,0,1-2.72,2.27,27.6,27.6,0,0,1-3,1.84,33.62,33.62,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19l-.89.05-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.22-.59-.06-1.18-.12-1.77-.22l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.65a22.08,22.08,0,0,1,3.87-5.92,30.43,30.43,0,0,1,5.4-4.6A45.17,45.17,0,0,1,247,350a65.45,65.45,0,0,1,6.64-2.63,111.14,111.14,0,0,1,13.83-3.63q3.12-.61,6.27-1.12C274.23,343.21,274.73,343.85,275.22,344.5Z"/><polygon class="cls-3" points="273.37 342.12 273.74 342.06 274.09 342.52 273.72 342.58 273.37 342.12"/></g><g class="cls-1"><path class="cls-49" d="M470.12,557.41c-.72-.37-1.43-.75-2.14-1.13a110.67,110.67,0,0,1-12.11-7.59A88.08,88.08,0,0,1,445,539.44a68.09,68.09,0,0,1-9-11.06,55.78,55.78,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56.13,56.13,0,0,1,1.26-14.16,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.25-7.21,9.58-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30.14,30.14,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.9,18.9,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,29,29,0,0,0-4.3-5.84c-.82-.87-1.69-1.71-2.59-2.52-.45-.39-.9-.8-1.36-1.18l-.68-.59-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.29A98.83,98.83,0,0,0,463.64,367q-3.24-1.58-6.56-2.95t-6.71-2.58c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.07q-7.07-1.22-14.16-2.27c-4.73-.71-9.47-1.38-14.21-2Q366,345.1,351.67,344c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.45-2.42-3-5-5.82-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.43-6-11.07-9.12s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a43.27,43.27,0,0,1-4.27-5.73,22.11,22.11,0,0,1-1.64-3.17,13.16,13.16,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,0,0-.22,6.82,6.82,0,0,1,.27-.84,5.88,5.88,0,0,1,.92-1.49A9.3,9.3,0,0,1,190,257.6a18.18,18.18,0,0,1,3-2c1.05-.57,2.14-1.07,3.23-1.54,2.19-1,4.43-1.79,6.65-2.69,1.1-.46,2.2-.93,3.28-1.46a15.09,15.09,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.86,7.86,0,0,0-1.21-3.38,14.75,14.75,0,0,0-2.28-2.77,27.59,27.59,0,0,0-2.77-2.29,48.53,48.53,0,0,0-6.15-3.68c-2.14-1.09-4.32-2.06-6.54-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.85-2.1c-1.16-.31-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.3,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.17.27,2.32.58,3.47.9,2.3.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,25.12,25.12,0,0,1,2.76,2.28,14.46,14.46,0,0,1,2.26,2.74,7.8,7.8,0,0,1,1.18,3.32,2.31,2.31,0,0,1,0,.87,2.83,2.83,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9.53,9.53,0,0,0-1.28,1.26,6.37,6.37,0,0,0-1,1.55,6.28,6.28,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.43,13.43,0,0,0,.95,3.47,23,23,0,0,0,1.64,3.2,44.78,44.78,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.24,3.4,3.36,7,6.54,10.62,9.64s7.33,6.14,11.05,9.15l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.08A110.87,110.87,0,0,0,252,350.74a67.47,67.47,0,0,0-6.69,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6,17.21,17.21,0,0,0-.66,1.68c-.09.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64A12.09,12.09,0,0,0,230.4,378a17.23,17.23,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36.06,36.06,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9,0a38.75,38.75,0,0,0,7.1-1.21,33.84,33.84,0,0,0,6.71-2.62,29.38,29.38,0,0,0,3.08-1.87,21.15,21.15,0,0,0,2.77-2.32,14.4,14.4,0,0,0,2.24-2.84,13.52,13.52,0,0,0,1.43-3.34,15.46,15.46,0,0,0,.37-1.77,13.83,13.83,0,0,0,.16-1.81,18.94,18.94,0,0,0-.22-3.61,30.06,30.06,0,0,0-2-6.9,49.61,49.61,0,0,0-3.3-6.4c-1.24-2-2.6-4-4-5.93-.45-.6-.91-1.2-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.17,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a98,98,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.67.58c.46.38.9.78,1.35,1.17.88.8,1.73,1.62,2.54,2.48a28,28,0,0,1,4.18,5.69,20.9,20.9,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.93,3.74-4.51,5.53-3.16,3.57-6.53,6.95-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.44,59.44,0,0,0-1.08,7.14c0,.29-.05.59-.07.89l-.06.91c0,.6-.06,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21,0,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.17,56.17,0,0,0,6.28,13,69,69,0,0,0,9.07,11.15,90,90,0,0,0,11,9.3,111.94,111.94,0,0,0,12.2,7.6c.73.39,1.46.78,2.2,1.16Zm-196.42-209a69.22,69.22,0,0,1,4,5.92,47.54,47.54,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,33.38,33.38,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.22-.59-.06-1.19-.12-1.77-.22l-.89-.13-.87-.16c-1.17-.21-2.34-.47-3.48-.78a35.25,35.25,0,0,1-6.67-2.5,24.08,24.08,0,0,1-5.82-4,15.45,15.45,0,0,1-2.29-2.69,11.35,11.35,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.4-1.11.64-1.65a22.08,22.08,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,45.06,45.06,0,0,1,6.22-3.47,66.39,66.39,0,0,1,6.64-2.63A111.75,111.75,0,0,1,266,347.57q3.12-.61,6.26-1.12C272.72,347.08,273.22,347.73,273.7,348.37Z"/><polygon class="cls-3" points="271.85 345.99 272.23 345.93 272.57 346.39 272.2 346.45 271.85 345.99"/></g><g class="cls-1"><path class="cls-50" d="M468.67,561.15,466.51,560a109.09,109.09,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,68.6,68.6,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15A48.7,48.7,0,0,1,432.32,478a84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.25-7.21,9.58-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a100.07,100.07,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73A22.65,22.65,0,0,1,187,271a13.68,13.68,0,0,1-.94-3.42,9.63,9.63,0,0,1,0-1.78v-.22l0-.22,0-.22a1.55,1.55,0,0,0,0-.21,5.88,5.88,0,0,1,.27-.84,6.11,6.11,0,0,1,.92-1.5,9.3,9.3,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-1.95c1.05-.56,2.14-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.55,15.55,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.59,2.59,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37,14.14,14.14,0,0,0-2.28-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.85-2.1c-1.16-.32-2.31-.62-3.48-.9l-1.75-.38c-.29-.06-.59-.12-.88-.16a3.47,3.47,0,0,0-.45-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.46.46,0,0,1,.18,0h.22l.44.06.88.17c.59.11,1.17.25,1.75.38,1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49c2.22.9,4.4,1.88,6.52,3a47.11,47.11,0,0,1,6.14,3.69,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.48-2.19,1-3.25,1.55a18.49,18.49,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.33,5.33,0,0,0-1.23,2.41,1.85,1.85,0,0,0,0,.23l0,.22,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.43,13.43,0,0,0,.95,3.47,23.53,23.53,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.62,9.65S215.58,301,219.3,304l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,65.11,65.11,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.78.23,1.2.11,2.4.2,3.6.2h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.84,33.84,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,20.32,20.32,0,0,0,2.77-2.31,12.83,12.83,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.63,15.63,0,0,0,.37-1.78,13.68,13.68,0,0,0,.16-1.8,18.94,18.94,0,0,0-.22-3.61,30.14,30.14,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2T407,355.51c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.93a99.31,99.31,0,0,1,12.38,7.13c2,1.34,3.88,2.75,5.72,4.26l.69.57.67.57c.46.39.9.79,1.35,1.18.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,21.33,21.33,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.9-2.93,3.74-4.51,5.52-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,6.95-9.62,10.68a85.26,85.26,0,0,0-8.18,11.83,49.65,49.65,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a53.86,53.86,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7A56.1,56.1,0,0,0,434,532.47a69,69,0,0,0,9.08,11.16,89.12,89.12,0,0,0,11,9.29,108.94,108.94,0,0,0,12.2,7.6c.73.4,1.48.79,2.22,1.17Zm-196.44-209a67.52,67.52,0,0,1,4,5.91,48.15,48.15,0,0,1,3.26,6.35,29.3,29.3,0,0,1,2,6.82,16.66,16.66,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22-.3,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.91,35.91,0,0,1-6.67-2.49,24.37,24.37,0,0,1-5.82-4,16.72,16.72,0,0,1-2.29-2.69,11.54,11.54,0,0,1-1.53-3.16,8.19,8.19,0,0,1-.33-3.44,6.23,6.23,0,0,1,.17-.86c.07-.27.17-.56.26-.84.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,46.06,46.06,0,0,1,6.22-3.46,69,69,0,0,1,6.64-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.17-.79,6.26-1.12C271.25,350.82,271.75,351.46,272.23,352.11Z"/><polygon class="cls-3" points="270.38 349.73 270.76 349.67 271.11 350.13 270.73 350.19 270.38 349.73"/></g><g class="cls-1"><path class="cls-51" d="M467.24,564.84c-.71-.36-1.41-.73-2.11-1.11A110.67,110.67,0,0,1,453,556.14a88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06A55.65,55.65,0,0,1,427,523a50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,49,49,0,0,1,5.23-13.18A84.05,84.05,0,0,1,439.05,470c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.55,51.55,0,0,0,3.91-6.08,29.87,29.87,0,0,0,2.69-6.72,19.73,19.73,0,0,0,.51-7.26,18,18,0,0,0-.81-3.56,20.3,20.3,0,0,0-1.45-3.35,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.4-.9-.8-1.36-1.18l-.68-.59-.7-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.07-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.37-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.38.5-14.76,1.26-22.08,2.45-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.19-9c-3.71-3-7.42-6-11.06-9.12s-7.21-6.27-10.61-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a44.94,44.94,0,0,1-4.28-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,0,0-.22,4.84,4.84,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,9.24,9.24,0,0,1,1.26-1.24,17.77,17.77,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.64-2.68,1.11-.46,2.21-.93,3.29-1.46a15.09,15.09,0,0,0,3.05-1.9,5.35,5.35,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,2.79,2.79,0,0,0,0-.91A7.86,7.86,0,0,0,206.7,249a14.13,14.13,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.08-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0a3.11,3.11,0,0,1,.44.06c.3,0,.59.1.88.16.59.12,1.17.25,1.75.39,1.16.27,2.32.57,3.47.89,2.3.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a47.38,47.38,0,0,1,6.13,3.68,25.21,25.21,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.55,2.55,0,0,1,0,.87,3,3,0,0,1-.31.81,5.23,5.23,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.22.9-4.46,1.74-6.66,2.68-1.09.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,11.05,11.05,0,0,0-1.29,1.27,6.59,6.59,0,0,0-1,1.54,5.8,5.8,0,0,0-.27.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23v.22a9.13,9.13,0,0,0,0,1.81,13,13,0,0,0,.95,3.47,23.53,23.53,0,0,0,1.64,3.2,44.78,44.78,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.61,9.65s7.34,6.14,11.06,9.14l11.17,9c7.45,6,14.86,12.05,22,18.42,3.55,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.41q-3,.49-6,1.08a110.87,110.87,0,0,0-13.89,3.66,67.47,67.47,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.58,22.58,0,0,0-3.95,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.63,8.63,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,36.1,36.1,0,0,0,6.75,2.53c1.16.31,2.33.57,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06A37.9,37.9,0,0,0,264,395a33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,14.05,14.05,0,0,0,1.21-1.35,12.85,12.85,0,0,0,1-1.5,13.45,13.45,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,13.53,13.53,0,0,0,.16-1.8,18.16,18.16,0,0,0-.23-3.61,29.77,29.77,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39c-1.24-2.05-2.6-4-4-5.94-.45-.59-.92-1.19-1.38-1.77,7.2-1.16,14.47-1.9,21.75-2.39,9.53-.62,19.09-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.19,97.19,0,0,1,12.37,7.12c2,1.34,3.89,2.75,5.73,4.26l.68.57.68.58c.46.38.9.78,1.35,1.17.88.8,1.73,1.62,2.54,2.48A27.56,27.56,0,0,1,488,397a20,20,0,0,1,1.41,3.22,18,18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29.07,29.07,0,0,1-2.63,6.54,49.47,49.47,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,6.94-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a84.77,84.77,0,0,0-8.18,11.84A49.58,49.58,0,0,0,425,494.74a59.58,59.58,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6,0,1.2-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a53.68,53.68,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.54,56.54,0,0,0,6.27,13,70.45,70.45,0,0,0,9.08,11.15,89.08,89.08,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61c.72.39,1.44.77,2.17,1.14Zm-196.39-209a69.22,69.22,0,0,1,4,5.92,49.27,49.27,0,0,1,3.26,6.34,29.73,29.73,0,0,1,2,6.83,16.83,16.83,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,16.36,16.36,0,0,1-1.18,1.32,21.14,21.14,0,0,1-2.73,2.26,26.22,26.22,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22l-.89-.13-.87-.16q-1.77-.31-3.48-.78a35.68,35.68,0,0,1-6.67-2.5,24.42,24.42,0,0,1-5.83-4,16.24,16.24,0,0,1-2.28-2.69,11.66,11.66,0,0,1-1.54-3.15,8.41,8.41,0,0,1-.32-3.45,8,8,0,0,1,.16-.85c.08-.28.18-.56.27-.84.19-.56.4-1.11.64-1.66a22,22,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,66.39,66.39,0,0,1,6.64-2.63A110.31,110.31,0,0,1,263.09,355q3.14-.61,6.27-1.12C269.87,354.53,270.36,355.17,270.85,355.82Z"/><polygon class="cls-3" points="269 353.44 269.38 353.38 269.72 353.84 269.35 353.9 269 353.44"/></g><g class="cls-1"><path class="cls-52" d="M465.74,568.72c-.71-.37-1.42-.74-2.12-1.12A110.8,110.8,0,0,1,451.5,560a88.82,88.82,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06,56.48,56.48,0,0,1-6.18-12.81,54.32,54.32,0,0,1-1.75-6.89,50.94,50.94,0,0,1-.78-7.08,56.09,56.09,0,0,1,1.26-14.15,48.64,48.64,0,0,1,5.23-13.18,83.21,83.21,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.54-5.58a50.31,50.31,0,0,0,3.91-6.08,29.9,29.9,0,0,0,2.7-6.72,19.94,19.94,0,0,0,.5-7.26,18.73,18.73,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.6-2.52-.45-.4-.89-.8-1.35-1.18l-.69-.59-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.29a99,99,0,0,0-12.48-7.16q-3.22-1.57-6.56-2.95c-2.21-.92-4.45-1.78-6.7-2.58-4.51-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.07-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.37-14.21-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.5-14.77,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.14,13.14,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.7,1.7,0,0,1,0-.22,5.09,5.09,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,9.93,9.93,0,0,1,1.27-1.24,17.37,17.37,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.22-1.55,2.2-.95,4.44-1.78,6.65-2.68,1.11-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9A5.17,5.17,0,0,0,206,258a2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.87,14.87,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.45-.06-.22,0c-.08,0-.14,0-.25.06l.07,0a.72.72,0,0,1,.18,0l.22,0,.44.06c.29,0,.59.1.88.16.58.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.89,2.3.64,4.58,1.35,6.85,2.11s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a48.07,48.07,0,0,1,6.13,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.68,7.68,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.44-2.21.9-4.45,1.74-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.73,18.73,0,0,0-3,2,9.69,9.69,0,0,0-1.29,1.27,6.15,6.15,0,0,0-.95,1.55,5.39,5.39,0,0,0-.28.86,1.85,1.85,0,0,1,0,.23l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.41,3.37,7,6.55,10.62,9.65s7.34,6.14,11.05,9.14l11.18,9c7.44,6,14.85,12.05,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.19,5.48,7.55,8.41q-3,.49-6,1.08a111.33,111.33,0,0,0-13.89,3.66,67.29,67.29,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.79,8.79,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,17.22,17.22,0,0,0,2.36,2.76,24.42,24.42,0,0,0,5.94,4.08,36,36,0,0,0,6.74,2.53c1.16.31,2.33.57,3.51.79l.89.15c.3.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.81l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,12.85,12.85,0,0,0,1-1.5,14.14,14.14,0,0,0,1.8-5.11,15.43,15.43,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.8,29.8,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39,70.46,70.46,0,0,0-4.05-5.93c-.45-.6-.91-1.2-1.38-1.78,7.21-1.16,14.47-1.9,21.76-2.39,9.53-.62,19.09-.8,28.64-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.58,28,6.09,4.61,1.26,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29.07,29.07,0,0,1-2.63,6.54,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.61,49.61,0,0,0-5.29,13.39,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.21-.07,1.81v.9q0,.45,0,.9c0,.6,0,1.2,0,1.8a52.1,52.1,0,0,0,.81,7.17,53.85,53.85,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69.91,69.91,0,0,0,9.08,11.15,88.34,88.34,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61l2.19,1.15Zm-196.4-209c1.43,1.91,2.78,3.88,4,5.92a49.27,49.27,0,0,1,3.26,6.34,29.7,29.7,0,0,1,2,6.83,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,13,13,0,0,1-1,1.45,14.65,14.65,0,0,1-1.18,1.32,20.48,20.48,0,0,1-2.73,2.26,25.28,25.28,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.9,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.66a22,22,0,0,1,3.87-5.91,30.43,30.43,0,0,1,5.4-4.6,45.17,45.17,0,0,1,6.23-3.47,65.45,65.45,0,0,1,6.64-2.63,109.42,109.42,0,0,1,13.83-3.63q3.12-.61,6.27-1.12C268.35,358.4,268.85,359,269.34,359.69Z"/><polygon class="cls-3" points="267.49 357.31 267.86 357.25 268.21 357.71 267.84 357.77 267.49 357.31"/></g><g class="cls-1"><path class="cls-53" d="M464.29,572.46c-.72-.37-1.43-.74-2.14-1.13A110.72,110.72,0,0,1,450,563.75a89.58,89.58,0,0,1-10.87-9.25,69.07,69.07,0,0,1-9-11.07,56,56,0,0,1-6.19-12.8,54.46,54.46,0,0,1-1.75-6.9,50.8,50.8,0,0,1-.78-7.07,56.09,56.09,0,0,1,1.26-14.15A48.38,48.38,0,0,1,428,489.33a83.3,83.3,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.83,13.76-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.32,1.58-1.8,3.11-3.66,4.55-5.59a49.35,49.35,0,0,0,3.9-6.07,30,30,0,0,0,2.7-6.73,19.89,19.89,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.24,20.24,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.46-.4-.9-.8-1.36-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.95-5.77-4.3a100.19,100.19,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.51-1.61-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.41-6.85-6.69-10.41-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.23,6.23,0,0,1,.92-1.5,9.38,9.38,0,0,1,1.27-1.25,18.64,18.64,0,0,1,3-1.95c1.05-.56,2.13-1.07,3.22-1.54,2.2-1,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.73,15.73,0,0,0,3.05-1.9,5.14,5.14,0,0,0,1.18-1.37,3,3,0,0,0,.33-.86,2.78,2.78,0,0,0,.05-.91,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9-.59-.14-1.17-.27-1.76-.38-.29-.06-.58-.12-.88-.16l-.44-.07h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.11t6.72,2.49c2.21.9,4.39,1.87,6.52,3a47,47,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.64,7.64,0,0,1,1.19,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.13,18.13,0,0,0-3,2,8.61,8.61,0,0,0-1.29,1.27,6.09,6.09,0,0,0-.95,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,45.24,45.24,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.47,10.38,9.88,2.64,2.7,5.19,5.48,7.55,8.41q-3,.49-6,1.09a113.05,113.05,0,0,0-13.89,3.65,69.82,69.82,0,0,0-6.68,2.66,45.1,45.1,0,0,0-6.29,3.52,29.83,29.83,0,0,0-5.48,4.68,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.73,8.73,0,0,0,.34,3.63,12.27,12.27,0,0,0,1.6,3.27,15.89,15.89,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.6.1,1.19.15,1.79.22,1.19.12,2.39.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.15,37.15,0,0,0,7.09-1.21,33,33,0,0,0,6.71-2.61,27.53,27.53,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.58,13.58,0,0,0,1.42-3.33,13.76,13.76,0,0,0,.38-1.78,15.6,15.6,0,0,0,.16-1.81,19.74,19.74,0,0,0-.23-3.6,29.51,29.51,0,0,0-2-6.91,48.78,48.78,0,0,0-3.29-6.39,70.62,70.62,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2t14.15,2.29c9.41,1.65,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.27,2.24.81,4.47,1.67,6.67,2.59s4.38,1.89,6.52,2.93a99.85,99.85,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.45.39.9.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,28.93,28.93,0,0,1-2.62,6.55,49.43,49.43,0,0,1-3.86,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-9.95,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.67A85.09,85.09,0,0,0,427.29,489a49.54,49.54,0,0,0-5.29,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.61,0,.91,0,.6,0,1.2,0,1.8a52.45,52.45,0,0,0,.81,7.17,54.69,54.69,0,0,0,1.79,7,56.71,56.71,0,0,0,6.28,12.94,69,69,0,0,0,9.08,11.15,88.42,88.42,0,0,0,11,9.3,107.91,107.91,0,0,0,12.19,7.6c.73.4,1.47.78,2.21,1.16Zm-196.42-209c1.43,1.9,2.78,3.87,4,5.91a48.75,48.75,0,0,1,3.26,6.35,29.62,29.62,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,21.12,21.12,0,0,1-2.72,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18l-.89.06-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8.24,8.24,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65A21.87,21.87,0,0,1,228,377a30.07,30.07,0,0,1,5.4-4.61,46.18,46.18,0,0,1,6.23-3.46,65.52,65.52,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C266.88,362.14,267.38,362.78,267.87,363.43Z"/><polygon class="cls-3" points="266.02 361.05 266.39 360.98 266.74 361.45 266.37 361.5 266.02 361.05"/></g><g class="cls-1"><path class="cls-54" d="M462.86,576.15,460.69,575a108.17,108.17,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,50.8,50.8,0,0,1-.78-7.07,56.09,56.09,0,0,1,1.26-14.15A48.38,48.38,0,0,1,426.5,493a84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.82,13.76-13.24,20.64-19.89,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.55-5.59a49.35,49.35,0,0,0,3.9-6.07,29.79,29.79,0,0,0,2.7-6.73,19.89,19.89,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.46-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a99.48,99.48,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.78-6.7-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.66,13.66,0,0,1-.93-3.42,8.83,8.83,0,0,1,0-1.78l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-1.95c1-.56,2.13-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3-1.9,5.2,5.2,0,0,0,1.19-1.37,2.92,2.92,0,0,0,.32-.85,2.85,2.85,0,0,0,.05-.92,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38c-.3-.06-.59-.12-.89-.16a3.32,3.32,0,0,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.44.44,0,0,1,.18,0h.22l.44.06.88.17c.58.11,1.17.25,1.75.38,1.16.28,2.32.58,3.47.9q3.45,1,6.85,2.11c2.26.76,4.51,1.59,6.72,2.49s4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,25,25,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.79,2.79,0,0,1-.32.81,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.07,18.07,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.27,6.27,0,0,0-1,1.54,4.39,4.39,0,0,0-.27.87c0,.08,0,.15-.05.23l0,.22,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.64,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,64.94,64.94,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.39,22.39,0,0,0-3.94,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.52.79l.88.16.89.13c.6.1,1.19.16,1.79.23,1.2.11,2.39.2,3.6.2h1.8l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,26.12,26.12,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.6,15.6,0,0,0,.53-3.58,19.79,19.79,0,0,0-.23-3.61,29.65,29.65,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39,70.62,70.62,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.8,28.64-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.2,2t14.15,2.29c9.41,1.65,18.77,3.57,28,6.09,4.61,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.93a99.19,99.19,0,0,1,12.37,7.13c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.57c.46.39.9.79,1.34,1.18.88.79,1.73,1.62,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20.37,20.37,0,0,1,1.4,3.22,17.61,17.61,0,0,1,.77,3.42,19.26,19.26,0,0,1-.49,7,29.43,29.43,0,0,1-2.63,6.55,49.55,49.55,0,0,1-3.86,6c-1.41,1.9-2.93,3.74-4.51,5.52-3.15,3.57-6.53,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.68a84.41,84.41,0,0,0-8.18,11.83,49.65,49.65,0,0,0-5.28,13.4,59.3,59.3,0,0,0-1.09,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a50.74,50.74,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6c.74.4,1.49.79,2.24,1.18Zm-196.45-209c1.43,1.9,2.78,3.87,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.28,29.28,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,13.83,13.83,0,0,1-2.19,2.77,20.33,20.33,0,0,1-2.72,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18l-.89.06-.89,0-.9,0h-.89c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29,0-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,7.5,7.5,0,0,1-.16-4.3c.08-.27.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.61,21.61,0,0,1,3.86-5.91A29.79,29.79,0,0,1,232,376a45.46,45.46,0,0,1,6.22-3.46,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62c2.08-.41,4.17-.79,6.27-1.12C265.42,365.81,265.92,366.45,266.41,367.1Z"/><polygon class="cls-3" points="264.56 364.72 264.93 364.66 265.28 365.12 264.91 365.18 264.56 364.72"/></g><g class="cls-1"><path class="cls-55" d="M461.36,580c-.73-.38-1.46-.76-2.19-1.16a109.09,109.09,0,0,1-12.11-7.58A88.08,88.08,0,0,1,436.19,562a69.13,69.13,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,54,54,0,0,1-.78-7.07,56.09,56.09,0,0,1,1.26-14.15A48.7,48.7,0,0,1,425,496.87a83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.2,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.21-2q-14.25-1.78-28.56-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.13.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.65,22.65,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.83,8.83,0,0,1,0-1.78v-.22l0-.22,0-.22c0-.07,0-.14.05-.21a4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-1.95c1.05-.56,2.14-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.59,2.59,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37,14.14,14.14,0,0,0-2.28-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.85-2.1c-1.16-.32-2.31-.62-3.48-.9l-1.75-.38c-.29-.06-.59-.12-.88-.16a3.47,3.47,0,0,0-.45-.06l-.23,0c-.08,0-.14,0-.25.06l.08,0a.39.39,0,0,1,.17,0h.22l.44.06.88.17c.59.11,1.17.25,1.75.38,1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49c2.22.9,4.4,1.88,6.52,3a47.11,47.11,0,0,1,6.14,3.69,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81,5,5,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.48-2.19,1-3.25,1.55a18.49,18.49,0,0,0-3,2,9,9,0,0,0-1.28,1.27,6,6,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.84,13.84,0,0,0,.95,3.47,23.53,23.53,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,65.11,65.11,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.2h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27.86,27.86,0,0,0,3.08-1.88,20.32,20.32,0,0,0,2.77-2.31,12.83,12.83,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.63,15.63,0,0,0,.37-1.78,13.68,13.68,0,0,0,.16-1.8,18.94,18.94,0,0,0-.22-3.61,30.14,30.14,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87q7.11.9,14.19,2t14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28q3.36,1.2,6.66,2.58c2.2.92,4.38,1.89,6.52,2.93a99.31,99.31,0,0,1,12.38,7.13c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.65,27.65,0,0,1,4.18,5.68,21.33,21.33,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.9-2.93,3.74-4.51,5.52-3.15,3.57-6.53,7-10,10.28-6.86,6.64-13.95,13.06-20.65,19.92-3.34,3.42-6.59,6.95-9.62,10.68a85.26,85.26,0,0,0-8.18,11.83,49.65,49.65,0,0,0-5.28,13.4A59.27,59.27,0,0,0,418,517c0,.3-.05.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2,0,1.8a53.86,53.86,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.1,56.1,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.12,89.12,0,0,0,11,9.29,108.94,108.94,0,0,0,12.2,7.6c.74.41,1.49.8,2.25,1.18ZM264.89,371a67.52,67.52,0,0,1,4,5.91,48.15,48.15,0,0,1,3.26,6.35,29.3,29.3,0,0,1,2,6.82,16.71,16.71,0,0,1-.31,7,13.19,13.19,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.29,0-.59,0-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.55,35.55,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.54,11.54,0,0,1-1.53-3.16,8.19,8.19,0,0,1-.33-3.44,6.23,6.23,0,0,1,.17-.86c.07-.27.17-.56.26-.84.19-.56.4-1.11.64-1.65A21.87,21.87,0,0,1,225,384.5a29.39,29.39,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,67.77,67.77,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62q3.12-.62,6.26-1.12C263.91,369.68,264.41,370.32,264.89,371Z"/><polygon class="cls-3" points="263.04 368.59 263.42 368.53 263.77 368.99 263.39 369.05 263.04 368.59"/></g><g class="cls-1"><path class="cls-56" d="M459.91,583.77c-.74-.38-1.48-.76-2.21-1.16A110.67,110.67,0,0,1,445.59,575a88.08,88.08,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06,55.58,55.58,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,54.21,54.21,0,0,1-.78-7.07,56.47,56.47,0,0,1,1.26-14.15,48.9,48.9,0,0,1,5.23-13.19,83.86,83.86,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.34,6.82-6.73,10-10.33,1.59-1.8,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.9,18.9,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.61,28.61,0,0,0-4.3-5.83c-.82-.88-1.69-1.72-2.59-2.53-.45-.39-.89-.8-1.36-1.18l-.68-.58-.7-.58c-1.86-1.52-3.79-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95t-6.71-2.58c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.8-28.56-2.85c-9.54-.7-19.1-1.14-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a42.63,42.63,0,0,1-4.27-5.73,22.11,22.11,0,0,1-1.64-3.17,13,13,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77v-.22l0-.22,0-.22c0-.07,0-.14.05-.22a5,5,0,0,1,.26-.83,5.76,5.76,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.18,18.18,0,0,1,3-1.95c1.05-.57,2.14-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.65-2.69,1.1-.46,2.2-.93,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.74,7.74,0,0,0-1.21-3.38,14.75,14.75,0,0,0-2.28-2.77,26.2,26.2,0,0,0-2.77-2.28,46.14,46.14,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.85-2.1c-1.16-.31-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.22,0c-.09,0-.15,0-.26.07l.08,0a.67.67,0,0,1,.17,0l.22,0,.45.06.88.16q.87.18,1.74.39c1.17.27,2.32.58,3.47.9,2.31.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a47.11,47.11,0,0,1,6.14,3.69,26,26,0,0,1,2.75,2.28,14.46,14.46,0,0,1,2.26,2.74,8,8,0,0,1,1.19,3.32,2.54,2.54,0,0,1,0,.87,2.83,2.83,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.25,1.54a18.55,18.55,0,0,0-3,2,9.53,9.53,0,0,0-1.28,1.26,6,6,0,0,0-.95,1.55,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,0,0,.22l0,.22,0,.23,0,.23a8.34,8.34,0,0,0,0,1.8,13.59,13.59,0,0,0,.94,3.48,23.41,23.41,0,0,0,1.64,3.19,43.94,43.94,0,0,0,4.29,5.76c1.56,1.82,3.21,3.55,4.91,5.24,3.4,3.36,7,6.54,10.62,9.64s7.33,6.14,11.05,9.15l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a111.29,111.29,0,0,0-13.89,3.65,66.34,66.34,0,0,0-6.68,2.66,45.49,45.49,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.47,1.11-.66,1.68-.09.29-.19.57-.27.88s-.13.6-.18.9a8.78,8.78,0,0,0,.35,3.64,12.39,12.39,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09,36.33,36.33,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.8l.9,0,.9-.05a37.12,37.12,0,0,0,7.1-1.21,33.6,33.6,0,0,0,6.71-2.62,29.38,29.38,0,0,0,3.08-1.87,21.15,21.15,0,0,0,2.77-2.32,14.4,14.4,0,0,0,2.24-2.84,13.52,13.52,0,0,0,1.43-3.34,15.46,15.46,0,0,0,.37-1.77,15.82,15.82,0,0,0,.17-1.81,19.79,19.79,0,0,0-.23-3.61,30.06,30.06,0,0,0-2-6.9,47.65,47.65,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.17,2.67,13.66,4.28q3.36,1.21,6.67,2.58c2.2.92,4.37,1.89,6.51,2.94a99.24,99.24,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20.9,20.9,0,0,1,1.4,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.42,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,7-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.61,10.68a84,84,0,0,0-8.19,11.84,49.58,49.58,0,0,0-5.28,13.39,61.51,61.51,0,0,0-1.08,7.14c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.17,56.17,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,89.2,89.2,0,0,0,11,9.3,111.94,111.94,0,0,0,12.2,7.6c.75.41,1.51.8,2.27,1.19ZM263.42,374.7a69.22,69.22,0,0,1,4,5.92,48.81,48.81,0,0,1,3.27,6.35,29.48,29.48,0,0,1,2,6.82,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,33.38,33.38,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.16q-1.75-.31-3.48-.78a34.9,34.9,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.09,6.09,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,44.59,44.59,0,0,1,6.23-3.47,68.71,68.71,0,0,1,6.63-2.63,111.75,111.75,0,0,1,13.84-3.63q3.12-.61,6.26-1.12C262.44,373.42,262.94,374.06,263.42,374.7Z"/><polygon class="cls-3" points="261.57 372.32 261.95 372.26 262.3 372.72 261.92 372.78 261.57 372.32"/></g><g class="cls-1"><path class="cls-57" d="M458.47,587.47c-.74-.38-1.47-.77-2.21-1.17a109.09,109.09,0,0,1-12.11-7.58,88.08,88.08,0,0,1-10.87-9.25,69.13,69.13,0,0,1-9-11.07,56,56,0,0,1-6.18-12.8,52.85,52.85,0,0,1-1.76-6.9,54,54,0,0,1-.78-7.07,56.56,56.56,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,83.37,83.37,0,0,1,8.12-11.73c3-3.69,6.24-7.21,9.57-10.62,6.68-6.82,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.67,19.67,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.12,21.12,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.52-.45-.4-.89-.8-1.36-1.19l-.68-.58-.7-.57q-2.79-2.28-5.78-4.3A100.07,100.07,0,0,0,451.92,397c-2.16-1-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.25-1.79-28.56-2.85c-9.54-.69-19.1-1.13-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,22.65,22.65,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.72,8.72,0,0,1,0-1.77v-.22l0-.22,0-.22c0-.07,0-.14.05-.21a4.81,4.81,0,0,1,.26-.84,6.11,6.11,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,19.58,19.58,0,0,1,3-1.95c1.05-.56,2.14-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.65-2.69,1.1-.45,2.2-.92,3.28-1.45a15.73,15.73,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.59,2.59,0,0,0,0-.92,7.74,7.74,0,0,0-1.21-3.37,14.14,14.14,0,0,0-2.28-2.77,26.3,26.3,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.85-2.1c-1.16-.32-2.31-.62-3.48-.9l-1.75-.38c-.29-.06-.59-.12-.88-.16l-.45-.06-.22,0c-.09,0-.15,0-.26.06l.08,0a.39.39,0,0,1,.17,0h.22l.45.06.88.17c.58.11,1.16.24,1.74.38,1.17.28,2.32.58,3.47.9q3.47,1,6.85,2.11t6.72,2.49c2.22.9,4.4,1.88,6.52,3a47.11,47.11,0,0,1,6.14,3.69,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,8,8,0,0,1,1.19,3.32,2.55,2.55,0,0,1,0,.87,3.08,3.08,0,0,1-.31.81A5.2,5.2,0,0,1,197.4,278a15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.48-2.19,1-3.25,1.55a18.49,18.49,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,24.13,24.13,0,0,0,1.64,3.2,44.62,44.62,0,0,0,4.29,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,66.4,66.4,0,0,0-6.68,2.67,44.48,44.48,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.15,22.15,0,0,0-3.94,6c-.24.55-.47,1.12-.66,1.69-.09.29-.19.57-.27.87s-.13.6-.18.91a8.73,8.73,0,0,0,.35,3.63,12.24,12.24,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.22,1.19.12,2.39.2,3.59.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2A33.6,33.6,0,0,0,261.8,415a27.86,27.86,0,0,0,3.08-1.88,21.07,21.07,0,0,0,2.77-2.31,12,12,0,0,0,1.21-1.36,12.73,12.73,0,0,0,1-1.49,13.61,13.61,0,0,0,1.43-3.33,16.34,16.34,0,0,0,.54-3.59,19.74,19.74,0,0,0-.23-3.6,30.14,30.14,0,0,0-2-6.91,48.26,48.26,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88q7.11.9,14.19,2t14.15,2.29c9.41,1.65,18.78,3.57,28,6.09,4.6,1.25,9.17,2.66,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.51,2.93A100.51,100.51,0,0,1,464,404.8c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57,1.34,1.18c.88.79,1.73,1.62,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20.9,20.9,0,0,1,1.4,3.22,18.35,18.35,0,0,1,.76,3.42,18.84,18.84,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49,49,0,0,1-3.85,6c-1.42,1.9-2.93,3.74-4.51,5.52-3.15,3.57-6.53,7-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.34,3.42-6.59,6.95-9.61,10.68a84.47,84.47,0,0,0-8.19,11.83,49.52,49.52,0,0,0-5.28,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.31,0,.61,0,.91,0,.6,0,1.2.05,1.8a51.25,51.25,0,0,0,2.6,14.16,56.1,56.1,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.12,89.12,0,0,0,11,9.29,108.94,108.94,0,0,0,12.2,7.6c.75.41,1.51.81,2.27,1.2ZM262,378.4a67.52,67.52,0,0,1,4,5.91,49.46,49.46,0,0,1,3.27,6.35,29.77,29.77,0,0,1,2,6.82,16.66,16.66,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12,12,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,19.81,19.81,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.86,37.86,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0-.89,0h-.89c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.3-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.69,11.84,11.84,0,0,1-1.53-3.16,8.22,8.22,0,0,1-.33-3.45,6.39,6.39,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.58,45.58,0,0,1,6.23-3.46,66.29,66.29,0,0,1,6.63-2.64,111.71,111.71,0,0,1,13.84-3.62c2.08-.41,4.17-.79,6.26-1.12C261,377.11,261.5,377.75,262,378.4Z"/><polygon class="cls-3" points="260.13 376.02 260.51 375.95 260.86 376.42 260.48 376.47 260.13 376.02"/></g><g class="cls-1"><path class="cls-58" d="M457,591.35c-.74-.39-1.49-.78-2.22-1.18a108.17,108.17,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.21,9.58-10.62,6.67-6.82,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.73,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a49.35,49.35,0,0,0,3.9-6.07,29.33,29.33,0,0,0,2.7-6.73,19.67,19.67,0,0,0,.5-7.25,19,19,0,0,0-.8-3.57,20.61,20.61,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a99.48,99.48,0,0,0-12.48-7.16c-2.15-1-4.34-2-6.55-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.17-2.28s-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,8.83,8.83,0,0,1,0-1.78l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6.15,6.15,0,0,1,.93-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-1.95c1-.56,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45A16.11,16.11,0,0,0,196,282a5.35,5.35,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,3.16,3.16,0,0,0,0-.92,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38c-.3-.06-.59-.12-.89-.16a3.32,3.32,0,0,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.46.46,0,0,1,.18,0h.22l.44.06.88.17c.59.11,1.17.24,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.79,2.79,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.18,1-3.24,1.55a18.49,18.49,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.59,6.59,0,0,0-.95,1.54,4.39,4.39,0,0,0-.27.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.42,3.55,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65A67.36,67.36,0,0,0,232,387.3a45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.39,22.39,0,0,0-3.94,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.33,16.33,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.29,35.29,0,0,0,6.74,2.52c1.16.31,2.33.58,3.52.79l.88.16.89.13c.6.1,1.19.16,1.79.22,1.2.12,2.4.21,3.6.21h1.8l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,26.12,26.12,0,0,0,3.08-1.88,19.82,19.82,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.57,15.57,0,0,0,.53-3.59,19.74,19.74,0,0,0-.23-3.6,30.12,30.12,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,68.31,68.31,0,0,0-4.05-5.94c-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.48-1.9,21.76-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.51,2.88q7.11.9,14.2,2t14.15,2.29c9.41,1.65,18.77,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.93a100.39,100.39,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.57.68.57c.46.39.9.79,1.34,1.18.88.79,1.74,1.62,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,19.49,19.49,0,0,1,1.4,3.22,17.61,17.61,0,0,1,.77,3.42,18.84,18.84,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,51.55,51.55,0,0,1-3.85,6c-1.42,1.9-2.94,3.74-4.51,5.52-3.16,3.57-6.54,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.59,7-9.62,10.68a84.41,84.41,0,0,0-8.18,11.83,49.52,49.52,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.31,0,.61,0,.91,0,.6,0,1.2.05,1.8a52.43,52.43,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6c.76.41,1.53.81,2.29,1.2ZM260.47,382.27c1.43,1.9,2.78,3.87,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.28,29.28,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,13.31,13.31,0,0,1-1,1.45,13.54,13.54,0,0,1-1.18,1.32,21.07,21.07,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18l-.89.06-.89,0-.89,0h-.9c-1.19,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.59-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.91,23.91,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69A12.15,12.15,0,0,1,216,408.5a7.5,7.5,0,0,1-.16-4.3c.08-.27.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,45.46,45.46,0,0,1,6.22-3.46,65.52,65.52,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62c2.08-.41,4.17-.79,6.27-1.12C259.48,381,260,381.62,260.47,382.27Z"/><polygon class="cls-3" points="258.62 379.89 258.99 379.82 259.34 380.29 258.97 380.35 258.62 379.89"/></g><g class="cls-1"><path class="cls-59" d="M455.52,595.09c-.75-.39-1.5-.78-2.24-1.18a109.73,109.73,0,0,1-12.11-7.59,88.92,88.92,0,0,1-10.88-9.25,68.56,68.56,0,0,1-9-11.06,55.78,55.78,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56.13,56.13,0,0,1,1.26-14.16,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.12,50.12,0,0,0,3.9-6.07,29.7,29.7,0,0,0,2.7-6.73,19.72,19.72,0,0,0,.5-7.26,18.9,18.9,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.26,28.26,0,0,0-4.29-5.84c-.83-.88-1.7-1.71-2.59-2.52-.45-.39-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.58-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.07q-7.06-1.22-14.17-2.27c-4.72-.71-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.84c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12S188,322.35,184.54,319c-1.7-1.68-3.35-3.41-4.91-5.22a45.1,45.1,0,0,1-4.27-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.15,0-.22a5.4,5.4,0,0,1,.26-.84,5.91,5.91,0,0,1,.93-1.49,8.76,8.76,0,0,1,1.26-1.25,17.37,17.37,0,0,1,3-2c1-.57,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.64-2.69,1.11-.46,2.21-.93,3.28-1.46a15.16,15.16,0,0,0,3.06-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,26.51,26.51,0,0,0-2.77-2.29,47.16,47.16,0,0,0-6.15-3.68c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.29,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.9,2.3.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.51,14.51,0,0,1,2.27,2.74,7.8,7.8,0,0,1,1.18,3.32,2.81,2.81,0,0,1,0,.87,2.59,2.59,0,0,1-.32.81,4.72,4.72,0,0,1-1.15,1.33,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.6,9.6,0,0,0-1.29,1.26,6.65,6.65,0,0,0-.95,1.55,4.39,4.39,0,0,0-.27.87c0,.07,0,.15,0,.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22,22,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.22,3.55,4.92,5.24,3.4,3.36,7,6.54,10.61,9.64s7.34,6.14,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.08a111.33,111.33,0,0,0-13.89,3.66,68.28,68.28,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.68-.1.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36,36,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.15c.3.06.6.09.89.14.6.09,1.19.15,1.79.22,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.05a39,39,0,0,0,7.1-1.21,33.75,33.75,0,0,0,6.7-2.62,27.45,27.45,0,0,0,3.08-1.87,20.6,20.6,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15.46,15.46,0,0,0,.37-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,49.61,49.61,0,0,0-3.3-6.4,69.71,69.71,0,0,0-4.05-5.93c-.45-.6-.91-1.2-1.37-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.68s19.11.59,28.64,1.29,19,1.68,28.51,2.88c4.75.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94A97.89,97.89,0,0,1,461,412.41q3,2,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.17.88.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,19.13,19.13,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.54,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.44,59.44,0,0,0-1.08,7.14c0,.29-.06.59-.08.89l-.06.9c0,.61-.05,1.21-.07,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a52.43,52.43,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,112.77,112.77,0,0,0,12.19,7.6l2.31,1.21ZM259,386c1.43,1.91,2.78,3.88,4,5.92a48.75,48.75,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,33.62,33.62,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19l-.89.05-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.22-.59-.06-1.18-.12-1.77-.22l-.88-.13-.88-.16q-1.75-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.09,8.09,0,0,1-.32-3.45,6.07,6.07,0,0,1,.16-.85c.08-.28.17-.56.26-.84.19-.56.41-1.11.65-1.65a21.61,21.61,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63,111.14,111.14,0,0,1,13.83-3.63q3.12-.61,6.27-1.12C258,384.71,258.51,385.35,259,386Z"/><polygon class="cls-3" points="257.15 383.62 257.52 383.56 257.87 384.02 257.5 384.08 257.15 383.62"/></g><g class="cls-1"><path class="cls-60" d="M454.09,598.78c-.76-.39-1.52-.79-2.27-1.2A110.67,110.67,0,0,1,439.71,590a88.84,88.84,0,0,1-10.88-9.24,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56,56,0,0,1,1.26-14.15,48.9,48.9,0,0,1,5.23-13.19,84.65,84.65,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62C442,486.4,449.09,480,456,473.34c3.44-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.47,19.47,0,0,0,.5-7.25,18.09,18.09,0,0,0-.8-3.57,20.68,20.68,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.69-.58-.69-.57c-1.86-1.53-3.8-2.95-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.79-6.71-2.59c-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.38.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.58-3.35-3.42-6.84-6.69-10.41-9.87-7.14-6.38-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,23.15,23.15,0,0,1-1.63-3.17,13.23,13.23,0,0,1-.94-3.43,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.14,0-.21a4.12,4.12,0,0,1,.27-.84,5.51,5.51,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18,18,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.54,2.19-1,4.43-1.79,6.64-2.69,1.11-.45,2.21-.92,3.29-1.46a15.37,15.37,0,0,0,3.05-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.43,14.43,0,0,0-2.29-2.76,24.12,24.12,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.61-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.26,14.26,0,0,1,2.27,2.75,7.71,7.71,0,0,1,1.18,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5,5,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-1,1.54,5.16,5.16,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,45.59,45.59,0,0,0,4.28,5.77c1.56,1.81,3.22,3.54,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09A113.05,113.05,0,0,0,235.79,392a70.88,70.88,0,0,0-6.68,2.66,46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.27,22.27,0,0,0-3.95,6c-.24.55-.46,1.11-.65,1.69q-.15.42-.27.87a7.17,7.17,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.54,35.54,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.16.89.13c.6.09,1.2.15,1.79.22,1.2.11,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.26,37.26,0,0,0,7.1-1.21,33.72,33.72,0,0,0,6.7-2.61,27.53,27.53,0,0,0,3.08-1.88,20.6,20.6,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,15.6,15.6,0,0,0,.16-1.81,19.85,19.85,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.67s19.11.58,28.64,1.28,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.21,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a99.12,99.12,0,0,1,12.37,7.12q3,2,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.18.89.79,1.74,1.61,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.75-4.51,5.53-3.16,3.57-6.54,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68A84.77,84.77,0,0,0,417,515.2a49.52,49.52,0,0,0-5.28,13.4,59,59,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6,0,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a52.43,52.43,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7A57,57,0,0,0,419.3,570a69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,109.73,109.73,0,0,0,12.19,7.6l2.34,1.23ZM257.54,389.68a69.81,69.81,0,0,1,4,5.91,48.75,48.75,0,0,1,3.26,6.35,29.5,29.5,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.42,32.42,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19c-.3,0-.59.05-.89.05l-.89,0H240c-1.18,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.15c-1.17-.22-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.09,8.09,0,0,1-.32-3.45,6.35,6.35,0,0,1,.16-.85c.08-.27.17-.56.27-.84a16.54,16.54,0,0,1,.64-1.65,21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61,44.48,44.48,0,0,1,6.22-3.47A67.88,67.88,0,0,1,236,392.5a112,112,0,0,1,13.83-3.62c2.09-.42,4.18-.79,6.27-1.13C256.56,388.39,257.05,389,257.54,389.68Z"/><polygon class="cls-3" points="255.69 387.29 256.06 387.23 256.41 387.69 256.04 387.75 255.69 387.29"/></g><g class="cls-1"><path class="cls-61" d="M452.59,602.66c-.77-.4-1.53-.8-2.28-1.21a109.86,109.86,0,0,1-12.12-7.59,87.87,87.87,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07,56.41,56.41,0,0,1-6.18-12.8,52.82,52.82,0,0,1-1.75-6.9,50.8,50.8,0,0,1-.78-7.07,55.55,55.55,0,0,1,1.26-14.15,48.87,48.87,0,0,1,5.22-13.19,83.86,83.86,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a50.19,50.19,0,0,0,3.91-6.07,30,30,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.53-.45-.39-.89-.8-1.35-1.18l-.69-.58-.7-.57c-1.86-1.53-3.79-2.95-5.78-4.3A98.83,98.83,0,0,0,446,412.18c-2.15-1.05-4.35-2-6.56-2.94s-4.45-1.79-6.7-2.59c-4.52-1.62-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28.05-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.79-28.56-2.85c-9.54-.7-19.1-1.14-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.4-9.87-7.14-6.38-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,24.4,24.4,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6,6,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.5,18.5,0,0,1,3-1.95c1-.57,2.13-1.07,3.22-1.54,2.19-.95,4.43-1.79,6.65-2.69,1.11-.45,2.21-.92,3.28-1.46a14.82,14.82,0,0,0,3.05-1.9,5,5,0,0,0,1.18-1.37A2.84,2.84,0,0,0,193,291a2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.81,14.81,0,0,0-2.29-2.76,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.49-4.56-1.46-6.86-2.1c-1.15-.31-2.31-.61-3.48-.89-.58-.14-1.16-.27-1.75-.38l-.88-.17-.45-.06h-.22c-.08,0-.15,0-.25.06l.07,0h.17l.23,0,.44.06.88.16,1.75.39c1.16.28,2.31.58,3.47.9q3.45,1,6.85,2.1c2.26.77,4.5,1.59,6.72,2.49s4.39,1.88,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.73,7.73,0,0,1,1.19,3.31,2.8,2.8,0,0,1,0,.87,3.41,3.41,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.06.53-2.16,1-3.27,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.21,18.21,0,0,0-3,2,9,9,0,0,0-1.28,1.27,5.82,5.82,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87c0,.07,0,.15,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,44.64,44.64,0,0,0,4.28,5.77c1.56,1.81,3.21,3.54,4.91,5.23,3.4,3.36,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.66,1.69-.09.28-.19.57-.27.87s-.13.6-.17.9a8.77,8.77,0,0,0,.34,3.64,12.55,12.55,0,0,0,1.59,3.27,16.39,16.39,0,0,0,2.36,2.76A24.4,24.4,0,0,0,221,430a35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.9l.9,0,.91,0c.3,0,.59,0,.89-.06a37.12,37.12,0,0,0,7.1-1.21,33.57,33.57,0,0,0,6.71-2.61,28.46,28.46,0,0,0,3.08-1.88,21.92,21.92,0,0,0,2.78-2.32,14.4,14.4,0,0,0,2.24-2.84,13.49,13.49,0,0,0,1.42-3.34,13.27,13.27,0,0,0,.38-1.77,15.6,15.6,0,0,0,.16-1.81,19.85,19.85,0,0,0-.23-3.61,30.06,30.06,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.47,14.14,2.3c9.41,1.65,18.78,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.59s4.37,1.89,6.51,2.93A99.24,99.24,0,0,1,458,420c2,1.34,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.66,19.92-3.34,3.43-6.59,7-9.61,10.68a84.51,84.51,0,0,0-8.18,11.84,49.22,49.22,0,0,0-5.29,13.4,61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3A107.91,107.91,0,0,0,450,602c.78.42,1.56.83,2.35,1.23ZM256,393.55a69.7,69.7,0,0,1,4,5.91,48.81,48.81,0,0,1,3.27,6.35,29.62,29.62,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.48,13.48,0,0,1-1.39,3.24,14.45,14.45,0,0,1-1,1.45,13.4,13.4,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,26.7,26.7,0,0,1-3,1.84,32.12,32.12,0,0,1-6.62,2.58,37.16,37.16,0,0,1-7,1.19c-.29,0-.59.05-.89.05l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.23l-.88-.13-.88-.15c-1.17-.22-2.33-.48-3.48-.79a34.9,34.9,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61A44.59,44.59,0,0,1,227.8,399a67.88,67.88,0,0,1,6.64-2.63,111.1,111.1,0,0,1,13.83-3.62c2.08-.42,4.17-.79,6.27-1.13C255,392.26,255.54,392.9,256,393.55Z"/><polygon class="cls-3" points="254.18 391.16 254.55 391.1 254.9 391.56 254.53 391.62 254.18 391.16"/></g><g class="cls-1"><path class="cls-62" d="M451.14,606.4c-.77-.4-1.54-.8-2.3-1.21a110.8,110.8,0,0,1-12.12-7.59,88.82,88.82,0,0,1-10.87-9.25,68.7,68.7,0,0,1-9-11.07,56.21,56.21,0,0,1-6.18-12.8,52.67,52.67,0,0,1-1.75-6.89,51.11,51.11,0,0,1-.78-7.08,55.63,55.63,0,0,1,1.26-14.15,48.94,48.94,0,0,1,5.22-13.18,83.28,83.28,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.63C439,494,446.1,487.6,453,480.94c3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.31,50.31,0,0,0,3.91-6.08,29.31,29.31,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.3a100.12,100.12,0,0,0-12.48-7.15c-2.15-1.05-4.35-2-6.56-2.95s-4.45-1.78-6.7-2.59c-4.52-1.61-9.1-3-13.72-4.27-9.24-2.52-18.63-4.42-28.05-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.24-1.79-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.4-9.88C227.84,370,220.42,364,213,358l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,9.84,9.84,0,0,1,1.26-1.24,17.85,17.85,0,0,1,3-1.95c1-.57,2.13-1.07,3.22-1.55,2.19-.95,4.43-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.87,14.87,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.25.06l.07,0a.67.67,0,0,1,.17,0l.23,0,.44.06c.29,0,.58.1.88.16l1.75.38c1.16.28,2.31.58,3.47.9,2.3.64,4.58,1.35,6.85,2.11s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47.61,47.61,0,0,1,6.13,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.82,7.82,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,3.34,3.34,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.06.52-2.16,1-3.27,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.82,18.82,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6,6,0,0,0-.95,1.54,5.51,5.51,0,0,0-.28.87c0,.08,0,.15,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.4,3.37,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.4q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,64.05,64.05,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69-.09.29-.19.57-.27.87a9.12,9.12,0,0,0-.17.91,8.79,8.79,0,0,0,.34,3.64,12.86,12.86,0,0,0,1.59,3.27,17.22,17.22,0,0,0,2.36,2.76,24.56,24.56,0,0,0,5.93,4.08,35.63,35.63,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.21h1.81l.9,0c.3,0,.59,0,.89-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,21,21,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,15.32,15.32,0,0,0,1-1.5,14.14,14.14,0,0,0,1.8-5.11,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.8,29.8,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.54-.63,19.1-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.57,28,6.09q6.92,1.88,13.66,4.28c2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.08,20.08,0,0,1,1.4,3.23,18.1,18.1,0,0,1,.77,3.41,19,19,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.68A84.41,84.41,0,0,0,414,522.8a49.35,49.35,0,0,0-5.29,13.4,61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.1,52.1,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61c.78.42,1.58.83,2.37,1.24ZM254.56,397.28c1.43,1.91,2.78,3.88,4,5.91a48.22,48.22,0,0,1,3.27,6.35,29.7,29.7,0,0,1,2,6.83,16.84,16.84,0,0,1-.3,7,13,13,0,0,1-1.39,3.23,13.52,13.52,0,0,1-1,1.46A13.29,13.29,0,0,1,260,429.4a19.81,19.81,0,0,1-2.73,2.27,26.77,26.77,0,0,1-3,1.85,33.29,33.29,0,0,1-6.62,2.58,37.15,37.15,0,0,1-7,1.18c-.29,0-.59.05-.89.06l-.89,0H237c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,11.78,11.78,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.66a22,22,0,0,1,3.87-5.91,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47A67.94,67.94,0,0,1,233,400.1a111.1,111.1,0,0,1,13.83-3.62q3.12-.62,6.27-1.12C253.57,396,254.07,396.63,254.56,397.28Z"/><polygon class="cls-3" points="252.71 394.9 253.08 394.84 253.43 395.3 253.06 395.36 252.71 394.9"/></g><g class="cls-1"><path class="cls-63" d="M449.75,610q-1.11-.57-2.22-1.17a110.67,110.67,0,0,1-12.11-7.59A88.08,88.08,0,0,1,424.55,592a68.62,68.62,0,0,1-9-11.06,56.19,56.19,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.52,52.52,0,0,1-.77-7.07A56.12,56.12,0,0,1,408.11,540a49.29,49.29,0,0,1,5.23-13.18,83.28,83.28,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.9,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.19,50.19,0,0,0,3.91-6.07,30.14,30.14,0,0,0,2.69-6.73,19.73,19.73,0,0,0,.51-7.26,18.9,18.9,0,0,0-.8-3.56,21.22,21.22,0,0,0-1.46-3.35,28.3,28.3,0,0,0-4.3-5.84c-.82-.88-1.69-1.71-2.59-2.52-.45-.39-.89-.8-1.35-1.18l-.69-.59-.7-.57c-1.86-1.52-3.79-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95T429.92,414c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28-6.07q-7.08-1.22-14.17-2.27c-4.73-.71-9.47-1.38-14.21-2q-14.23-1.78-28.56-2.84c-9.54-.7-19.1-1.14-28.66-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.45-2.42-3-5-5.82-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.13-6.37-14.56-12.4-22-18.39l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a43.27,43.27,0,0,1-4.27-5.73,22.11,22.11,0,0,1-1.64-3.17,13.14,13.14,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.15,0-.22a5.4,5.4,0,0,1,.26-.84,6.17,6.17,0,0,1,.92-1.49,9.92,9.92,0,0,1,1.26-1.25,18.18,18.18,0,0,1,3-1.95c1-.57,2.14-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.65-2.69,1.1-.46,2.21-.93,3.28-1.46a14.82,14.82,0,0,0,3-1.9,5,5,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.85,7.85,0,0,0-1.2-3.38,15.2,15.2,0,0,0-2.29-2.77,27.59,27.59,0,0,0-2.77-2.29,47.16,47.16,0,0,0-6.15-3.68c-2.13-1.09-4.32-2.06-6.54-3s-4.46-1.73-6.72-2.49-4.56-1.46-6.86-2.1c-1.16-.31-2.31-.62-3.48-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.26.06l.08,0a.67.67,0,0,1,.17,0l.22,0,.45.06.88.16q.87.18,1.74.39c1.17.27,2.32.58,3.47.9,2.31.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.53,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.46,14.46,0,0,1,2.26,2.74,8,8,0,0,1,1.19,3.32,2.54,2.54,0,0,1-.05.87,2.83,2.83,0,0,1-.31.81,4.89,4.89,0,0,1-1.15,1.33,14.76,14.76,0,0,1-3,1.88c-1.07.53-2.16,1-3.27,1.45-2.21.9-4.46,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.21,18.21,0,0,0-3,2,9.53,9.53,0,0,0-1.28,1.26,6,6,0,0,0-1,1.55,5.19,5.19,0,0,0-.28.87c0,.07,0,.15,0,.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,23,23,0,0,0,1.64,3.2,43.94,43.94,0,0,0,4.29,5.76c1.56,1.82,3.21,3.55,4.91,5.24,3.4,3.36,7,6.54,10.62,9.64s7.34,6.14,11,9.14l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41-2,.33-4,.69-6,1.08a111.33,111.33,0,0,0-13.89,3.66,66.34,66.34,0,0,0-6.68,2.66,45.49,45.49,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22.1,22.1,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69-.09.29-.19.57-.27.87s-.13.61-.17.91a8.61,8.61,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.65,24.65,0,0,0,5.94,4.09A36.33,36.33,0,0,0,225,439.9c1.16.31,2.33.58,3.51.79l.89.15c.29.06.59.09.89.14.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.8l.9,0,.9-.05a38.75,38.75,0,0,0,7.1-1.21,33.6,33.6,0,0,0,6.71-2.62,29.38,29.38,0,0,0,3.08-1.87,21.92,21.92,0,0,0,2.78-2.32,14,14,0,0,0,1.2-1.35,12.81,12.81,0,0,0,1-1.49,13.88,13.88,0,0,0,1.42-3.34,12.11,12.11,0,0,0,.37-1.77,15.82,15.82,0,0,0,.17-1.81,19.79,19.79,0,0,0-.23-3.61,30.06,30.06,0,0,0-2-6.9,49.55,49.55,0,0,0-3.29-6.4c-1.25-2-2.61-4-4-5.93-.45-.6-.91-1.2-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.68s19.1.59,28.63,1.29,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.58s4.37,1.89,6.51,2.94a98,98,0,0,1,12.38,7.12c2,1.34,3.88,2.76,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.61,27.61,0,0,1,4.18,5.69,20,20,0,0,1,1.4,3.22,18,18,0,0,1,.27,10.39,29.14,29.14,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,7-10,10.27-6.86,6.65-13.95,13.07-20.65,19.92-3.34,3.43-6.59,7-9.61,10.68a84,84,0,0,0-8.19,11.84,49.58,49.58,0,0,0-5.28,13.39,61.51,61.51,0,0,0-1.08,7.14c0,.29-.05.59-.07.89l-.06.9c0,.61-.05,1.21-.08,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a52.09,52.09,0,0,0,2.6,14.15,56.58,56.58,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,90,90,0,0,0,11,9.3,111.94,111.94,0,0,0,12.2,7.6c.76.41,1.52.81,2.29,1.2ZM253.25,400.89a69.22,69.22,0,0,1,4,5.92,48.81,48.81,0,0,1,3.27,6.35,29.48,29.48,0,0,1,2,6.82,16.67,16.67,0,0,1-.31,7,13.26,13.26,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,20.55,20.55,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,33.14,33.14,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19l-.89.05-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.22-.59-.06-1.18-.12-1.77-.22l-.88-.13-.88-.16q-1.76-.31-3.48-.78a34.9,34.9,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,15.9,15.9,0,0,1-2.29-2.69,11.63,11.63,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.65a22.08,22.08,0,0,1,3.87-5.92,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,66.22,66.22,0,0,1,6.63-2.63,111.75,111.75,0,0,1,13.84-3.63q3.12-.61,6.26-1.12C252.27,399.6,252.77,400.24,253.25,400.89Z"/><polygon class="cls-3" points="251.41 398.51 251.78 398.45 252.13 398.91 251.75 398.97 251.41 398.51"/></g><g class="cls-1"><path class="cls-64" d="M448.25,613.85,446,612.67a109.73,109.73,0,0,1-12.11-7.59A88.92,88.92,0,0,1,423,595.83a68.56,68.56,0,0,1-9-11.06,55.58,55.58,0,0,1-6.18-12.8,53.27,53.27,0,0,1-1.76-6.9,52.54,52.54,0,0,1-.78-7.07,56.13,56.13,0,0,1,1.26-14.16,49,49,0,0,1,5.23-13.18,84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.64-19.9,3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a50.12,50.12,0,0,0,3.9-6.07,29.7,29.7,0,0,0,2.7-6.73,19.51,19.51,0,0,0,.5-7.26,18.9,18.9,0,0,0-.8-3.56,20.34,20.34,0,0,0-1.46-3.35,28.53,28.53,0,0,0-4.29-5.84c-.83-.87-1.7-1.71-2.59-2.52-.45-.39-.9-.8-1.36-1.18l-.69-.59-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.29a98.83,98.83,0,0,0-12.47-7.16q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.58-4.51-1.62-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.07q-7.06-1.22-14.17-2.27c-4.72-.71-9.46-1.38-14.21-2q-14.24-1.78-28.55-2.84c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.45-2.41-3-5-5.82-7.7-8.57-3.35-3.42-6.85-6.69-10.41-9.88-7.14-6.37-14.56-12.4-22-18.39l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.22a45.1,45.1,0,0,1-4.27-5.73,22.06,22.06,0,0,1-1.63-3.17,13.16,13.16,0,0,1-.94-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22c0-.07,0-.15,0-.22a5.4,5.4,0,0,1,.26-.84,5.91,5.91,0,0,1,.93-1.49,8.76,8.76,0,0,1,1.26-1.25,17.37,17.37,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.64-2.69,1.11-.46,2.21-.93,3.28-1.46a15.16,15.16,0,0,0,3.06-1.9,5.19,5.19,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,3.09,3.09,0,0,0,0-.91,8,8,0,0,0-1.21-3.38,14.8,14.8,0,0,0-2.29-2.77,27.48,27.48,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.68c-2.13-1.09-4.32-2.06-6.53-3s-4.46-1.73-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16-.44-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0c.15,0,.29,0,.44.06l.88.16c.59.12,1.17.25,1.75.39,1.16.27,2.32.58,3.47.9,2.3.63,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.51,14.51,0,0,1,2.27,2.74,7.8,7.8,0,0,1,1.18,3.32,2.81,2.81,0,0,1,0,.87,2.59,2.59,0,0,1-.32.81,4.72,4.72,0,0,1-1.15,1.33,15,15,0,0,1-3,1.88c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.6,9.6,0,0,0-1.29,1.26,6.65,6.65,0,0,0-.95,1.55,4.39,4.39,0,0,0-.27.87c0,.07,0,.15-.05.22l0,.22,0,.23,0,.22a9.11,9.11,0,0,0,0,1.81,13.59,13.59,0,0,0,.94,3.48,22.39,22.39,0,0,0,1.65,3.19,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.22,3.55,4.92,5.24,3.4,3.36,7,6.54,10.61,9.64s7.34,6.14,11.06,9.15l11.17,9c7.44,6,14.85,12,22,18.41,3.55,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.08A111.33,111.33,0,0,0,230,407.13a68.28,68.28,0,0,0-6.68,2.66A46.08,46.08,0,0,0,217,413.3a30.62,30.62,0,0,0-5.48,4.69,22.24,22.24,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.68-.1.29-.19.57-.27.87a7.32,7.32,0,0,0-.18.91,8.61,8.61,0,0,0,.35,3.64,12.09,12.09,0,0,0,1.59,3.27,17.23,17.23,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,36,36,0,0,0,6.74,2.52c1.16.31,2.34.58,3.52.79l.88.15c.3.06.6.09.89.14.6.09,1.2.15,1.79.22,1.2.11,2.4.2,3.6.21H236l.9,0,.9-.05a38.9,38.9,0,0,0,7.1-1.21,33.75,33.75,0,0,0,6.7-2.62,27.45,27.45,0,0,0,3.08-1.87,20.6,20.6,0,0,0,2.78-2.32,15.53,15.53,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15.46,15.46,0,0,0,.37-1.77,15.8,15.8,0,0,0,.16-1.81,19.79,19.79,0,0,0-.23-3.61,29.55,29.55,0,0,0-2-6.9,49.61,49.61,0,0,0-3.3-6.4,69.71,69.71,0,0,0-4.05-5.93c-.45-.6-.91-1.2-1.37-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.64-.68s19.11.59,28.64,1.29,19,1.68,28.51,2.88c4.75.6,9.47,1.27,14.2,2s9.44,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.22,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12q3,2,5.72,4.27l.69.56.68.58c.46.38.9.78,1.34,1.17.88.8,1.74,1.62,2.55,2.48a27.93,27.93,0,0,1,4.17,5.69,19.13,19.13,0,0,1,1.4,3.22,17.45,17.45,0,0,1,.77,3.42,18.85,18.85,0,0,1-.49,7,29.14,29.14,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.54,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.35,3.43-6.59,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84,49.58,49.58,0,0,0-5.28,13.39,59.44,59.44,0,0,0-1.08,7.14c0,.29-.06.59-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.6,0,1.21.05,1.81a52.43,52.43,0,0,0,.8,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,13,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,112.77,112.77,0,0,0,12.19,7.6c.77.41,1.53.81,2.3,1.2ZM251.74,404.76c1.43,1.91,2.78,3.88,4,5.92A48.75,48.75,0,0,1,259,417a29,29,0,0,1,2,6.82,16.83,16.83,0,0,1-.3,7,13.26,13.26,0,0,1-1.39,3.24,14.36,14.36,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,33.62,33.62,0,0,1-6.63,2.58,37.2,37.2,0,0,1-7,1.19l-.89.05-.89,0h-1.79c-1.19,0-2.37-.1-3.56-.22-.59-.06-1.18-.12-1.77-.22l-.88-.13-.88-.16q-1.76-.31-3.48-.78a35.16,35.16,0,0,1-6.66-2.5,23.94,23.94,0,0,1-5.83-4,16.37,16.37,0,0,1-2.29-2.69,11.93,11.93,0,0,1-1.53-3.15,8.09,8.09,0,0,1-.32-3.45,6.07,6.07,0,0,1,.16-.85q.12-.42.27-.84a16.54,16.54,0,0,1,.64-1.65,21.61,21.61,0,0,1,3.87-5.92,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,65.45,65.45,0,0,1,6.64-2.63A111.14,111.14,0,0,1,244,404q3.12-.61,6.27-1.12C250.76,403.47,251.25,404.12,251.74,404.76Z"/><polygon class="cls-3" points="249.89 402.38 250.26 402.32 250.61 402.78 250.24 402.84 249.89 402.38"/></g><g class="cls-1"><path class="cls-65" d="M446.8,617.59c-.75-.39-1.5-.78-2.25-1.19a109.09,109.09,0,0,1-12.11-7.58,88.92,88.92,0,0,1-10.88-9.25,69.07,69.07,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,48.7,48.7,0,0,1,5.23-13.18,84.15,84.15,0,0,1,8.11-11.73c3-3.69,6.24-7.2,9.58-10.62,6.67-6.82,13.77-13.24,20.64-19.89,3.44-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73,19.45,19.45,0,0,0,.5-7.25,18.25,18.25,0,0,0-.8-3.57,21.48,21.48,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.95-5.78-4.3a101.34,101.34,0,0,0-12.47-7.16c-2.16-1.05-4.35-2-6.56-2.94s-4.45-1.78-6.71-2.59c-4.51-1.61-9.09-3-13.71-4.28-9.25-2.51-18.64-4.42-28.06-6.06-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.76,1.27-22.08,2.46-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.13s-7.21-6.27-10.62-9.62c-1.7-1.68-3.35-3.4-4.91-5.21a45.83,45.83,0,0,1-4.27-5.73,22.59,22.59,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,9.63,9.63,0,0,1,0-1.78l0-.22,0-.22,0-.22c0-.07,0-.14,0-.21a4.12,4.12,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.64,18.64,0,0,1,3-2c1.05-.56,2.13-1.06,3.23-1.54,2.19-1,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.28-1.45a15.62,15.62,0,0,0,3.06-1.9,5.35,5.35,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,3.16,3.16,0,0,0,0-.92,8,8,0,0,0-1.21-3.37,14.19,14.19,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.09-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.47-6.86-2.1c-1.15-.32-2.31-.62-3.47-.9l-1.75-.38c-.3-.06-.59-.12-.89-.16a3.11,3.11,0,0,0-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.46.46,0,0,1,.18,0h.22l.44.06.88.17c.59.11,1.17.25,1.75.38,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.11s4.51,1.59,6.72,2.49,4.39,1.88,6.52,3a47,47,0,0,1,6.13,3.69,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,2.79,2.79,0,0,1-.32.81,4.86,4.86,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.22.9-4.46,1.73-6.66,2.68-1.1.48-2.18,1-3.24,1.55a18.49,18.49,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.59,6.59,0,0,0-.95,1.54,5.16,5.16,0,0,0-.27.87c0,.08,0,.15-.05.23l0,.22,0,.22,0,.23a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.22,3.55,4.92,5.23,3.4,3.36,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.85,12,22,18.42,3.55,3.19,7,6.46,10.38,9.87,2.63,2.7,5.18,5.48,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66,65.86,65.86,0,0,0-6.68,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.19,22.19,0,0,0-4,6c-.24.55-.46,1.12-.65,1.69-.1.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09A35.54,35.54,0,0,0,222,447.5c1.16.31,2.34.58,3.52.79l.88.16.89.13c.6.1,1.2.16,1.79.23,1.2.11,2.4.2,3.6.2h1.8l.9,0,.9-.06a38,38,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,26.12,26.12,0,0,0,3.08-1.88,19.82,19.82,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.6,15.6,0,0,0,.53-3.58,19.79,19.79,0,0,0-.23-3.61,29.63,29.63,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.8,28.64-.67s19.11.58,28.64,1.29,19,1.67,28.52,2.87q7.11.9,14.19,2t14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.16,2.66,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.93a99.19,99.19,0,0,1,12.37,7.13c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.57c.46.39.9.79,1.34,1.18.89.79,1.74,1.62,2.55,2.48a27.6,27.6,0,0,1,4.17,5.68,20.42,20.42,0,0,1,1.41,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.9-2.94,3.74-4.51,5.52-3.16,3.57-6.54,6.95-10,10.28-6.86,6.64-14,13.06-20.65,19.92-3.35,3.42-6.59,7-9.62,10.68A84.41,84.41,0,0,0,409.69,534a49.65,49.65,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.06.6-.08.9l-.06.9c0,.6-.05,1.2-.07,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.26,52.26,0,0,0,.8,7.17,54.27,54.27,0,0,0,1.79,7A56.51,56.51,0,0,0,412,588.86,69.54,69.54,0,0,0,421.11,600a89.21,89.21,0,0,0,11,9.29,109.73,109.73,0,0,0,12.19,7.6c.77.42,1.55.82,2.32,1.22ZM250.27,408.5a69.81,69.81,0,0,1,4,5.91,49.39,49.39,0,0,1,3.26,6.35,29.79,29.79,0,0,1,2,6.82,17,17,0,0,1-.31,7,13.19,13.19,0,0,1-1.39,3.23,13.44,13.44,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,38,38,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0-.89,0h-.9c-1.18,0-2.37-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22-.29-.05-.58-.08-.88-.14l-.88-.15c-1.17-.21-2.33-.48-3.48-.79a35.82,35.82,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,17.24,17.24,0,0,1-2.29-2.69,12.15,12.15,0,0,1-1.53-3.16,8,8,0,0,1-.32-3.44,6.21,6.21,0,0,1,.16-.86c.08-.27.17-.56.27-.84a16.54,16.54,0,0,1,.64-1.65,21.41,21.41,0,0,1,3.87-5.91,29.39,29.39,0,0,1,5.4-4.61A45.46,45.46,0,0,1,222,414a67.94,67.94,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62c2.09-.41,4.17-.78,6.27-1.12C249.29,407.21,249.78,407.85,250.27,408.5Z"/><polygon class="cls-3" points="248.42 406.12 248.79 406.06 249.14 406.52 248.77 406.57 248.42 406.12"/></g><g class="cls-1"><path class="cls-66" d="M445.37,621.28l-2.28-1.2A110.67,110.67,0,0,1,431,612.49a88.92,88.92,0,0,1-10.88-9.25,68.64,68.64,0,0,1-9-11.07,55.38,55.38,0,0,1-6.18-12.8,50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15,49,49,0,0,1,5.23-13.18A84.05,84.05,0,0,1,417,526.35c3-3.7,6.24-7.21,9.58-10.63,6.67-6.82,13.77-13.23,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.58a51.55,51.55,0,0,0,3.91-6.08,29.76,29.76,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,18.27,18.27,0,0,0-.81-3.57,21.48,21.48,0,0,0-1.45-3.34,28.4,28.4,0,0,0-4.3-5.84c-.83-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.69-.58-.69-.57c-1.86-1.52-3.8-2.94-5.78-4.3a100,100,0,0,0-12.47-7.15q-3.24-1.57-6.56-2.95c-2.22-.92-4.45-1.78-6.71-2.59-4.51-1.61-9.09-3-13.71-4.27-9.24-2.52-18.63-4.42-28.06-6.07-4.71-.82-9.44-1.57-14.16-2.28s-9.47-1.37-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.69.71c-7.38.49-14.76,1.26-22.08,2.45-2.41-3-5-5.83-7.7-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.72-3-7.42-6-11.06-9.12s-7.21-6.27-10.62-9.63c-1.69-1.67-3.35-3.4-4.9-5.21a44.94,44.94,0,0,1-4.28-5.73,22.06,22.06,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a2.07,2.07,0,0,0,0-.22,4.12,4.12,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.69,8.69,0,0,1,1.26-1.24,17.77,17.77,0,0,1,3-1.95c1-.57,2.13-1.07,3.23-1.55,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.45a15.55,15.55,0,0,0,3-1.9,5.35,5.35,0,0,0,1.18-1.37,2.82,2.82,0,0,0,.37-1.77,8,8,0,0,0-1.21-3.37,14.49,14.49,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48,48,0,0,0-6.16-3.69c-2.13-1.08-4.31-2.06-6.53-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.17-.27-1.75-.39l-.89-.16c-.14,0-.29-.05-.44-.06l-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0l.22,0a3.11,3.11,0,0,1,.44.06c.3,0,.59.1.88.16l1.75.38c1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.28,46.28,0,0,1,6.13,3.68,25.21,25.21,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.83,2.83,0,0,1,0,.87,3,3,0,0,1-.31.81,5.08,5.08,0,0,1-1.16,1.33,15.13,15.13,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.22.9-4.46,1.73-6.66,2.68-1.09.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,10.31,10.31,0,0,0-1.29,1.27,6.59,6.59,0,0,0-.95,1.54,5.46,5.46,0,0,0-.27.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23,0,.22a10,10,0,0,0,0,1.81,13,13,0,0,0,1,3.47,22.44,22.44,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.61,9.65s7.34,6.13,11.06,9.14l11.17,9c7.44,6,14.86,12,22,18.42,3.55,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.4q-3,.49-6,1.09a110.87,110.87,0,0,0-13.89,3.66,65.11,65.11,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.58,22.58,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.63,8.63,0,0,0,.35,3.64,12.23,12.23,0,0,0,1.59,3.27,17.68,17.68,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,35.54,35.54,0,0,0,6.74,2.52c1.16.32,2.34.58,3.52.79l.88.16.9.13c.59.1,1.19.16,1.78.23,1.2.11,2.4.2,3.6.21H233l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,15.53,15.53,0,0,0,1.21-1.35,13.75,13.75,0,0,0,1-1.5,13.45,13.45,0,0,0,1.43-3.33,15.19,15.19,0,0,0,.37-1.78,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.77,29.77,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39c-1.24-2-2.6-4-4-5.94l-1.38-1.78c7.2-1.15,14.47-1.89,21.75-2.38,9.53-.63,19.09-.8,28.64-.67s19.11.59,28.64,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.44,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.16,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.89,97.89,0,0,1,12.37,7.12c2,1.34,3.89,2.75,5.72,4.26l.69.57.68.58c.46.38.9.78,1.34,1.17.89.8,1.74,1.62,2.55,2.48a28.15,28.15,0,0,1,4.17,5.68,20.12,20.12,0,0,1,1.41,3.23,18.08,18.08,0,0,1,.76,3.41,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,6.94-10,10.27-6.86,6.64-14,13.07-20.65,19.92-3.34,3.42-6.59,7-9.62,10.68a85.26,85.26,0,0,0-8.18,11.83,49.65,49.65,0,0,0-5.28,13.4,59.58,59.58,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6-.05,1.2-.07,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a51.25,51.25,0,0,0,2.6,14.16,56.47,56.47,0,0,0,6.27,12.94,69.54,69.54,0,0,0,9.08,11.16,90,90,0,0,0,11,9.29,111.31,111.31,0,0,0,12.19,7.61c.78.42,1.57.82,2.35,1.23ZM248.81,412.17q2.16,2.86,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.73,29.73,0,0,1,2,6.83,17,17,0,0,1-.31,7,13,13,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.6-.07-1.19-.13-1.77-.22l-.89-.13-.88-.16c-1.17-.21-2.33-.48-3.47-.78a35.68,35.68,0,0,1-6.67-2.5,24.42,24.42,0,0,1-5.83-4,16.24,16.24,0,0,1-2.28-2.69,11.81,11.81,0,0,1-1.54-3.15A8.09,8.09,0,0,1,204,435a8,8,0,0,1,.16-.85q.12-.42.27-.84a17.72,17.72,0,0,1,.64-1.66A21.79,21.79,0,0,1,209,425.7a29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,67.94,67.94,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62q3.13-.62,6.27-1.12C247.83,410.88,248.32,411.52,248.81,412.17Z"/><polygon class="cls-3" points="246.96 409.79 247.34 409.73 247.68 410.19 247.31 410.25 246.96 409.79"/></g><g class="cls-1"><path class="cls-67" d="M443.87,625.16,441.58,624a110.8,110.8,0,0,1-12.12-7.59,88.82,88.82,0,0,1-10.87-9.25,68.62,68.62,0,0,1-9-11.06,56.48,56.48,0,0,1-6.18-12.81,52.67,52.67,0,0,1-1.75-6.89,51.11,51.11,0,0,1-.78-7.08,55.63,55.63,0,0,1,1.26-14.15,48.94,48.94,0,0,1,5.22-13.18,83.28,83.28,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.63,6.68-6.82,13.77-13.23,20.65-19.89,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.54-5.58a50.31,50.31,0,0,0,3.91-6.08,29.31,29.31,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.3a100.12,100.12,0,0,0-12.48-7.15c-2.15-1.05-4.35-2-6.56-2.95s-4.45-1.78-6.7-2.59c-4.52-1.61-9.1-3-13.72-4.27-9.24-2.52-18.63-4.42-28.05-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.24-1.79-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.34-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.67-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.18,23.18,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,9.84,9.84,0,0,1,1.26-1.24,17.85,17.85,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.22-1.55,2.19-.95,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3.05-1.9,5.17,5.17,0,0,0,1.18-1.37,2.84,2.84,0,0,0,.33-.85,2.79,2.79,0,0,0,.05-.91,8,8,0,0,0-1.21-3.38,14.87,14.87,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.45-.06-.22,0c-.08,0-.15,0-.25.06l.07,0a.72.72,0,0,1,.18,0l.22,0,.44.06c.29,0,.59.1.88.16.58.12,1.17.25,1.75.39,1.16.27,2.31.57,3.47.89,2.3.64,4.58,1.35,6.85,2.11s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47.61,47.61,0,0,1,6.13,3.68,27.26,27.26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.82,7.82,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,3.34,3.34,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.82,18.82,0,0,0-3,2,9.6,9.6,0,0,0-1.28,1.27,6,6,0,0,0-.95,1.54,5.51,5.51,0,0,0-.28.87,1.85,1.85,0,0,1,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,43.87,43.87,0,0,0,4.28,5.76c1.56,1.82,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11.05,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.19,5.48,7.55,8.41-2,.33-4,.68-6,1.08a111.33,111.33,0,0,0-13.89,3.66,66.34,66.34,0,0,0-6.68,2.66,45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.66,1.69l-.27.87a9.12,9.12,0,0,0-.17.91,8.79,8.79,0,0,0,.34,3.64,12.7,12.7,0,0,0,1.59,3.27,17.22,17.22,0,0,0,2.36,2.76,24.56,24.56,0,0,0,5.93,4.08,36.36,36.36,0,0,0,6.75,2.53q1.74.46,3.51.78l.89.16.89.14c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h1.81l.9,0c.3,0,.59,0,.89-.06a37.9,37.9,0,0,0,7.1-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,21,21,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,15.32,15.32,0,0,0,1-1.5,14.14,14.14,0,0,0,1.8-5.11,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.8,29.8,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2-2.61-4-4.05-5.94q-.67-.9-1.38-1.77c7.2-1.16,14.47-1.9,21.75-2.39,9.54-.63,19.1-.8,28.65-.67s19.1.59,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.57,28,6.09,4.61,1.26,9.17,2.67,13.66,4.28,2.24.8,4.47,1.66,6.67,2.58s4.37,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.8,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.08,20.08,0,0,1,1.4,3.23,18.1,18.1,0,0,1,.77,3.41,19,19,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.6,7-9.62,10.68a83.92,83.92,0,0,0-8.18,11.84A49.48,49.48,0,0,0,401.43,555a61.67,61.67,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.08,1.81v.9c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a52.1,52.1,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94,69.54,69.54,0,0,0,9.08,11.16,89.21,89.21,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61c.78.42,1.57.83,2.36,1.23ZM247.3,416c1.43,1.91,2.78,3.88,4,5.91a48.85,48.85,0,0,1,3.27,6.35,29.7,29.7,0,0,1,2,6.83,16.84,16.84,0,0,1-.3,7,13,13,0,0,1-1.39,3.23,13.52,13.52,0,0,1-1,1.46,13.29,13.29,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,26.77,26.77,0,0,1-3,1.85,33.29,33.29,0,0,1-6.62,2.58,37.15,37.15,0,0,1-7,1.18c-.29,0-.59,0-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.78a35.85,35.85,0,0,1-6.66-2.5,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.09,12.09,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.56.26-.84.19-.56.41-1.11.64-1.66a22,22,0,0,1,3.87-5.91,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.62,6.27-1.12C246.31,414.75,246.81,415.39,247.3,416Z"/><polygon class="cls-3" points="245.45 413.66 245.82 413.6 246.17 414.06 245.79 414.12 245.45 413.66"/></g><g class="cls-1"><path class="cls-68" d="M442.42,628.9c-.78-.4-1.55-.8-2.31-1.22A109.3,109.3,0,0,1,428,620.09a87.87,87.87,0,0,1-10.87-9.24,69.13,69.13,0,0,1-9-11.07A56.41,56.41,0,0,1,402,587a52.82,52.82,0,0,1-1.75-6.9,50.8,50.8,0,0,1-.78-7.07,56.05,56.05,0,0,1,1.26-14.15,48.68,48.68,0,0,1,5.22-13.18A84.22,84.22,0,0,1,414,534c3-3.7,6.24-7.21,9.57-10.62,6.68-6.83,13.77-13.24,20.65-19.89,3.44-3.33,6.82-6.73,10-10.33,1.58-1.79,3.11-3.65,4.54-5.58a49.42,49.42,0,0,0,3.91-6.07,29.49,29.49,0,0,0,2.69-6.73,19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.53-.45-.39-.89-.79-1.35-1.18l-.69-.58-.7-.57c-1.85-1.53-3.79-2.95-5.77-4.3a99,99,0,0,0-12.48-7.16c-2.15-1.05-4.34-2-6.56-2.94s-4.45-1.79-6.7-2.59c-4.51-1.61-9.1-3-13.72-4.28-9.24-2.51-18.63-4.42-28-6.06-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.38-14.21-2q-14.24-1.79-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.06-28.69.7c-7.39.5-14.77,1.27-22.08,2.46-2.41-3-5-5.83-7.71-8.58-3.34-3.41-6.84-6.69-10.4-9.87-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,24.4,24.4,0,0,1-1.64-3.17,13.21,13.21,0,0,1-.93-3.43,8.73,8.73,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,1,0-.21,4.81,4.81,0,0,1,.26-.84,6,6,0,0,1,.92-1.5,9.92,9.92,0,0,1,1.26-1.25,18.5,18.5,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.22-1.54,2.19-.95,4.44-1.79,6.65-2.69,1.11-.45,2.21-.92,3.28-1.46a15.22,15.22,0,0,0,3.05-1.89,5.33,5.33,0,0,0,1.18-1.37,3,3,0,0,0,.33-.86,2.79,2.79,0,0,0,0-.91,8,8,0,0,0-1.21-3.37,14.55,14.55,0,0,0-2.29-2.77,24.22,24.22,0,0,0-2.77-2.29,47.23,47.23,0,0,0-6.15-3.69c-2.13-1.09-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.49-4.56-1.46-6.86-2.1c-1.15-.31-2.31-.61-3.47-.89-.59-.14-1.17-.27-1.76-.38l-.88-.17-.45-.06h-.22c-.08,0-.15,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.58.12,1.17.25,1.75.39,1.16.28,2.31.58,3.47.9q3.45,1,6.85,2.1c2.26.77,4.5,1.59,6.72,2.5s4.39,1.87,6.52,3a47.68,47.68,0,0,1,6.13,3.69,26,26,0,0,1,2.75,2.28,14.21,14.21,0,0,1,2.26,2.75,7.73,7.73,0,0,1,1.19,3.31,2.8,2.8,0,0,1,0,.87,2.74,2.74,0,0,1-.32.82,5.2,5.2,0,0,1-1.15,1.33,15.37,15.37,0,0,1-3,1.87c-1.07.53-2.17,1-3.28,1.45-2.21.9-4.45,1.73-6.65,2.68-1.1.47-2.19,1-3.24,1.54a18.13,18.13,0,0,0-3,2,8.61,8.61,0,0,0-1.29,1.27,6.09,6.09,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.7,1.7,0,0,1,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.48,13.48,0,0,0,.94,3.48,23,23,0,0,0,1.65,3.2,45.24,45.24,0,0,0,4.28,5.76c1.56,1.81,3.21,3.54,4.91,5.23,3.41,3.36,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.18,9c7.44,6,14.85,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a113.05,113.05,0,0,0-13.89,3.65,68.79,68.79,0,0,0-6.68,2.66,46.08,46.08,0,0,0-6.29,3.51,30.27,30.27,0,0,0-5.48,4.69,22,22,0,0,0-3.94,6c-.24.55-.46,1.11-.65,1.69-.1.29-.19.57-.28.87s-.13.6-.17.9a8.77,8.77,0,0,0,.34,3.64,12.55,12.55,0,0,0,1.59,3.27,16.39,16.39,0,0,0,2.36,2.76,24.59,24.59,0,0,0,5.93,4.09,35.63,35.63,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.79.22,1.19.11,2.39.2,3.59.21h.91l.9,0,.9,0,.9-.06a37.15,37.15,0,0,0,7.09-1.21,33.57,33.57,0,0,0,6.71-2.61,28.46,28.46,0,0,0,3.08-1.88,22,22,0,0,0,2.78-2.31,15.66,15.66,0,0,0,1.21-1.36,14.07,14.07,0,0,0,1-1.49,13.49,13.49,0,0,0,1.42-3.34,13.27,13.27,0,0,0,.38-1.77,15.6,15.6,0,0,0,.16-1.81,19.85,19.85,0,0,0-.23-3.61,29.58,29.58,0,0,0-2-6.9,48.78,48.78,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.54-.63,19.1-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.2,2s9.44,1.48,14.15,2.3c9.4,1.65,18.77,3.57,28,6.08,4.61,1.26,9.17,2.67,13.66,4.28,2.24.81,4.47,1.67,6.67,2.59s4.38,1.89,6.52,2.93a99.85,99.85,0,0,1,12.37,7.12c2,1.35,3.88,2.76,5.72,4.27l.69.56.68.58c.45.38.89.78,1.34,1.18.88.79,1.73,1.61,2.54,2.48a27.28,27.28,0,0,1,4.18,5.68,20,20,0,0,1,1.4,3.22,18.2,18.2,0,0,1,.77,3.42,19.07,19.07,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.93,48.93,0,0,1-3.85,6c-1.41,1.91-2.93,3.75-4.51,5.53-3.15,3.57-6.53,7-9.95,10.28-6.86,6.64-14,13.06-20.65,19.91-3.35,3.43-6.6,7-9.62,10.68a84.51,84.51,0,0,0-8.18,11.84A49.54,49.54,0,0,0,400,558.7a61,61,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21,0,1.81a52.45,52.45,0,0,0,.81,7.17,54.12,54.12,0,0,0,1.79,7,56.58,56.58,0,0,0,6.28,12.95,69,69,0,0,0,9.08,11.15,89.29,89.29,0,0,0,11,9.3,107.91,107.91,0,0,0,12.19,7.6c.79.43,1.58.84,2.38,1.25ZM245.83,419.78c1.43,1.9,2.78,3.87,4,5.91a48.75,48.75,0,0,1,3.26,6.35,29.62,29.62,0,0,1,2,6.82,16.82,16.82,0,0,1-.3,7,13.1,13.1,0,0,1-1.39,3.24,14.62,14.62,0,0,1-2.19,2.77,20.55,20.55,0,0,1-2.73,2.27,27.47,27.47,0,0,1-3,1.84,32.42,32.42,0,0,1-6.63,2.58,37.16,37.16,0,0,1-7,1.19l-.88.06-.9,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.14-.88-.15c-1.17-.22-2.33-.48-3.48-.79a35.16,35.16,0,0,1-6.66-2.5,23.67,23.67,0,0,1-5.83-4,16.72,16.72,0,0,1-2.29-2.68,12.15,12.15,0,0,1-1.53-3.16,8.25,8.25,0,0,1-.33-3.45,8.52,8.52,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.41-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.61,45.64,45.64,0,0,1,6.23-3.47,67.88,67.88,0,0,1,6.64-2.63A111.1,111.1,0,0,1,238.07,419c2.08-.42,4.17-.79,6.27-1.13C244.84,418.49,245.34,419.13,245.83,419.78Z"/><polygon class="cls-3" points="243.98 417.39 244.35 417.33 244.7 417.8 244.33 417.85 243.98 417.39"/></g><g class="cls-1"><path class="cls-69" d="M441,632.6c-.78-.4-1.56-.81-2.32-1.22a110.8,110.8,0,0,1-12.12-7.59,88.82,88.82,0,0,1-10.87-9.25,68.7,68.7,0,0,1-9-11.07,56.21,56.21,0,0,1-6.18-12.8,54.32,54.32,0,0,1-1.75-6.89,51.11,51.11,0,0,1-.78-7.08,56.09,56.09,0,0,1,1.26-14.15,48.81,48.81,0,0,1,5.22-13.18,84.12,84.12,0,0,1,8.12-11.72c3-3.7,6.24-7.21,9.57-10.63,6.68-6.82,13.77-13.23,20.65-19.89,3.44-3.33,6.82-6.72,10-10.32,1.58-1.8,3.11-3.65,4.54-5.59a49.42,49.42,0,0,0,3.91-6.07,29.31,29.31,0,0,0,2.69-6.73,19.66,19.66,0,0,0,.51-7.25,19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.35,28.35,0,0,0-4.29-5.84c-.83-.88-1.7-1.72-2.6-2.52-.45-.4-.89-.8-1.35-1.19l-.69-.58-.7-.57c-1.85-1.52-3.79-2.94-5.77-4.3a100.12,100.12,0,0,0-12.48-7.15q-3.22-1.58-6.56-2.95c-2.21-.92-4.45-1.78-6.7-2.59-4.51-1.61-9.1-3-13.72-4.27-9.24-2.52-18.63-4.43-28-6.07-4.72-.82-9.44-1.57-14.17-2.28s-9.47-1.37-14.21-2q-14.24-1.78-28.55-2.85c-9.55-.69-19.11-1.13-28.67-1.26s-19.14.07-28.69.71c-7.39.49-14.77,1.26-22.08,2.45-2.41-3-5-5.83-7.71-8.57-3.34-3.42-6.84-6.69-10.4-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.42-6-11.06-9.12s-7.22-6.27-10.62-9.63c-1.7-1.68-3.35-3.4-4.91-5.21a44.86,44.86,0,0,1-4.27-5.73,23.77,23.77,0,0,1-1.64-3.17,13.25,13.25,0,0,1-.93-3.42,8.75,8.75,0,0,1,0-1.77l0-.23,0-.21,0-.22a1.43,1.43,0,0,1,0-.22,4.81,4.81,0,0,1,.26-.84,6.43,6.43,0,0,1,.92-1.5,10.63,10.63,0,0,1,1.26-1.25,19.19,19.19,0,0,1,3-1.95c1.05-.56,2.13-1.06,3.22-1.54,2.19-.95,4.44-1.78,6.65-2.69,1.11-.45,2.21-.92,3.28-1.45a15.26,15.26,0,0,0,3-1.9,5.17,5.17,0,0,0,1.18-1.37,2.94,2.94,0,0,0,.33-.85,2.84,2.84,0,0,0,0-.92,8,8,0,0,0-1.21-3.37,14.87,14.87,0,0,0-2.29-2.77,25.32,25.32,0,0,0-2.77-2.29A47.23,47.23,0,0,0,169,307.9c-2.13-1.08-4.32-2.06-6.53-3s-4.47-1.72-6.73-2.48-4.56-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.59-.14-1.17-.27-1.76-.39l-.88-.16-.45-.06-.22,0c-.08,0-.14,0-.25.06l.07,0a.72.72,0,0,1,.18,0h.22l.44.07c.29,0,.59.1.88.16l1.75.38c1.16.28,2.31.58,3.47.9,2.3.64,4.58,1.35,6.85,2.11s4.5,1.59,6.72,2.49,4.39,1.88,6.52,3a47.61,47.61,0,0,1,6.13,3.68,26,26,0,0,1,2.75,2.28,14.52,14.52,0,0,1,2.26,2.75,7.82,7.82,0,0,1,1.19,3.32,2.83,2.83,0,0,1,0,.87,2.69,2.69,0,0,1-.32.81,5,5,0,0,1-1.15,1.33,15.42,15.42,0,0,1-3,1.88c-1.07.52-2.17,1-3.28,1.44-2.21.9-4.45,1.73-6.65,2.68-1.1.48-2.19,1-3.24,1.55a18.73,18.73,0,0,0-3,2,9.11,9.11,0,0,0-1.29,1.27,6.27,6.27,0,0,0-.95,1.54,5.19,5.19,0,0,0-.28.87,1.85,1.85,0,0,1,0,.23l0,.22,0,.23,0,.22a9.13,9.13,0,0,0,0,1.81,13.41,13.41,0,0,0,.94,3.47,22.5,22.5,0,0,0,1.65,3.2,44.54,44.54,0,0,0,4.28,5.76c1.56,1.81,3.21,3.55,4.91,5.23,3.41,3.37,7,6.54,10.62,9.65s7.34,6.13,11,9.14l11.18,9c7.44,6,14.85,12,22,18.42,3.56,3.19,7,6.46,10.38,9.87,2.63,2.7,5.19,5.48,7.55,8.41q-3,.5-6,1.09a111.33,111.33,0,0,0-13.89,3.66A64.05,64.05,0,0,0,216,428.5a45,45,0,0,0-6.29,3.51,30.22,30.22,0,0,0-5.48,4.68,22.31,22.31,0,0,0-3.94,6c-.24.56-.46,1.12-.65,1.69-.1.29-.19.57-.28.87a9.12,9.12,0,0,0-.17.91,8.73,8.73,0,0,0,.34,3.63,12.76,12.76,0,0,0,1.59,3.28,17.22,17.22,0,0,0,2.36,2.76,24.42,24.42,0,0,0,5.94,4.08,35.29,35.29,0,0,0,6.74,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.79.23,1.19.11,2.39.2,3.59.21h1.81l.9,0,.9-.06a37.94,37.94,0,0,0,7.09-1.2,33.6,33.6,0,0,0,6.71-2.62,27,27,0,0,0,3.08-1.88,20.41,20.41,0,0,0,2.78-2.31,15.53,15.53,0,0,0,1.21-1.35,15.32,15.32,0,0,0,1-1.5,13.58,13.58,0,0,0,1.42-3.33,13.41,13.41,0,0,0,.38-1.78,15.62,15.62,0,0,0,.16-1.8,19.79,19.79,0,0,0-.23-3.61,29.65,29.65,0,0,0-2-6.91,49.42,49.42,0,0,0-3.29-6.39c-1.25-2.05-2.61-4-4.05-5.94-.45-.6-.91-1.19-1.38-1.78,7.21-1.15,14.47-1.89,21.75-2.38,9.54-.63,19.1-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.2,2s9.44,1.47,14.15,2.29c9.4,1.66,18.77,3.57,28,6.09q6.91,1.88,13.66,4.28c2.24.8,4.47,1.66,6.67,2.58s4.38,1.89,6.52,2.94a98.59,98.59,0,0,1,12.37,7.12c2,1.34,3.88,2.75,5.72,4.26l.69.57.68.58c.45.38.89.78,1.34,1.17.88.79,1.73,1.62,2.54,2.48a27.82,27.82,0,0,1,4.18,5.68,20.37,20.37,0,0,1,1.4,3.22,18.38,18.38,0,0,1,.77,3.42,19,19,0,0,1-.5,7,29,29,0,0,1-2.63,6.55,48.28,48.28,0,0,1-3.85,6c-1.41,1.91-2.93,3.74-4.51,5.53-3.15,3.57-6.53,6.94-9.95,10.27-6.86,6.64-14,13.07-20.65,19.92-3.35,3.42-6.6,6.95-9.62,10.68A84.41,84.41,0,0,0,403.81,549a49.67,49.67,0,0,0-5.29,13.4,61.34,61.34,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.06.9c0,.6-.05,1.2-.07,1.8V574c0,.3,0,.6,0,.9,0,.6,0,1.2,0,1.8a52.27,52.27,0,0,0,.81,7.17,54.27,54.27,0,0,0,1.79,7,56.51,56.51,0,0,0,6.28,12.94A69.54,69.54,0,0,0,415.23,615a89.21,89.21,0,0,0,11,9.29,109.45,109.45,0,0,0,12.19,7.61l2.39,1.25ZM244.39,423.47c1.43,1.91,2.78,3.88,4,5.91a49.39,49.39,0,0,1,3.26,6.35,29.7,29.7,0,0,1,2,6.83,16.84,16.84,0,0,1-.3,7,13,13,0,0,1-1.39,3.23,13.52,13.52,0,0,1-1,1.46,13.29,13.29,0,0,1-1.18,1.31,19.81,19.81,0,0,1-2.73,2.27,26.64,26.64,0,0,1-3,1.85,33.62,33.62,0,0,1-6.63,2.58,37.18,37.18,0,0,1-7,1.18l-.89.06-.9,0H226.8c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.18-.13-1.77-.22l-.88-.13-.88-.16c-1.17-.21-2.33-.48-3.48-.79a35.82,35.82,0,0,1-6.66-2.49,24.23,24.23,0,0,1-5.83-4,16.79,16.79,0,0,1-2.29-2.69,12.24,12.24,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,8,8,0,0,1,.17-.85c.07-.28.17-.57.26-.84.19-.57.41-1.12.64-1.66a22,22,0,0,1,3.87-5.91,30.08,30.08,0,0,1,5.4-4.6,44.59,44.59,0,0,1,6.23-3.47,67.94,67.94,0,0,1,6.64-2.64,111.1,111.1,0,0,1,13.83-3.62q3.12-.62,6.27-1.12C243.4,422.18,243.9,422.82,244.39,423.47Z"/><polygon class="cls-3" points="242.54 421.09 242.91 421.03 243.26 421.49 242.89 421.55 242.54 421.09"/></g><g class="cls-1"><path class="cls-70" d="M439.48,636.48l-2.33-1.23A110.67,110.67,0,0,1,425,627.66a88.92,88.92,0,0,1-10.88-9.25,68.64,68.64,0,0,1-9-11.07,55.38,55.38,0,0,1-6.18-12.8,50.74,50.74,0,0,1-2.54-14,56.09,56.09,0,0,1,1.26-14.15A49,49,0,0,1,403,553.24a84.05,84.05,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.63,6.67-6.82,13.77-13.23,20.65-19.89,3.43-3.33,6.82-6.72,10-10.32,1.59-1.8,3.12-3.65,4.55-5.59a50.63,50.63,0,0,0,3.91-6.07,29.76,29.76,0,0,0,2.69-6.73A19.66,19.66,0,0,0,463,475a19,19,0,0,0-.8-3.57,21.52,21.52,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.7-1.72-2.59-2.52-.45-.4-.9-.8-1.36-1.19l-.68-.58-.7-.57c-1.86-1.52-3.8-2.94-5.78-4.3A100,100,0,0,0,432.81,446q-3.24-1.58-6.56-3c-2.22-.92-4.45-1.78-6.71-2.59-4.51-1.61-9.09-3-13.71-4.27-9.24-2.52-18.63-4.43-28.06-6.07-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.37-14.22-2q-14.24-1.78-28.55-2.85c-9.54-.69-19.1-1.13-28.67-1.26s-19.14.07-28.68.71c-7.39.49-14.77,1.26-22.08,2.45-2.42-3-5-5.83-7.71-8.57-3.35-3.42-6.84-6.69-10.41-9.88-7.14-6.37-14.56-12.41-22-18.4l-11.19-9c-3.71-3-7.42-6-11.06-9.12s-7.21-6.27-10.61-9.63c-1.7-1.68-3.35-3.4-4.91-5.21a44.94,44.94,0,0,1-4.28-5.73,22.59,22.59,0,0,1-1.63-3.17,13.27,13.27,0,0,1-.94-3.42,9.54,9.54,0,0,1,0-1.77l0-.23,0-.21,0-.22a2.07,2.07,0,0,0,0-.22,4.84,4.84,0,0,1,.27-.84,5.82,5.82,0,0,1,.92-1.5,8.69,8.69,0,0,1,1.26-1.24,18.47,18.47,0,0,1,3-2c1.05-.56,2.13-1.06,3.23-1.54,2.19-.95,4.43-1.78,6.64-2.69,1.11-.45,2.21-.92,3.29-1.45a15.55,15.55,0,0,0,3-1.9,5.17,5.17,0,0,0,1.18-1.37,3.26,3.26,0,0,0,.33-.85,2.84,2.84,0,0,0,0-.92,7.87,7.87,0,0,0-1.21-3.37,14.13,14.13,0,0,0-2.29-2.77,25.21,25.21,0,0,0-2.76-2.29,48.6,48.6,0,0,0-6.15-3.69c-2.14-1.08-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.48-4.55-1.46-6.86-2.1c-1.15-.32-2.31-.62-3.47-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06-.23,0c-.08,0-.14,0-.25.06l.07,0a.82.82,0,0,1,.18,0h.22l.44.07c.3,0,.59.1.88.16l1.75.38c1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.35,6.85,2.11s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.28,46.28,0,0,1,6.13,3.68,24.11,24.11,0,0,1,2.75,2.28,14.57,14.57,0,0,1,2.27,2.75,7.8,7.8,0,0,1,1.18,3.32,2.55,2.55,0,0,1,0,.87,3,3,0,0,1-.31.81,5.23,5.23,0,0,1-1.15,1.33,15.2,15.2,0,0,1-3,1.88c-1.07.52-2.17,1-3.27,1.44-2.22.9-4.46,1.73-6.66,2.68-1.09.48-2.18,1-3.24,1.55a19.18,19.18,0,0,0-3,2,10.31,10.31,0,0,0-1.29,1.27,6.59,6.59,0,0,0-.95,1.54,5.46,5.46,0,0,0-.27.87,1.85,1.85,0,0,0,0,.23l0,.22,0,.23V341a9.13,9.13,0,0,0,0,1.81,13,13,0,0,0,1,3.47,23.53,23.53,0,0,0,1.64,3.2,45.48,45.48,0,0,0,4.28,5.76c1.57,1.82,3.22,3.55,4.92,5.23,3.4,3.37,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.42,3.56,3.19,7,6.46,10.38,9.88,2.63,2.69,5.18,5.48,7.55,8.4q-3,.5-6,1.09a110.87,110.87,0,0,0-13.89,3.66,65.11,65.11,0,0,0-6.69,2.66,44.93,44.93,0,0,0-6.28,3.51,30.22,30.22,0,0,0-5.48,4.68,22.58,22.58,0,0,0-4,6c-.24.56-.46,1.12-.65,1.69-.09.29-.19.57-.27.87a7,7,0,0,0-.18.91,8.57,8.57,0,0,0,.35,3.63,12.14,12.14,0,0,0,1.59,3.28,17.68,17.68,0,0,0,2.35,2.76,24.42,24.42,0,0,0,5.94,4.08,35.38,35.38,0,0,0,6.75,2.52c1.16.32,2.33.58,3.51.79l.89.16.89.13c.59.1,1.19.16,1.78.23,1.2.11,2.4.2,3.6.21h1.8l.9,0,.9-.06a37.9,37.9,0,0,0,7.1-1.2,33.75,33.75,0,0,0,6.7-2.62,27.09,27.09,0,0,0,3.09-1.88,20.32,20.32,0,0,0,2.77-2.31,14.05,14.05,0,0,0,1.21-1.35,13.91,13.91,0,0,0,2.46-4.83,15.19,15.19,0,0,0,.37-1.78,13.68,13.68,0,0,0,.16-1.8,18.16,18.16,0,0,0-.23-3.61,29.63,29.63,0,0,0-2-6.91,49.49,49.49,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.92-1.19-1.38-1.78,7.2-1.15,14.47-1.89,21.75-2.38,9.53-.63,19.09-.8,28.65-.67s19.1.58,28.63,1.29,19,1.67,28.52,2.87c4.74.6,9.47,1.28,14.19,2s9.45,1.47,14.15,2.29c9.41,1.66,18.78,3.57,28,6.09,4.6,1.25,9.16,2.67,13.65,4.28q3.38,1.2,6.67,2.58c2.2.92,4.38,1.89,6.52,2.94a97.19,97.19,0,0,1,12.37,7.12c2,1.34,3.89,2.75,5.73,4.26l.68.57.68.58c.46.38.9.78,1.35,1.17.88.8,1.73,1.62,2.54,2.48a27.77,27.77,0,0,1,4.17,5.68,20.42,20.42,0,0,1,1.41,3.22,18.35,18.35,0,0,1,.76,3.42,18.82,18.82,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,49.47,49.47,0,0,1-3.85,6c-1.42,1.91-2.94,3.74-4.51,5.53-3.16,3.57-6.53,6.94-10,10.27-6.86,6.64-14,13.07-20.65,19.92-3.34,3.42-6.59,6.95-9.62,10.68a85.26,85.26,0,0,0-8.18,11.83,49.65,49.65,0,0,0-5.28,13.4,59.27,59.27,0,0,0-1.08,7.13c0,.3-.05.6-.07.9l-.07.9c0,.6-.05,1.2-.07,1.8v.91c0,.3,0,.6,0,.9,0,.6,0,1.2.05,1.8a53.86,53.86,0,0,0,.8,7.17,52.71,52.71,0,0,0,1.8,7,56.47,56.47,0,0,0,6.27,12.94,70.08,70.08,0,0,0,9.08,11.16,90,90,0,0,0,11,9.29,110.5,110.5,0,0,0,12.2,7.61c.79.42,1.59.84,2.4,1.25ZM242.87,427.34a70.67,70.67,0,0,1,4,5.91,49.39,49.39,0,0,1,3.26,6.35,29.73,29.73,0,0,1,2,6.83,16.84,16.84,0,0,1-.31,7,13,13,0,0,1-1.39,3.23,12.15,12.15,0,0,1-1,1.46,14.69,14.69,0,0,1-1.18,1.31,20.42,20.42,0,0,1-2.73,2.27,27.68,27.68,0,0,1-3,1.85,33.38,33.38,0,0,1-6.63,2.58,37,37,0,0,1-7,1.18c-.3,0-.59.05-.89.06l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.22l-.89-.13-.87-.16c-1.18-.21-2.34-.48-3.48-.79a35.65,35.65,0,0,1-6.67-2.49,24.62,24.62,0,0,1-5.83-4,16.24,16.24,0,0,1-2.28-2.69,11.81,11.81,0,0,1-1.54-3.15,8.41,8.41,0,0,1-.32-3.45,8,8,0,0,1,.16-.85c.08-.28.18-.56.27-.84.19-.56.4-1.12.64-1.66a22,22,0,0,1,3.87-5.91,29.73,29.73,0,0,1,5.4-4.6,44.48,44.48,0,0,1,6.22-3.47,69,69,0,0,1,6.64-2.64,112,112,0,0,1,13.83-3.62q3.13-.62,6.27-1.12C241.89,426.05,242.39,426.69,242.87,427.34Z"/><polygon class="cls-3" points="241.02 424.96 241.4 424.9 241.74 425.36 241.37 425.42 241.02 424.96"/></g><g class="cls-1"><path class="cls-71" d="M438,640.22,435.68,639a110.67,110.67,0,0,1-12.11-7.59,88,88,0,0,1-10.87-9.24,68.6,68.6,0,0,1-9-11.07,55.58,55.58,0,0,1-6.18-12.8,50.93,50.93,0,0,1-2.54-14,56,56,0,0,1,1.26-14.15A48.9,48.9,0,0,1,401.49,557a84.65,84.65,0,0,1,8.11-11.72c3-3.7,6.24-7.21,9.58-10.62,6.67-6.83,13.77-13.24,20.65-19.89,3.43-3.33,6.82-6.73,10-10.33,1.59-1.79,3.12-3.65,4.55-5.58a51.43,51.43,0,0,0,3.91-6.07A30,30,0,0,0,461,486a19.69,19.69,0,0,0,.51-7.25,18.83,18.83,0,0,0-.8-3.57,20.72,20.72,0,0,0-1.46-3.34,28.4,28.4,0,0,0-4.3-5.84c-.82-.88-1.69-1.72-2.59-2.53-.45-.39-.9-.8-1.36-1.18l-.68-.58-.7-.57c-1.86-1.53-3.8-2.95-5.78-4.3a98.83,98.83,0,0,0-12.47-7.16c-2.16-1-4.35-2-6.56-2.94s-4.45-1.79-6.71-2.59c-4.51-1.62-9.09-3-13.71-4.28-9.24-2.51-18.63-4.42-28.06-6.06-4.71-.82-9.43-1.57-14.16-2.28s-9.47-1.38-14.22-2q-14.24-1.79-28.55-2.85c-9.54-.7-19.1-1.14-28.67-1.26s-19.14.06-28.68.7c-7.39.5-14.77,1.27-22.08,2.46-2.42-3-5-5.83-7.71-8.58-3.35-3.42-6.84-6.69-10.41-9.87-7.14-6.38-14.56-12.41-22-18.4l-11.18-9c-3.72-3-7.43-6-11.07-9.12s-7.21-6.27-10.61-9.62c-1.7-1.68-3.35-3.41-4.91-5.21a43.94,43.94,0,0,1-4.27-5.73,23.22,23.22,0,0,1-1.64-3.17,13.23,13.23,0,0,1-.94-3.43,9.52,9.52,0,0,1,0-1.77l0-.22,0-.22,0-.22a1.55,1.55,0,0,0,0-.21,4.84,4.84,0,0,1,.27-.84,5.51,5.51,0,0,1,.92-1.5,8.76,8.76,0,0,1,1.26-1.25,18.86,18.86,0,0,1,3-1.95c1.05-.57,2.13-1.07,3.23-1.54,2.19-.95,4.43-1.79,6.65-2.69,1.1-.45,2.2-.92,3.28-1.46a15.09,15.09,0,0,0,3-1.9,5,5,0,0,0,1.18-1.37,3.13,3.13,0,0,0,.33-.85,2.54,2.54,0,0,0,0-.91,7.91,7.91,0,0,0-1.21-3.38,14.07,14.07,0,0,0-2.29-2.76,24.12,24.12,0,0,0-2.76-2.29,48.6,48.6,0,0,0-6.15-3.69c-2.14-1.09-4.32-2.06-6.54-3s-4.46-1.72-6.73-2.49-4.55-1.46-6.86-2.1c-1.15-.31-2.3-.61-3.47-.89-.58-.14-1.16-.27-1.75-.39l-.88-.16-.45-.06h-.23c-.08,0-.14,0-.25.06l.07,0h.18l.22,0,.44.06.88.16c.59.12,1.17.25,1.75.39,1.16.28,2.32.58,3.47.9,2.3.64,4.59,1.34,6.85,2.1s4.51,1.59,6.72,2.49,4.4,1.88,6.52,3a46.35,46.35,0,0,1,6.13,3.69,25.12,25.12,0,0,1,2.76,2.28,14.21,14.21,0,0,1,2.26,2.75,7.71,7.71,0,0,1,1.18,3.31,2.3,2.3,0,0,1,0,.87,3,3,0,0,1-.31.82,5.4,5.4,0,0,1-1.15,1.33,15.16,15.16,0,0,1-3,1.87c-1.07.53-2.17,1-3.27,1.45-2.21.9-4.46,1.73-6.66,2.68-1.09.47-2.18,1-3.24,1.54a18.55,18.55,0,0,0-3,2,9.67,9.67,0,0,0-1.29,1.27,6.39,6.39,0,0,0-.95,1.54,5.16,5.16,0,0,0-.27.87,1.7,1.7,0,0,0,0,.22l0,.23,0,.22,0,.23a9,9,0,0,0,0,1.8,13.11,13.11,0,0,0,1,3.48,23.41,23.41,0,0,0,1.64,3.19,45.59,45.59,0,0,0,4.28,5.77c1.57,1.81,3.22,3.54,4.92,5.23,3.4,3.36,7,6.54,10.62,9.65s7.33,6.13,11.05,9.14l11.17,9c7.45,6,14.86,12,22,18.41,3.56,3.19,7,6.46,10.38,9.88,2.63,2.7,5.18,5.48,7.55,8.41q-3,.49-6,1.09a112.58,112.58,0,0,0-13.89,3.65A70,70,0,0,0,213,436.1a46,46,0,0,0-6.28,3.51,30.27,30.27,0,0,0-5.48,4.69,22.27,22.27,0,0,0-4,6c-.24.55-.46,1.11-.65,1.69-.09.28-.19.57-.27.87a7.17,7.17,0,0,0-.18.9,8.61,8.61,0,0,0,.35,3.64,11.94,11.94,0,0,0,1.59,3.27,16.81,16.81,0,0,0,2.35,2.76,24.46,24.46,0,0,0,5.94,4.09,35.38,35.38,0,0,0,6.75,2.52c1.16.31,2.33.58,3.51.79l.89.16.89.13c.59.09,1.19.15,1.78.22,1.2.11,2.4.2,3.6.21h.9l.9,0,.9,0,.9-.06a37.12,37.12,0,0,0,7.1-1.21,34,34,0,0,0,6.71-2.61,29.47,29.47,0,0,0,3.08-1.88,21.15,21.15,0,0,0,2.77-2.32,14.05,14.05,0,0,0,1.21-1.35,12.73,12.73,0,0,0,1-1.49,13.52,13.52,0,0,0,1.43-3.34,15,15,0,0,0,.37-1.77,13.67,13.67,0,0,0,.16-1.81,19,19,0,0,0-.22-3.61,30.06,30.06,0,0,0-2-6.9,48.85,48.85,0,0,0-3.3-6.39,70.51,70.51,0,0,0-4-5.94c-.45-.6-.91-1.19-1.38-1.78,7.2-1.15,14.47-1.9,21.75-2.38,9.53-.63,19.09-.81,28.65-.67s19.1.58,28.63,1.28,19,1.68,28.52,2.88c4.74.6,9.47,1.27,14.19,2s9.45,1.47,14.15,2.3c9.41,1.65,18.78,3.57,28,6.08,4.6,1.26,9.16,2.67,13.65,4.28q3.38,1.21,6.67,2.59c2.2.91,4.38,1.89,6.52,2.93a98.41,98.41,0,0,1,12.37,7.12c2,1.34,3.89,2.76,5.73,4.27l.68.56.68.58c.46.38.9.78,1.35,1.18.88.79,1.73,1.61,2.54,2.48a27.24,27.24,0,0,1,4.17,5.68,20,20,0,0,1,1.41,3.22,18.18,18.18,0,0,1,.76,3.42,18.85,18.85,0,0,1-.49,7,29,29,0,0,1-2.63,6.55,50.15,50.15,0,0,1-3.85,6c-1.42,1.91-2.93,3.75-4.51,5.53-3.16,3.57-6.53,6.95-10,10.27-6.86,6.65-14,13.07-20.65,19.92-3.34,3.43-6.59,7-9.62,10.68a85.36,85.36,0,0,0-8.18,11.84,49.52,49.52,0,0,0-5.28,13.4,59,59,0,0,0-1.08,7.13c0,.3,0,.6-.07.9l-.06.9c0,.6-.06,1.2-.08,1.8v.9c0,.3,0,.6,0,.9,0,.61,0,1.21.05,1.81a54,54,0,0,0,.8,7.17,52.57,52.57,0,0,0,1.8,7,56.54,56.54,0,0,0,6.27,13,69.56,69.56,0,0,0,9.08,11.15,90,90,0,0,0,11,9.3,108.94,108.94,0,0,0,12.2,7.6c.8.43,1.6.85,2.42,1.27ZM241.4,431.08a67.52,67.52,0,0,1,4,5.91,47.54,47.54,0,0,1,3.26,6.35,29,29,0,0,1,2,6.82,16.82,16.82,0,0,1-.31,7,13.1,13.1,0,0,1-1.39,3.24,12.89,12.89,0,0,1-1,1.45,14.81,14.81,0,0,1-1.18,1.32,21.21,21.21,0,0,1-2.73,2.27,27.6,27.6,0,0,1-3,1.84,32.2,32.2,0,0,1-6.63,2.58,37.06,37.06,0,0,1-7,1.19c-.3,0-.59.05-.89.05l-.89,0h-1.78c-1.19,0-2.38-.1-3.56-.21-.59-.07-1.19-.13-1.77-.23l-.89-.13-.87-.15c-1.17-.22-2.34-.48-3.48-.79a35.25,35.25,0,0,1-6.67-2.5,24,24,0,0,1-5.83-4,15.84,15.84,0,0,1-2.28-2.69,11.35,11.35,0,0,1-1.53-3.15,8.25,8.25,0,0,1-.33-3.45,6.39,6.39,0,0,1,.17-.85c.07-.27.17-.56.26-.84.19-.56.4-1.11.64-1.65a21.87,21.87,0,0,1,3.87-5.91A29.39,29.39,0,0,1,207,440a45.06,45.06,0,0,1,6.22-3.47,68.89,68.89,0,0,1,6.64-2.63,111.71,111.71,0,0,1,13.84-3.62c2.08-.42,4.17-.79,6.26-1.13C240.42,429.79,240.92,430.43,241.4,431.08Z"/><polygon class="cls-3" points="239.55 428.69 239.93 428.63 240.28 429.09 239.9 429.15 239.55 428.69"/></g><g class="cls-1"><path class="cls-72" d="M545.22,387.35c.6.16,1.2.32,1.81.46a108.24,108.24,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a52.4,52.4,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.64,19.64,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86T753,292.22q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,8.75,8.75,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,9.61,9.61,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.77.48.37.26.17.14c.06.06.14.06.15.21l-.07,0a1.49,1.49,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.47,14.47,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.52,14.52,0,0,0,1,3.42c.43,1.12.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2.12,2.12,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.82,44.82,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.54,20.54,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0-1.18,0-2.37,0-3.54.12a27.5,27.5,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13A89.54,89.54,0,0,1,561,391a111.12,111.12,0,0,1-14.13-2.6l-1.88-.49Zm285.45-22.26c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49A29.33,29.33,0,0,0,811,373a16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26.71,26.71,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48c1,.63,2,1.22,3.1,1.76a35,35,0,0,0,6.61,2.65,24.11,24.11,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.79.24-.55.45-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,111.8,111.8,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C832.26,364.81,831.47,364.94,830.67,365.09Z"/><polygon class="cls-3" points="833.64 364.58 833.4 364.28 832.84 364.39 833.07 364.69 833.64 364.58"/></g><g class="cls-1"><path class="cls-73" d="M543.72,391.23l1.82.46a108.24,108.24,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49A67.59,67.59,0,0,0,588,392.61a55.48,55.48,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7A55.71,55.71,0,0,0,621,367.4a49,49,0,0,0,5-13.26A83.92,83.92,0,0,0,628,340c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.92,50.92,0,0,1,1.21-7.12,29.5,29.5,0,0,1,2.54-6.78,19.64,19.64,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86c4,2.66,7.93,5.36,11.83,8.12q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.24,9.24,0,0,0,1.22-1.28l.13-.18.13-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.39-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.25,5.25,0,0,1,.06-1.81,2.84,2.84,0,0,1,.91-1.55,7.84,7.84,0,0,1,3.17-1.68,14.7,14.7,0,0,1,3.55-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68l1.56.89.76.48.37.26.18.14c0,.06.13.06.14.21l-.07,0a1,1,0,0,0-.12-.13l-.18-.13-.37-.25c-.25-.17-.5-.32-.76-.48l-1.55-.89c-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2,2,0,0,1-.11.2l-.13.18-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.6,44.6,0,0,1-7,1.38c-2.38.28-4.76.45-7.15.55-4.79.19-9.57.13-14.35,0s-9.56-.42-14.33-.7l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.71,8.71,0,0,1-2.7,2.46,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5-.5-.34-1-.69-1.47-1.05-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31c-.22-.2-.44-.4-.65-.61l-.65-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,27.59,27.59,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7,16.6,16.6,0,0,1,.93-1.57,15.12,15.12,0,0,1,1.09-1.44,20.54,20.54,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.6,69.6,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.46-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.1q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.31-1.38-6.67-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07q-3.52-.51-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a28,28,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,17.93,17.93,0,0,0-2.86,2,19.09,19.09,0,0,0-4.34,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.5,19.06,1.83,28.63.17,4.78.19,9.58-.08,14.37a84.75,84.75,0,0,1-1.94,14.26,49.36,49.36,0,0,1-5.12,13.46,61.93,61.93,0,0,1-4,6c-.18.24-.37.47-.56.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.08,56.08,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,89.54,89.54,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-1.89-.49ZM829.18,369a68.85,68.85,0,0,0-6.95,1.66,49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.7,12.7,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.44.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.75.49l.75.48c1,.63,2,1.22,3.1,1.76a35,35,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,11.7,11.7,0,0,0,3.26-1.3,8.27,8.27,0,0,0,2.57-2.32q.24-.36.45-.75c.13-.25.25-.53.37-.79.24-.55.45-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,111.8,111.8,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C830.78,368.69,830,368.82,829.18,369Z"/><polygon class="cls-3" points="832.15 368.46 831.92 368.16 831.35 368.27 831.59 368.56 832.15 368.46"/></g><g class="cls-1"><path class="cls-74" d="M542.27,395l1.84.48A109.92,109.92,0,0,0,558.17,398a88.34,88.34,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.48,55.48,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.92,50.92,0,0,1,1.21-7.12,29,29,0,0,1,2.54-6.78,19.64,19.64,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86T750,299.85q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.24,9.24,0,0,0,1.22-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.09,3.09,0,0,1,.34-.85,2.61,2.61,0,0,1,.58-.7,7.84,7.84,0,0,1,3.17-1.68,14.7,14.7,0,0,1,3.55-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68l1.55.89.77.48.37.26.18.14c.05.06.13.06.14.21l-.07,0a1,1,0,0,0-.12-.13l-.18-.13-.37-.25c-.25-.17-.5-.32-.76-.48l-1.55-.89c-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.74,14.74,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2.12,2.12,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.82,44.82,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L884.94,372c-9.54-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,45.73,45.73,0,0,1,2.28,6.84,30.11,30.11,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.42,1.13-.66,1.69-.12.27-.24.55-.39.82a6.4,6.4,0,0,1-.48.79,8.59,8.59,0,0,1-2.7,2.46,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.58,24.58,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5q-.75-.51-1.47-1.05c-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.93,27.93,0,0,1-1-3.46,20.67,20.67,0,0,1-.49-3.59,13.81,13.81,0,0,1,1.45-7,16.6,16.6,0,0,1,.93-1.57,15.12,15.12,0,0,1,1.09-1.44,20.54,20.54,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.6,69.6,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.46-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.1q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0q-1.77,0-3.54.12a28,28,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.07,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.79.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L614,380.32l-.6.67c-.2.23-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4A56.08,56.08,0,0,1,586.69,397a69.12,69.12,0,0,1-14.22,2.13,89.54,89.54,0,0,1-14.37-.52A111.12,111.12,0,0,1,544,396l-1.91-.5Zm285.48-22.24a68.85,68.85,0,0,0-7,1.66,49.26,49.26,0,0,0-6.69,2.49,29.33,29.33,0,0,0-6.07,3.7,16.91,16.91,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.22.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.75.49l.75.48c1,.63,2,1.22,3.1,1.76a35,35,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,8.27,8.27,0,0,0,2.57-2.32q.24-.36.45-.75c.13-.25.25-.53.37-.79.24-.55.45-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.33,29.33,0,0,0-.89-7,44.7,44.7,0,0,0-2.26-6.76,66.75,66.75,0,0,0-3.13-6.42,111.8,111.8,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C829.35,372.44,828.55,372.57,827.75,372.73Z"/><polygon class="cls-3" points="830.72 372.21 830.49 371.91 829.92 372.02 830.15 372.31 830.72 372.21"/></g><g class="cls-1"><path class="cls-75" d="M540.84,398.66l1.87.48a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,51.19,51.19,0,0,0,11.29-8.62,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,84.83,84.83,0,0,0,1.91-14.13c.26-4.75.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.41-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.76,3.9,13,6.08,8.52,4.37,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.51,23.51,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.81,18.81,0,0,0-.89-3.45c-.39-1.12-.85-2.23-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,26.74,26.74,0,0,1,3.58.17,48.23,48.23,0,0,1,7,1.42c2.3.64,4.57,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.09,3.16,1.68.53.29,1.05.58,1.56.89.26.16.51.31.76.48l.37.25.18.14c.05.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.14-.36-.25-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.68-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.65,23.65,0,0,0-3.57-.17,14.38,14.38,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,2.57,2.57,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.33a18,18,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.31-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,30.78,30.78,0,0,1,.9,7.15,22.32,22.32,0,0,1-1.16,7.12c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.46,17.46,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.33-.29-.33-.31c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65A38.59,38.59,0,0,1,805,410a33.45,33.45,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,13.17,13.17,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,47.85,47.85,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67c.74-.14,1.48-.26,2.22-.38C824,370,819.09,364.54,814,359.28c-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.79-6.67-2.59s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38A20,20,0,0,0,635,262a17.82,17.82,0,0,0-2.87,2,18.63,18.63,0,0,0-4.33,5.48,28.59,28.59,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37A85.91,85.91,0,0,1,624,361.76a50.15,50.15,0,0,1-5.12,13.46,60.1,60.1,0,0,1-4,6c-.18.25-.37.48-.55.72l-.57.7c-.38.47-.77.93-1.16,1.38l-.6.68c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a53.36,53.36,0,0,1-5.43,4.75,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.2,69.2,0,0,1-14.23,2.12,88.32,88.32,0,0,1-14.36-.52,109.23,109.23,0,0,1-14.14-2.6l-1.94-.5Zm285.51-22.24q-3.51.66-7,1.66a48.49,48.49,0,0,0-6.69,2.5,29.38,29.38,0,0,0-6.07,3.69,16.79,16.79,0,0,0-4.51,5.41A13.1,13.1,0,0,0,801,393a14.82,14.82,0,0,0-.25,3.52,21,21,0,0,0,.49,3.52,29.51,29.51,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63.66.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.5.75.48c1,.63,2.05,1.22,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,16.53,16.53,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,45.12,45.12,0,0,0-2.27-6.76,66.58,66.58,0,0,0-3.13-6.41,109.77,109.77,0,0,0-7.77-12c-1.27-1.71-2.56-3.39-3.88-5.06Q827.55,376.2,826.35,376.42Z"/><polygon class="cls-3" points="829.33 375.91 829.09 375.61 828.52 375.72 828.76 376.01 829.33 375.91"/></g><g class="cls-1"><path class="cls-76" d="M539.34,402.54c.62.17,1.25.33,1.88.48a110.1,110.1,0,0,0,14.07,2.56,88.25,88.25,0,0,0,14.26.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,52.21,52.21,0,0,0,5.95-3.92,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,83.8,83.8,0,0,0,1.91-14.13c.27-4.75.24-9.53.08-14.3-.33-9.54-1.26-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12A29.78,29.78,0,0,1,625.6,273a19.74,19.74,0,0,1,4.51-5.7,19.31,19.31,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.48,28.48,0,0,1,7.11-1.42c1.21-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.57-.33,14.35-.28,9.57.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.06,23.06,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6.31,6.31,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,17.5,17.5,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.24,5.24,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.3.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.09,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c.05.07.13.07.15.22l-.07,0-.13-.13a1.09,1.09,0,0,0-.17-.13l-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.1-6.48-3.06s-4.4-1.86-6.65-2.68-4.51-1.58-6.81-2.21a48.18,48.18,0,0,0-7-1.4,23.65,23.65,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.94,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.33a18,18,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.13.18a9.66,9.66,0,0,1-1.25,1.31,13.38,13.38,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.19-4.78-.05-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,44.51,44.51,0,0,1,2.28,6.83,29.76,29.76,0,0,1,.9,7.16,22.3,22.3,0,0,1-1.16,7.11c-.19.58-.41,1.14-.65,1.69-.13.28-.25.55-.39.83a7.91,7.91,0,0,1-.48.79,8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.46,17.46,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.79-2.27l-.34-.29-.33-.31c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28.08,28.08,0,0,1-1-3.47,21.43,21.43,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,14,14,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,17.11,17.11,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.82-8.1c-4-2.65-8-5.27-12-7.83-8.06-5.12-16.28-10-24.78-14.36-4.24-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.67-2.59s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.9,0c-.59,0-1.18,0-1.78,0-1.19,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a84.87,84.87,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.18.25-.36.48-.55.72l-.56.7c-.38.47-.78.93-1.16,1.39l-.6.67c-.21.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,54.93,54.93,0,0,1-6,4,56.93,56.93,0,0,1-13.36,5.33,69.9,69.9,0,0,1-14.23,2.13,89.47,89.47,0,0,1-14.36-.53,110.92,110.92,0,0,1-14.14-2.59l-2-.51ZM824.87,380.3q-3.52.66-7,1.66a48.49,48.49,0,0,0-6.69,2.5,29,29,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4,13.42,13.42,0,0,0-1.39,5.07,14.93,14.93,0,0,0,0,1.77,22.09,22.09,0,0,0,.49,3.52,29.51,29.51,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.64.63.65.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.11,35.11,0,0,0,6.6,2.64,23.84,23.84,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.05C826.46,380,825.66,380.15,824.87,380.3Z"/><polygon class="cls-3" points="827.84 379.79 827.6 379.49 827.03 379.6 827.27 379.89 827.84 379.79"/></g><g class="cls-1"><path class="cls-77" d="M537.89,406.28l1.9.49a110.27,110.27,0,0,0,14.06,2.56,88.41,88.41,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,51.19,51.19,0,0,0,11.29-8.62,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,83.8,83.8,0,0,0,1.91-14.13c.27-4.75.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.24L895,384c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.06,23.06,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.52,4.52,0,0,0,.38-.8,6.3,6.3,0,0,0,.32-1.73,9.55,9.55,0,0,0-.09-1.77,17.5,17.5,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5.24,5.24,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.77,14.77,0,0,1,3.56-.5A26.66,26.66,0,0,1,950,348a48.23,48.23,0,0,1,7,1.42c2.3.64,4.58,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.09,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.15.22l-.08,0a.6.6,0,0,0-.12-.13l-.17-.13-.37-.26-.76-.47c-.51-.31-1-.6-1.55-.89-1.05-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.68-4.51-1.58-6.81-2.21a48.18,48.18,0,0,0-7-1.4,23.65,23.65,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09.95,2.19,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.58,9.58,0,0,1-1.24,1.31,13.38,13.38,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.19-4.78-.05-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.25,1.59,2.49,3.21,3.7,4.84a113.31,113.31,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,44.51,44.51,0,0,1,2.28,6.83,30.27,30.27,0,0,1,.9,7.16,22.3,22.3,0,0,1-1.16,7.11c-.2.58-.41,1.14-.65,1.69-.13.28-.25.55-.39.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.46,17.46,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.33-.29-.33-.31c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28.08,28.08,0,0,1-1-3.47,21.43,21.43,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.93,13.93,0,0,1,1.44-5.23,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.3,29.3,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.42-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.9-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.43,27.43,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a84.73,84.73,0,0,1-1.93,14.26,49.81,49.81,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.18.25-.37.48-.55.72l-.56.7-1.16,1.39-.61.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,54.93,54.93,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.9,69.9,0,0,1-14.23,2.13,89.47,89.47,0,0,1-14.36-.53,110.92,110.92,0,0,1-14.14-2.59l-2-.52Zm285.54-22.23q-3.51.66-6.95,1.66a48.49,48.49,0,0,0-6.69,2.5,29,29,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,12.7,12.7,0,0,0-1.15,3.32,13.06,13.06,0,0,0-.24,1.76,14.74,14.74,0,0,0,0,1.76,21,21,0,0,0,.49,3.52,29.51,29.51,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.64.63.65.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.47,35.47,0,0,0,6.61,2.64,23.84,23.84,0,0,0,7,1,15.9,15.9,0,0,0,3.5-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33,7,7,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12q-1.9-2.56-3.88-5.05C825,383.76,824.23,383.9,823.43,384.05Z"/><polygon class="cls-3" points="826.41 383.54 826.17 383.24 825.6 383.35 825.84 383.64 826.41 383.54"/></g><g class="cls-1"><path class="cls-78" d="M536.45,410l1.92.49A110,110,0,0,0,552.43,413a88.34,88.34,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13A55.9,55.9,0,0,0,594,406.1a53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,55.64,55.64,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.29,29.29,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.15,4.77-.26,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.14-.55a45.18,45.18,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.83,9.83,0,0,0,1.22-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,2.86,2.86,0,0,1,.34-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.21,14.21,0,0,1,3.55-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.09,3.17,1.68.52.29,1,.58,1.55.89.26.16.52.31.77.48l.37.25.17.14c.06.07.14.07.15.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.52-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.36,3.33a18.73,18.73,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,5.22,5.22,0,0,1-.39.83,2,2,0,0,1-.12.19l-.12.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69L879.2,387c-9.54-.58-19.09-1.11-28.65-1.19-4.78-.05-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22,22,0,0,1-1.15,7.11c-.2.58-.42,1.14-.66,1.69-.12.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.15-3.13-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.08,28.08,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.28,15.28,0,0,1,.93-1.56,15.12,15.12,0,0,1,1.09-1.44,19.87,19.87,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.64,69.64,0,0,1,7-1.67l2.21-.38c-4.54-5.7-9.41-11.16-14.46-16.42-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22A98,98,0,0,0,655,271.16c-2.36-.33-4.72-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.54.12a27.5,27.5,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37a83.85,83.85,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,55.06,55.06,0,0,1-6,4A56.5,56.5,0,0,1,581,412a69.8,69.8,0,0,1-14.22,2.13,89.55,89.55,0,0,1-14.37-.53A111.09,111.09,0,0,1,538.23,411l-2-.52ZM822,387.75c-2.34.44-4.67,1-7,1.66a47.54,47.54,0,0,0-6.69,2.5,28.49,28.49,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.47,13.47,0,0,0-1.15,3.32,13.14,13.14,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,20,20,0,0,0,.49,3.52,26,26,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.61.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.75.49.75.48c1,.63,2,1.22,3.1,1.76a34.93,34.93,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,11.83,11.83,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33,6.87,6.87,0,0,0,.44-.74c.14-.25.26-.53.38-.8.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C823.61,387.46,822.81,387.6,822,387.75Z"/><polygon class="cls-3" points="824.98 387.24 824.75 386.94 824.18 387.05 824.41 387.34 824.98 387.24"/></g><g class="cls-1"><path class="cls-79" d="M535,413.86l1.93.49a110,110,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13A56,56,0,0,0,592.49,410a51.82,51.82,0,0,0,11.29-8.62,56,56,0,0,0,8.6-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.75,29.75,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.53,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86c4,2.66,7.93,5.36,11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.14,4.78-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.67,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.14-.55a43.61,43.61,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.83,9.83,0,0,0,1.22-1.28l.13-.18.13-.18.13-.18c0-.07.08-.13.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.09-6.47-.52-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.59,2.59,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.76,14.76,0,0,1,3.55-.5,26.89,26.89,0,0,1,3.59.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.52.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c.05.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13c-.12-.09-.24-.18-.37-.26l-.75-.47c-.52-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.88,7.88,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.1,1.8,6.76,6.76,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.57,44.57,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.79.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.89c-9.54-.58-19.09-1.11-28.65-1.19-4.78,0-9.55,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84A111.77,111.77,0,0,1,835,408a67.75,67.75,0,0,1,3.15,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22,22,0,0,1-1.15,7.11c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.15-3.13-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a37.28,37.28,0,0,1-4.43-5.67A33.66,33.66,0,0,1,796,418.8a28.13,28.13,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,13.9,13.9,0,0,1,2.12-5,15.12,15.12,0,0,1,1.09-1.44,19.87,19.87,0,0,1,2.6-2.51,29.37,29.37,0,0,1,6.16-3.74,48.64,48.64,0,0,1,6.74-2.5,69.64,69.64,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.72-19.8s-14.51-12.43-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22A97.69,97.69,0,0,0,653.47,275c-2.35-.33-4.72-.58-7.1-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.06,20.06,0,0,0-3.21,1.44,17.74,17.74,0,0,0-2.86,2,18.82,18.82,0,0,0-4.34,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.44,14.3.59,9.54,1.51,19.06,1.83,28.64.17,4.78.19,9.58-.08,14.37A85.77,85.77,0,0,1,618.15,377,49.84,49.84,0,0,1,613,390.43a60.59,60.59,0,0,1-4,6c-.18.25-.37.48-.56.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,55.9,55.9,0,0,1-6,4,56.57,56.57,0,0,1-13.37,5.33A69.12,69.12,0,0,1,565.24,418a88.45,88.45,0,0,1-14.37-.53,111.09,111.09,0,0,1-14.13-2.59l-2-.52Zm285.57-22.23c-2.34.44-4.67,1-6.95,1.66a48,48,0,0,0-6.69,2.5,28.74,28.74,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.7,12.7,0,0,0-.24,1.75,14.75,14.75,0,0,0,0,1.76,20,20,0,0,0,.49,3.52,25.57,25.57,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.21.21.4.43.62.64l.63.63c.21.2.44.4.65.61l.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.75.49.75.48c1,.63,2,1.22,3.1,1.76a35.65,35.65,0,0,0,6.61,2.65,24.15,24.15,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,11.7,11.7,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5C822.12,391.34,821.32,391.48,820.52,391.63Z"/><polygon class="cls-3" points="823.49 391.12 823.26 390.82 822.69 390.93 822.93 391.22 823.49 391.12"/></g><g class="cls-1"><path class="cls-80" d="M533.5,417.6l2,.5a110,110,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49A69,69,0,0,0,577.86,419a55.9,55.9,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,55.64,55.64,0,0,0,8.61-11.3,49,49,0,0,0,5-13.26,84,84,0,0,0,1.9-14.14c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.05-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.75,29.75,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86c4,2.66,7.93,5.36,11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.05,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.14,4.78-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.83,9.83,0,0,0,1.22-1.28l.13-.18.13-.18.13-.18a1.18,1.18,0,0,1,.11-.19,4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.24,5.24,0,0,1,.06-1.81,2.59,2.59,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.69,14.69,0,0,1,3.55-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.52.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83c0,.07-.08.13-.11.19l-.13.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.57,44.57,0,0,1-7.05,1.37c-2.38.29-4.76.46-7.15.56-4.79.19-9.57.13-14.35,0s-9.56-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.12-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12q-.3.86-.66,1.68c-.12.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,28.08,28.08,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.28,15.28,0,0,1,.93-1.56,15.12,15.12,0,0,1,1.09-1.44,19.87,19.87,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.64,69.64,0,0,1,7-1.67l2.21-.38c-4.54-5.7-9.41-11.15-14.46-16.42-6.62-6.88-13.57-13.46-20.72-19.8S771.55,346,764,340.1s-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.32-1.38-6.67-2.59c-2.25-.8-4.51-1.55-6.8-2.22A97.69,97.69,0,0,0,652,278.79c-2.35-.33-4.72-.58-7.1-.7l-.89,0-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.06,20.06,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48A29.71,29.71,0,0,0,618,295a50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.44,14.3.59,9.54,1.5,19.06,1.83,28.64.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,60.59,60.59,0,0,1-4,6c-.18.25-.37.48-.56.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,53.65,53.65,0,0,1-6,4A56.5,56.5,0,0,1,578,419.66a69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59l-2-.53Zm285.59-22.22c-2.34.44-4.67,1-7,1.66a48,48,0,0,0-6.69,2.5,29.16,29.16,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.7,12.7,0,0,0-.24,1.75,14.75,14.75,0,0,0,0,1.76A20,20,0,0,0,794,419a25.15,25.15,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63c.21.2.44.4.65.61l.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.75.49.75.48c1,.63,2,1.22,3.1,1.76a35.65,35.65,0,0,0,6.61,2.65,24.15,24.15,0,0,0,7,1A15.82,15.82,0,0,0,831,446a11.7,11.7,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5C820.69,395.09,819.89,395.23,819.09,395.38Z"/><polygon class="cls-3" points="822.06 394.87 821.83 394.57 821.26 394.68 821.5 394.97 822.06 394.87"/></g><g class="cls-1"><path class="cls-81" d="M532.07,421.29l2,.51a110.24,110.24,0,0,0,14.06,2.55,88.42,88.42,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,52.13,52.13,0,0,0,6-3.91,53,53,0,0,0,5.34-4.7,55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,83.8,83.8,0,0,0,1.91-14.13c.27-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.85-28.61-.3-4.78-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,19.68,19.68,0,0,1,4.52-5.7,18.9,18.9,0,0,1,3-2.1,21.94,21.94,0,0,1,3.33-1.48,28,28,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.37,11.83,8.12q11.71,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.95,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,23,23,0,0,0,3.34-1.23,13.36,13.36,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.12-.18.13-.19a1.74,1.74,0,0,0,.11-.18,5.3,5.3,0,0,0,.38-.8,6.3,6.3,0,0,0,.32-1.73,9.55,9.55,0,0,0-.09-1.77,17.85,17.85,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.19,15.19,0,0,1-1-3.46,5.19,5.19,0,0,1,0-1.8,3.33,3.33,0,0,1,.33-.86,3,3,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.11,25.11,0,0,1,3.58.17,47,47,0,0,1,7,1.42c2.3.63,4.58,1.39,6.82,2.21s4.46,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.47l.37.26.18.14c0,.06.13.07.15.21l-.08,0a.64.64,0,0,0-.12-.12l-.17-.14-.37-.25-.76-.47c-.51-.31-1-.61-1.55-.9-1.05-.58-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.69-4.51-1.57-6.81-2.2a48.21,48.21,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.85,7.85,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,3,3,0,0,0-.31.82,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09.95,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.14.18a8.55,8.55,0,0,1-1.24,1.31,13,13,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.55-4.78.2-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.25,1.12,1.26,1.6,2.5,3.21,3.71,4.85a112.31,112.31,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,30.25,30.25,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.65,1.69-.13.28-.25.55-.39.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.18,12.18,0,0,1-3.38,1.34,16.82,16.82,0,0,1-3.59.46,24.69,24.69,0,0,1-7.15-1A36.41,36.41,0,0,1,812.3,447c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.8-2.27l-.33-.3-.33-.3c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.44-.63-.65a38.59,38.59,0,0,1-4.43-5.67,34,34,0,0,1-3.19-6.46,27.93,27.93,0,0,1-1-3.46,21.58,21.58,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,13.91,13.91,0,0,1,.25-1.8,13.75,13.75,0,0,1,2.11-5,14.17,14.17,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,30.17,30.17,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.27,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6q-3.3-1.38-6.67-2.58c-2.24-.81-4.51-1.56-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.9-.05-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.44,27.44,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,18.47,18.47,0,0,0-2.87,2,19,19,0,0,0-4.33,5.49,28.42,28.42,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.76.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a84.62,84.62,0,0,1-1.93,14.25,49.56,49.56,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.71-1.16,1.38-.61.68c-.2.22-.39.45-.6.66-.42.44-.82.88-1.25,1.3a52.25,52.25,0,0,1-5.43,4.76,53.44,53.44,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12,89.46,89.46,0,0,1-14.36-.52,109.23,109.23,0,0,1-14.14-2.6l-2-.53Zm285.62-22.21q-3.51.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13.51,13.51,0,0,0-1.39,5.08,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,29.09,29.09,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2.05,1.22,3.1,1.77a35.47,35.47,0,0,0,6.61,2.64,23.84,23.84,0,0,0,7,1,17.19,17.19,0,0,0,3.5-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33,8.12,8.12,0,0,0,.45-.74c.13-.26.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,70.44,70.44,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12c-1.27-1.7-2.56-3.39-3.88-5Z"/><polygon class="cls-3" points="820.67 398.56 820.43 398.27 819.86 398.38 820.1 398.67 820.67 398.56"/></g><g class="cls-1"><path class="cls-82" d="M530.57,425.17l2,.51a110.07,110.07,0,0,0,14.07,2.55,88.26,88.26,0,0,0,14.26.5A69,69,0,0,0,575,426.6a55.86,55.86,0,0,0,13.19-5.3,50.75,50.75,0,0,0,11.29-8.61,56.16,56.16,0,0,0,8.61-11.31,48.75,48.75,0,0,0,5-13.26A82.79,82.79,0,0,0,615,374c.27-4.76.24-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.78-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.61,19.61,0,0,1,4.51-5.7,18.65,18.65,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.48,28.48,0,0,1,7.11-1.42c1.21-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.51,98.51,0,0,1,14,3.11q3.45,1,6.83,2.25t6.7,2.6c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.82,14.42q6,3.86,12,7.87t11.83,8.11q11.71,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.95,20.72,19.85,5.13,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.57.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.25,7.14-.54a45.08,45.08,0,0,0,7-1.35,24.3,24.3,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.13-.18.12-.19.12-.18a5.8,5.8,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,17.15,17.15,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.19,5.19,0,0,1,0-1.8,3.33,3.33,0,0,1,.33-.86,3,3,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.32,25.32,0,0,1,3.59.17,46.82,46.82,0,0,1,7,1.42c2.3.63,4.58,1.39,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.06.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.47l.37.26.18.14c0,.06.13.07.15.21l-.07,0-.13-.13-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.61-1.55-.9-1.05-.57-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.4-1.86-6.65-2.69-4.51-1.57-6.81-2.2a48.21,48.21,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.92,7.92,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,3,3,0,0,0-.31.82,5.19,5.19,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.94,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09,1,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.13.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,23.52,23.52,0,0,1-3.37,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.55-4.78.2-9.57.13-14.34,0s-9.56-.41-14.33-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.49,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,69,69,0,0,1,3.15,6.47,45.2,45.2,0,0,1,2.27,6.83,29.74,29.74,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.25.55-.39.83a7.24,7.24,0,0,1-.48.79,8.7,8.7,0,0,1-2.71,2.45,12.18,12.18,0,0,1-3.38,1.34,16.73,16.73,0,0,1-3.59.46,24.57,24.57,0,0,1-7.14-1,36.51,36.51,0,0,1-6.69-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.79-2.27l-.34-.3-.33-.3-.66-.62-.64-.63c-.22-.21-.42-.44-.62-.65a38,38,0,0,1-4.44-5.67,34,34,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.83,13.83,0,0,1,0-1.82,13.52,13.52,0,0,1,.25-1.79,13.81,13.81,0,0,1,1.19-3.43,15.2,15.2,0,0,1,.92-1.56,15.77,15.77,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.73,49.17,49.17,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.82-8.1t-12-7.84c-8.07-5.11-16.28-10-24.79-14.36-4.24-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.67-2.58s-4.5-1.56-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.9,0-1.78,0c-1.18,0-2.37,0-3.55.12a27.53,27.53,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,18.47,18.47,0,0,0-2.87,2,19,19,0,0,0-4.33,5.49,28.42,28.42,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a83.85,83.85,0,0,1-1.93,14.26,49.3,49.3,0,0,1-5.12,13.45,60.24,60.24,0,0,1-4,6c-.18.24-.36.48-.55.71l-.56.71c-.38.47-.77.92-1.16,1.38l-.6.68c-.21.22-.4.45-.61.66-.42.44-.82.88-1.25,1.3a52.25,52.25,0,0,1-5.43,4.76,53.44,53.44,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.78,69.78,0,0,1-14.23,2.12,89.46,89.46,0,0,1-14.36-.52,109.23,109.23,0,0,1-14.14-2.6l-2.06-.53ZM816.21,403q-3.53.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.88,16.88,0,0,0-4.51,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,21.81,21.81,0,0,0,.49,3.51,29.09,29.09,0,0,0,1,3.42,33.74,33.74,0,0,0,3.16,6.37,38.35,38.35,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.32.31.34.29c.89.79,1.82,1.53,2.77,2.24.49.35,1,.71,1.46,1l.74.5.76.47c1,.64,2,1.22,3.1,1.77a35.11,35.11,0,0,0,6.6,2.64,23.89,23.89,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3A8.28,8.28,0,0,0,834,450a6.36,6.36,0,0,0,.45-.74c.13-.26.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12c-1.26-1.7-2.56-3.39-3.88-5C817.8,402.67,817,402.81,816.21,403Z"/><polygon class="cls-3" points="819.18 402.44 818.94 402.15 818.37 402.26 818.61 402.55 819.18 402.44"/></g><g class="cls-1"><path class="cls-83" d="M529.12,428.91l2,.52A110.07,110.07,0,0,0,545.2,432a88.26,88.26,0,0,0,14.26.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3A50.75,50.75,0,0,0,598,416.44a55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,83.8,83.8,0,0,0,1.91-14.13c.27-4.76.24-9.53.08-14.3-.33-9.54-1.26-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.61,19.61,0,0,1,4.51-5.7,18.65,18.65,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.48,28.48,0,0,1,7.11-1.42c1.21-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.25t6.7,2.6c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.87s7.92,5.36,11.83,8.12q11.71,8.27,23,17.13t22,18.38c7.15,6.36,14.1,12.95,20.72,19.85,5.13,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.57.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.25,7.14-.54a45.08,45.08,0,0,0,7-1.35,24.3,24.3,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.13-.18.12-.19.12-.18a5.8,5.8,0,0,0,.37-.8,6.31,6.31,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,17.15,17.15,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.19,5.19,0,0,1,.05-1.8,3.33,3.33,0,0,1,.33-.86,3,3,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.32,25.32,0,0,1,3.59.17,46.82,46.82,0,0,1,7,1.42c2.3.63,4.58,1.39,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.06.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.48l.37.25.18.14c.05.06.13.07.15.21l-.07,0-.13-.13-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.61-1.55-.9-1-.57-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.69-4.51-1.57-6.81-2.2a48.21,48.21,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.92,7.92,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,3,3,0,0,0-.31.82,5.19,5.19,0,0,0-.05,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09.95,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.13.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,22.38,22.38,0,0,1-3.37,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.12-14.35,0s-9.55-.41-14.32-.69L872,406c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.49,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,29.74,29.74,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.25.55-.39.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.52,12.52,0,0,1-3.38,1.35,17.46,17.46,0,0,1-3.59.45,24.69,24.69,0,0,1-7.15-1,36.41,36.41,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.79-2.27l-.34-.3-.33-.3c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.44-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.74,33.74,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,21.58,21.58,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,13.52,13.52,0,0,1,.25-1.79,13.81,13.81,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.77,15.77,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.73,49.17,49.17,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.24-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.67-2.58s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.9,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.53,27.53,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,18.47,18.47,0,0,0-2.87,2,19,19,0,0,0-4.33,5.49,28.59,28.59,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a84.87,84.87,0,0,1-1.93,14.26,49.3,49.3,0,0,1-5.12,13.45,60.24,60.24,0,0,1-4,6l-.55.71-.56.71c-.38.47-.78.92-1.16,1.38l-.6.68c-.21.22-.4.45-.61.66-.42.44-.82.88-1.25,1.3a52.25,52.25,0,0,1-5.43,4.76,53.44,53.44,0,0,1-6,3.95A56.53,56.53,0,0,1,573.72,431a69.88,69.88,0,0,1-14.23,2.12,89.46,89.46,0,0,1-14.36-.52A109.23,109.23,0,0,1,531,430c-.69-.17-1.39-.35-2.08-.54Zm285.66-22.2q-3.53.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.88,16.88,0,0,0-4.51,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,29.09,29.09,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2,1.22,3.11,1.77a35.11,35.11,0,0,0,6.6,2.64,23.84,23.84,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33A6.36,6.36,0,0,0,833,453c.13-.26.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,112.21,112.21,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.06C816.37,406.42,815.57,406.56,814.78,406.71Z"/><polygon class="cls-3" points="817.75 406.19 817.51 405.9 816.94 406.01 817.18 406.3 817.75 406.19"/></g><g class="cls-1"><path class="cls-84" d="M527.74,432.48l1.92.5a110.24,110.24,0,0,0,14.06,2.55A88.37,88.37,0,0,0,558,436a68.45,68.45,0,0,0,14.09-2.12,55.86,55.86,0,0,0,13.19-5.3A50.75,50.75,0,0,0,596.56,420a56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.09-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.51-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.92,50.92,0,0,1,1.21-7.12,30.15,30.15,0,0,1,2.54-6.78,19.51,19.51,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.6,0,1.21,0,1.81,0l.9,0,.89,0c2.4.13,4.79.39,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.53,4.37,16.75,9.29,24.82,14.42q6.06,3.86,12,7.86c4,2.67,7.93,5.36,11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.16,6.36,14.1,12.94,20.73,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.1,19.11.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.22,8.22,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.52-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,3.06,3.06,0,0,1,.33-.85,2.78,2.78,0,0,1,.58-.7,7.9,7.9,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,25.26,25.26,0,0,1,3.58.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68q.79.43,1.56.9l.76.47.37.26.18.14c0,.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25c-.25-.17-.51-.32-.76-.48-.51-.3-1-.6-1.56-.89-1-.58-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.71,7.71,0,0,0-3.12,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.5,1.09,1,2.2,1.36,3.33a18.16,18.16,0,0,1,.9,3.48,9.94,9.94,0,0,1,.1,1.81,6.1,6.1,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.42-14.33-.7l-14.31-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47A45.24,45.24,0,0,1,833.2,440a30.18,30.18,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.34-.3-.33-.31c-.21-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.65a37.42,37.42,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28,28,0,0,1-1-3.46,21.7,21.7,0,0,1-.49-3.58,15.79,15.79,0,0,1,0-1.82,12.37,12.37,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.42,14.62,14.62,0,0,1,.92-1.57,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.5-12.44-22-18.34-15.2-11.59-23-17.1c-3.91-2.75-7.86-5.43-11.83-8.09s-8-5.28-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.35-.33-4.72-.58-7.1-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.52,19.52,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.75-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71-1.16,1.38-.6.67c-.2.23-.39.45-.6.67-.42.43-.82.88-1.26,1.3a52.29,52.29,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34A69.88,69.88,0,0,1,558,436.66a89.63,89.63,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2-.52ZM813.3,410.26a68.85,68.85,0,0,0-6.95,1.66,49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.9,12.9,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.41.44.62.64l.63.63.65.61.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1,.24.16.49.34.74.49l.75.48c1,.63,2,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.06,8.06,0,0,0,2.57-2.32q.24-.36.45-.75c.13-.25.25-.53.37-.79.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,45.88,45.88,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C814.9,410,814.1,410.1,813.3,410.26Z"/><polygon class="cls-3" points="816.27 409.74 816.04 409.44 815.47 409.55 815.71 409.85 816.27 409.74"/></g><g class="cls-1"><path class="cls-85" d="M526.23,436.36l1.94.5a110.24,110.24,0,0,0,14.06,2.55,89.54,89.54,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,53.51,53.51,0,0,0,6-3.91,53,53,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,83.93,83.93,0,0,0,1.91-14.13c.26-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.5-9.57-.43-14.36,0-2.4.16-4.8.41-7.2a49.1,49.1,0,0,1,1.2-7.11,30,30,0,0,1,2.54-6.79,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,22,22,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.62-.11.6,0,1.2,0,1.8,0l.9,0,.9,0c2.39.13,4.78.39,7.16.72a100.56,100.56,0,0,1,14,3.12q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.94,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.33,14.35-.29,9.56.11,19.12.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22,22,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.22,8.22,0,0,0,1.22-1.28l.14-.17.12-.19.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,17.85,17.85,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,3.4,3.4,0,0,1,.33-.85,3,3,0,0,1,.58-.7,7.9,7.9,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,25.18,25.18,0,0,1,3.58.18,47,47,0,0,1,7,1.42c2.3.63,4.57,1.38,6.82,2.21s4.46,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.16,1.68q.79.44,1.56.9c.26.15.51.31.76.47s.25.17.37.26l.18.14c0,.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.17-.14-.37-.25c-.25-.17-.51-.32-.76-.48l-1.55-.89c-1.05-.58-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.69-4.51-1.57-6.81-2.2a46.92,46.92,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.61,7.61,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.44,1.11.93,2.19,1.45,3.27,1,2.16,2.12,4.28,3.11,6.46.49,1.09.95,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6.1,6.1,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a8.55,8.55,0,0,1-1.24,1.31,13.38,13.38,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7.05,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.7L869,413.4c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,30.71,30.71,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.49,12.49,0,0,1-3.38,1.34,16.82,16.82,0,0,1-3.59.46,24.69,24.69,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.33-.3-.33-.31c-.22-.2-.45-.4-.66-.61l-.64-.64c-.22-.21-.42-.43-.63-.64a38.67,38.67,0,0,1-4.43-5.68,33.66,33.66,0,0,1-3.19-6.45,27.93,27.93,0,0,1-1-3.46,21.72,21.72,0,0,1-.5-3.58,15.79,15.79,0,0,1,0-1.82,13.91,13.91,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.42,14.62,14.62,0,0,1,.92-1.57,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51A30.17,30.17,0,0,1,798,418a49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09c-3.91-2.76-7.85-5.44-11.83-8.1s-8-5.28-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.33-4.73-.58-7.11-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.91,19.91,0,0,0-3.2,1.43,18.47,18.47,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.66,28.66,0,0,0-2.47,6.62,48.49,48.49,0,0,0-1.18,7c-.24,2.37-.36,4.75-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37a84.59,84.59,0,0,1-1.93,14.26,50,50,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.71L598,421.73l-.61.67c-.2.23-.39.45-.6.67-.42.43-.82.88-1.25,1.3a53.46,53.46,0,0,1-5.43,4.76,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12,89.46,89.46,0,0,1-14.36-.52,111,111,0,0,1-14.14-2.6l-2-.52Zm285.58-22.22a69.5,69.5,0,0,0-6.95,1.66,49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,14.7,14.7,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,20.88,20.88,0,0,0,.49,3.51,28.39,28.39,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.41.44.62.64l.63.63.66.61.32.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1,.25.16.49.34.74.49l.75.48c1,.63,2,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.54,16.54,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.06,8.06,0,0,0,2.57-2.32c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.1.64-1.66a22,22,0,0,0,1.13-7,30.38,30.38,0,0,0-.89-7,43.65,43.65,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,111.72,111.72,0,0,0-7.77-12q-1.9-2.56-3.88-5Z"/><polygon class="cls-3" points="814.78 413.62 814.55 413.32 813.98 413.43 814.22 413.73 814.78 413.62"/></g><g class="cls-1"><path class="cls-86" d="M524.78,440.1c.65.18,1.31.34,2,.51a110.24,110.24,0,0,0,14.06,2.55,89.54,89.54,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,53.51,53.51,0,0,0,5.95-3.91,53,53,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,85,85,0,0,0,1.91-14.13c.26-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.5-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.53,50.53,0,0,1,1.21-7.11,30,30,0,0,1,2.54-6.79,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.84,28.84,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.61,0,1.21,0,1.81,0l.9,0,.9,0c2.39.13,4.78.39,7.16.72a100.56,100.56,0,0,1,14,3.12q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.94,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.11,19.12.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.22,8.22,0,0,0,1.22-1.28l.14-.17.12-.19.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.06,3.06,0,0,1,.33-.85,2.78,2.78,0,0,1,.58-.7,7.9,7.9,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,25.18,25.18,0,0,1,3.58.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.16,1.68q.8.44,1.56.9l.76.47.37.26.18.14c.05.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25c-.25-.17-.51-.32-.76-.48-.51-.3-1-.6-1.56-.89-1-.58-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.71,7.71,0,0,0-3.12,1.65,2.93,2.93,0,0,0-.55.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0-.05,1.76,15.24,15.24,0,0,0,1,3.43c.44,1.11.93,2.19,1.45,3.27,1,2.16,2.12,4.28,3.11,6.46.49,1.1,1,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6.1,6.1,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a9.06,9.06,0,0,1-1.24,1.31,13.26,13.26,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.7l-14.32-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.71,30.71,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.18,12.18,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.34-.3-.33-.31c-.21-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.64a38,38,0,0,1-4.43-5.68,33.66,33.66,0,0,1-3.19-6.45,27.93,27.93,0,0,1-1-3.46,20.71,20.71,0,0,1-.5-3.58,15.79,15.79,0,0,1,0-1.82,12.37,12.37,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.42,14.62,14.62,0,0,1,.92-1.57,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09c-3.91-2.76-7.85-5.44-11.83-8.1s-8-5.28-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.33-4.73-.58-7.11-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12A27.52,27.52,0,0,0,622.2,302a19.91,19.91,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.66,28.66,0,0,0-2.47,6.62,48.49,48.49,0,0,0-1.18,7c-.24,2.37-.36,4.75-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37A85.63,85.63,0,0,1,608,403.22a49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6l-.55.71-.57.71-1.16,1.38-.6.67c-.2.23-.39.45-.6.67-.42.43-.82.88-1.26,1.3a52.29,52.29,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12,89.63,89.63,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2-.53Zm285.6-22.21a68.85,68.85,0,0,0-7,1.66,49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.9,12.9,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.41.44.62.64l.63.63.65.61.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1l.74.5.75.47c1,.63,2,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.06,8.06,0,0,0,2.57-2.32c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,44.74,44.74,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12q-1.89-2.56-3.87-5Z"/><polygon class="cls-3" points="813.36 417.37 813.12 417.07 812.55 417.18 812.79 417.48 813.36 417.37"/></g><g class="cls-1"><path class="cls-87" d="M523.35,443.79c.67.18,1.33.35,2,.51a110,110,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49,69,69,0,0,0,14.09-2.13A55.83,55.83,0,0,0,581,439.93,52.21,52.21,0,0,0,586.9,436a50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.36,49.36,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.31-.33-9.54-1.25-19.05-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a50.64,50.64,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.54,98.54,0,0,1,14,3.12c2.31.67,4.58,1.43,6.84,2.24s4.48,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.27,23,17.13c7.51,5.92,14.88,12,22,18.39s14.1,12.94,20.72,19.85c5.13,5.34,10.06,10.88,14.66,16.69,3.81-.59,7.64-.93,11.48-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.16-1.68,15.28,15.28,0,0,1,3.56-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c.05.07.13.07.15.22l-.07,0-.13-.13a1.09,1.09,0,0,0-.17-.13l-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.21a47.92,47.92,0,0,0-7-1.4,23.59,23.59,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0,0,1.76,15.18,15.18,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.83,9.83,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.12.19L931,416a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.45,22.45,0,0,1-3.38,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.88c-9.55-.59-19.09-1.12-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.13-1.78l-.76-.49-.74-.5c-.51-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,15.61,15.61,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,14,14,0,0,1,1.19-3.43,15.2,15.2,0,0,1,.92-1.56,17.11,17.11,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,67.58,67.58,0,0,1,7-1.66l2.22-.39c-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.8s-14.51-12.43-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22A99.39,99.39,0,0,0,641.94,305c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.14,9.54.43,14.31.59,9.53,1.51,19,1.84,28.63.16,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.46,52.46,0,0,1-11.46,8.71,56.5,56.5,0,0,1-13.36,5.33A69.12,69.12,0,0,1,553.71,448a88.41,88.41,0,0,1-14.37-.53,108.74,108.74,0,0,1-14.13-2.59l-2.07-.54ZM809,421.58a69.08,69.08,0,0,0-7,1.67,46.61,46.61,0,0,0-6.68,2.49,29.23,29.23,0,0,0-6.08,3.7,16.77,16.77,0,0,0-4.51,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,28.39,28.39,0,0,0,1,3.41A33.45,33.45,0,0,0,788,455a37.82,37.82,0,0,0,4.39,5.61l.62.64.64.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.22,24.22,0,0,0,7,.95,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.13-.25.25-.53.38-.8q.35-.81.63-1.65a21.49,21.49,0,0,0,1.13-7,29.46,29.46,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.05C810.58,421.29,809.78,421.43,809,421.58Z"/><polygon class="cls-3" points="811.96 421.07 811.72 420.77 811.16 420.88 811.39 421.17 811.96 421.07"/></g><g class="cls-1"><path class="cls-88" d="M521.85,447.67l2,.51a110,110,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.61-11.3,49,49,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.62-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29,29,0,0,1,2.54-6.78,19.82,19.82,0,0,1,4.51-5.71,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.27,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.28,9.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,2.86,2.86,0,0,1,.34-.85,2.66,2.66,0,0,1,.58-.71,7.82,7.82,0,0,1,3.17-1.67,14.63,14.63,0,0,1,3.55-.51,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89l.77.48.37.25.17.14c.06.07.14.07.15.22l-.07,0a.5.5,0,0,0-.13-.13l-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,25.11,25.11,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.66,14.66,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,1.22,1.22,0,0,1-.12.19l-.12.19-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.13,22.13,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,13.74,13.74,0,0,1,1.19-3.42,14.41,14.41,0,0,1,.93-1.57,15.12,15.12,0,0,1,1.09-1.44,20.54,20.54,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,69.79,69.79,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09Q723.58,349,717.61,345t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.54.12a27.5,27.5,0,0,0-6.92,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.74-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26A49.36,49.36,0,0,1,600,424.26a60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59l-2.08-.54ZM807.5,425.46a69.74,69.74,0,0,0-7,1.67,46.61,46.61,0,0,0-6.68,2.49,28.91,28.91,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,26.71,26.71,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.65,35.65,0,0,0,6.61,2.65,24.1,24.1,0,0,0,7,.95,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.14-.25.26-.53.38-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C809.1,425.17,808.3,425.31,807.5,425.46Z"/><polygon class="cls-3" points="810.47 424.95 810.24 424.65 809.67 424.76 809.9 425.05 810.47 424.95"/></g><g class="cls-1"><path class="cls-89" d="M520.4,451.41c.67.18,1.35.36,2,.52a110,110,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49,68.94,68.94,0,0,0,14.09-2.13,56.07,56.07,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,50.81,50.81,0,0,0,5.34-4.71,56.38,56.38,0,0,0,8.61-11.3,49.36,49.36,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.62-.3-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a52.14,52.14,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.82,19.82,0,0,1,4.51-5.71,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.12,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.27,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.67,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.33.71s9.55.23,14.33.05c2.38-.1,4.76-.26,7.13-.54a45.1,45.1,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,7.84,7.84,0,0,1,3.16-1.67A14.78,14.78,0,0,1,929,393a26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.38.25.17.14c0,.07.13.07.15.22l-.07,0a.76.76,0,0,0-.13-.13l-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1.05-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.2a46.42,46.42,0,0,0-7-1.41,26.44,26.44,0,0,0-3.56-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.66,14.66,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.19-.12.19-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7.05,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,68.94,68.94,0,0,1,3.15,6.47,47.18,47.18,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.77-.49-.74-.5c-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.49,37.49,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,12,12,0,0,1,.24-1.8,13.74,13.74,0,0,1,1.19-3.42,16.14,16.14,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.89,19.89,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A99.39,99.39,0,0,0,639,312.62c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.74-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26A49.36,49.36,0,0,1,598.57,428a60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4A56.5,56.5,0,0,1,565,453.49a69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,109.05,109.05,0,0,1-14.13-2.59l-2.1-.55Zm285.67-22.2a69.08,69.08,0,0,0-7,1.67,47.84,47.84,0,0,0-6.68,2.49,28.91,28.91,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,26.71,26.71,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.61.64l.64.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.57,24.57,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.13-.25.26-.53.38-.8.23-.54.44-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.87-5.05C807.66,428.92,806.87,429.06,806.07,429.21Z"/><polygon class="cls-3" points="809.04 428.7 808.8 428.4 808.24 428.51 808.47 428.8 809.04 428.7"/></g><g class="cls-1"><path class="cls-90" d="M519,455.11c.67.18,1.35.36,2,.52a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,52.21,52.21,0,0,0,5.95-3.92,52.81,52.81,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26A85.11,85.11,0,0,0,603.43,404c.26-4.76.24-9.54.08-14.3-.34-9.55-1.26-19.06-1.86-28.62-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30,30,0,0,1,2.54-6.78,19.85,19.85,0,0,1,4.52-5.71,18.85,18.85,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.81,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.16,6.35,14.11,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.84,2.84,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,7.88,7.88,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.74,26.74,0,0,1,3.58.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1.05.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c.05.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.51-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68-2.14-1.08-4.3-2.09-6.49-3.06s-4.4-1.86-6.64-2.68-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,25.11,25.11,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.73,2.73,0,0,0-.55.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0-.05,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.68-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.34-.3-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a37.93,37.93,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,26,26,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,14,14,0,0,1,2.11-5,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a99.7,99.7,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.87,20.87,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.05,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6l-.55.71-.57.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3A51,51,0,0,1,583,447.9a53.05,53.05,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.21,69.21,0,0,1-14.23,2.13,88.49,88.49,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59l-2.1-.55Zm285.67-22.2a68.89,68.89,0,0,0-6.95,1.67,47.18,47.18,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.69,12.69,0,0,0-.23,1.75,14.74,14.74,0,0,0,0,1.76,19.89,19.89,0,0,0,.49,3.52,26.67,26.67,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63c.22.21.44.4.65.61l.33.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.93,35.93,0,0,0,6.61,2.65,24.15,24.15,0,0,0,7,.95,16,16,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,30,30,0,0,0-.88-7,45,45,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.33,109.33,0,0,0-7.78-12Q809,435,807,432.5C806.24,432.62,805.44,432.76,804.64,432.91Z"/><polygon class="cls-3" points="807.61 432.4 807.38 432.1 806.81 432.21 807.05 432.5 807.61 432.4"/></g><g class="cls-1"><path class="cls-91" d="M517.47,459l2,.52a108.54,108.54,0,0,0,14.06,2.56,88.41,88.41,0,0,0,14.27.49,68.46,68.46,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,53.51,53.51,0,0,0,6-3.91,51.84,51.84,0,0,0,5.34-4.71,56,56,0,0,0,8.6-11.3A48.7,48.7,0,0,0,600,422a84.07,84.07,0,0,0,1.91-14.13c.27-4.76.24-9.54.08-14.3-.34-9.55-1.26-19.06-1.85-28.62-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,30,30,0,0,1,2.54-6.78,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,21,21,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.08,8.52,4.37,16.74,9.28,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.06,23.06,0,0,0,3.34-1.24,13,13,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.52,4.52,0,0,0,.38-.8,6.3,6.3,0,0,0,.32-1.73,9.55,9.55,0,0,0-.09-1.77,17.5,17.5,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,3.06,3.06,0,0,1,.58-.71,7.88,7.88,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.66,26.66,0,0,1,3.58.17,49.59,49.59,0,0,1,7,1.42c2.3.64,4.58,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.15.22l-.08,0a1,1,0,0,0-.12-.13l-.17-.13-.37-.26-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.09-6.48-3.06s-4.41-1.86-6.65-2.68-4.51-1.58-6.81-2.2a46.92,46.92,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0-.05,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09.95,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9,9,0,0,1-1.24,1.31,13.38,13.38,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.88c-9.54-.59-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,68.85,68.85,0,0,1,3.14,6.47,44.87,44.87,0,0,1,2.28,6.83,30.27,30.27,0,0,1,.9,7.16,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.8,16.8,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.33-.3-.33-.31-.66-.61-.64-.64c-.22-.21-.42-.43-.63-.65a38.07,38.07,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,21.43,21.43,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.84,13.84,0,0,1,1.44-5.22,12.9,12.9,0,0,1,.92-1.57,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.3,29.3,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.09t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.51-1.55-6.79-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.9,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.43,27.43,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a84.73,84.73,0,0,1-1.93,14.26,49.69,49.69,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.7-1.16,1.39-.61.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a52.46,52.46,0,0,1-11.46,8.71,56.5,56.5,0,0,1-13.36,5.33,69.21,69.21,0,0,1-14.23,2.13,88.33,88.33,0,0,1-14.36-.53,109.2,109.2,0,0,1-14.14-2.59l-2.11-.55Zm285.68-22.2c-2.34.45-4.66,1-6.95,1.67a48.44,48.44,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4,13.51,13.51,0,0,0-1.39,5.08,14.89,14.89,0,0,0,0,1.77,20.88,20.88,0,0,0,.49,3.51,28.39,28.39,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.64.63c.21.21.43.4.65.61l.32.3.34.3c.88.79,1.82,1.52,2.77,2.24.48.35,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.51,35.51,0,0,0,6.61,2.65,24.18,24.18,0,0,0,7,1,16.53,16.53,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,6.07,6.07,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30,30,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12q-1.9-2.56-3.88-5.05C804.75,436.5,804,436.64,803.15,436.79Z"/><polygon class="cls-3" points="806.13 436.28 805.89 435.98 805.32 436.09 805.56 436.38 806.13 436.28"/></g><g class="cls-1"><path class="cls-92" d="M516,462.73l2.07.53a108.54,108.54,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,68.46,68.46,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,53.51,53.51,0,0,0,5.95-3.91,51.84,51.84,0,0,0,5.34-4.71,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,85.11,85.11,0,0,0,1.91-14.13c.26-4.76.24-9.54.08-14.3-.34-9.55-1.26-19.06-1.86-28.61-.29-4.78-.5-9.57-.43-14.37,0-2.4.16-4.8.41-7.19a49.47,49.47,0,0,1,1.2-7.12,30,30,0,0,1,2.54-6.78,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.62-.12l1.8,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.08,8.52,4.37,16.74,9.28,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.72s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,3.06,3.06,0,0,1,.58-.71,8,8,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.74,26.74,0,0,1,3.58.17,49.59,49.59,0,0,1,7,1.42c2.3.64,4.57,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.16,1.68.53.29,1.05.58,1.56.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a1,1,0,0,0-.12-.13l-.18-.13c-.11-.09-.24-.17-.36-.26l-.76-.47c-.51-.31-1-.6-1.55-.89-1.05-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.09-6.48-3.05s-4.41-1.87-6.65-2.69-4.51-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,45.52,45.52,0,0,1-7.05,1.38c-2.37.28-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,68.85,68.85,0,0,1,3.14,6.47,44.87,44.87,0,0,1,2.28,6.83,30.8,30.8,0,0,1,.9,7.16,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.54-.38.82s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.19,16.19,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.33-.3-.33-.31c-.22-.2-.45-.4-.66-.61l-.64-.64c-.22-.21-.42-.43-.63-.65a38.07,38.07,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,14,14,0,0,1,2.11-5,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22A99.39,99.39,0,0,0,634.68,324c-2.36-.33-4.73-.58-7.11-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.87,20.87,0,0,0-3.2,1.44,17.82,17.82,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,50,50,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.57.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,53.05,53.05,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33A69.21,69.21,0,0,1,546.44,467a88.33,88.33,0,0,1-14.36-.53,109.2,109.2,0,0,1-14.14-2.59l-2.13-.56Zm285.71-22.19c-2.34.45-4.66,1-7,1.67a48.44,48.44,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,14.43,14.43,0,0,0-.23,1.75,14.89,14.89,0,0,0,0,1.77,20.88,20.88,0,0,0,.49,3.51,28.39,28.39,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,36.68,36.68,0,0,0,4.39,5.61c.21.21.41.44.62.64l.63.63.66.61.32.3.34.3c.88.79,1.82,1.52,2.77,2.24.48.35,1,.7,1.46,1l.74.49.75.48c1,.63,2.05,1.22,3.1,1.76a35.24,35.24,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.54,16.54,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.53,30.53,0,0,0-.89-7,45,45,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,110.73,110.73,0,0,0-7.77-12q-1.9-2.56-3.88-5.05C803.32,440.25,802.52,440.39,801.72,440.54Z"/><polygon class="cls-3" points="804.7 440.03 804.46 439.73 803.89 439.84 804.13 440.13 804.7 440.03"/></g><g class="cls-1"><path class="cls-93" d="M514.59,466.42q1,.29,2.1.54a111.72,111.72,0,0,0,14.06,2.56A88.25,88.25,0,0,0,545,470a68.94,68.94,0,0,0,14.09-2.13,55.68,55.68,0,0,0,13.2-5.3,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.29,49.29,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a52.14,52.14,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.78,19.78,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.1,2.42-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.43,6.83,2.25s4.49,1.68,6.69,2.6c4.43,1.85,8.76,3.89,13,6.08,8.52,4.37,16.75,9.29,24.82,14.42q6,3.87,12,7.87t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.84,5.13,5.35,10.06,10.89,14.67,16.7,3.8-.59,7.63-.93,11.47-1.15,4.77-.27,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.38,9.38,0,0,0,1.23-1.29l.13-.17.13-.18.12-.19.12-.18a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.4-1.13-.86-2.23-1.35-3.32-1-2.17-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.44,5.44,0,0,1,0-1.8,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.16-1.68,14.29,14.29,0,0,1,3.56-.5,25.32,25.32,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.63,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.69,4.35,2,6.48,3.07c1.07.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.48l.37.25a1.41,1.41,0,0,1,.18.14c0,.06.13.07.15.22l-.07,0a.76.76,0,0,0-.13-.13l-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.61-1.55-.9-1.05-.57-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06t-6.64-2.69c-2.25-.82-4.52-1.57-6.82-2.2a47.68,47.68,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,14,14,0,0,0-3.52.5,7.92,7.92,0,0,0-3.11,1.65,2.57,2.57,0,0,0-.55.68,2.85,2.85,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.32a18.85,18.85,0,0,1,.91,3.49,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.19-.12.19-.13.18-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.58,13.58,0,0,1-3,1.94,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7.05,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.12-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.55-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.49,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.38,46.38,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.24.55-.39.83a7.24,7.24,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.57,24.57,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.12-1.79l-.77-.48-.74-.5c-.5-.33-1-.69-1.47-1-1-.72-1.91-1.47-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.44-.62-.65a38,38,0,0,1-4.44-5.67,33.74,33.74,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,12,12,0,0,1,.24-1.8,13.81,13.81,0,0,1,1.19-3.43,15.2,15.2,0,0,1,.92-1.56,15.63,15.63,0,0,1,1.1-1.44,19.34,19.34,0,0,1,2.6-2.52,30,30,0,0,1,6.15-3.73,49.66,49.66,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.54-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.84c-8.07-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.66-2.58s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a28,28,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,17.88,17.88,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,29,29,0,0,0-2.47,6.61,50,50,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.15,9.54.43,14.3.6,9.53,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37A83.85,83.85,0,0,1,598,429.58,49.3,49.3,0,0,1,592.83,443a59.1,59.1,0,0,1-4,6c-.17.24-.36.48-.55.71l-.56.71c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.4.45-.61.66-.42.44-.82.89-1.25,1.3a51,51,0,0,1-11.46,8.71,56.53,56.53,0,0,1-13.36,5.34,69.1,69.1,0,0,1-14.22,2.12,89.54,89.54,0,0,1-14.37-.52,109.08,109.08,0,0,1-14.13-2.6l-2.17-.56Zm285.74-22.18q-3.52.66-7,1.66a47.88,47.88,0,0,0-6.68,2.5,28.87,28.87,0,0,0-6.07,3.69,17,17,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21,21,0,0,0,.48,3.52,29.51,29.51,0,0,0,1,3.41,33.78,33.78,0,0,0,3.17,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.61.64l.64.62c.21.21.43.41.65.61l.33.31.33.29c.89.8,1.82,1.53,2.77,2.24.49.35,1,.71,1.46,1l.74.5.76.48c1,.63,2,1.21,3.1,1.76a35.11,35.11,0,0,0,6.6,2.64,23.89,23.89,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.13-.26.26-.53.38-.8.23-.54.44-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,112.21,112.21,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.87-5.06Q801.51,444,800.33,444.24Z"/><polygon class="cls-3" points="803.3 443.73 803.06 443.43 802.5 443.54 802.73 443.83 803.3 443.73"/></g><g class="cls-1"><path class="cls-94" d="M513.08,470.3c.71.18,1.41.37,2.12.54a111.72,111.72,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13,55.51,55.51,0,0,0,13.2-5.3,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,55.64,55.64,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.29,29.29,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.61-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.75,3.9,13,6.08,8.52,4.37,16.75,9.29,24.82,14.42q6,3.87,12,7.87t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85C792,436,797,441.5,801.57,447.31c3.8-.59,7.63-.93,11.47-1.15,4.78-.27,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33,0c2.38-.1,4.77-.26,7.14-.55a45.18,45.18,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.31,9.31,0,0,0,1.22-1.29l.13-.17.13-.18.13-.19a1.74,1.74,0,0,1,.11-.18,4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77A18.6,18.6,0,0,0,921,434c-.4-1.13-.86-2.23-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.44,5.44,0,0,1,0-1.8,2.86,2.86,0,0,1,.34-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.21,14.21,0,0,1,3.55-.5,25.32,25.32,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.63,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.69,4.35,2,6.48,3.07c1.07.55,2.13,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.52.31.77.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06t-6.64-2.69c-2.24-.82-4.52-1.57-6.82-2.2a46.51,46.51,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,14.06,14.06,0,0,0-3.53.5,7.92,7.92,0,0,0-3.11,1.65,2.57,2.57,0,0,0-.55.68,2.85,2.85,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.36,3.32a18.83,18.83,0,0,1,.9,3.49,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,5.22,5.22,0,0,1-.39.83,2,2,0,0,1-.12.19l-.12.19-.13.18-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.58,13.58,0,0,1-3,1.94,22.75,22.75,0,0,1-3.37,1.25,44.57,44.57,0,0,1-7.05,1.37c-2.38.29-4.76.46-7.15.56-4.79.19-9.57.12-14.35,0s-9.56-.41-14.33-.69L856,447.38c-9.54-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.32.31-3.77.22-7.53.55-11.25,1.12,1.26,1.6,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.24,45.24,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.08,22.08,0,0,1-1.15,7.12c-.2.57-.42,1.14-.66,1.69-.12.28-.24.55-.39.83a7.24,7.24,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.57,24.57,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.15-3.13-1.79l-.76-.48c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.21,33.21,0,0,1-3.2-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,13.81,13.81,0,0,1,1.19-3.43,15.28,15.28,0,0,1,.93-1.56,14,14,0,0,1,1.09-1.44,20,20,0,0,1,2.6-2.52A30,30,0,0,1,785,452a49.3,49.3,0,0,1,6.75-2.51q3.45-1,7-1.66c.73-.14,1.47-.26,2.21-.38-4.54-5.71-9.41-11.16-14.46-16.42-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.84c-8.07-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.66-2.58s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.78,0c-1.19,0-2.37,0-3.55.11a28,28,0,0,0-6.92,1.39,20.06,20.06,0,0,0-3.21,1.44,17.21,17.21,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.53,29.53,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37a83.85,83.85,0,0,1-1.93,14.26,49.3,49.3,0,0,1-5.12,13.45,59.1,59.1,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.4.45-.61.66-.41.44-.82.89-1.25,1.3a51,51,0,0,1-11.46,8.71,56.53,56.53,0,0,1-13.36,5.34,69.1,69.1,0,0,1-14.22,2.12,89.54,89.54,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6q-1.09-.27-2.19-.57Zm285.76-22.18c-2.34.44-4.67,1-7,1.66a48,48,0,0,0-6.69,2.5,28.87,28.87,0,0,0-6.07,3.69,17,17,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13.14,13.14,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,20,20,0,0,0,.49,3.52,26,26,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.6.33.31.33.29c.89.8,1.83,1.53,2.78,2.24.48.35,1,.71,1.45,1,.25.17.49.34.75.5l.75.48c1,.63,2,1.21,3.1,1.76a34.93,34.93,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,11.7,11.7,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,110.69,110.69,0,0,0-7.78-12c-1.26-1.71-2.55-3.39-3.87-5.06Z"/><polygon class="cls-3" points="801.81 447.61 801.58 447.31 801.01 447.42 801.25 447.71 801.81 447.61"/></g><g class="cls-1"><path class="cls-95" d="M511.63,474l2.14.55a110,110,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13,55.51,55.51,0,0,0,13.2-5.3,51.56,51.56,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.29,29.29,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.61-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.75,3.9,13,6.08,8.52,4.37,16.75,9.29,24.82,14.43q6,3.86,12,7.86T719.7,379q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.15,4.77-.27,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33,0c2.38-.1,4.77-.26,7.14-.55a45.18,45.18,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.28,9.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.19.12-.18a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.4-1.12-.86-2.23-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.29a15.28,15.28,0,0,1-1-3.45,5.5,5.5,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.17-1.68,14.15,14.15,0,0,1,3.55-.5,25.32,25.32,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.63,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.69,4.35,2,6.48,3.07c1.07.55,2.12,1.1,3.17,1.68.52.3,1,.59,1.55.9.26.15.51.31.77.48l.37.25.17.14c.06.07.14.07.15.22l-.07,0a.76.76,0,0,0-.13-.13l-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.2-1.62-6.48-3.06t-6.64-2.69c-2.25-.82-4.52-1.57-6.82-2.2a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,14,14,0,0,0-3.53.5,7.92,7.92,0,0,0-3.11,1.65,2.57,2.57,0,0,0-.55.68,2.85,2.85,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.36,3.32a18.83,18.83,0,0,1,.9,3.49,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,5.22,5.22,0,0,1-.39.83,2,2,0,0,1-.12.19l-.12.19-.13.19-.14.17a8.61,8.61,0,0,1-1.25,1.31,13.24,13.24,0,0,1-3,1.94,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.12-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.56-11.24,1.12,1.26,1.6,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.24,45.24,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.32,22.32,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.24.55-.39.83a7.24,7.24,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.57,24.57,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.12-1.79l-.76-.48c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,32.93,32.93,0,0,1-3.2-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,13.81,13.81,0,0,1,1.19-3.43,17.26,17.26,0,0,1,.92-1.56,15.63,15.63,0,0,1,1.1-1.44,20,20,0,0,1,2.6-2.52,30,30,0,0,1,6.15-3.73,49.66,49.66,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.26,2.21-.38-4.54-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.83c-8.07-5.12-16.28-10-24.78-14.37-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.66-2.58s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.54.11a28,28,0,0,0-6.92,1.39,19.67,19.67,0,0,0-3.21,1.44,17.21,17.21,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.53,29.53,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37A83.85,83.85,0,0,1,595,437.21a49.3,49.3,0,0,1-5.12,13.45,59.1,59.1,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.4.45-.61.66-.41.44-.82.89-1.25,1.3a51,51,0,0,1-11.46,8.71,56.53,56.53,0,0,1-13.36,5.34,69.1,69.1,0,0,1-14.22,2.12,89.54,89.54,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6c-.74-.18-1.47-.37-2.21-.57Zm285.78-22.17q-3.52.66-7,1.66a47.88,47.88,0,0,0-6.68,2.5,28.87,28.87,0,0,0-6.07,3.69,17,17,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13.54,13.54,0,0,0-.25,3.52,21,21,0,0,0,.48,3.52,27.7,27.7,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.61.33.3.33.29c.89.8,1.83,1.53,2.78,2.24.48.35,1,.71,1.45,1l.74.5.76.48c1,.63,2,1.22,3.1,1.76a34.93,34.93,0,0,0,6.61,2.64,23.78,23.78,0,0,0,7,1,16.44,16.44,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.14-.25.26-.53.38-.8.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,110.69,110.69,0,0,0-7.78-12c-1.26-1.71-2.55-3.39-3.87-5.06C799,451.58,798.21,451.72,797.41,451.87Z"/><polygon class="cls-3" points="800.38 451.36 800.14 451.06 799.58 451.17 799.81 451.46 800.38 451.36"/></g><g class="cls-1"><path class="cls-96" d="M510.28,477.52c.68.18,1.36.36,2,.52a108.24,108.24,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49A67.59,67.59,0,0,0,554.73,479a56.07,56.07,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.36,49.36,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.55-1.25-19.06-1.85-28.61-.3-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.89,50.89,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.64,19.64,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.12,3.62-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.16.72a99,99,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.48,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.83,8.12q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.35,10.06,10.89,14.67,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.72s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.18-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.76.48c.13.08.25.17.37.26a.86.86,0,0,1,.18.14c0,.06.13.06.15.21l-.07,0-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1.05-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.58-6.82-2.2a46.42,46.42,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.46,14.46,0,0,0-3.52.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15,15,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.2-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.82,44.82,0,0,1-7.05,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13q1.89,2.39,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,47.18,47.18,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45A12.32,12.32,0,0,1,808,506.4a16.2,16.2,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.77-.48c-.25-.16-.49-.34-.74-.51-.51-.33-1-.68-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.49,37.49,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,12.16,12.16,0,0,1,.24-1.8,13.74,13.74,0,0,1,1.19-3.42,16.5,16.5,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.89,19.89,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79S748.42,406,740.91,400s-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a98,98,0,0,0-13.94-3.07q-3.54-.51-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48A29.23,29.23,0,0,0,594.9,355a50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.14,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.16,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,108.74,108.74,0,0,1-14.13-2.59l-2.11-.55ZM796,455.32c-2.35.45-4.67,1-7,1.67a49.13,49.13,0,0,0-6.68,2.49,29.33,29.33,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.44,34.44,0,0,0,3.16,6.38,37.81,37.81,0,0,0,4.4,5.6c.2.21.4.44.61.64l.64.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.82,1.52,2.77,2.24.49.35,1,.7,1.46,1,.25.16.49.34.74.49l.76.48c1,.63,2,1.22,3.1,1.76a35.15,35.15,0,0,0,6.6,2.65,24.23,24.23,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.13-.25.26-.53.38-.79.23-.55.44-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75A66.75,66.75,0,0,0,810,472a112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5C797.55,455,796.75,455.17,796,455.32Z"/><polygon class="cls-3" points="798.93 454.81 798.69 454.51 798.13 454.62 798.36 454.92 798.93 454.81"/></g><g class="cls-1"><path class="cls-97" d="M508.78,481.4c.68.18,1.36.36,2.05.52a108.24,108.24,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13,55.48,55.48,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.92,50.92,0,0,1,1.21-7.12,29,29,0,0,1,2.54-6.78,19.64,19.64,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.83,8.12q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10.05,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.24,9.24,0,0,0,1.22-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,2.86,2.86,0,0,1,.34-.85,2.61,2.61,0,0,1,.58-.7,7.84,7.84,0,0,1,3.17-1.68,14.7,14.7,0,0,1,3.55-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68l1.55.89.77.48.37.26.18.14c0,.06.13.06.14.21l-.07,0a1,1,0,0,0-.12-.13l-.18-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.74,14.74,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2.12,2.12,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.82,44.82,0,0,1-7.05,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.42,1.13-.66,1.69-.12.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.71,8.71,0,0,1-2.7,2.46,12.49,12.49,0,0,1-3.38,1.34,16.2,16.2,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.51-.5-.33-1-.68-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7,16.6,16.6,0,0,1,.93-1.57,15.12,15.12,0,0,1,1.09-1.44,20.54,20.54,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.6,69.6,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.46-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.6-23-17.1q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0q-1.77,0-3.54.12a28,28,0,0,0-6.92,1.38,21,21,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.23,19.23,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.07,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26A49.36,49.36,0,0,1,587,458a60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.08,56.08,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,89.54,89.54,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2.12-.55Zm285.69-22.19a68.85,68.85,0,0,0-7,1.66,49.26,49.26,0,0,0-6.69,2.49,29.33,29.33,0,0,0-6.07,3.7,16.91,16.91,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.21.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.75.49l.75.48c1,.63,2,1.22,3.1,1.76a35,35,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,11.83,11.83,0,0,0,3.26-1.3,8.18,8.18,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.79.24-.55.45-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,111.8,111.8,0,0,0-7.78-12q-1.89-2.56-3.87-5C796.07,458.92,795.27,459.05,794.47,459.21Z"/><polygon class="cls-3" points="797.44 458.69 797.21 458.39 796.64 458.5 796.88 458.8 797.44 458.69"/></g><g class="cls-1"><path class="cls-98" d="M507.33,485.14c.69.19,1.38.36,2.07.53a108.24,108.24,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13A55.65,55.65,0,0,0,565,481.3a54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,56.07,56.07,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a52.4,52.4,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.64,19.64,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.86,12,7.86t11.83,8.12q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,8.75,8.75,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.76.48.38.26.17.14c0,.06.14.06.15.21l-.07,0a1.49,1.49,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48l-1.55-.89c-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.47,14.47,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.74,14.74,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2.12,2.12,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.82,44.82,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.54-.39.82a6.4,6.4,0,0,1-.48.79,8.71,8.71,0,0,1-2.7,2.46,12.62,12.62,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.58,24.58,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5q-.75-.51-1.47-1.05c-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,20.54,20.54,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.54-5.7-9.41-11.15-14.47-16.41-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.1q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A99.36,99.36,0,0,0,626,346.37c-2.36-.34-4.72-.58-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0-1.18,0-2.37,0-3.55.12a28,28,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4A56.08,56.08,0,0,1,552,487.23a69.12,69.12,0,0,1-14.22,2.13,89.54,89.54,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2.14-.56ZM793,463a69,69,0,0,0-7,1.66,49.13,49.13,0,0,0-6.68,2.49,29.33,29.33,0,0,0-6.07,3.7,16.91,16.91,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26.71,26.71,0,0,0,1,3.41,33.24,33.24,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.22.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48c1,.63,2,1.22,3.1,1.76a35,35,0,0,0,6.61,2.65,24.11,24.11,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.13,8.13,0,0,0,2.56-2.32,5.73,5.73,0,0,0,.45-.75c.14-.25.26-.53.38-.79.23-.55.45-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.48,29.48,0,0,0-.89-7.05,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12q-1.89-2.56-3.87-5C794.63,462.67,793.84,462.8,793,463Z"/><polygon class="cls-3" points="796.01 462.44 795.77 462.14 795.21 462.25 795.44 462.55 796.01 462.44"/></g><g class="cls-1"><path class="cls-99" d="M505.9,488.83l2.1.54a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13A55.83,55.83,0,0,0,563.61,485a52.21,52.21,0,0,0,5.95-3.92,52.81,52.81,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,84.83,84.83,0,0,0,1.91-14.13c.26-4.75.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12.6,0,1.21,0,1.81,0l.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.76,3.9,13,6.08,8.52,4.37,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.27,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.56-.33,14.35-.28,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.51,23.51,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.12-.85-2.23-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.84,2.84,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,26.82,26.82,0,0,1,3.58.17,47.84,47.84,0,0,1,7,1.42c2.31.63,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.09,3.17,1.68.53.29,1.05.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c.05.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.14-.36-.25-.76-.47c-.51-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,13.91,13.91,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.71,2.71,0,0,0-.86,1.48A5,5,0,0,0,907,436a15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.33a18,18,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.31-3.76.22-7.52.56-11.25,1.13q1.89,2.39,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22,22,0,0,1-1.15,7.12c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.62,24.62,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.34-.29-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a37.93,37.93,0,0,1-4.43-5.67,33.45,33.45,0,0,1-3.19-6.46,25.87,25.87,0,0,1-1-3.46,20.57,20.57,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,13.17,13.17,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.17,49.17,0,0,1,6.74-2.51q3.45-1,7-1.66c.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.37-4.25-2.17-8.57-4.2-13-6-2.2-.92-4.43-1.79-6.67-2.59s-4.51-1.55-6.79-2.22a98.3,98.3,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.11a28,28,0,0,0-6.92,1.39,20,20,0,0,0-3.2,1.44,16.81,16.81,0,0,0-2.87,2,18.63,18.63,0,0,0-4.33,5.48,28.59,28.59,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.4,7.12-.07,4.77.15,9.54.44,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37A85.91,85.91,0,0,1,589.27,452a49.65,49.65,0,0,1-5.13,13.45,59,59,0,0,1-4,6c-.18.25-.37.48-.55.72l-.57.7c-.38.47-.77.93-1.16,1.38l-.6.68c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3a52.2,52.2,0,0,1-5.42,4.75,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.2,69.2,0,0,1-14.23,2.12,88.48,88.48,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6l-2.17-.56Zm285.74-22.18c-2.34.44-4.67,1-6.95,1.66a48,48,0,0,0-6.69,2.5,29.38,29.38,0,0,0-6.07,3.69,16.79,16.79,0,0,0-4.51,5.41A12.88,12.88,0,0,0,766,485a14.93,14.93,0,0,0,0,1.77,20,20,0,0,0,.49,3.52,27.65,27.65,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63c.22.2.44.4.65.61l.33.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.5.75.48c1,.63,2,1.22,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,16.61,16.61,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.9,29.9,0,0,0-.88-7,45.12,45.12,0,0,0-2.27-6.76,66.58,66.58,0,0,0-3.13-6.41,108.39,108.39,0,0,0-7.78-12c-1.26-1.71-2.55-3.39-3.87-5.06Z"/><polygon class="cls-3" points="794.61 466.14 794.38 465.84 793.81 465.95 794.05 466.24 794.61 466.14"/></g><g class="cls-1"><path class="cls-100" d="M504.4,492.71l2.11.54a110.27,110.27,0,0,0,14.06,2.56,88.41,88.41,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,51.19,51.19,0,0,0,11.29-8.62A56,56,0,0,0,582,469a48.64,48.64,0,0,0,5-13.27,83.8,83.8,0,0,0,1.91-14.13c.27-4.75.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.76,3.9,13,6.08,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.06,23.06,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.87,4.87,0,0,0,.38-.8,6.3,6.3,0,0,0,.32-1.73,9.55,9.55,0,0,0-.09-1.77,17.5,17.5,0,0,0-.89-3.45c-.39-1.12-.85-2.23-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5.24,5.24,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,26.66,26.66,0,0,1,3.58.17,48.23,48.23,0,0,1,7,1.42c2.3.64,4.58,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.09,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.15.22l-.08,0a.6.6,0,0,0-.12-.13l-.17-.13-.37-.26-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.68-4.51-1.58-6.81-2.21a48.18,48.18,0,0,0-7-1.4,23.65,23.65,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0-.05,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09.95,2.19,1.35,3.33a18,18,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.58,9.58,0,0,1-1.24,1.31,13.38,13.38,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.56-11.24,1.13,1.25,1.59,2.49,3.21,3.7,4.84a113.31,113.31,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,30.27,30.27,0,0,1,.9,7.16,22.3,22.3,0,0,1-1.16,7.11c-.2.58-.41,1.14-.65,1.69-.13.28-.25.55-.39.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.46,17.46,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.33-.29-.33-.31c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28.08,28.08,0,0,1-1-3.47,21.43,21.43,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.93,13.93,0,0,1,1.44-5.23,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.3,29.3,0,0,1,6.15-3.74,47.85,47.85,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.67-2.59s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.9-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.43,27.43,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a84.87,84.87,0,0,1-1.93,14.26,49.81,49.81,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.18.25-.37.48-.55.72l-.56.7-1.16,1.39-.61.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,54.93,54.93,0,0,1-6,4,56.93,56.93,0,0,1-13.36,5.33,69.2,69.2,0,0,1-14.23,2.12,88.32,88.32,0,0,1-14.36-.52,110.92,110.92,0,0,1-14.14-2.59l-2.18-.57Zm285.75-22.18q-3.51.66-6.95,1.66a48.49,48.49,0,0,0-6.69,2.5,29.38,29.38,0,0,0-6.07,3.69,16.79,16.79,0,0,0-4.51,5.41,12.7,12.7,0,0,0-1.15,3.32,13.14,13.14,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,21,21,0,0,0,.49,3.52,29.51,29.51,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.64.63.65.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.5.75.48c1,.63,2,1.22,3.1,1.76a35.47,35.47,0,0,0,6.61,2.64,23.84,23.84,0,0,0,7,1,15.9,15.9,0,0,0,3.5-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33,7,7,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,68,68,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12c-1.27-1.71-2.56-3.39-3.88-5.06Z"/><polygon class="cls-3" points="793.13 470.02 792.89 469.72 792.32 469.83 792.56 470.12 793.13 470.02"/></g><g class="cls-1"><path class="cls-101" d="M503,496.45c.71.19,1.42.38,2.13.55a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29A51.19,51.19,0,0,0,572,484a56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,84.83,84.83,0,0,0,1.91-14.13c.26-4.75.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.41-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.51,23.51,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,26.74,26.74,0,0,1,3.58.17,48.23,48.23,0,0,1,7,1.42c2.3.64,4.57,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.09,3.16,1.68.53.29,1.05.58,1.56.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13L948,451c-.11-.09-.24-.18-.36-.26l-.76-.47c-.51-.31-1-.6-1.55-.89-1.05-.58-2.11-1.14-3.17-1.68q-3.21-1.62-6.48-3.06c-2.19-1-4.41-1.86-6.65-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.33a18,18,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.65-1.19-4.77-.05-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,45.61,45.61,0,0,1,2.28,6.83,30.8,30.8,0,0,1,.9,7.16,22.3,22.3,0,0,1-1.16,7.11c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.33,24.33,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.34-.29-.32-.31c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28.08,28.08,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,13.17,13.17,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.79-6.67-2.59s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20,20,0,0,0-3.2,1.44,17.82,17.82,0,0,0-2.87,2,18.63,18.63,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a85.91,85.91,0,0,1-1.93,14.26,50.15,50.15,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.18.25-.37.48-.55.72l-.57.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,55.9,55.9,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.9,69.9,0,0,1-14.23,2.13,89.63,89.63,0,0,1-14.37-.53,111.09,111.09,0,0,1-14.13-2.59l-2.2-.58Zm285.77-22.17q-3.51.66-7,1.66a48.49,48.49,0,0,0-6.69,2.5,29,29,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13.1,13.1,0,0,0-1.16,3.32,14.82,14.82,0,0,0-.25,3.52,21,21,0,0,0,.49,3.52,27.65,27.65,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63.66.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2.05,1.22,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,15.91,15.91,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,44.62,44.62,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.77,109.77,0,0,0-7.77-12q-1.9-2.57-3.88-5.05C790.32,474,789.52,474.13,788.72,474.28Z"/><polygon class="cls-3" points="791.7 473.77 791.46 473.47 790.89 473.58 791.13 473.87 791.7 473.77"/></g><g class="cls-1"><path class="cls-102" d="M501.52,500.15c.71.19,1.42.38,2.14.55a110,110,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13,56.07,56.07,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a52.14,52.14,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.4,28.4,0,0,1,7.1-1.42c1.21-.09,2.42-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.75,3.9,13,6.08,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.15,4.77-.26,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.14-.55a45.18,45.18,0,0,0,7-1.35A23.18,23.18,0,0,0,905,475.5a13.3,13.3,0,0,0,3-1.9,9.28,9.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.16-1.68,14.29,14.29,0,0,1,3.56-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.09,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.38.25.17.14c0,.07.14.07.15.22l-.07,0a.76.76,0,0,0-.13-.13,1.09,1.09,0,0,0-.17-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.52-1.58-6.82-2.21a47.66,47.66,0,0,0-7-1.4,23.52,23.52,0,0,0-3.56-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.36,3.33a18.73,18.73,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,5.22,5.22,0,0,1-.39.83,2,2,0,0,1-.12.19l-.12.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.55-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.3,22.3,0,0,1-1.16,7.11c-.19.58-.41,1.14-.65,1.69-.13.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.12-1.79l-.76-.48c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65A37.28,37.28,0,0,1,766,511.6a33.12,33.12,0,0,1-3.2-6.45,28.08,28.08,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.17,15.17,0,0,1,2-3,19.87,19.87,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,48.31,48.31,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.54-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.42-1.79-6.66-2.59s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37a83.85,83.85,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,55.06,55.06,0,0,1-6,4,56.93,56.93,0,0,1-13.36,5.33A69.8,69.8,0,0,1,532,504.39a89.55,89.55,0,0,1-14.37-.53,111.09,111.09,0,0,1-14.13-2.59l-2.21-.58ZM787.3,478q-3.52.66-7,1.66a47.88,47.88,0,0,0-6.68,2.5,28.87,28.87,0,0,0-6.07,3.69,17,17,0,0,0-4.52,5.41,13.47,13.47,0,0,0-1.15,3.32,13.54,13.54,0,0,0-.25,3.52,21,21,0,0,0,.48,3.52,27.7,27.7,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.61.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.74.5.76.48c1,.63,2,1.22,3.1,1.76a35.11,35.11,0,0,0,6.6,2.64,23.89,23.89,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3A8.28,8.28,0,0,0,805,525a5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.8.23-.54.44-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C788.89,477.69,788.1,477.83,787.3,478Z"/><polygon class="cls-3" points="790.27 477.47 790.03 477.17 789.47 477.28 789.7 477.57 790.27 477.47"/></g><g class="cls-1"><path class="cls-103" d="M500,504l2.16.55a110,110,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,55.64,55.64,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.75,29.75,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07C668,383,676.2,387.87,684.27,393q6,3.86,12,7.86c4,2.66,7.93,5.36,11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.14,4.78-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33,0c2.38-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.83,9.83,0,0,0,1.22-1.28l.13-.18.13-.18.13-.18a1.18,1.18,0,0,1,.11-.19,4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.24,5.24,0,0,1,.06-1.81,2.59,2.59,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.69,14.69,0,0,1,3.55-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.52.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83l-.11.19-.13.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.57,44.57,0,0,1-7.05,1.37c-2.38.29-4.76.46-7.15.56-4.79.19-9.57.13-14.35,0s-9.56-.41-14.33-.69L843,481.12c-9.54-.58-19.09-1.11-28.65-1.19-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22,22,0,0,1-1.15,7.11c-.2.58-.42,1.14-.66,1.69-.12.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.15-3.13-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.7,33.7,0,0,1-3.2-6.45,28.08,28.08,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.28,15.28,0,0,1,.93-1.56,15.12,15.12,0,0,1,1.09-1.44,19.87,19.87,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.64,69.64,0,0,1,7-1.67l2.21-.38c-4.54-5.7-9.41-11.16-14.46-16.42-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.43-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.31-1.38-6.67-2.59c-2.25-.8-4.51-1.55-6.8-2.22a97.69,97.69,0,0,0-13.94-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.06,20.06,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.44,14.3.59,9.54,1.5,19.06,1.83,28.64.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,60.59,60.59,0,0,1-4,6c-.18.25-.37.48-.56.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,55.06,55.06,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53A111.09,111.09,0,0,1,502,505.15l-2.23-.59Zm285.8-22.17c-2.34.44-4.67,1-6.95,1.66a48,48,0,0,0-6.69,2.5,28.74,28.74,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13.22,13.22,0,0,0-1.4,5.08,14.75,14.75,0,0,0,0,1.76,20,20,0,0,0,.49,3.52,26,26,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63c.21.2.44.4.65.61l.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.75.49.75.48c1,.63,2,1.22,3.1,1.76a34.93,34.93,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,11.7,11.7,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,109.85,109.85,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C787.41,481.57,786.61,481.71,785.81,481.86Z"/><polygon class="cls-3" points="788.78 481.35 788.55 481.05 787.98 481.16 788.22 481.45 788.78 481.35"/></g><g class="cls-1"><path class="cls-104" d="M498.56,507.77l2.18.56a110,110,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49,69,69,0,0,0,14.08-2.13,55.9,55.9,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.29,29.29,0,0,1,2.54-6.79,19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09A20.27,20.27,0,0,1,596,369a28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33,0c2.38-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.59,13.59,0,0,0,3-1.9,9.83,9.83,0,0,0,1.22-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,2.86,2.86,0,0,1,.34-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.69,14.69,0,0,1,3.55-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.52.31.77.48l.37.25.17.14c.06.07.14.07.15.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.52-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2,2,0,0,1-.12.19l-.12.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.54-.58-19.09-1.11-28.65-1.19-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22,22,0,0,1-1.15,7.11c-.2.58-.42,1.14-.66,1.69-.12.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.12-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.08,28.08,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.28,15.28,0,0,1,.93-1.56,15.12,15.12,0,0,1,1.09-1.44,19.87,19.87,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.25,49.25,0,0,1,6.75-2.5,69.64,69.64,0,0,1,7-1.67l2.21-.38c-4.54-5.7-9.41-11.15-14.46-16.42-6.62-6.88-13.57-13.46-20.72-19.8s-14.51-12.43-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A98,98,0,0,0,617.33,369c-2.36-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.54.12a27.5,27.5,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37A83.72,83.72,0,0,1,582,471a49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,55.06,55.06,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33A69.12,69.12,0,0,1,529.1,512a88.41,88.41,0,0,1-14.37-.53,111.09,111.09,0,0,1-14.13-2.59l-2.25-.59Zm285.82-22.16c-2.34.44-4.67,1-7,1.66a47.54,47.54,0,0,0-6.69,2.5,28.49,28.49,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4A13.4,13.4,0,0,0,759,502.2a12.7,12.7,0,0,0-.24,1.75,14.75,14.75,0,0,0,0,1.76,20,20,0,0,0,.49,3.52,25.57,25.57,0,0,0,1,3.41A33.15,33.15,0,0,0,763.4,519a37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.61.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.75.49.75.48c1,.63,2,1.22,3.1,1.76a35.65,35.65,0,0,0,6.61,2.65,24.15,24.15,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,11.83,11.83,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33,6.87,6.87,0,0,0,.44-.74c.14-.25.26-.53.38-.8.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C786,485.32,785.18,485.46,784.38,485.61Z"/><polygon class="cls-3" points="787.35 485.1 787.12 484.8 786.55 484.91 786.78 485.2 787.35 485.1"/></g><g class="cls-1"><path class="cls-105" d="M497.13,511.46c.74.19,1.47.39,2.21.57a110.24,110.24,0,0,0,14.06,2.55,88.38,88.38,0,0,0,14.27.5A69.15,69.15,0,0,0,541.76,513a55.86,55.86,0,0,0,13.19-5.3,52.13,52.13,0,0,0,5.95-3.91,53,53,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,84.83,84.83,0,0,0,1.91-14.13c.26-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.5-9.56-.43-14.36,0-2.4.16-4.8.41-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,19.68,19.68,0,0,1,4.52-5.7,18.9,18.9,0,0,1,3-2.1,21.51,21.51,0,0,1,3.33-1.48,28,28,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9,0c2.39.12,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.37,11.83,8.12q11.72,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.95,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,23.46,23.46,0,0,0,3.34-1.23,13.59,13.59,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.12-.18.13-.19a1.74,1.74,0,0,0,.11-.18,5.23,5.23,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.19,15.19,0,0,1-1-3.46,5,5,0,0,1,0-1.8,3.33,3.33,0,0,1,.33-.86,2.78,2.78,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.18,25.18,0,0,1,3.58.17,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.39,6.83,2.21s4.46,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.16,1.68q.79.43,1.56.9l.76.47.37.26.18.14c.05.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14c-.11-.09-.24-.17-.36-.25l-.76-.47q-.76-.46-1.56-.9c-1-.58-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a47.81,47.81,0,0,0-7-1.41,25.1,25.1,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.85,7.85,0,0,0-3.11,1.65,2.63,2.63,0,0,0-.87,1.49,4.9,4.9,0,0,0,0,1.75,15.24,15.24,0,0,0,1,3.43c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09,1,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.19-.13.18-.14.18a9.06,9.06,0,0,1-1.24,1.31,13.26,13.26,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.55-4.78.2-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.31-3.76.22-7.52.55-11.25,1.12,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.78,30.78,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.18,12.18,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.66,24.66,0,0,1-7.14-1,36.13,36.13,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.8-2.27l-.34-.3-.32-.3c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.44-.63-.65a38.59,38.59,0,0,1-4.43-5.67,34,34,0,0,1-3.19-6.46,27.93,27.93,0,0,1-1-3.46,20.57,20.57,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,13.91,13.91,0,0,1,.25-1.8,13.11,13.11,0,0,1,1.19-3.42,13.58,13.58,0,0,1,.92-1.56,14.17,14.17,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.27,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.92-4.43-1.78-6.67-2.58s-4.51-1.56-6.79-2.23a99.36,99.36,0,0,0-13.94-3.07c-2.36-.33-4.73-.58-7.11-.7l-.89,0-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,20.83,20.83,0,0,0-3.2,1.43,18.47,18.47,0,0,0-2.87,2,18.8,18.8,0,0,0-4.33,5.49,28.42,28.42,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.76.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a85.65,85.65,0,0,1-1.93,14.25,49.89,49.89,0,0,1-5.12,13.46,62,62,0,0,1-4,6l-.55.71-.57.71c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.39.45-.6.66-.42.44-.82.88-1.26,1.3a51.14,51.14,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12,89.63,89.63,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6l-2.27-.59ZM783,489.31q-3.51.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13.3,13.3,0,0,0-1.16,3.33,14.7,14.7,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,27.3,27.3,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.63.62.66.61.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2.05,1.22,3.1,1.77a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,17.2,17.2,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,45.12,45.12,0,0,0-2.27-6.76,67.91,67.91,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12c-1.26-1.7-2.55-3.39-3.87-5.05Z"/><polygon class="cls-3" points="785.96 488.8 785.72 488.5 785.15 488.61 785.39 488.9 785.96 488.8"/></g><g class="cls-1"><path class="cls-106" d="M495.63,515.34l2.22.57a110.07,110.07,0,0,0,14.07,2.55,88.26,88.26,0,0,0,14.26.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,50.75,50.75,0,0,0,11.29-8.61,55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,83.8,83.8,0,0,0,1.91-14.13c.27-4.76.24-9.53.08-14.3-.33-9.54-1.26-19.06-1.85-28.61-.3-4.78-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.48,19.48,0,0,1,4.51-5.7,18.65,18.65,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.48,28.48,0,0,1,7.11-1.42c1.21-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9,0c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.25t6.7,2.6c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.37,11.83,8.12q11.72,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.95,20.72,19.85,5.13,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.57.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,23,23,0,0,0,3.34-1.23,13.36,13.36,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.13-.18.12-.19.12-.18a6.4,6.4,0,0,0,.37-.8,6.31,6.31,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,17.15,17.15,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.19,5.19,0,0,1,0-1.8,3.33,3.33,0,0,1,.33-.86,3,3,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.32,25.32,0,0,1,3.59.17,46.82,46.82,0,0,1,7,1.42c2.3.63,4.58,1.39,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.47l.37.26.18.14c.05.06.13.07.15.21l-.07,0a.78.78,0,0,0-.13-.13l-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.61-1.55-.9-1-.57-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.69-4.51-1.57-6.81-2.2a48.21,48.21,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.92,7.92,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,3,3,0,0,0-.31.82,5.19,5.19,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09,1,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.13.18a8.61,8.61,0,0,1-1.25,1.31,13,13,0,0,1-3,1.93,23.52,23.52,0,0,1-3.37,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.55-4.78.2-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.49,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,29.74,29.74,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.25.55-.39.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.18,12.18,0,0,1-3.38,1.34,16.82,16.82,0,0,1-3.59.46,24.69,24.69,0,0,1-7.15-1,36.41,36.41,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.79-2.27l-.34-.3-.33-.3c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.44-.63-.65a38.59,38.59,0,0,1-4.43-5.67,34,34,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,21.58,21.58,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,13.84,13.84,0,0,1,1.44-5.22,13.58,13.58,0,0,1,.92-1.56,15.77,15.77,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51A30.44,30.44,0,0,1,767.7,497a50.47,50.47,0,0,1,6.74-2.5c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.24-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.67-2.58s-4.51-1.56-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.9,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.53,27.53,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,18.47,18.47,0,0,0-2.87,2,19,19,0,0,0-4.33,5.49,28.42,28.42,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a84.87,84.87,0,0,1-1.93,14.26A49.3,49.3,0,0,1,574,492a60.24,60.24,0,0,1-4,6l-.55.71-.56.71c-.38.47-.78.92-1.16,1.38l-.6.68c-.21.22-.4.45-.61.66-.42.44-.82.88-1.25,1.3a52.25,52.25,0,0,1-5.43,4.76,53.44,53.44,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12,89.46,89.46,0,0,1-14.36-.52,109.23,109.23,0,0,1-14.14-2.6c-.76-.19-1.53-.39-2.29-.6ZM781.5,493.19q-3.53.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.88,16.88,0,0,0-4.51,5.4,13.28,13.28,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,29.09,29.09,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2,1.22,3.11,1.77a35.11,35.11,0,0,0,6.6,2.64,23.84,23.84,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.13-.26.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12c-1.26-1.7-2.56-3.39-3.88-5.05C783.09,492.9,782.29,493,781.5,493.19Z"/><polygon class="cls-3" points="784.47 492.68 784.23 492.38 783.66 492.49 783.9 492.78 784.47 492.68"/></g><g class="cls-1"><path class="cls-107" d="M494.18,519.08l2.24.58a110.24,110.24,0,0,0,14.06,2.55,88.38,88.38,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,52.13,52.13,0,0,0,6-3.91,53,53,0,0,0,5.34-4.7,55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26A83.8,83.8,0,0,0,578.85,468c.27-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.85-28.61-.3-4.78-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,19.81,19.81,0,0,1,4.52-5.7,18.22,18.22,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9,0c2.4.13,4.79.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.25t6.7,2.6c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.87s7.92,5.36,11.83,8.11q11.71,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.95,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.25,7.14-.54a45.08,45.08,0,0,0,7-1.35,24.3,24.3,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.12-.18.13-.19a1.74,1.74,0,0,0,.11-.18,4.87,4.87,0,0,0,.38-.8,6.3,6.3,0,0,0,.32-1.73,9.55,9.55,0,0,0-.09-1.77,17.85,17.85,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.19,15.19,0,0,1-1-3.46,5.19,5.19,0,0,1,.05-1.8,3.33,3.33,0,0,1,.33-.86,3,3,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.11,25.11,0,0,1,3.58.17,47,47,0,0,1,7,1.42c2.3.63,4.58,1.39,6.82,2.21s4.46,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.47l.37.26.18.14c0,.06.13.07.15.21l-.08,0a.6.6,0,0,0-.12-.13l-.17-.14-.37-.25-.76-.47c-.51-.31-1-.61-1.55-.9-1.05-.57-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.69-4.51-1.57-6.81-2.2a48.21,48.21,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.85,7.85,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,2.72,2.72,0,0,0-.31.82,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09.95,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.14.18a8.55,8.55,0,0,1-1.24,1.31,13,13,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.55-4.78.2-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.25,1.12,1.26,1.6,2.5,3.21,3.71,4.85a112.31,112.31,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,30.25,30.25,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.65,1.69-.13.28-.25.55-.39.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.18,12.18,0,0,1-3.38,1.34,16.82,16.82,0,0,1-3.59.46,24.69,24.69,0,0,1-7.15-1,36.41,36.41,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48L770,542c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.8-2.27l-.33-.3-.33-.3c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.44-.63-.65a38.59,38.59,0,0,1-4.43-5.67,34,34,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,21.58,21.58,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,13.77,13.77,0,0,1,2.36-6.78,14.17,14.17,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,29.68,29.68,0,0,1,6.15-3.73,49.17,49.17,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.67-2.58s-4.51-1.56-6.79-2.22A98,98,0,0,0,613,380.35c-2.36-.33-4.73-.58-7.1-.7l-.9,0-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.35,27.35,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,18.47,18.47,0,0,0-2.87,2,19,19,0,0,0-4.33,5.49,28.42,28.42,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a84.87,84.87,0,0,1-1.93,14.26,49.62,49.62,0,0,1-5.12,13.45,60.24,60.24,0,0,1-4,6l-.55.71-.56.71-1.16,1.38-.61.68c-.2.22-.39.45-.6.66-.42.44-.82.88-1.25,1.3a52.25,52.25,0,0,1-5.43,4.76,54.36,54.36,0,0,1-6,3.95A56.53,56.53,0,0,1,539,521.22a69.88,69.88,0,0,1-14.23,2.12,89.46,89.46,0,0,1-14.36-.52,109.23,109.23,0,0,1-14.14-2.6l-2.31-.6Zm285.88-22.14q-3.51.66-6.95,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13.51,13.51,0,0,0-1.39,5.08,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,29.09,29.09,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2,1.22,3.1,1.77a35.2,35.2,0,0,0,6.61,2.64,23.84,23.84,0,0,0,7,1,17.19,17.19,0,0,0,3.5-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33,8.12,8.12,0,0,0,.45-.74c.13-.26.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,68,68,0,0,0-3.14-6.42,110.6,110.6,0,0,0-7.77-12q-1.9-2.56-3.88-5.06Z"/><polygon class="cls-3" points="783.04 496.43 782.8 496.13 782.23 496.24 782.47 496.53 783.04 496.43"/></g><g class="cls-1"><path class="cls-108" d="M492.8,522.65l2.15.56A110.24,110.24,0,0,0,509,525.76a88.37,88.37,0,0,0,14.27.49,68.45,68.45,0,0,0,14.09-2.12,55.86,55.86,0,0,0,13.19-5.3,51.36,51.36,0,0,0,11.29-8.61,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.92,50.92,0,0,1,1.21-7.12,30.15,30.15,0,0,1,2.54-6.78,19.64,19.64,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.6,0,1.2,0,1.8,0l.9,0,.9,0c2.4.13,4.79.39,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08,8.53,4.37,16.75,9.29,24.82,14.42q6.06,3.86,12,7.86c4,2.67,7.93,5.36,11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.1,19.11.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.91,18.91,0,0,0-.89-3.46c-.39-1.12-.86-2.22-1.34-3.31-1-2.18-2.08-4.3-3.1-6.46-.52-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,2.84,2.84,0,0,1,.91-1.55,7.84,7.84,0,0,1,3.17-1.68,14.77,14.77,0,0,1,3.55-.51,25.32,25.32,0,0,1,3.59.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68l1.56.9.76.47.37.26.18.14c0,.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25c-.25-.17-.51-.32-.76-.48-.52-.3-1-.6-1.56-.89-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.5,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.1,1.8,6.44,6.44,0,0,1-.34,1.79,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7.05,1.37c-2.37.28-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.42-14.33-.7l-14.31-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.77.22-7.52.56-11.25,1.13q1.89,2.38,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,68.92,68.92,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.18,30.18,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27L764,542l-.33-.31c-.22-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.65a37.42,37.42,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28,28,0,0,1-1-3.46,21.7,21.7,0,0,1-.49-3.58,15.79,15.79,0,0,1,0-1.82,13.88,13.88,0,0,1,.24-1.8,13.37,13.37,0,0,1,1.2-3.42A14.62,14.62,0,0,1,755,512a13.71,13.71,0,0,1,1.1-1.44,19.81,19.81,0,0,1,2.59-2.51,30.24,30.24,0,0,1,6.16-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.1c-3.91-2.75-7.86-5.43-11.83-8.09s-8-5.28-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.35-.33-4.72-.58-7.1-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.52,19.52,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,19.09,19.09,0,0,0-4.34,5.48,29.71,29.71,0,0,0-2.47,6.61,51.81,51.81,0,0,0-1.18,7c-.23,2.37-.35,4.75-.39,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,61.93,61.93,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71-1.16,1.38-.6.67c-.2.23-.4.45-.61.67-.41.43-.81.88-1.25,1.3a53.35,53.35,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,3.95,56.6,56.6,0,0,1-13.37,5.34,69.68,69.68,0,0,1-14.22,2.12,89.59,89.59,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2.22-.58Zm285.79-22.16a68.85,68.85,0,0,0-7,1.66,49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,11.49,11.49,0,0,0-.23,1.75,13.07,13.07,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.4.44.62.64l.63.63.65.61.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1,.24.16.49.34.74.49l.75.48c1,.63,2.05,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.16,8.16,0,0,0,2.57-2.32q.24-.36.45-.75c.13-.25.25-.53.37-.79.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,45.88,45.88,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12q-1.89-2.56-3.87-5.05C780.19,500.2,779.39,500.33,778.59,500.49Z"/><polygon class="cls-3" points="781.56 499.97 781.33 499.68 780.76 499.78 781 500.08 781.56 499.97"/></g><g class="cls-1"><path class="cls-109" d="M491.29,526.53l2.17.56a110.24,110.24,0,0,0,14.06,2.55,88.37,88.37,0,0,0,14.27.49A68.45,68.45,0,0,0,535.88,528a55.86,55.86,0,0,0,13.19-5.3A53.51,53.51,0,0,0,555,518.8a53,53,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,85,85,0,0,0,1.91-14.13c.26-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.5-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.92,50.92,0,0,1,1.21-7.12,30.15,30.15,0,0,1,2.54-6.78,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,21.56,21.56,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.61,0,1.21,0,1.81,0l.9,0,.9,0c2.39.13,4.78.39,7.16.72a100.56,100.56,0,0,1,14,3.12q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.94,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.11,19.12.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9A8.22,8.22,0,0,0,899,498.7l.14-.18.12-.18.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.06,3.06,0,0,1,.33-.85,2.78,2.78,0,0,1,.58-.7,7.9,7.9,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,25.18,25.18,0,0,1,3.58.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.16,1.68q.79.43,1.56.9l.76.47.37.26.18.14c.05.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25c-.25-.17-.51-.32-.76-.48-.51-.3-1-.6-1.56-.89-1-.58-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.71,7.71,0,0,0-3.12,1.65,2.93,2.93,0,0,0-.55.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.44,1.11.93,2.19,1.45,3.27,1,2.16,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6.1,6.1,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7.05,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.7l-14.32-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.71,30.71,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.34-.3-.33-.31c-.21-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.65a37.42,37.42,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.93,27.93,0,0,1-1-3.46,20.71,20.71,0,0,1-.5-3.58,15.79,15.79,0,0,1,0-1.82,12.37,12.37,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.42,14.62,14.62,0,0,1,.92-1.57,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34S706.85,437.5,699,432c-3.91-2.76-7.85-5.44-11.83-8.1s-8-5.28-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.33-4.73-.58-7.11-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.91,19.91,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.75-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37a85.63,85.63,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6l-.55.71-.57.71L563.32,512l-.6.67c-.2.23-.39.45-.6.67-.42.43-.82.88-1.26,1.3a52.29,52.29,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12,89.63,89.63,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2.23-.58ZM777.1,504.37a69.5,69.5,0,0,0-7,1.66,49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.9,12.9,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77A19.91,19.91,0,0,0,752,528a26.67,26.67,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.41.44.62.64l.63.63.65.61.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1,.24.16.49.34.74.49l.75.48c1,.63,2.05,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1A16.63,16.63,0,0,0,789,555a11.76,11.76,0,0,0,3.25-1.3,8.06,8.06,0,0,0,2.57-2.32q.24-.36.45-.75c.13-.25.25-.53.37-.79.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,44.74,44.74,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12q-1.89-2.56-3.87-5.05Z"/><polygon class="cls-3" points="780.08 503.85 779.84 503.56 779.27 503.66 779.51 503.96 780.08 503.85"/></g><g class="cls-1"><path class="cls-110" d="M489.84,530.27l2.19.57a110.24,110.24,0,0,0,14.06,2.55,89.54,89.54,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,51.36,51.36,0,0,0,11.29-8.61,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.09-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.51-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.53,50.53,0,0,1,1.21-7.11,30,30,0,0,1,2.54-6.79,19.51,19.51,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.6,0,1.21,0,1.81,0l.9,0,.89,0c2.4.13,4.79.39,7.17.72a100.56,100.56,0,0,1,14,3.12q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.53,4.37,16.75,9.29,24.82,14.42q6.06,3.86,12,7.86c4,2.67,7.93,5.36,11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.16,6.36,14.1,12.94,20.73,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.11,19.11.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.22,8.22,0,0,0,1.22-1.28l.14-.17.12-.19.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.52-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,3.06,3.06,0,0,1,.33-.85,2.78,2.78,0,0,1,.58-.7,7.9,7.9,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,25.26,25.26,0,0,1,3.58.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1,.59,1.56.9l.76.47.37.26.18.14c0,.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25c-.25-.17-.51-.32-.76-.48-.52-.3-1-.6-1.56-.89-1-.58-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.71,7.71,0,0,0-3.12,1.65,2.69,2.69,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.5,1.09,1,2.2,1.36,3.33a18.16,18.16,0,0,1,.9,3.48,9.94,9.94,0,0,1,.1,1.81,6.1,6.1,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a9.06,9.06,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.7l-14.31-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.18,30.18,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.14-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.34-.3-.33-.31c-.21-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.64a38,38,0,0,1-4.43-5.68,33.66,33.66,0,0,1-3.19-6.45,28,28,0,0,1-1-3.46,21.7,21.7,0,0,1-.49-3.58,15.79,15.79,0,0,1,0-1.82,12.37,12.37,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.42,14.62,14.62,0,0,1,.92-1.57,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.5-12.44-22-18.34-15.2-11.59-23-17.09c-3.91-2.76-7.86-5.44-11.83-8.1s-8-5.28-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.35-.33-4.72-.58-7.1-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.52,19.52,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.66,28.66,0,0,0-2.47,6.62,48.49,48.49,0,0,0-1.18,7c-.24,2.37-.36,4.75-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37a85.63,85.63,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71-1.16,1.38-.6.67c-.2.23-.39.45-.6.67-.42.43-.82.88-1.26,1.3a52.29,52.29,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,3.95,56.53,56.53,0,0,1-13.36,5.34,69.88,69.88,0,0,1-14.23,2.12A89.59,89.59,0,0,1,506,534a111.12,111.12,0,0,1-14.13-2.6l-2.25-.59Zm285.83-22.15a68.85,68.85,0,0,0-6.95,1.66,49.26,49.26,0,0,0-6.69,2.49A29.6,29.6,0,0,0,756,516a16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.9,12.9,0,0,0-.23,1.75,13.07,13.07,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.41.44.62.64l.63.63.65.61.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1,.24.16.49.34.74.49l.75.48c1,.63,2,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.06,8.06,0,0,0,2.57-2.32c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,45.88,45.88,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12q-1.89-2.56-3.87-5.05Z"/><polygon class="cls-3" points="778.64 507.6 778.41 507.31 777.84 507.41 778.08 507.71 778.64 507.6"/></g><g class="cls-1"><path class="cls-111" d="M488.41,534l2.22.57a110.1,110.1,0,0,0,14.07,2.56,88.25,88.25,0,0,0,14.26.49,69,69,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,52.21,52.21,0,0,0,6-3.92,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49,49,0,0,0,5-13.26,83.06,83.06,0,0,0,1.91-14.13c.27-4.76.24-9.54.08-14.31-.33-9.54-1.25-19.05-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,19.31,19.31,0,0,1,3-2.09,20.75,20.75,0,0,1,3.34-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.16.72a97.19,97.19,0,0,1,14,3.12c2.3.67,4.58,1.43,6.84,2.24s4.48,1.68,6.69,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.85,12,7.86t11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.06,23.06,0,0,0,3.34-1.24,13.14,13.14,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,18.2,18.2,0,0,0-.88-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,7.92,7.92,0,0,1,3.16-1.68,14.77,14.77,0,0,1,3.56-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c.05.07.13.07.15.22l-.07,0-.13-.13a1.09,1.09,0,0,0-.17-.13l-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.65-2.68-4.51-1.58-6.81-2.21a48.18,48.18,0,0,0-7-1.4,23.65,23.65,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0-.05,1.76,15.7,15.7,0,0,0,1,3.42c.44,1.11.94,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.83,9.83,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.13.18a9.66,9.66,0,0,1-1.25,1.31,13.38,13.38,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.34,0s-9.56-.41-14.33-.69l-14.32-.88c-9.54-.59-19.09-1.12-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.29,17.29,0,0,1-3.59.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.13-1.78l-.76-.49-.74-.5c-.51-.33-1-.69-1.48-1-.95-.72-1.9-1.46-2.79-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.42-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,14,14,0,0,1,1.19-3.43,15.2,15.2,0,0,1,.92-1.56,17.11,17.11,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.8s-14.51-12.43-22-18.34-15.2-11.59-23-17.09q-5.85-4.12-11.82-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.18.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.46,52.46,0,0,1-11.46,8.71,56.5,56.5,0,0,1-13.36,5.33A69.11,69.11,0,0,1,519,538.22a88.33,88.33,0,0,1-14.36-.53,109.2,109.2,0,0,1-14.14-2.59l-2.28-.6Zm285.87-22.15a69.08,69.08,0,0,0-7,1.67,47.18,47.18,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,14.74,14.74,0,0,0,0,1.76,21.93,21.93,0,0,0,.49,3.52,28.39,28.39,0,0,0,1,3.41,33.45,33.45,0,0,0,3.16,6.37,37.82,37.82,0,0,0,4.39,5.61l.62.64.64.63c.21.21.43.4.65.61l.32.3.34.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.22,24.22,0,0,0,7,.95,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,29.91,29.91,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.05C775.87,511.52,775.07,511.66,774.28,511.81Z"/><polygon class="cls-3" points="777.25 511.3 777.01 511 776.45 511.11 776.68 511.4 777.25 511.3"/></g><g class="cls-1"><path class="cls-112" d="M486.91,537.84c.75.19,1.49.39,2.24.57A110,110,0,0,0,503.21,541a88.25,88.25,0,0,0,14.26.49,68.94,68.94,0,0,0,14.09-2.13,56.07,56.07,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.36,49.36,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.31-.33-9.54-1.25-19.05-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a52.14,52.14,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.13,3.62-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.67,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.33.71s9.55.23,14.33.05c2.38-.1,4.76-.26,7.13-.54a45.1,45.1,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,7.84,7.84,0,0,1,3.16-1.67,14.78,14.78,0,0,1,3.56-.51,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.38.25.17.14c0,.07.13.07.15.22l-.07,0a.76.76,0,0,0-.13-.13l-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.21a47.66,47.66,0,0,0-7-1.4,24.9,24.9,0,0,0-3.56-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.66,14.66,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33A18.93,18.93,0,0,1,896,505a9.83,9.83,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,5.73,5.73,0,0,1-.39.83l-.12.19-.12.19L895,510l-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69L830,515c-9.55-.59-19.09-1.12-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.77-.49-.74-.5c-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,12,12,0,0,1,.24-1.8,13.74,13.74,0,0,1,1.19-3.42,16.14,16.14,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.26,19.26,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.74-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.05,1.84,28.63.17,4.78.19,9.58-.09,14.37A83.72,83.72,0,0,1,570.41,501a49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,53.65,53.65,0,0,1-6,4A56.5,56.5,0,0,1,531.73,540a69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53A109.05,109.05,0,0,1,489,539l-2.31-.61Zm285.88-22.15a69.08,69.08,0,0,0-7,1.67,46.61,46.61,0,0,0-6.68,2.49,28.91,28.91,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,26.71,26.71,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.61.64l.64.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.22,24.22,0,0,0,7,.95,15.82,15.82,0,0,0,3.5-.44A12,12,0,0,0,788,565a8.16,8.16,0,0,0,2.56-2.33A5,5,0,0,0,791,562c.13-.25.26-.53.38-.8.23-.54.44-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.46,29.46,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.87-5.05C774.38,515.4,773.59,515.54,772.79,515.69Z"/><polygon class="cls-3" points="775.76 515.18 775.52 514.88 774.96 514.99 775.19 515.28 775.76 515.18"/></g><g class="cls-1"><path class="cls-113" d="M485.46,541.58c.75.2,1.5.4,2.26.58a110,110,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49,69,69,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,52.21,52.21,0,0,0,5.95-3.92,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.36,49.36,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.62-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a50.64,50.64,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.82,19.82,0,0,1,4.51-5.71,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.12,3.62-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.16.72a98.54,98.54,0,0,1,14,3.12c2.3.67,4.58,1.43,6.84,2.24s4.48,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13c7.51,5.92,14.88,12,22,18.39s14.1,12.94,20.72,19.85c5.13,5.34,10.06,10.88,14.66,16.69,3.81-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36A23.18,23.18,0,0,0,889,517a13,13,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.36,15.36,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,7.84,7.84,0,0,1,3.16-1.67,14.78,14.78,0,0,1,3.56-.51,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c.05.07.13.07.15.22l-.07,0-.13-.13-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.21a47.92,47.92,0,0,0-7-1.4,25,25,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0,0,1.76,15.18,15.18,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.83,9.83,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.12.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.45,22.45,0,0,1-3.38,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.32-.88c-9.54-.59-19.08-1.11-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,47.18,47.18,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.13-1.78l-.76-.49-.74-.5c-.51-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,15.61,15.61,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,13.74,13.74,0,0,1,1.19-3.42,14.34,14.34,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39C769,513,764.1,507.57,759,502.3c-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38A20.56,20.56,0,0,0,580,405a17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.05,1.84,28.63.16,4.78.19,9.58-.09,14.37A83.72,83.72,0,0,1,569,504.78a49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,51.34,51.34,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,108.74,108.74,0,0,1-14.13-2.59l-2.33-.61Zm285.9-22.14a69.08,69.08,0,0,0-7,1.67,47.18,47.18,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4A13.4,13.4,0,0,0,746,536a12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,28.39,28.39,0,0,0,1,3.41,33.45,33.45,0,0,0,3.16,6.37,37.82,37.82,0,0,0,4.39,5.61l.62.64.64.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.22,24.22,0,0,0,7,.95,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.13-.25.25-.53.38-.8q.35-.81.63-1.65a21.47,21.47,0,0,0,1.13-7,29.48,29.48,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.05C773,519.15,772.15,519.29,771.36,519.44Z"/><polygon class="cls-3" points="774.33 518.93 774.09 518.63 773.53 518.74 773.76 519.03 774.33 518.93"/></g><g class="cls-1"><path class="cls-114" d="M484,545.28c.75.2,1.5.4,2.26.58a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,51.82,51.82,0,0,0,11.29-8.62,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.31-.33-9.54-1.25-19.05-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30,30,0,0,1,2.54-6.78,19.68,19.68,0,0,1,4.52-5.71,18.85,18.85,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.91,0,.89.05c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.53,4.38,16.75,9.29,24.82,14.43q6.06,3.85,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.11.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77A19,19,0,0,0,892,509c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.52-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.84,2.84,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,7.88,7.88,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.82,26.82,0,0,1,3.58.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.52-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68-2.14-1.08-4.3-2.09-6.49-3.06s-4.4-1.86-6.64-2.68-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,25.11,25.11,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.19,5.19,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.5,1.09,1,2.2,1.36,3.33a18.16,18.16,0,0,1,.9,3.48,9.83,9.83,0,0,1,.1,1.8,6.31,6.31,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.68-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.34-.29-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a37.93,37.93,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.63,27.63,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,14,14,0,0,1,2.11-5,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.72-19.79s-14.5-12.44-22-18.35-15.2-11.59-23-17.09Q686,446.65,680,442.68t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22a99.08,99.08,0,0,0-13.94-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.45,20.45,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6c-.18.24-.37.47-.56.71l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3a51,51,0,0,1-5.42,4.75,53.05,53.05,0,0,1-6,4,56.41,56.41,0,0,1-13.37,5.33,69,69,0,0,1-14.22,2.13,88.45,88.45,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59l-2.33-.61Zm285.9-22.14a68.89,68.89,0,0,0-6.95,1.67,46.73,46.73,0,0,0-6.69,2.49,29.16,29.16,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.69,12.69,0,0,0-.23,1.75,12.91,12.91,0,0,0,0,1.76,19.89,19.89,0,0,0,.49,3.52,25.15,25.15,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63c.22.21.44.4.65.61l.33.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.93,35.93,0,0,0,6.61,2.65,24.15,24.15,0,0,0,7,1,16,16,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,30,30,0,0,0-.88-7,45.76,45.76,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.33,109.33,0,0,0-7.78-12q-1.89-2.56-3.87-5C771.53,522.85,770.73,523,769.93,523.14Z"/><polygon class="cls-3" points="772.9 522.63 772.67 522.33 772.1 522.44 772.34 522.73 772.9 522.63"/></g><g class="cls-1"><path class="cls-115" d="M482.53,549.16c.75.2,1.51.4,2.27.58a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,53.51,53.51,0,0,0,6-3.91,51.84,51.84,0,0,0,5.34-4.71,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,85.11,85.11,0,0,0,1.91-14.13c.26-4.76.24-9.54.08-14.3-.34-9.55-1.26-19.06-1.86-28.62-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.41-7.19a49.23,49.23,0,0,1,1.2-7.12,30,30,0,0,1,2.54-6.78,19.85,19.85,0,0,1,4.52-5.71,18.85,18.85,0,0,1,3-2.09A20.65,20.65,0,0,1,580,410.4a28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.62-.12l1.8,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,7.88,7.88,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51A26.74,26.74,0,0,1,895,491a48.23,48.23,0,0,1,7,1.42c2.3.64,4.57,1.39,6.82,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.1,3.16,1.68.53.29,1,.58,1.56.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13c-.11-.09-.24-.17-.36-.26l-.76-.47c-.51-.31-1-.6-1.55-.89-1.05-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.09-6.48-3.06s-4.41-1.86-6.65-2.68-4.51-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09.95,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.38,13.38,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,68.85,68.85,0,0,1,3.14,6.47,44.87,44.87,0,0,1,2.28,6.83,30.8,30.8,0,0,1,.9,7.16,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.13-.66,1.68-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.8,16.8,0,0,1-3.59.45,24.35,24.35,0,0,1-7.15-1,35.72,35.72,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.33-.3-.33-.31c-.22-.2-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65a38.07,38.07,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,14,14,0,0,1,2.11-5,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.87,20.87,0,0,0-3.2,1.44,17.82,17.82,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26A50,50,0,0,1,561,525.82a60.24,60.24,0,0,1-4,6l-.55.71-.57.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,53.05,53.05,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.21,69.21,0,0,1-14.23,2.13,88.33,88.33,0,0,1-14.36-.53,109.2,109.2,0,0,1-14.14-2.59l-2.34-.62ZM768.44,527a69.55,69.55,0,0,0-7,1.67,48.44,48.44,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,14.43,14.43,0,0,0-.23,1.75,14.74,14.74,0,0,0,0,1.76,20.86,20.86,0,0,0,.49,3.52,28.39,28.39,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63.66.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2.05,1.22,3.1,1.76a35.93,35.93,0,0,0,6.61,2.65,24.5,24.5,0,0,0,7,1,16.54,16.54,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.53,30.53,0,0,0-.89-7,45,45,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,110.73,110.73,0,0,0-7.77-12q-1.9-2.56-3.88-5C770,526.73,769.24,526.87,768.44,527Z"/><polygon class="cls-3" points="771.41 526.51 771.18 526.21 770.61 526.32 770.85 526.61 771.41 526.51"/></g><g class="cls-1"><path class="cls-116" d="M481.08,552.9l2.29.59a108.54,108.54,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,68.46,68.46,0,0,0,14.09-2.13A55.83,55.83,0,0,0,539,549.12a53.51,53.51,0,0,0,5.95-3.91,52.91,52.91,0,0,0,5.34-4.71,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,85.11,85.11,0,0,0,1.91-14.13c.26-4.76.24-9.54.08-14.3-.34-9.55-1.26-19.06-1.86-28.62-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30,30,0,0,1,2.54-6.78,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.81,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.08,8.52,4.37,16.74,9.28,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.72,8.28,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,2.92,2.92,0,0,1,.91-1.56,7.88,7.88,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.82,26.82,0,0,1,3.58.17,49.18,49.18,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1.05.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c.05.07.13.07.14.22l-.07,0a1,1,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.51-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68-2.14-1.08-4.3-2.09-6.49-3.06s-4.4-1.86-6.64-2.68-4.51-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.73,2.73,0,0,0-.55.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0-.05,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69L824.2,530c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,68.85,68.85,0,0,1,3.14,6.47,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.68-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.34-.3L752,572l-.65-.61-.64-.64c-.22-.21-.42-.43-.63-.65a37.42,37.42,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,26,26,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,14,14,0,0,1,2.11-5,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22A99.7,99.7,0,0,0,600,414.18c-2.36-.33-4.73-.58-7.11-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.87,20.87,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6l-.55.71-.57.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3a51,51,0,0,1-5.42,4.75,53.05,53.05,0,0,1-6,4A56.5,56.5,0,0,1,526,555.05a69.21,69.21,0,0,1-14.23,2.13,88.49,88.49,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59l-2.36-.62ZM767,530.77c-2.34.45-4.67,1-7,1.67a48,48,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.69,12.69,0,0,0-.23,1.75,14.89,14.89,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,26.67,26.67,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63c.22.21.44.4.65.61l.33.3.34.3c.88.79,1.82,1.52,2.77,2.24.48.35,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.24,35.24,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,30,30,0,0,0-.88-7,45,45,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.33,109.33,0,0,0-7.78-12q-1.89-2.56-3.87-5C768.61,530.48,767.81,530.62,767,530.77Z"/><polygon class="cls-3" points="769.98 530.26 769.75 529.96 769.18 530.07 769.42 530.36 769.98 530.26"/></g><g class="cls-1"><path class="cls-117" d="M479.65,556.59c.77.21,1.55.41,2.33.6A111.39,111.39,0,0,0,496,559.75a88.25,88.25,0,0,0,14.26.49,69,69,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,52.13,52.13,0,0,0,5.95-3.91,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.29,49.29,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a50.64,50.64,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.78,19.78,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.51,98.51,0,0,1,14,3.11q3.45,1,6.84,2.25t6.69,2.6c4.43,1.85,8.76,3.89,13,6.08,8.52,4.37,16.75,9.29,24.82,14.42q6,3.86,12,7.87t11.83,8.12q11.73,8.26,23,17.13c7.51,5.92,14.88,12,22,18.39s14.1,12.94,20.72,19.84c5.13,5.35,10.06,10.89,14.66,16.7,3.81-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.38,9.38,0,0,0,1.23-1.29l.13-.17.13-.18.12-.19.12-.18a5.8,5.8,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.4-1.13-.86-2.23-1.35-3.32-1-2.17-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.19,5.19,0,0,1,0-1.8,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,7.92,7.92,0,0,1,3.16-1.68,14.29,14.29,0,0,1,3.56-.5,25.32,25.32,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.63,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.69,4.35,2,6.48,3.07c1.06.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.48l.37.25.18.14c.05.06.13.07.15.22l-.07,0-.13-.13-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.61-1.55-.9-1-.57-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06T906,502.16c-2.25-.82-4.52-1.57-6.82-2.2a48,48,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.92,7.92,0,0,0-3.11,1.65,2.71,2.71,0,0,0-.87,1.49,5.19,5.19,0,0,0,0,1.76,15.33,15.33,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09,1,2.19,1.35,3.32a18.85,18.85,0,0,1,.91,3.49,9.83,9.83,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.12.18-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.2,13.2,0,0,1-3,1.93,21.46,21.46,0,0,1-3.38,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.12-14.34,0s-9.56-.41-14.33-.69l-14.32-.89c-9.54-.58-19.08-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.49,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,66.61,66.61,0,0,1,3.15,6.47,46.38,46.38,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.25.55-.39.83a7.24,7.24,0,0,1-.48.79,8.77,8.77,0,0,1-2.7,2.45,12.45,12.45,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.57,24.57,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.13-1.79l-.76-.48-.74-.5c-.51-.33-1-.69-1.47-1-1-.72-1.91-1.47-2.8-2.27L751,576l-.33-.3L750,575l-.64-.63c-.21-.21-.41-.44-.62-.65a38,38,0,0,1-4.44-5.67,33.74,33.74,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,13.81,13.81,0,0,1,1.19-3.43A15.2,15.2,0,0,1,742,546a15.63,15.63,0,0,1,1.1-1.44,18.77,18.77,0,0,1,2.6-2.52,30,30,0,0,1,6.15-3.73,49.17,49.17,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.54-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09Q681.7,458,675.73,454t-12-7.84c-8.07-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.67-2.58s-4.5-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a28,28,0,0,0-6.91,1.39,20.51,20.51,0,0,0-3.21,1.43,17.88,17.88,0,0,0-2.87,2A18.79,18.79,0,0,0,567,427.5a29,29,0,0,0-2.47,6.61,50,50,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.19,9.59-.09,14.38a83.85,83.85,0,0,1-1.93,14.26,49.3,49.3,0,0,1-5.12,13.45,59.1,59.1,0,0,1-4,6c-.18.24-.36.48-.55.71l-.56.71c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.4.45-.61.66-.42.44-.82.88-1.25,1.3a51.64,51.64,0,0,1-11.46,8.71,56.53,56.53,0,0,1-13.36,5.34,69.1,69.1,0,0,1-14.22,2.12,89.54,89.54,0,0,1-14.37-.52,108.77,108.77,0,0,1-14.13-2.6l-2.4-.62Zm286-22.12q-3.52.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.88,16.88,0,0,0-4.51,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,21,21,0,0,0,.48,3.52,29.51,29.51,0,0,0,1,3.41,33.74,33.74,0,0,0,3.16,6.37,37.82,37.82,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.33.31.33.29c.89.8,1.82,1.53,2.77,2.24.49.35,1,.71,1.46,1l.74.5.76.48c1,.63,2,1.21,3.1,1.76a35.11,35.11,0,0,0,6.6,2.64,23.89,23.89,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.13-.26.25-.53.38-.8q.34-.81.63-1.65a21.49,21.49,0,0,0,1.13-7,29.4,29.4,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,112.21,112.21,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.06C767.21,534.18,766.41,534.32,765.62,534.47Z"/><polygon class="cls-3" points="768.59 533.96 768.35 533.66 767.78 533.77 768.02 534.06 768.59 533.96"/></g><g class="cls-1"><path class="cls-118" d="M478.14,560.46c.78.21,1.56.42,2.35.61a111.72,111.72,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49A69,69,0,0,0,522.9,562a55.51,55.51,0,0,0,13.2-5.3,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.61-11.3,49,49,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,29.29,29.29,0,0,1,2.54-6.79,19.78,19.78,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.61-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.43,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.75,3.9,13,6.08,8.52,4.37,16.75,9.29,24.82,14.42q6,3.87,12,7.87t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.84,5.12,5.35,10,10.89,14.66,16.7,3.8-.59,7.63-.93,11.47-1.15,4.77-.27,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33,0c2.38-.1,4.77-.26,7.14-.55a45.18,45.18,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,8.82,8.82,0,0,0,1.23-1.29l.13-.17.13-.18.12-.19.12-.18a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.4-1.13-.86-2.23-1.35-3.32-1-2.17-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.44,5.44,0,0,1,0-1.8,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.17-1.68,14.15,14.15,0,0,1,3.55-.5,25.32,25.32,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.63,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.69,4.35,2,6.48,3.07c1.07.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.77.48l.37.25.17.14c.06.06.14.07.15.22l-.07,0a.5.5,0,0,0-.13-.13l-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.61-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.2-1.62-6.48-3.06T904.47,506c-2.25-.82-4.52-1.57-6.82-2.2a47.81,47.81,0,0,0-7-1.41,25.1,25.1,0,0,0-3.57-.16,14,14,0,0,0-3.53.5,7.92,7.92,0,0,0-3.11,1.65,2.57,2.57,0,0,0-.55.68,2.85,2.85,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.36,3.32a18.83,18.83,0,0,1,.9,3.49,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,5.22,5.22,0,0,1-.39.83,2,2,0,0,1-.12.19l-.12.19-.13.18-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.58,13.58,0,0,1-3,1.94,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.12-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,45.24,45.24,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.24.55-.39.83a7.24,7.24,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.57,24.57,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.12-1.79l-.76-.48c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.47-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.44-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.21,33.21,0,0,1-3.2-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,13.81,13.81,0,0,1,1.19-3.43,17.26,17.26,0,0,1,.92-1.56,15.63,15.63,0,0,1,1.1-1.44,20,20,0,0,1,2.6-2.52,30,30,0,0,1,6.15-3.73,49.66,49.66,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.73-.14,1.47-.26,2.21-.38-4.54-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.84c-8.07-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.66-2.58s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.54.11a28,28,0,0,0-6.92,1.39,19.67,19.67,0,0,0-3.21,1.44,17.21,17.21,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48,29.53,29.53,0,0,0-2.47,6.61,50,50,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.15,9.54.43,14.3.6,9.53,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37a83.85,83.85,0,0,1-1.93,14.26,49.3,49.3,0,0,1-5.12,13.45,59.1,59.1,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.4.45-.61.66-.41.44-.82.89-1.25,1.3a51,51,0,0,1-11.46,8.71,56.53,56.53,0,0,1-13.36,5.34,69.1,69.1,0,0,1-14.22,2.12,89.54,89.54,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6c-.81-.2-1.61-.41-2.41-.63Zm286-22.11q-3.52.66-7,1.66a47.88,47.88,0,0,0-6.68,2.5,28.87,28.87,0,0,0-6.07,3.69,17,17,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77A21,21,0,0,0,739,562a27.7,27.7,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.6.33.31.33.29c.89.8,1.83,1.53,2.78,2.24.48.35,1,.71,1.45,1l.74.5.76.48c1,.63,2,1.21,3.1,1.76a34.93,34.93,0,0,0,6.61,2.64,23.78,23.78,0,0,0,7,1,17.11,17.11,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.14-.25.26-.53.38-.8.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,110.69,110.69,0,0,0-7.78-12c-1.26-1.71-2.55-3.39-3.87-5.06C765.72,538.06,764.93,538.2,764.13,538.35Z"/><polygon class="cls-3" points="767.1 537.84 766.87 537.54 766.3 537.65 766.53 537.94 767.1 537.84"/></g><g class="cls-1"><path class="cls-119" d="M476.69,564.21c.79.21,1.58.42,2.37.61a111.72,111.72,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49,68.94,68.94,0,0,0,14.09-2.13,55.68,55.68,0,0,0,13.2-5.3,52.9,52.9,0,0,0,5.94-3.91,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.29,49.29,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.64,50.64,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.1,2.42-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.48,1.68,6.69,2.6c4.43,1.85,8.76,3.9,13,6.08,8.52,4.37,16.75,9.29,24.82,14.42q6,3.87,12,7.87T685,469.23q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.67,16.69,3.8-.59,7.63-.93,11.47-1.15,4.77-.27,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.38,9.38,0,0,0,1.23-1.29l.13-.17.13-.18.12-.19.12-.18a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.4-1.13-.86-2.23-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.29a15.22,15.22,0,0,1-1-3.46,5.44,5.44,0,0,1,0-1.8,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.16-1.68,14.29,14.29,0,0,1,3.56-.5,25.32,25.32,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.63,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.69,4.35,2,6.48,3.07c1.07.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.48l.37.25a1.41,1.41,0,0,1,.18.14c0,.07.13.07.15.22l-.07,0a.76.76,0,0,0-.13-.13l-.17-.14-.37-.25c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1.05-.58-2.1-1.14-3.17-1.68q-3.2-1.62-6.48-3.06T903,509.79c-2.25-.82-4.52-1.57-6.82-2.2a46.4,46.4,0,0,0-7-1.4,23.59,23.59,0,0,0-3.57-.17,14,14,0,0,0-3.52.5,7.92,7.92,0,0,0-3.11,1.65,2.57,2.57,0,0,0-.55.68,2.85,2.85,0,0,0-.32.81,5.19,5.19,0,0,0,0,1.76,15.33,15.33,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.32a18.85,18.85,0,0,1,.91,3.49,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,6.28,6.28,0,0,1-.39.83l-.12.19-.12.19-.13.18-.14.18a8.61,8.61,0,0,1-1.25,1.31,13.58,13.58,0,0,1-3,1.94,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7.05,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.12-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.55-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.24,1.12,1.26,1.6,2.49,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.38,46.38,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.36,22.36,0,0,1-1.16,7.12c-.19.57-.41,1.14-.65,1.69-.13.28-.24.55-.39.83a7.24,7.24,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.57,24.57,0,0,1-7.14-1A35.81,35.81,0,0,1,757.3,590c-1.06-.55-2.11-1.15-3.12-1.79l-.77-.48-.74-.5c-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.74,33.74,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,20.56,20.56,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,12,12,0,0,1,.24-1.8,13.81,13.81,0,0,1,1.19-3.43,15.2,15.2,0,0,1,.92-1.56,15.63,15.63,0,0,1,1.1-1.44,19.34,19.34,0,0,1,2.6-2.52,30,30,0,0,1,6.15-3.73,49.66,49.66,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.54-5.71-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.84c-8.07-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.66-2.58s-4.51-1.55-6.8-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.55.11a28,28,0,0,0-6.91,1.39,19.67,19.67,0,0,0-3.21,1.44,17.21,17.21,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,29,29,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.16,4.78.19,9.58-.09,14.37a83.85,83.85,0,0,1-1.93,14.26,49.3,49.3,0,0,1-5.12,13.45,59.1,59.1,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.4.45-.61.66-.42.44-.82.89-1.25,1.3A51,51,0,0,1,535,561a56.53,56.53,0,0,1-13.36,5.34,69.1,69.1,0,0,1-14.22,2.12,89.54,89.54,0,0,1-14.37-.52,108.77,108.77,0,0,1-14.13-2.6q-1.23-.3-2.43-.63Zm286-22.11q-3.53.66-7,1.66a47.88,47.88,0,0,0-6.68,2.5A28.87,28.87,0,0,0,743,550a17,17,0,0,0-4.52,5.4,13.69,13.69,0,0,0-1.15,3.33,13.54,13.54,0,0,0-.25,3.52,21,21,0,0,0,.48,3.52,29.51,29.51,0,0,0,1,3.41,33.78,33.78,0,0,0,3.17,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.61.64l.64.63.65.6.33.31.33.29c.89.8,1.82,1.53,2.77,2.24.49.35,1,.71,1.46,1l.74.5.76.48c1,.63,2,1.22,3.1,1.76a35.11,35.11,0,0,0,6.6,2.64,23.89,23.89,0,0,0,7,1,16.44,16.44,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,6.36,6.36,0,0,0,.45-.74c.13-.25.26-.53.38-.8.23-.54.44-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,45.07,45.07,0,0,0-2.26-6.76,67.91,67.91,0,0,0-3.13-6.42,112.21,112.21,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.87-5.06Q763.89,541.88,762.7,542.1Z"/><polygon class="cls-3" points="765.67 541.59 765.43 541.29 764.87 541.4 765.1 541.69 765.67 541.59"/></g><g class="cls-1"><path class="cls-120" d="M475.26,567.9l2.32.59a107.93,107.93,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49A67.69,67.69,0,0,0,520,569.41a55.83,55.83,0,0,0,13.19-5.29,53.51,53.51,0,0,0,6-3.91,51.88,51.88,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26A82.92,82.92,0,0,0,560,516.81c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.78-.51-9.57-.43-14.37,0-2.39.15-4.79.4-7.19a50.89,50.89,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.64,19.64,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.41-.12,3.62-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.16.72a99.93,99.93,0,0,1,14,3.12c2.3.67,4.58,1.43,6.84,2.24s4.48,1.68,6.69,2.61c4.42,1.84,8.76,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.83,8.12q11.72,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.35,10.06,10.89,14.66,16.69,3.81-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.33,14.35-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.72s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,22.46,22.46,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,8.87,8.87,0,0,0-.1-1.78,18.2,18.2,0,0,0-.88-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.09-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.8,7.8,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68l1.55.89.76.48c.13.08.25.17.37.26l.18.14c0,.06.13.06.15.21l-.07,0-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48-.51-.31-1-.6-1.55-.89-1.05-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.65-2.69s-4.51-1.58-6.81-2.2a46.92,46.92,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.67,7.67,0,0,0-3.11,1.65,2.77,2.77,0,0,0-.56.67,3,3,0,0,0-.31.81,5.21,5.21,0,0,0,0,1.76,15.54,15.54,0,0,0,1,3.42c.44,1.12.94,2.2,1.45,3.28,1,2.16,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.88,9.88,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.2-.13.18-.12.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.38,13.38,0,0,1-3,1.93,21.94,21.94,0,0,1-3.37,1.25,44.47,44.47,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7L818.4,545c-9.54-.59-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13q1.89,2.38,3.7,4.85a109.83,109.83,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,47.18,47.18,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.25.54-.39.82a6.4,6.4,0,0,1-.48.79,8.93,8.93,0,0,1-2.7,2.46,12.75,12.75,0,0,1-3.38,1.34,16.2,16.2,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.13-1.78l-.76-.48c-.25-.16-.49-.34-.74-.51-.51-.33-1-.68-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a37.49,37.49,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7,16.5,16.5,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.55-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.82-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a99.36,99.36,0,0,0-13.94-3.07q-3.54-.51-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0-1.18,0-2.37,0-3.55.12a28,28,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.71-1.16,1.38-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,51.34,51.34,0,0,1-6,4,56.08,56.08,0,0,1-13.36,5.33,69.11,69.11,0,0,1-14.23,2.13,89.46,89.46,0,0,1-14.36-.52,110.48,110.48,0,0,1-14.13-2.6c-.8-.2-1.59-.41-2.38-.63Zm286-22.13c-2.35.45-4.67,1-7,1.67a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7A16.77,16.77,0,0,0,737,559a13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,33.83,33.83,0,0,0,3.16,6.38,37.74,37.74,0,0,0,4.39,5.6c.21.21.41.44.62.64l.64.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.82,1.52,2.77,2.24.49.35,1,.7,1.46,1,.25.16.49.34.74.49l.76.48c1,.63,2,1.22,3.1,1.76a35.15,35.15,0,0,0,6.6,2.65,24.23,24.23,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8,8,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.13-.25.25-.53.37-.79.24-.55.45-1.1.64-1.66a21.47,21.47,0,0,0,1.13-7,30,30,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,66.75,66.75,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5C762.81,545.49,762,545.62,761.22,545.77Z"/><polygon class="cls-3" points="764.19 545.26 763.95 544.96 763.38 545.07 763.62 545.37 764.19 545.26"/></g><g class="cls-1"><path class="cls-121" d="M473.76,571.77l2.33.61a109.92,109.92,0,0,0,14.06,2.55,88.34,88.34,0,0,0,14.27.49,67.59,67.59,0,0,0,14.08-2.13A55.65,55.65,0,0,0,531.7,568a54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49,49,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a52.4,52.4,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.64,19.64,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1A21.15,21.15,0,0,1,571.3,433a28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.12,3.62-.11l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86T682,476.78q11.73,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.35,10.05,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.72s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a45.21,45.21,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,8.75,8.75,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.72,9.66,9.66,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.26,3.26,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7A7.87,7.87,0,0,1,879.1,514a14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.76.48.38.26.17.14c0,.06.14.06.15.21l-.07,0-.13-.13-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48l-1.55-.89c-1.05-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.57-6.82-2.2a46.42,46.42,0,0,0-7-1.41,26.44,26.44,0,0,0-3.56-.17,14.47,14.47,0,0,0-3.53.51,7.67,7.67,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.74,14.74,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.88,9.88,0,0,1,.09,1.8,6.3,6.3,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,2.12,2.12,0,0,1-.12.2l-.12.18-.13.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.82,44.82,0,0,1-7.05,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,45.73,45.73,0,0,1,2.28,6.84,30.11,30.11,0,0,1,.89,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.55-.39.82a6.4,6.4,0,0,1-.48.79,8.69,8.69,0,0,1-2.7,2.46,12.62,12.62,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.58,24.58,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5q-.75-.51-1.47-1c-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.81,13.81,0,0,1,1.45-7c.28-.54.59-1.06.92-1.57a17.11,17.11,0,0,1,1.1-1.44,19.89,19.89,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39c-4.54-5.7-9.41-11.15-14.47-16.41-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.1q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.36,99.36,0,0,0-13.94-3.07c-2.36-.34-4.72-.58-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0-1.18,0-2.37,0-3.55.12a28,28,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.15,9.53.43,14.3.6,9.53,1.51,19.06,1.84,28.63.17,4.79.19,9.58-.09,14.37A83.72,83.72,0,0,1,557.35,535a49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L546,557.25l-.6.67c-.2.23-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.08,56.08,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,89.54,89.54,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6l-2.4-.63Zm286-22.11a69,69,0,0,0-7,1.66,49.13,49.13,0,0,0-6.68,2.49,29.33,29.33,0,0,0-6.07,3.7,16.91,16.91,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,26.71,26.71,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.22.4.44.62.64l.63.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.83,1.52,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.74.49l.76.48c1,.63,2,1.22,3.1,1.76a35.15,35.15,0,0,0,6.6,2.65,24.23,24.23,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.13,8.13,0,0,0,2.56-2.32,5.73,5.73,0,0,0,.45-.75c.14-.25.26-.53.38-.79.23-.55.44-1.1.64-1.66a21.73,21.73,0,0,0,1.12-7,29.33,29.33,0,0,0-.89-7,44.7,44.7,0,0,0-2.26-6.76,66.75,66.75,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12q-1.89-2.56-3.87-5C761.32,549.37,760.53,549.5,759.73,549.66Z"/><polygon class="cls-3" points="762.7 549.14 762.47 548.84 761.9 548.95 762.13 549.25 762.7 549.14"/></g><g class="cls-1"><path class="cls-122" d="M472.31,575.52l2.35.61a109.92,109.92,0,0,0,14.06,2.55,88.25,88.25,0,0,0,14.26.49A67.59,67.59,0,0,0,517.07,577a55.65,55.65,0,0,0,13.2-5.29,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,56.44,56.44,0,0,0,8.61-11.31,49.36,49.36,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.78-.51-9.57-.43-14.37,0-2.39.16-4.79.4-7.19a50.89,50.89,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.64,19.64,0,0,1,4.51-5.7,18.36,18.36,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.12,3.62-.11l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.16.72a99.93,99.93,0,0,1,14,3.12c2.31.67,4.58,1.43,6.84,2.24s4.48,1.68,6.69,2.61c4.43,1.85,8.76,3.89,13,6.08,8.52,4.37,16.75,9.28,24.82,14.42q6,3.85,12,7.86t11.83,8.12q11.73,8.28,23,17.13c7.51,5.92,14.88,12,22,18.39s14.1,12.94,20.72,19.85c5.13,5.35,10.06,10.89,14.67,16.69,3.8-.58,7.63-.92,11.47-1.14,4.77-.27,9.56-.33,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.31.91c4.78.28,9.55.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.66,9.66,0,0,0-.09-1.78,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a15.36,15.36,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,3.4,3.4,0,0,1,.33-.85,2.85,2.85,0,0,1,.59-.7,7.87,7.87,0,0,1,3.16-1.68,14.78,14.78,0,0,1,3.56-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68l1.55.89.76.48c.13.08.25.17.37.26a.86.86,0,0,1,.18.14c0,.06.13.06.15.21l-.07,0a1.49,1.49,0,0,0-.13-.13l-.17-.13-.37-.25c-.25-.17-.5-.32-.76-.48l-1.55-.89c-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.87-6.64-2.69s-4.52-1.57-6.82-2.2a46.42,46.42,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.46,14.46,0,0,0-3.52.51,7.67,7.67,0,0,0-3.11,1.65,2.77,2.77,0,0,0-.56.67,3.31,3.31,0,0,0-.31.81,5.21,5.21,0,0,0-.05,1.76,15.26,15.26,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.88,9.88,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.2-.13.18-.12.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.45,22.45,0,0,1-3.38,1.25,44.47,44.47,0,0,1-7,1.38c-2.38.28-4.77.45-7.16.55-4.78.19-9.56.13-14.34,0s-9.56-.42-14.33-.7l-14.31-.88c-9.55-.59-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13q1.89,2.39,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,67.58,67.58,0,0,1,3.15,6.46,46.9,46.9,0,0,1,2.28,6.84,30.11,30.11,0,0,1,.89,7.15,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.69-.13.27-.24.55-.39.82a6.4,6.4,0,0,1-.48.79,8.69,8.69,0,0,1-2.7,2.46,12.62,12.62,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.58,24.58,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78L749,599l-.74-.5c-.51-.34-1-.69-1.47-1-1-.73-1.91-1.47-2.8-2.27l-.34-.3-.33-.31-.66-.61-.64-.64c-.21-.21-.41-.43-.62-.65A37.49,37.49,0,0,1,737,587a33.66,33.66,0,0,1-3.19-6.45,27.93,27.93,0,0,1-1-3.46,20.69,20.69,0,0,1-.49-3.58,13.8,13.8,0,0,1,0-1.82,12.16,12.16,0,0,1,.24-1.8,13.74,13.74,0,0,1,1.19-3.42,16.5,16.5,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,30,30,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66q1.11-.21,2.22-.39C755.91,547,751,541.53,746,536.27c-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.1q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a99.36,99.36,0,0,0-13.94-3.07q-3.54-.51-7.1-.71l-.89,0-.89,0c-.6,0-1.19,0-1.79,0-1.18,0-2.37,0-3.55.12a28,28,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,18.47,18.47,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6c-.17.24-.36.47-.55.71l-.56.71L544.52,561l-.6.67c-.2.23-.4.45-.61.67-.42.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,52.3,52.3,0,0,1-6,4,56.08,56.08,0,0,1-13.36,5.33A69.12,69.12,0,0,1,503,579.81a89.54,89.54,0,0,1-14.37-.52,110.48,110.48,0,0,1-14.13-2.6c-.81-.2-1.61-.42-2.42-.63Zm286-22.11a69,69,0,0,0-7,1.66,49.13,49.13,0,0,0-6.68,2.49,29.33,29.33,0,0,0-6.07,3.7,16.91,16.91,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.92,12.92,0,0,0-.24,1.75,13.07,13.07,0,0,0,0,1.77,20.86,20.86,0,0,0,.48,3.51,28.39,28.39,0,0,0,1,3.41,34.13,34.13,0,0,0,3.16,6.38,37.16,37.16,0,0,0,4.4,5.6c.2.22.4.44.61.64l.64.63c.21.21.43.41.65.61l.33.3.33.3c.89.79,1.82,1.52,2.77,2.24.49.35,1,.7,1.46,1,.25.16.49.34.74.49l.76.48c1,.63,2,1.22,3.1,1.77a35.8,35.8,0,0,0,6.6,2.64,24.23,24.23,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.13,8.13,0,0,0,2.56-2.32,5.73,5.73,0,0,0,.45-.75c.13-.25.26-.53.38-.79.23-.55.44-1.1.63-1.66a21.47,21.47,0,0,0,1.13-7,29.33,29.33,0,0,0-.89-7,44.7,44.7,0,0,0-2.26-6.76,66.75,66.75,0,0,0-3.13-6.42,113.36,113.36,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5C759.89,553.12,759.09,553.25,758.3,553.41Z"/><polygon class="cls-3" points="761.27 552.89 761.03 552.59 760.47 552.7 760.7 553 761.27 552.89"/></g><g class="cls-1"><path class="cls-123" d="M470.88,579.21c.79.21,1.59.42,2.38.61a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,51.82,51.82,0,0,0,11.29-8.62,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30.22,30.22,0,0,1,2.54-6.79,19.78,19.78,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.6c4.42,1.85,8.75,3.9,13,6.08,8.53,4.37,16.75,9.29,24.82,14.43q6.06,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.56-.33,14.35-.28,9.56.1,19.11.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.38-.1,4.77-.26,7.14-.55a45.08,45.08,0,0,0,7-1.35,23.51,23.51,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77A18.81,18.81,0,0,0,879,543c-.39-1.12-.86-2.23-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.52-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.59,2.59,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,26.82,26.82,0,0,1,3.58.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.09,3.17,1.68.53.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.52-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.17-1.68q-3.2-1.62-6.48-3.06c-2.18-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.38,2.38,0,0,0-.55.67,2.85,2.85,0,0,0-.32.81,5.19,5.19,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.5,1.09,1,2.19,1.36,3.33a18.73,18.73,0,0,1,.9,3.48,9.83,9.83,0,0,1,.1,1.8,6.37,6.37,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.31-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22,22,0,0,1-1.15,7.11c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.79l-.76-.48c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.34-.29-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a37.93,37.93,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28.13,28.13,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,15.62,15.62,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14.5,14.5,0,0,1,3.22-6.43,18.69,18.69,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,47.85,47.85,0,0,1,6.74-2.5,69.64,69.64,0,0,1,7-1.67c.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.79-6.67-2.59s-4.51-1.55-6.8-2.22a97.69,97.69,0,0,0-13.94-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,19.57,19.57,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.63,18.63,0,0,0-4.33,5.48,28.59,28.59,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.4,7.12-.07,4.77.15,9.54.44,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a85.91,85.91,0,0,1-1.93,14.26,49.84,49.84,0,0,1-5.13,13.46,60.59,60.59,0,0,1-4,6c-.18.25-.37.48-.56.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67-.6.67c-.42.43-.82.88-1.26,1.3a52.05,52.05,0,0,1-5.42,4.75,55.9,55.9,0,0,1-6,4,56.83,56.83,0,0,1-13.37,5.33,69,69,0,0,1-14.22,2.12,88.44,88.44,0,0,1-14.37-.52,111.09,111.09,0,0,1-14.13-2.59l-2.45-.65Zm286-22.11c-2.34.44-4.67,1-6.95,1.66a48,48,0,0,0-6.69,2.5,29.12,29.12,0,0,0-6.07,3.69,16.79,16.79,0,0,0-4.51,5.41,13.78,13.78,0,0,0-1.41,6.84,20,20,0,0,0,.49,3.52,26,26,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.21.21.4.43.62.64l.63.63c.22.2.44.4.65.61l.33.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.5.75.48c1,.63,2,1.22,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,16,16,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.9,29.9,0,0,0-.88-7,46.28,46.28,0,0,0-2.27-6.76,66.58,66.58,0,0,0-3.13-6.41,108.39,108.39,0,0,0-7.78-12c-1.26-1.71-2.55-3.39-3.87-5.06Z"/><polygon class="cls-3" points="759.87 556.59 759.64 556.29 759.07 556.4 759.31 556.69 759.87 556.59"/></g><g class="cls-1"><path class="cls-124" d="M469.38,583.08c.8.22,1.59.42,2.39.62a110.27,110.27,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,51.19,51.19,0,0,0,11.29-8.62,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27A84.83,84.83,0,0,0,554.2,532c.26-4.75.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.41-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.15,4.78-.26,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.51,23.51,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.51-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.84,2.84,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.77,14.77,0,0,1,3.56-.5,26.74,26.74,0,0,1,3.58.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.46,1.73,6.64,2.7,4.35,2,6.49,3.07c1.06.54,2.12,1.09,3.16,1.68.53.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.51-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.75,7.75,0,0,0-3.11,1.66,2.41,2.41,0,0,0-.56.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0-.05,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09.95,2.19,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.65-1.19-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,45.61,45.61,0,0,1,2.28,6.83,30.8,30.8,0,0,1,.9,7.16,22.3,22.3,0,0,1-1.16,7.11c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.33,24.33,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.34-.29-.32-.31c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.43-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,28.08,28.08,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,13.17,13.17,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20,20,0,0,0-3.2,1.44,17.82,17.82,0,0,0-2.87,2,18.63,18.63,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37A85.77,85.77,0,0,1,553,546.32a50.15,50.15,0,0,1-5.12,13.46,60.68,60.68,0,0,1-4,6c-.18.25-.37.48-.55.72l-.57.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3a51,51,0,0,1-5.42,4.75,55.9,55.9,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.9,69.9,0,0,1-14.23,2.13,89.63,89.63,0,0,1-14.37-.53,111.09,111.09,0,0,1-14.13-2.59l-2.46-.65Zm286-22.1q-3.51.66-6.95,1.66a48.49,48.49,0,0,0-6.69,2.5,29,29,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,12.88,12.88,0,0,0-1.39,5.07,14.93,14.93,0,0,0,0,1.77,21,21,0,0,0,.49,3.52,27.65,27.65,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63.66.61.32.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,15.91,15.91,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,44.62,44.62,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,108.39,108.39,0,0,0-7.78-12q-1.89-2.57-3.87-5C757,560.69,756.21,560.83,755.41,561Z"/><polygon class="cls-3" points="758.38 560.47 758.15 560.17 757.58 560.28 757.82 560.57 758.38 560.47"/></g><g class="cls-1"><path class="cls-125" d="M467.93,586.83l2.41.62A110.27,110.27,0,0,0,484.4,590a88.37,88.37,0,0,0,14.27.49,69.15,69.15,0,0,0,14.09-2.13A55.83,55.83,0,0,0,526,583.08a52.21,52.21,0,0,0,5.95-3.92,52.81,52.81,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.3,48.64,48.64,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.09-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30.22,30.22,0,0,1,2.54-6.79,20,20,0,0,1,4.52-5.7,18.85,18.85,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.81,0,.9,0,.89.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.58,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.53,4.38,16.75,9.29,24.82,14.43q6.06,3.86,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.59,7.64-.93,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.11.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.51,23.51,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73A9.55,9.55,0,0,0,877,554a19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.52-1.08-1-2.17-1.45-3.28a15.49,15.49,0,0,1-1-3.46,5,5,0,0,1,0-1.81,2.84,2.84,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.77,14.77,0,0,1,3.56-.5,26.82,26.82,0,0,1,3.58.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1.05.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c.05.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.51-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.68s-4.51-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.38,2.38,0,0,0-.55.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.1,6.46.5,1.09,1,2.2,1.36,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a10.23,10.23,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69L811.17,564c-9.54-.58-19.09-1.11-28.65-1.19-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,67.67,67.67,0,0,1,3.14,6.47,45.61,45.61,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22,22,0,0,1-1.15,7.11c-.2.58-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.15-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.27l-.34-.29-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a37.93,37.93,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,26.45,26.45,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,13.17,13.17,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.22,15.22,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.64,69.64,0,0,1,7-1.67l2.22-.38c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.89-13.57-13.46-20.72-19.8s-14.5-12.43-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.83c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a98.13,98.13,0,0,0-14-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89-.05-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,19.57,19.57,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.63,18.63,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.4,7.12-.07,4.77.15,9.54.44,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.84,49.84,0,0,1-5.13,13.46,58.88,58.88,0,0,1-4,6c-.18.25-.37.48-.56.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3a51,51,0,0,1-5.42,4.75,55.9,55.9,0,0,1-6,4A56.5,56.5,0,0,1,512.93,589a69.9,69.9,0,0,1-14.23,2.13,88.49,88.49,0,0,1-14.37-.53A111.09,111.09,0,0,1,470.2,588c-.83-.21-1.65-.43-2.48-.66ZM754,564.73c-2.34.44-4.67,1-7,1.66a48,48,0,0,0-6.69,2.5,28.74,28.74,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.69,12.69,0,0,0-.23,1.75,14.74,14.74,0,0,0,0,1.76,20,20,0,0,0,.49,3.52,27.65,27.65,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61l.62.64.63.63c.22.2.44.4.65.61l.33.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1l.74.49.75.48c1,.63,2.05,1.22,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,16,16,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.48.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.9,29.9,0,0,0-.88-7,44.62,44.62,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.33,109.33,0,0,0-7.78-12q-1.89-2.57-3.87-5C755.58,564.44,754.78,564.58,754,564.73Z"/><polygon class="cls-3" points="756.95 564.22 756.72 563.92 756.15 564.03 756.39 564.32 756.95 564.22"/></g><g class="cls-1"><path class="cls-126" d="M466.5,590.53l2.42.62A110,110,0,0,0,483,593.71a88.25,88.25,0,0,0,14.26.49,68.94,68.94,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,52.21,52.21,0,0,0,6-3.92,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.29,49.29,0,0,0,5-13.27,83.78,83.78,0,0,0,1.9-14.13c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a50.64,50.64,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.51,98.51,0,0,1,14,3.11c2.31.68,4.58,1.44,6.84,2.25s4.48,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.85,12,7.86t11.83,8.12q11.73,8.26,23,17.13c7.51,5.92,14.88,12,22,18.39S734,544,740.62,550.93c5.13,5.34,10.06,10.88,14.67,16.69,3.8-.59,7.63-.93,11.47-1.15,4.77-.26,9.56-.33,14.34-.28,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33.05c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18L875,562a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.24,5.24,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.16-1.68,14.77,14.77,0,0,1,3.56-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.09,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25a1.41,1.41,0,0,1,.18.14c0,.07.13.07.15.22l-.07,0-.13-.13a1.09,1.09,0,0,0-.17-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1.05-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.52-1.58-6.82-2.21a47.92,47.92,0,0,0-7-1.4,23.59,23.59,0,0,0-3.57-.17,15,15,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.6,2.6,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0,0,1.76,15.33,15.33,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.19,1.35,3.33a19,19,0,0,1,.91,3.48,9.83,9.83,0,0,1,.09,1.8,6,6,0,0,1-.34,1.78,5.17,5.17,0,0,1-.38.83l-.12.19-.13.19-.12.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.45,22.45,0,0,1-3.38,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.89c-9.55-.58-19.09-1.11-28.65-1.19-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.3,22.3,0,0,1-1.16,7.11c-.19.58-.41,1.14-.65,1.69-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.15-3.13-1.78l-.76-.49-.74-.5c-.51-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67A33.66,33.66,0,0,1,728,595.6a28.08,28.08,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,12,12,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.2,15.2,0,0,1,.92-1.56,17.11,17.11,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.54-5.7-9.41-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.83c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.54,1.51,19.06,1.84,28.64.16,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,54,54,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.8,69.8,0,0,1-14.22,2.13,89.55,89.55,0,0,1-14.37-.53,110.45,110.45,0,0,1-14.13-2.59c-.84-.21-1.66-.43-2.49-.66Zm286.06-22.1q-3.52.66-7,1.66a47.88,47.88,0,0,0-6.68,2.5,28.49,28.49,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.47,13.47,0,0,0-1.15,3.32,13.54,13.54,0,0,0-.25,3.52,21,21,0,0,0,.48,3.52,29.51,29.51,0,0,0,1,3.41,33.74,33.74,0,0,0,3.16,6.37,37.82,37.82,0,0,0,4.39,5.61l.62.64.64.63.65.61.33.3.33.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.11,35.11,0,0,0,6.6,2.64,23.89,23.89,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.28,8.28,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.13-.25.25-.53.38-.8q.35-.81.63-1.65a21.49,21.49,0,0,0,1.13-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,111.35,111.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5.05C754.15,568.14,753.35,568.28,752.56,568.43Z"/><polygon class="cls-3" points="755.53 567.92 755.29 567.62 754.73 567.73 754.96 568.02 755.53 567.92"/></g><g class="cls-1"><path class="cls-127" d="M465,594.4c.81.22,1.62.43,2.44.63a110,110,0,0,0,14.06,2.56,88.34,88.34,0,0,0,14.27.49A69,69,0,0,0,509.84,596a55.9,55.9,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.61-11.3,49,49,0,0,0,5-13.26,84,84,0,0,0,1.9-14.14c.27-4.75.25-9.53.08-14.3-.33-9.54-1.25-19-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12A29.29,29.29,0,0,1,551.8,465a19.91,19.91,0,0,1,4.51-5.7,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.13,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.85,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.05,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.28,9.28,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.5,5.5,0,0,1,.05-1.81,2.86,2.86,0,0,1,.34-.85,2.66,2.66,0,0,1,.58-.71,8,8,0,0,1,3.17-1.68,14.62,14.62,0,0,1,3.55-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.52.31.77.48l.37.25.17.14c.06.07.14.07.15.22l-.07,0a.5.5,0,0,0-.13-.13,1.09,1.09,0,0,0-.17-.13c-.12-.09-.24-.18-.37-.26s-.5-.32-.76-.47c-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.62-6.48-3.06c-2.19-1-4.4-1.86-6.64-2.68s-4.52-1.58-6.82-2.21a47.79,47.79,0,0,0-7-1.4,23.72,23.72,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.8,14.8,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,1.22,1.22,0,0,1-.12.19l-.12.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.79,44.79,0,0,1-7.05,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.12-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47A45.61,45.61,0,0,1,771,602a30.26,30.26,0,0,1,.89,7.16,21.86,21.86,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.12.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.55,8.55,0,0,1-2.7,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a37.28,37.28,0,0,1-4.43-5.67,33.12,33.12,0,0,1-3.2-6.45,28.08,28.08,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.28,15.28,0,0,1,.93-1.56,15.12,15.12,0,0,1,1.09-1.44,19.87,19.87,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.49,70.49,0,0,1,7-1.67l2.21-.38c-4.54-5.7-9.41-11.15-14.47-16.42-6.61-6.88-13.56-13.46-20.71-19.8S703.53,522.94,696,517s-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22A98,98,0,0,0,584,455.72c-2.36-.33-4.72-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.54.12a27.5,27.5,0,0,0-6.92,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19,19,0,0,0-4.33,5.48A29.71,29.71,0,0,0,550,472a50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.07,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,53.65,53.65,0,0,1-6,4A56.5,56.5,0,0,1,510,596.59a69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59c-.84-.21-1.67-.43-2.5-.66Zm286.08-22.09c-2.34.44-4.67,1-7,1.66a47.54,47.54,0,0,0-6.69,2.5,28.91,28.91,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,14.75,14.75,0,0,0,0,1.76,20,20,0,0,0,.49,3.52,25.15,25.15,0,0,0,1,3.41,33.15,33.15,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.62.64l.63.63.65.61.33.3.33.29c.89.8,1.83,1.53,2.78,2.25.48.34,1,.7,1.45,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.65,35.65,0,0,0,6.61,2.65,24.15,24.15,0,0,0,7,.95A15.82,15.82,0,0,0,763,623a11.83,11.83,0,0,0,3.26-1.3,8.43,8.43,0,0,0,2.57-2.33,6.87,6.87,0,0,0,.44-.74c.14-.25.26-.53.38-.8.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C752.67,572,751.87,572.16,751.07,572.31Z"/><polygon class="cls-3" points="754.04 571.8 753.8 571.5 753.24 571.61 753.48 571.9 754.04 571.8"/></g><g class="cls-1"><path class="cls-128" d="M463.54,598.15q1.23.33,2.46.63a110,110,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49,68.94,68.94,0,0,0,14.09-2.13,56.07,56.07,0,0,0,13.2-5.29,53,53,0,0,0,5.94-3.92,50.72,50.72,0,0,0,5.34-4.7,56.38,56.38,0,0,0,8.61-11.3,49.36,49.36,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.31-.33-9.54-1.25-19-1.85-28.61-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a52.14,52.14,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.91,19.91,0,0,1,4.51-5.7,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.42-.13,3.62-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11c2.3.68,4.57,1.44,6.83,2.25s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.85,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.59,7.63-.93,11.47-1.14,4.77-.27,9.56-.34,14.34-.29,9.57.1,19.12.64,28.66,1.24l14.32.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33.05c2.38-.1,4.77-.26,7.13-.55a44,44,0,0,0,7-1.35,23.18,23.18,0,0,0,3.35-1.24,13.3,13.3,0,0,0,3-1.9,9.91,9.91,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.5,5.5,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,8,8,0,0,1,3.16-1.68,14.77,14.77,0,0,1,3.56-.5,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.38.25.17.14c.05.07.13.07.15.22l-.07,0-.13-.13a1.09,1.09,0,0,0-.17-.13l-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.21a47.66,47.66,0,0,0-7-1.4,23.52,23.52,0,0,0-3.56-.17,15,15,0,0,0-3.53.5,7.81,7.81,0,0,0-3.11,1.66,2.38,2.38,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,14.66,14.66,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.09,1.8,6.36,6.36,0,0,1-.33,1.78,4.84,4.84,0,0,1-.39.83,1.22,1.22,0,0,1-.12.19l-.12.19-.13.19-.14.18a9.66,9.66,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93A22.75,22.75,0,0,1,864,575a44.79,44.79,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.31-.88c-9.55-.59-19.09-1.12-28.65-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.5,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,67.75,67.75,0,0,1,3.15,6.47,46.78,46.78,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.24.55-.39.83a6.4,6.4,0,0,1-.48.79,8.66,8.66,0,0,1-2.7,2.45,12.32,12.32,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.12-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.43,13.43,0,0,1,.24-1.8,14,14,0,0,1,1.19-3.43,15.17,15.17,0,0,1,2-3,19.26,19.26,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.61,49.61,0,0,1,6.74-2.5,70.3,70.3,0,0,1,7-1.67l2.22-.38c-4.54-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.8s-14.51-12.43-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.66-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,19.67,19.67,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,18.79,18.79,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.36-.35,4.74-.39,7.12-.08,4.77.15,9.54.43,14.3.6,9.54,1.51,19.06,1.84,28.64.17,4.78.19,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.49,49.49,0,0,1-5.12,13.46,59,59,0,0,1-4,6c-.17.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a53.1,53.1,0,0,1-5.42,4.75,53.65,53.65,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.12,69.12,0,0,1-14.22,2.13,88.41,88.41,0,0,1-14.37-.53,109.05,109.05,0,0,1-14.13-2.59c-.85-.21-1.69-.44-2.52-.67Zm286.1-22.09a69.08,69.08,0,0,0-7,1.67,46.61,46.61,0,0,0-6.68,2.49,28.91,28.91,0,0,0-6.07,3.7,16.8,16.8,0,0,0-4.52,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,26.71,26.71,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.2.21.4.43.61.64l.64.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.82,1.53,2.78,2.25.48.34,1,.7,1.45,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.22,24.22,0,0,0,7,.95,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.14-.25.26-.53.38-.8.23-.54.44-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.4,29.4,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.87-5.05C751.23,575.77,750.44,575.91,749.64,576.06Z"/><polygon class="cls-3" points="752.61 575.55 752.38 575.25 751.81 575.36 752.04 575.65 752.61 575.55"/></g><g class="cls-1"><path class="cls-129" d="M462.11,601.83c.83.23,1.66.44,2.49.65A110.24,110.24,0,0,0,478.66,605a88.38,88.38,0,0,0,14.27.5A69.15,69.15,0,0,0,507,603.4a55.86,55.86,0,0,0,13.19-5.3,53,53,0,0,0,5.95-3.91,54.07,54.07,0,0,0,5.34-4.7,55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,83.78,83.78,0,0,0,1.9-14.13c.27-4.76.25-9.53.09-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30.22,30.22,0,0,1,2.54-6.79,19.68,19.68,0,0,1,4.52-5.7,18.22,18.22,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.61-.12.6,0,1.21,0,1.81,0l.9,0,.89.05c2.4.13,4.79.38,7.17.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.25t6.7,2.6c4.42,1.85,8.76,3.89,13,6.08,8.53,4.37,16.75,9.29,24.82,14.42q6.06,3.86,12,7.86t11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.16,6.36,14.1,13,20.73,19.85,5.12,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.56-.33,14.35-.28,9.56.1,19.11.64,28.66,1.23l14.31.91c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,23.46,23.46,0,0,0,3.34-1.23,13.59,13.59,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.12-.18.13-.19a1.74,1.74,0,0,0,.11-.18,5.23,5.23,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.08-4.3-3.1-6.46-.52-1.08-1-2.17-1.45-3.29a15.19,15.19,0,0,1-1-3.46,5,5,0,0,1,0-1.8,3,3,0,0,1,.33-.86,2.78,2.78,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.25,25.25,0,0,1,3.58.17,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.39,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68q.8.44,1.56.9l.76.47.37.26.18.14c.05.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25-.76-.47q-.76-.46-1.56-.9c-1-.57-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a47.81,47.81,0,0,0-7-1.41,25.1,25.1,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,8,8,0,0,0-3.12,1.65,2.69,2.69,0,0,0-.55.67,3,3,0,0,0-.32.82,5.19,5.19,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.1,6.47.5,1.09,1,2.19,1.36,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.14.18a9.06,9.06,0,0,1-1.24,1.31,13.26,13.26,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,44.35,44.35,0,0,1-7,1.37c-2.37.29-4.76.46-7.15.55-4.78.2-9.57.13-14.35,0s-9.55-.41-14.33-.69L805.43,579c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.31-3.76.22-7.52.55-11.25,1.12,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.24,30.24,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.18,12.18,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.62,24.62,0,0,1-7.14-1,36.13,36.13,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.8-2.27l-.34-.3-.33-.3-.65-.62-.64-.63c-.22-.21-.42-.44-.63-.65a37.93,37.93,0,0,1-4.43-5.67,34,34,0,0,1-3.19-6.46,25.87,25.87,0,0,1-1-3.46,20.57,20.57,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,12.37,12.37,0,0,1,.25-1.8,13.11,13.11,0,0,1,1.19-3.42,13.58,13.58,0,0,1,.92-1.56,14.17,14.17,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,50.47,50.47,0,0,1,6.74-2.5q3.45-1,7-1.66c.74-.14,1.48-.27,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.72-19.8s-14.5-12.44-22-18.34-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.92-4.43-1.78-6.67-2.58s-4.51-1.56-6.79-2.22a98.13,98.13,0,0,0-13.95-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89-.05-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,20.4,20.4,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,18.8,18.8,0,0,0-4.33,5.49,28.42,28.42,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.4,7.12-.07,4.76.15,9.54.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38a85.65,85.65,0,0,1-1.93,14.25,49.59,49.59,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.39.45-.6.66-.42.44-.82.88-1.26,1.3a51.14,51.14,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,4A56.53,56.53,0,0,1,507.19,604,69.88,69.88,0,0,1,493,606.16a89.63,89.63,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6c-.85-.21-1.7-.44-2.55-.67Zm286.13-22.07c-2.34.44-4.67,1-7,1.66a49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7A16.75,16.75,0,0,0,724,593a13.3,13.3,0,0,0-1.16,3.33,12.9,12.9,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,19.78,19.78,0,0,0,.49,3.51,27.3,27.3,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.63.62.65.61.33.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2,1.22,3.1,1.77a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,17.29,17.29,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a21.75,21.75,0,0,0,1.12-7,29.9,29.9,0,0,0-.88-7,45.12,45.12,0,0,0-2.27-6.76,67.91,67.91,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12c-1.26-1.7-2.55-3.39-3.87-5Z"/><polygon class="cls-3" points="751.21 579.25 750.98 578.95 750.41 579.05 750.65 579.35 751.21 579.25"/></g><g class="cls-1"><path class="cls-130" d="M460.61,605.71l2.5.65a110.24,110.24,0,0,0,14.06,2.55,88.38,88.38,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,52.13,52.13,0,0,0,5.95-3.91,53,53,0,0,0,5.34-4.7,55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,83.8,83.8,0,0,0,1.91-14.13c.27-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.78-.5-9.56-.42-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,30.22,30.22,0,0,1,2.54-6.79,19.81,19.81,0,0,1,4.52-5.7,18.22,18.22,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.62-.12.6,0,1.2,0,1.8,0l.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.25t6.7,2.6c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.87s7.92,5.36,11.83,8.12q11.72,8.26,23,17.13t22,18.38c7.15,6.36,14.1,13,20.72,19.85,5.12,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.57-.33,14.35-.28,9.56.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.25,7.14-.54a45.08,45.08,0,0,0,7-1.35,24.3,24.3,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.12-.18.13-.19a1.74,1.74,0,0,0,.11-.18,4.13,4.13,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,17.85,17.85,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.19,15.19,0,0,1-1-3.46,5.19,5.19,0,0,1,0-1.8,3.33,3.33,0,0,1,.33-.86,3,3,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.18,25.18,0,0,1,3.58.17,47,47,0,0,1,7,1.42c2.3.63,4.58,1.39,6.82,2.21s4.46,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.55,2.12,1.1,3.17,1.68.52.29,1,.59,1.55.9.26.15.51.31.76.48l.37.25.18.14c.05.06.13.07.15.21l-.08,0a.6.6,0,0,0-.12-.13l-.17-.14-.37-.25-.76-.47c-.51-.31-1-.61-1.55-.9-1-.57-2.11-1.13-3.17-1.67-2.13-1.08-4.3-2.1-6.48-3.06s-4.41-1.86-6.65-2.69-4.51-1.57-6.81-2.2a48.21,48.21,0,0,0-7-1.41,25,25,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.85,7.85,0,0,0-3.11,1.65,3,3,0,0,0-.56.67,2.72,2.72,0,0,0-.31.82,5,5,0,0,0-.05,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09,1,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.14.18a8.55,8.55,0,0,1-1.24,1.31,13,13,0,0,1-3,1.93,22.79,22.79,0,0,1-3.37,1.26,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.55-4.78.2-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.31-3.76.22-7.52.55-11.25,1.12,1.26,1.6,2.5,3.21,3.71,4.85a112.31,112.31,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,44.15,44.15,0,0,1,2.28,6.83,30.78,30.78,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.52,12.52,0,0,1-3.38,1.35,17.46,17.46,0,0,1-3.59.45,24.69,24.69,0,0,1-7.15-1,36.41,36.41,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79l-.76-.48-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.8-2.27l-.33-.3-.33-.3c-.22-.21-.45-.41-.66-.62l-.64-.63c-.22-.21-.42-.44-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.74,33.74,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,21.58,21.58,0,0,1-.5-3.58,15.81,15.81,0,0,1,0-1.82,13.77,13.77,0,0,1,2.36-6.78,14.17,14.17,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,29.68,29.68,0,0,1,6.15-3.73A49.17,49.17,0,0,1,739.7,585c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.56-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.19-11.59-23-17.09q-5.85-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.42-1.78-6.67-2.58s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.9-.05-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,20.83,20.83,0,0,0-3.2,1.43,18.47,18.47,0,0,0-2.87,2,19,19,0,0,0-4.33,5.49,28.59,28.59,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.12-.08,4.77.14,9.54.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38A84.87,84.87,0,0,1,544.38,569a50,50,0,0,1-5.12,13.45,60.24,60.24,0,0,1-4,6l-.55.71-.56.71L533,591.23l-.61.68c-.2.22-.39.45-.6.66-.42.44-.82.88-1.25,1.3a52.25,52.25,0,0,1-5.43,4.76,54.36,54.36,0,0,1-6,4,56.53,56.53,0,0,1-13.36,5.34A69.88,69.88,0,0,1,491.47,610a89.46,89.46,0,0,1-14.36-.52,109.23,109.23,0,0,1-14.14-2.6c-.86-.21-1.71-.44-2.57-.67Zm286.14-22.07q-3.51.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13.3,13.3,0,0,0-1.16,3.33,14.7,14.7,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,29.09,29.09,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.64.62c.21.21.43.41.65.61l.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.47c1,.64,2,1.22,3.1,1.77a35.2,35.2,0,0,0,6.61,2.64,23.84,23.84,0,0,0,7,1,17.19,17.19,0,0,0,3.5-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,44,44,0,0,0-2.27-6.76,67.91,67.91,0,0,0-3.13-6.42,110.6,110.6,0,0,0-7.77-12q-1.9-2.56-3.88-5.06Z"/><polygon class="cls-3" points="749.73 583.13 749.49 582.83 748.92 582.94 749.16 583.23 749.73 583.13"/></g><g class="cls-1"><path class="cls-131" d="M459.16,609.46l2.52.65a110.24,110.24,0,0,0,14.06,2.55,88.38,88.38,0,0,0,14.27.5A69.15,69.15,0,0,0,504.1,611a55.86,55.86,0,0,0,13.19-5.3,52.13,52.13,0,0,0,6-3.91,53,53,0,0,0,5.34-4.7,55.75,55.75,0,0,0,8.6-11.31,48.45,48.45,0,0,0,5-13.26,84.83,84.83,0,0,0,1.91-14.13c.26-4.76.24-9.53.08-14.3-.34-9.54-1.26-19.06-1.86-28.61-.29-4.77-.5-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30.22,30.22,0,0,1,2.54-6.79,19.81,19.81,0,0,1,4.52-5.7,18.22,18.22,0,0,1,3-2.09,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.1,2.41-.13,3.61-.12.61,0,1.21,0,1.81,0l.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.12,99.12,0,0,1,14,3.11q3.45,1,6.83,2.25T606,478c4.42,1.85,8.76,3.89,13,6.08,8.52,4.37,16.74,9.29,24.81,14.42,4,2.57,8,5.2,12,7.87s7.92,5.36,11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.84,5.12,5.35,10.06,10.89,14.66,16.7,3.8-.59,7.64-.93,11.47-1.15,4.78-.27,9.56-.33,14.35-.28,9.56.1,19.12.64,28.66,1.23l14.31.91c4.77.29,9.54.55,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.25,7.14-.54a45.08,45.08,0,0,0,7-1.35,24.79,24.79,0,0,0,3.34-1.24,13.59,13.59,0,0,0,3-1.9,8.75,8.75,0,0,0,1.22-1.29l.14-.17.12-.18.13-.19a1.74,1.74,0,0,0,.11-.18,4.83,4.83,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.85-2.23-1.34-3.32-1-2.17-2.08-4.3-3.1-6.46-.51-1.08-1-2.17-1.45-3.29a15.19,15.19,0,0,1-1-3.46,5,5,0,0,1,0-1.8,3,3,0,0,1,.33-.86,2.78,2.78,0,0,1,.58-.7,8,8,0,0,1,3.17-1.68,14.29,14.29,0,0,1,3.56-.5,25.18,25.18,0,0,1,3.58.17,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.39,6.83,2.21s4.46,1.74,6.64,2.7,4.35,2,6.49,3.07c1.06.55,2.12,1.1,3.16,1.68q.79.44,1.56.9c.25.15.51.31.76.48l.37.25.18.14c0,.06.13.07.14.21l-.07,0a.6.6,0,0,0-.12-.13l-.18-.14-.36-.25-.76-.47q-.76-.46-1.56-.9c-1-.57-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a47.81,47.81,0,0,0-7-1.41,25.1,25.1,0,0,0-3.57-.16,13.91,13.91,0,0,0-3.52.5,7.85,7.85,0,0,0-3.11,1.65,2.63,2.63,0,0,0-.87,1.49,5,5,0,0,0,0,1.76,15.31,15.31,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.27,1,2.16,2.12,4.29,3.11,6.47.49,1.09,1,2.19,1.35,3.32a18.16,18.16,0,0,1,.9,3.48,9.12,9.12,0,0,1,.1,1.81,6,6,0,0,1-.34,1.78,5.61,5.61,0,0,1-.38.83l-.12.19-.13.19-.13.18-.14.18a9.06,9.06,0,0,1-1.24,1.31,13.26,13.26,0,0,1-3,1.93,22.79,22.79,0,0,1-3.37,1.26,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.12-14.35,0s-9.55-.41-14.32-.69l-14.32-.89c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.31-3.76.22-7.52.55-11.25,1.12,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.78,30.78,0,0,1,.9,7.15,22.41,22.41,0,0,1-1.16,7.12c-.2.57-.41,1.14-.66,1.69-.12.28-.24.55-.38.83s-.31.53-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,17.47,17.47,0,0,1-3.6.45,24.66,24.66,0,0,1-7.14-1,36.13,36.13,0,0,1-6.68-2.68c-1.07-.56-2.11-1.15-3.13-1.79L736,633l-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.47-2.8-2.27l-.34-.3-.33-.3-.65-.62-.64-.63c-.22-.21-.42-.44-.63-.65A37.93,37.93,0,0,1,724,621a33.74,33.74,0,0,1-3.19-6.46,27.44,27.44,0,0,1-1-3.46,20.57,20.57,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,12,12,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,15.35,15.35,0,0,1,1.1-1.45,19.28,19.28,0,0,1,2.6-2.51,29.43,29.43,0,0,1,6.15-3.73,49.17,49.17,0,0,1,6.74-2.51c2.3-.67,4.64-1.22,7-1.66.74-.14,1.48-.26,2.22-.38-4.55-5.71-9.42-11.16-14.47-16.42-6.62-6.89-13.57-13.46-20.71-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.1t-12-7.84c-8.06-5.11-16.28-10-24.78-14.36-4.25-2.17-8.57-4.2-13-6-2.2-.91-4.43-1.78-6.67-2.58s-4.51-1.55-6.79-2.22a98,98,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.11-.7l-.89-.05-.89,0-1.78,0c-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,20.83,20.83,0,0,0-3.2,1.43,18.47,18.47,0,0,0-2.87,2,18.8,18.8,0,0,0-4.33,5.49,28.59,28.59,0,0,0-2.47,6.61,48.39,48.39,0,0,0-1.18,7c-.24,2.36-.36,4.74-.4,7.12-.07,4.77.15,9.54.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.59-.09,14.38A85.91,85.91,0,0,1,543,572.73a50,50,0,0,1-5.12,13.45,62,62,0,0,1-4,6l-.55.71-.57.71c-.38.47-.77.92-1.16,1.38l-.6.68c-.2.22-.39.45-.6.66-.42.44-.82.88-1.26,1.3a51.14,51.14,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,4,56.53,56.53,0,0,1-13.36,5.34A69.88,69.88,0,0,1,490,613.79a89.63,89.63,0,0,1-14.37-.52,109.39,109.39,0,0,1-14.13-2.6c-.86-.21-1.73-.44-2.59-.68Zm286.16-22.07q-3.51.66-7,1.66a49.76,49.76,0,0,0-6.69,2.49,29.87,29.87,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13.3,13.3,0,0,0-1.16,3.33,12.9,12.9,0,0,0-.23,1.75,14.93,14.93,0,0,0,0,1.77,20.74,20.74,0,0,0,.49,3.51,27.3,27.3,0,0,0,1,3.42,33.15,33.15,0,0,0,3.16,6.37,37.68,37.68,0,0,0,4.39,5.61l.62.64.63.62.66.61.32.31.34.29c.88.79,1.82,1.53,2.77,2.24.48.35,1,.71,1.46,1l.74.5.75.48c1,.63,2.05,1.21,3.1,1.76a35.2,35.2,0,0,0,6.61,2.64,23.82,23.82,0,0,0,7,1,17.29,17.29,0,0,0,3.51-.44,11.76,11.76,0,0,0,3.25-1.3,8.21,8.21,0,0,0,2.57-2.33c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30.45,30.45,0,0,0-.89-7,45.12,45.12,0,0,0-2.27-6.76,67.91,67.91,0,0,0-3.13-6.42,109.21,109.21,0,0,0-7.78-12c-1.26-1.71-2.55-3.39-3.87-5.06Z"/><polygon class="cls-3" points="748.29 586.88 748.06 586.58 747.49 586.69 747.73 586.98 748.29 586.88"/></g><g class="cls-1"><path class="cls-132" d="M457.78,613c.81.21,1.62.43,2.43.63a109.92,109.92,0,0,0,14.06,2.55,88.37,88.37,0,0,0,14.27.49,68.45,68.45,0,0,0,14.09-2.12,56,56,0,0,0,13.19-5.3,54.32,54.32,0,0,0,5.94-3.91,51.88,51.88,0,0,0,5.34-4.7,55.71,55.71,0,0,0,8.61-11.31,48.9,48.9,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.92,50.92,0,0,1,1.21-7.12,29.67,29.67,0,0,1,2.54-6.78,19.64,19.64,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.6,0,1.2,0,1.8,0l.9,0,.9,0c2.4.13,4.79.39,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.68,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08C626,492,634.24,497,642.31,502.08q6,3.85,12,7.86c4,2.67,7.93,5.36,11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.15,6.36,14.1,12.94,20.73,19.85,5.12,5.35,10.05,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.33,14.34-.29,9.57.11,19.12.65,28.66,1.24l14.32.91c4.77.28,9.54.54,14.32.71s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44.06,44.06,0,0,0,7-1.36,22.06,22.06,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,8.71,8.71,0,0,0,1.22-1.28l.13-.18.13-.18.13-.18.11-.19a4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.86-2.23-1.35-3.32-1-2.18-2.07-4.3-3.1-6.46-.51-1.08-1-2.17-1.44-3.29a14.84,14.84,0,0,1-1-3.46,5,5,0,0,1,0-1.81,2.84,2.84,0,0,1,.91-1.55,7.84,7.84,0,0,1,3.17-1.68,14.7,14.7,0,0,1,3.55-.51,25.32,25.32,0,0,1,3.59.18,46.82,46.82,0,0,1,7,1.42c2.31.63,4.58,1.38,6.82,2.21s4.46,1.74,6.65,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68l1.56.9.76.47.37.26.18.14c.05.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.37-.25-.75-.48-1.56-.89c-1-.58-2.1-1.13-3.17-1.67q-3.19-1.62-6.48-3.06t-6.64-2.69c-2.24-.82-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.94,9.94,0,0,1,.09,1.81,6.43,6.43,0,0,1-.33,1.78,4.39,4.39,0,0,1-.39.82,2,2,0,0,1-.11.2l-.13.18-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.73,45.73,0,0,1-7.05,1.37c-2.38.29-4.76.45-7.15.55-4.79.19-9.57.13-14.35,0s-9.55-.41-14.33-.7L801,590.2c-9.54-.58-19.09-1.11-28.65-1.2-4.78,0-9.56,0-14.32.3-3.77.22-7.53.56-11.25,1.13,1.26,1.6,2.5,3.21,3.7,4.85a110.79,110.79,0,0,1,7.8,12.06,66.61,66.61,0,0,1,3.15,6.47,45.24,45.24,0,0,1,2.28,6.83,30.18,30.18,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.55-.39.82a5.73,5.73,0,0,1-.48.79,8.59,8.59,0,0,1-2.7,2.46,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5-.5-.33-1-.69-1.47-1-1-.73-1.91-1.47-2.8-2.27l-.34-.3-.33-.31c-.22-.2-.44-.4-.65-.61l-.65-.64c-.21-.21-.41-.43-.62-.65a36.8,36.8,0,0,1-4.43-5.67,33.08,33.08,0,0,1-3.19-6.45,28,28,0,0,1-1-3.46,21.7,21.7,0,0,1-.49-3.58,15,15,0,0,1,.26-3.62,13.37,13.37,0,0,1,1.2-3.42,14.62,14.62,0,0,1,.92-1.57A15.12,15.12,0,0,1,721.3,601a20.54,20.54,0,0,1,2.6-2.51,30.24,30.24,0,0,1,6.16-3.74,48.64,48.64,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66c.73-.14,1.47-.27,2.21-.39-4.54-5.7-9.41-11.15-14.46-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09c-3.91-2.76-7.86-5.44-11.83-8.1s-8-5.28-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6q-3.32-1.38-6.67-2.59c-2.25-.8-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.35-.33-4.72-.58-7.1-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,20,20,0,0,0-3.21,1.43,18.39,18.39,0,0,0-2.86,2,19.09,19.09,0,0,0-4.34,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.83,28.63.17,4.79.19,9.58-.08,14.37a85.63,85.63,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,61.93,61.93,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71-1.16,1.38-.6.67c-.2.23-.4.45-.61.67-.41.43-.82.88-1.25,1.3a51.28,51.28,0,0,1-11.45,8.71,56.77,56.77,0,0,1-13.37,5.34,69.79,69.79,0,0,1-14.22,2.12,89.59,89.59,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6c-.84-.21-1.67-.43-2.5-.66Zm286.07-22.09a68.85,68.85,0,0,0-7,1.66,49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13.33,13.33,0,0,0-1.4,5.08,14.93,14.93,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.2.22.4.44.62.64l.63.63c.21.21.44.41.65.61l.33.3.33.3c.89.79,1.83,1.53,2.78,2.24.48.35,1,.7,1.45,1,.25.16.49.34.75.49l.75.48c1,.63,2,1.22,3.1,1.77a35.61,35.61,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,11.7,11.7,0,0,0,3.26-1.3A8.27,8.27,0,0,0,761.6,638q.24-.36.45-.75c.13-.25.25-.53.37-.79.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.33,29.33,0,0,0-.89-7A44.7,44.7,0,0,0,761,614a66.75,66.75,0,0,0-3.13-6.42,111.8,111.8,0,0,0-7.78-12q-1.89-2.57-3.87-5.05Q745.05,590.71,743.85,590.94Z"/><polygon class="cls-3" points="746.82 590.42 746.59 590.13 746.02 590.23 746.26 590.53 746.82 590.42"/></g><g class="cls-1"><path class="cls-133" d="M456.28,616.9l2.44.64a110.24,110.24,0,0,0,14.06,2.55,89.54,89.54,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,55.86,55.86,0,0,0,13.19-5.3,51.36,51.36,0,0,0,11.29-8.61,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.53,50.53,0,0,1,1.21-7.11,30,30,0,0,1,2.54-6.79,19.51,19.51,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.84,28.84,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.6,0,1.2,0,1.8,0l.9,0,.9,0c2.4.13,4.79.39,7.17.72a100.56,100.56,0,0,1,14,3.12q3.45,1,6.83,2.24t6.7,2.61c4.42,1.85,8.76,3.89,13,6.08,8.53,4.37,16.75,9.29,24.82,14.42q6.06,3.85,12,7.86c4,2.67,7.93,5.36,11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.16,6.36,14.1,12.94,20.73,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.11,19.11.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.56.23,14.33,0c2.39-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.22,8.22,0,0,0,1.22-1.28l.14-.17.12-.19.13-.18a1.18,1.18,0,0,0,.11-.19,4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.86-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.52-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,3.06,3.06,0,0,1,.33-.85,2.78,2.78,0,0,1,.58-.7,7.9,7.9,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,25.26,25.26,0,0,1,3.58.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1,.59,1.56.9l.76.47.37.26.18.14c.05.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.36-.25c-.25-.17-.51-.32-.76-.48-.52-.3-1-.6-1.56-.89-1-.58-2.1-1.13-3.16-1.67q-3.21-1.62-6.49-3.06c-2.18-1-4.4-1.86-6.64-2.69s-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.39,14.39,0,0,0-3.52.51,7.71,7.71,0,0,0-3.12,1.65,2.69,2.69,0,0,0-.55.67,3,3,0,0,0-.32.81,5.2,5.2,0,0,0,0,1.76,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.5,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.94,9.94,0,0,1,.1,1.81,6.44,6.44,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19-.14.18a9.06,9.06,0,0,1-1.24,1.31,13.48,13.48,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.7l-14.31-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.71,4.85a113.86,113.86,0,0,1,7.8,12.06,66.53,66.53,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.18,30.18,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.14-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.49,12.49,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.34-.3-.33-.31c-.21-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.64a38,38,0,0,1-4.43-5.68,33.66,33.66,0,0,1-3.19-6.45,28,28,0,0,1-1-3.46,21.7,21.7,0,0,1-.49-3.58,15.79,15.79,0,0,1,0-1.82,12.37,12.37,0,0,1,.25-1.8,13,13,0,0,1,1.19-3.42,14.62,14.62,0,0,1,.92-1.57,13.71,13.71,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.9,29.9,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09c-3.91-2.76-7.86-5.44-11.83-8.1s-8-5.28-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22a99,99,0,0,0-13.94-3.07c-2.35-.33-4.72-.58-7.1-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.52,19.52,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.66,28.66,0,0,0-2.47,6.62,48.49,48.49,0,0,0-1.18,7c-.24,2.37-.36,4.75-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.79.18,9.58-.09,14.37A85.63,85.63,0,0,1,540,580.15a49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71-1.16,1.38-.6.67-.6.67c-.42.43-.82.88-1.26,1.3a52.29,52.29,0,0,1-5.42,4.76,54.36,54.36,0,0,1-6,4,56.43,56.43,0,0,1-13.37,5.34,69.68,69.68,0,0,1-14.22,2.12,89.59,89.59,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6c-.84-.21-1.68-.43-2.51-.66Zm286.08-22.08a68.85,68.85,0,0,0-7,1.66,49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4A13,13,0,0,0,717,611.4a12.9,12.9,0,0,0-.23,1.75,13.07,13.07,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,33,33,0,0,0,3.16,6.38,37.09,37.09,0,0,0,4.39,5.6c.21.22.41.44.62.64l.63.63.65.61.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1l.74.5.75.47c1,.63,2.05,1.22,3.1,1.77a35.89,35.89,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.06,8.06,0,0,0,2.57-2.32c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,45.88,45.88,0,0,0-2.27-6.76,66.75,66.75,0,0,0-3.13-6.42,110.29,110.29,0,0,0-7.78-12q-1.89-2.57-3.87-5.05Q743.56,594.6,742.36,594.82Z"/><polygon class="cls-3" points="745.33 594.3 745.1 594 744.53 594.11 744.77 594.41 745.33 594.3"/></g><g class="cls-1"><path class="cls-134" d="M454.82,620.65l2.47.64a109.92,109.92,0,0,0,14.06,2.55,89.54,89.54,0,0,0,14.27.5,69.15,69.15,0,0,0,14.09-2.13,56,56,0,0,0,13.19-5.3,51.36,51.36,0,0,0,11.29-8.61,56,56,0,0,0,8.6-11.31,48.57,48.57,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.53.08-14.3-.33-9.54-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.36,0-2.4.16-4.8.4-7.2a50.53,50.53,0,0,1,1.21-7.11,30,30,0,0,1,2.54-6.79,19.64,19.64,0,0,1,4.51-5.7,18.79,18.79,0,0,1,3-2.1,21.15,21.15,0,0,1,3.33-1.49,28.84,28.84,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.11.6,0,1.2,0,1.8,0l.9,0,.9,0c2.4.13,4.79.39,7.17.72a100.56,100.56,0,0,1,14,3.12c2.3.68,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.85,8.75,3.89,13,6.08,8.53,4.37,16.75,9.29,24.82,14.42q6,3.85,12,7.86c4,2.67,7.93,5.36,11.83,8.12q11.73,8.28,23,17.14t22,18.38c7.16,6.36,14.1,12.94,20.73,19.85,5.12,5.35,10.06,10.89,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.33,14.35-.29,9.56.11,19.11.65,28.66,1.24l14.31.91c4.77.28,9.54.54,14.32.71s9.55.23,14.33,0c2.38-.09,4.77-.26,7.14-.54a44,44,0,0,0,7-1.36,22.35,22.35,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.71,8.71,0,0,0,1.22-1.28l.14-.17.12-.19.13-.18c0-.06.08-.12.11-.19a4.73,4.73,0,0,0,.37-.79,6,6,0,0,0,.33-1.73,9.51,9.51,0,0,0-.09-1.77,18.6,18.6,0,0,0-.89-3.45c-.39-1.13-.86-2.23-1.34-3.32-1-2.18-2.08-4.3-3.1-6.46-.52-1.08-1-2.17-1.45-3.29a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.84,2.84,0,0,1,.91-1.55,7.84,7.84,0,0,1,3.17-1.68,14.77,14.77,0,0,1,3.55-.51,25.32,25.32,0,0,1,3.59.18,46.57,46.57,0,0,1,7,1.42c2.31.63,4.58,1.38,6.83,2.21s4.45,1.74,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68l1.56.9.76.47.37.26.18.14c0,.06.13.07.14.21l-.07,0a.64.64,0,0,0-.12-.12l-.18-.14-.37-.25c-.24-.17-.5-.32-.75-.48l-1.56-.89c-1-.58-2.1-1.13-3.17-1.67q-3.2-1.62-6.48-3.06t-6.64-2.69c-2.24-.82-4.51-1.57-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.54,14.54,0,0,0-3.53.51,7.74,7.74,0,0,0-3.11,1.65,2.69,2.69,0,0,0-.55.67,2.92,2.92,0,0,0-.32.82,5.14,5.14,0,0,0,0,1.75,15.24,15.24,0,0,0,1,3.43c.43,1.11.93,2.19,1.44,3.27,1,2.16,2.13,4.28,3.11,6.46.5,1.1,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.94,9.94,0,0,1,.1,1.81,6.44,6.44,0,0,1-.34,1.78,5.07,5.07,0,0,1-.38.82l-.12.2-.13.18-.13.19L863,593a9.06,9.06,0,0,1-1.24,1.31,13.48,13.48,0,0,1-3,1.93,24,24,0,0,1-3.37,1.26,45.5,45.5,0,0,1-7,1.37c-2.37.29-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.7l-14.31-.88c-9.54-.58-19.09-1.11-28.65-1.2-4.78,0-9.55,0-14.32.3-3.77.22-7.52.56-11.25,1.13,1.26,1.6,2.5,3.21,3.7,4.85A112.39,112.39,0,0,1,755.41,615a68.92,68.92,0,0,1,3.14,6.47,45.24,45.24,0,0,1,2.28,6.83,30.18,30.18,0,0,1,.89,7.15,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.14-.66,1.69-.12.27-.24.55-.38.82a8,8,0,0,1-3.19,3.25,12.18,12.18,0,0,1-3.38,1.34,16.83,16.83,0,0,1-3.6.46,24.63,24.63,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.48c-.26-.16-.5-.34-.75-.5-.5-.33-1-.69-1.47-1-1-.73-1.9-1.47-2.8-2.27l-.34-.3-.33-.31c-.22-.2-.44-.4-.65-.61l-.64-.64c-.22-.2-.42-.43-.63-.64a37.37,37.37,0,0,1-4.43-5.68,33.66,33.66,0,0,1-3.19-6.45,28,28,0,0,1-1-3.46,21.7,21.7,0,0,1-.49-3.58,15.79,15.79,0,0,1,0-1.82,13.88,13.88,0,0,1,.24-1.8,13.37,13.37,0,0,1,1.2-3.42,14.62,14.62,0,0,1,.92-1.57,13.71,13.71,0,0,1,1.1-1.44,19.81,19.81,0,0,1,2.59-2.51,30.24,30.24,0,0,1,6.16-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66c.74-.14,1.47-.27,2.22-.39-4.55-5.7-9.42-11.15-14.47-16.41-6.62-6.89-13.57-13.46-20.72-19.8s-14.51-12.44-22-18.34-15.2-11.59-23-17.09c-3.91-2.76-7.86-5.44-11.83-8.1s-8-5.28-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.17-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22A99,99,0,0,0,573.88,482c-2.35-.33-4.72-.58-7.1-.71l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.52,27.52,0,0,0-6.92,1.39,19.52,19.52,0,0,0-3.2,1.43,18,18,0,0,0-2.87,2,19.09,19.09,0,0,0-4.34,5.48,29.61,29.61,0,0,0-2.47,6.62,51.4,51.4,0,0,0-1.18,7c-.24,2.37-.35,4.75-.39,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.83,28.63.17,4.79.19,9.58-.08,14.37a85.63,85.63,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,61.93,61.93,0,0,1-4,6c-.18.24-.37.48-.56.71l-.56.71-1.16,1.38-.6.67c-.2.23-.4.45-.61.67-.41.43-.82.88-1.25,1.3a51.28,51.28,0,0,1-11.45,8.71,56.6,56.6,0,0,1-13.37,5.34A69.79,69.79,0,0,1,485.65,625a89.59,89.59,0,0,1-14.37-.52,111.12,111.12,0,0,1-14.13-2.6c-.85-.21-1.69-.44-2.53-.67Zm286.11-22.08a68.85,68.85,0,0,0-6.95,1.66,49.26,49.26,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.75,16.75,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,11.49,11.49,0,0,0-.23,1.75,13.07,13.07,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41A33,33,0,0,0,720,632a37.09,37.09,0,0,0,4.39,5.6c.21.22.4.44.62.64l.63.63c.21.21.44.41.65.61l.33.3.34.3c.88.79,1.82,1.53,2.77,2.24.48.35,1,.7,1.46,1l.74.5.75.47c1,.63,2,1.22,3.1,1.77a35.61,35.61,0,0,0,6.61,2.64,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.27,8.27,0,0,0,2.57-2.32c.16-.24.31-.49.45-.74s.25-.53.37-.8c.24-.54.45-1.1.64-1.66a21.69,21.69,0,0,0,1.12-7,29.84,29.84,0,0,0-.88-7,45.88,45.88,0,0,0-2.27-6.76A66.75,66.75,0,0,0,755,615.2a111.8,111.8,0,0,0-7.78-12c-1.26-1.7-2.55-3.39-3.87-5.05Q742.13,598.35,740.93,598.57Z"/><polygon class="cls-3" points="743.9 598.05 743.67 597.76 743.1 597.86 743.34 598.16 743.9 598.05"/></g><g class="cls-1"><path class="cls-135" d="M453.4,624.34c.83.22,1.66.44,2.49.64A110.1,110.1,0,0,0,470,627.54a88.25,88.25,0,0,0,14.26.49,69.15,69.15,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,52.21,52.21,0,0,0,6-3.92,50.72,50.72,0,0,0,5.34-4.7,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,84.07,84.07,0,0,0,1.91-14.13c.27-4.76.24-9.54.08-14.31-.33-9.54-1.26-19-1.85-28.61-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,29.78,29.78,0,0,1,2.55-6.79,19.74,19.74,0,0,1,4.51-5.7,19.31,19.31,0,0,1,3-2.09,21,21,0,0,1,3.33-1.49,28.48,28.48,0,0,1,7.11-1.42c1.21-.09,2.41-.13,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.84,98.84,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07,8.52,4.38,16.74,9.29,24.81,14.43,4,2.57,8,5.2,12,7.86s7.92,5.36,11.83,8.12q11.71,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.55a44,44,0,0,0,7-1.35,23.06,23.06,0,0,0,3.34-1.24,13.36,13.36,0,0,0,3-1.9,9.21,9.21,0,0,0,1.22-1.28l.14-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,17.5,17.5,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.51,15.51,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.86,2.86,0,0,1,.58-.71,7.88,7.88,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.3.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.15.22l-.07,0a1.53,1.53,0,0,0-.13-.13l-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.3-2.09-6.48-3.06s-4.4-1.86-6.65-2.68-4.51-1.58-6.81-2.21a48.18,48.18,0,0,0-7-1.4,25,25,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0-.05,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.94,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09.95,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.13.18a9.1,9.1,0,0,1-1.25,1.31,13.38,13.38,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.32-.69l-14.32-.88c-9.54-.59-19.09-1.12-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,70.23,70.23,0,0,1,3.15,6.47,45.57,45.57,0,0,1,2.27,6.83,29.76,29.76,0,0,1,.9,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.8,16.8,0,0,1-3.59.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-.95-.72-1.9-1.46-2.79-2.27l-.34-.29-.33-.31-.66-.62-.64-.63c-.22-.21-.42-.43-.63-.65a38.59,38.59,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,21.43,21.43,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,14,14,0,0,1,1.19-3.43,13.58,13.58,0,0,1,.92-1.56,17.11,17.11,0,0,1,1.1-1.44,18.69,18.69,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.8S692,552.89,684.48,547s-15.19-11.59-23-17.09q-5.85-4.12-11.82-8.09c-4-2.66-8-5.28-12-7.84-8.06-5.12-16.28-10-24.78-14.36-4.24-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.51-1.55-6.79-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89-.05-.9,0c-.59,0-1.18,0-1.78,0-1.19,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.36-.36,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19,1.84,28.63.16,4.78.18,9.58-.09,14.37a84.73,84.73,0,0,1-1.93,14.26A49.49,49.49,0,0,1,532,601.06a59,59,0,0,1-4,6c-.18.25-.36.48-.55.72l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.21.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,53.52,53.52,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.11,69.11,0,0,1-14.23,2.13,88.33,88.33,0,0,1-14.36-.53,109.2,109.2,0,0,1-14.14-2.59l-2.56-.68Zm286.14-22.08a69.08,69.08,0,0,0-7,1.67,47.18,47.18,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,14.74,14.74,0,0,0,0,1.76,21.93,21.93,0,0,0,.49,3.52,28.39,28.39,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.82,37.82,0,0,0,4.39,5.61l.62.64.64.63c.21.21.43.4.65.61l.32.3.34.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.17,24.17,0,0,0,7,1,15.82,15.82,0,0,0,3.5-.44,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5.62,5.62,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30,30,0,0,0-.89-7,44.58,44.58,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5C741.13,602,740.33,602.11,739.54,602.26Z"/><polygon class="cls-3" points="742.51 601.75 742.27 601.45 741.7 601.56 741.94 601.85 742.51 601.75"/></g><g class="cls-1"><path class="cls-136" d="M451.89,628.21c.84.23,1.68.45,2.52.65a109.63,109.63,0,0,0,14.06,2.56,88.25,88.25,0,0,0,14.26.49,69,69,0,0,0,14.09-2.13A55.83,55.83,0,0,0,510,624.49a53.51,53.51,0,0,0,6-3.91,50.81,50.81,0,0,0,5.34-4.71,56.38,56.38,0,0,0,8.61-11.3,49.36,49.36,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.62-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a50.64,50.64,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.82,19.82,0,0,1,4.51-5.71,18.93,18.93,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.41-.12,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.54,98.54,0,0,1,14,3.12c2.3.67,4.58,1.43,6.84,2.24s4.48,1.68,6.69,2.61c4.43,1.84,8.76,3.89,13,6.07,8.52,4.38,16.75,9.29,24.82,14.43q6,3.86,12,7.86t11.83,8.12q11.71,8.26,23,17.13c7.51,5.92,14.88,12,22,18.39s14.1,12.94,20.72,19.85c5.13,5.34,10.06,10.88,14.66,16.69,3.81-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.78.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13,13,0,0,0,3-1.9,9.31,9.31,0,0,0,1.23-1.28l.13-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.36,15.36,0,0,1-1-3.46,5.25,5.25,0,0,1,.05-1.81,3.13,3.13,0,0,1,.33-.85,2.9,2.9,0,0,1,.59-.71,7.78,7.78,0,0,1,3.16-1.67,14.78,14.78,0,0,1,3.56-.51,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c0,.07.13.07.15.22l-.07,0a1.53,1.53,0,0,0-.13-.13l-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.52-1.58-6.82-2.2a46.92,46.92,0,0,0-7-1.41,26.51,26.51,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0-.05,1.76,15.18,15.18,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a19,19,0,0,1,.91,3.48,9.83,9.83,0,0,1,.09,1.8A6,6,0,0,1,861,599a4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.12.19-.14.18a9.1,9.1,0,0,1-1.25,1.31,13.54,13.54,0,0,1-3,1.93,22.45,22.45,0,0,1-3.38,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.56.13-14.34,0s-9.56-.41-14.33-.69l-14.32-.88c-9.54-.59-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,68.94,68.94,0,0,1,3.15,6.47,47.18,47.18,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.77,8.77,0,0,1-2.7,2.45,12.45,12.45,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.13-1.78l-.76-.49-.74-.5c-.51-.33-1-.69-1.47-1-1-.72-1.91-1.46-2.8-2.26l-.34-.3-.33-.31-.66-.62-.64-.63c-.21-.21-.41-.43-.62-.65a38,38,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,13.74,13.74,0,0,1,1.19-3.42,14.34,14.34,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.85-4.12-11.82-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22A99.39,99.39,0,0,0,571,489.55c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,29.23,29.23,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19,1.84,28.63.16,4.78.18,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.16,52.16,0,0,1-5.43,4.75,51.34,51.34,0,0,1-6,4A56.5,56.5,0,0,1,497,630.42a69.12,69.12,0,0,1-14.22,2.13A88.41,88.41,0,0,1,468.4,632a108.74,108.74,0,0,1-14.13-2.59l-2.58-.68Zm286.16-22.07a69.08,69.08,0,0,0-7,1.67,48.44,48.44,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4,13.4,13.4,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,12.91,12.91,0,0,0,0,1.76,20.84,20.84,0,0,0,.48,3.52,28.39,28.39,0,0,0,1,3.41,33.45,33.45,0,0,0,3.16,6.37,37.82,37.82,0,0,0,4.39,5.61l.62.64.64.63c.21.21.43.4.65.61l.33.3.33.29c.89.8,1.82,1.53,2.77,2.25.49.34,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76a35.84,35.84,0,0,0,6.6,2.65,24.57,24.57,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.13-.25.25-.53.38-.8q.35-.81.63-1.65a21.47,21.47,0,0,0,1.13-7,29.48,29.48,0,0,0-.89-7,45,45,0,0,0-2.26-6.75,65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5C739.64,605.85,738.84,606,738.05,606.14Z"/><polygon class="cls-3" points="741.02 605.63 740.78 605.33 740.22 605.44 740.45 605.73 741.02 605.63"/></g><g class="cls-1"><path class="cls-137" d="M450.44,632l2.53.65A108.38,108.38,0,0,0,467,635.17a88.25,88.25,0,0,0,14.26.49,68.36,68.36,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,53.51,53.51,0,0,0,5.95-3.91,50.81,50.81,0,0,0,5.34-4.71,56.38,56.38,0,0,0,8.61-11.3,49,49,0,0,0,5-13.26,83.06,83.06,0,0,0,1.91-14.13c.27-4.76.24-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.62-.3-4.77-.51-9.56-.43-14.36,0-2.4.15-4.8.4-7.19a49.23,49.23,0,0,1,1.2-7.12,29.53,29.53,0,0,1,2.55-6.78,19.82,19.82,0,0,1,4.51-5.71,19.31,19.31,0,0,1,3-2.09,20.75,20.75,0,0,1,3.34-1.49,28.31,28.31,0,0,1,7.1-1.42c1.21-.09,2.41-.12,3.62-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.16.72a98.54,98.54,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.07C618.78,511,627,515.9,635.08,521q6,3.86,12,7.86T658.91,537q11.72,8.28,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.72,19.85,5.13,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.57-.34,14.35-.29,9.57.1,19.12.64,28.66,1.24l14.31.9c4.77.29,9.55.55,14.32.71s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.06,23.06,0,0,0,3.34-1.24,12.81,12.81,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.13-.18.12-.18.12-.19a5.3,5.3,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,8.77,8.77,0,0,0-.1-1.77,18.2,18.2,0,0,0-.88-3.45c-.4-1.12-.86-2.22-1.35-3.31-1-2.18-2.07-4.31-3.1-6.47-.51-1.08-1-2.17-1.44-3.28a15.36,15.36,0,0,1-1-3.46,5.25,5.25,0,0,1,0-1.81,3.13,3.13,0,0,1,.33-.85,2.69,2.69,0,0,1,.59-.71,7.78,7.78,0,0,1,3.16-1.67,14.78,14.78,0,0,1,3.56-.51,26.89,26.89,0,0,1,3.59.17,48.1,48.1,0,0,1,7,1.42c2.31.64,4.58,1.39,6.82,2.22s4.46,1.73,6.65,2.7,4.35,2,6.48,3.07c1.06.54,2.12,1.1,3.17,1.68.52.29,1,.58,1.55.89.26.16.51.31.76.48l.37.25.18.14c.05.07.13.07.15.22l-.07,0-.13-.13-.17-.13-.37-.26c-.25-.16-.5-.32-.76-.47-.51-.31-1-.6-1.55-.89-1-.58-2.11-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.65-2.68-4.51-1.58-6.81-2.2a46.92,46.92,0,0,0-7-1.41,26.59,26.59,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.81,7.81,0,0,0-3.11,1.66,2.77,2.77,0,0,0-.56.67,3,3,0,0,0-.31.81,5.19,5.19,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.94,2.2,1.45,3.28,1,2.15,2.12,4.28,3.11,6.46.49,1.09,1,2.2,1.35,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.13.18a9.1,9.1,0,0,1-1.25,1.31,13.38,13.38,0,0,1-3,1.93,22.34,22.34,0,0,1-3.37,1.25,44.45,44.45,0,0,1-7,1.37c-2.38.29-4.77.46-7.16.56-4.78.19-9.57.13-14.34,0s-9.56-.41-14.33-.69l-14.32-.88c-9.54-.59-19.09-1.11-28.64-1.2-4.78,0-9.56,0-14.33.3-3.76.22-7.52.56-11.24,1.13,1.26,1.59,2.49,3.21,3.7,4.84a111.77,111.77,0,0,1,7.8,12.06,68.94,68.94,0,0,1,3.15,6.47,47.18,47.18,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.41,22.41,0,0,1-1.16,7.12c-.19.57-.41,1.13-.65,1.68-.13.28-.25.55-.39.83a6.4,6.4,0,0,1-.48.79,8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.72,16.72,0,0,1-3.59.45,24.24,24.24,0,0,1-7.14-1,35.81,35.81,0,0,1-6.69-2.68c-1.06-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.79-2.26l-.34-.3-.33-.31-.66-.62-.64-.63c-.21-.21-.42-.43-.62-.65a37.49,37.49,0,0,1-4.44-5.67,33.66,33.66,0,0,1-3.19-6.45,27.59,27.59,0,0,1-1-3.47,20.43,20.43,0,0,1-.49-3.58,13.67,13.67,0,0,1,0-1.81,13.44,13.44,0,0,1,.25-1.8,13.74,13.74,0,0,1,1.19-3.42,14.34,14.34,0,0,1,.92-1.57,17.11,17.11,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29.56,29.56,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,70.25,70.25,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.41-11.15-14.47-16.42-6.62-6.88-13.56-13.46-20.71-19.79s-14.51-12.44-22-18.35-15.19-11.59-23-17.09q-5.85-4.12-11.82-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6q-3.3-1.38-6.67-2.59c-2.24-.8-4.5-1.55-6.79-2.22a99.39,99.39,0,0,0-13.94-3.08c-2.36-.33-4.73-.58-7.1-.7l-.89,0-.89,0-1.79,0c-1.18,0-2.37,0-3.55.12a27.51,27.51,0,0,0-6.91,1.38,20.56,20.56,0,0,0-3.21,1.44,17.82,17.82,0,0,0-2.87,2,19.06,19.06,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.39,7.13-.08,4.76.14,9.53.43,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a83.72,83.72,0,0,1-1.93,14.26,49.36,49.36,0,0,1-5.12,13.46,60.24,60.24,0,0,1-4,6l-.55.71-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.42.43-.82.88-1.25,1.3a52.46,52.46,0,0,1-11.46,8.71,56.5,56.5,0,0,1-13.36,5.33,69.11,69.11,0,0,1-14.23,2.13,88.33,88.33,0,0,1-14.36-.53,109.2,109.2,0,0,1-14.14-2.59l-2.6-.69Zm286.18-22.07a69.08,69.08,0,0,0-7,1.67,48.44,48.44,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.77,16.77,0,0,0-4.51,5.4,13,13,0,0,0-1.15,3.33,12.7,12.7,0,0,0-.24,1.75,14.74,14.74,0,0,0,0,1.76,21.93,21.93,0,0,0,.49,3.52,28.39,28.39,0,0,0,1,3.41,33.45,33.45,0,0,0,3.16,6.37A37.82,37.82,0,0,0,720,648.9l.62.64.64.63c.21.21.43.4.65.61l.32.3.34.3c.89.79,1.82,1.52,2.77,2.24.49.35,1,.7,1.46,1l.74.49.76.48c1,.63,2,1.22,3.1,1.76A35.15,35.15,0,0,0,738,660a24.23,24.23,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,12,12,0,0,0,3.26-1.3,8.16,8.16,0,0,0,2.56-2.33,5,5,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a22,22,0,0,0,1.13-7,30,30,0,0,0-.89-7A45,45,0,0,0,753.8,633a65.62,65.62,0,0,0-3.13-6.42,112.35,112.35,0,0,0-7.78-12c-1.26-1.71-2.56-3.39-3.88-5C738.21,609.6,737.41,609.74,736.62,609.89Z"/><polygon class="cls-3" points="739.59 609.38 739.35 609.08 738.78 609.19 739.02 609.48 739.59 609.38"/></g><g class="cls-1"><path class="cls-138" d="M449,635.65c.84.23,1.69.45,2.54.66a110,110,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49A69.15,69.15,0,0,0,494,637.23a56,56,0,0,0,13.19-5.29A53.38,53.38,0,0,0,513.1,628a52,52,0,0,0,5.35-4.71,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,84.06,84.06,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.62-.29-4.77-.51-9.56-.43-14.36,0-2.4.16-4.8.4-7.19a50.67,50.67,0,0,1,1.21-7.12,30,30,0,0,1,2.54-6.78,19.82,19.82,0,0,1,4.51-5.71,19.4,19.4,0,0,1,3-2.09,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.8,0,.9,0,.9.05c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.57,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.07,8.53,4.38,16.75,9.29,24.82,14.43q6,3.85,12,7.86t11.83,8.12q11.73,8.26,23,17.13t22,18.39c7.15,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10,10.88,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.11.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.71s9.55.23,14.33,0c2.38-.1,4.77-.26,7.14-.54a44.76,44.76,0,0,0,7-1.36,23.18,23.18,0,0,0,3.35-1.24,13.23,13.23,0,0,0,3-1.9,9.24,9.24,0,0,0,1.22-1.28l.13-.18.13-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.86-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.52-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,2.59,2.59,0,0,1,.33-.85,2.66,2.66,0,0,1,.58-.71,7.82,7.82,0,0,1,3.17-1.67,14.77,14.77,0,0,1,3.55-.51,26.89,26.89,0,0,1,3.59.17,47.84,47.84,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.52.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a.6.6,0,0,0-.12-.13l-.18-.13-.37-.26-.75-.47c-.52-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.17-1.68-2.13-1.08-4.29-2.09-6.48-3.06s-4.4-1.86-6.64-2.68-4.51-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,15,15,0,0,0-3.53.5,7.88,7.88,0,0,0-3.11,1.66,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5,5,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.49,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.1,1.8,6.31,6.31,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,44.35,44.35,0,0,1-7.05,1.37c-2.37.29-4.76.46-7.15.56-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.78,0-9.55,0-14.32.3-3.77.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.7,4.84A113.4,113.4,0,0,1,749.67,630a71.41,71.41,0,0,1,3.14,6.47,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.68-.12.28-.24.55-.38.83s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.81,16.81,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.12-1.14-3.13-1.78l-.76-.49c-.26-.16-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.34-.3-.33-.31-.65-.62-.64-.63c-.22-.21-.42-.43-.63-.65a36.8,36.8,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.63,27.63,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,15.62,15.62,0,0,1,0-1.81,13.31,13.31,0,0,1,1.44-5.22,12.9,12.9,0,0,1,.92-1.57,13.71,13.71,0,0,1,1.1-1.44,19.81,19.81,0,0,1,2.59-2.51,29.37,29.37,0,0,1,6.16-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66c.74-.14,1.47-.27,2.22-.39-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.72-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.86-4.12-11.83-8.09t-12-7.84c-8.07-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22A99.08,99.08,0,0,0,568.14,497c-2.35-.33-4.72-.58-7.1-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.45,20.45,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,19.09,19.09,0,0,0-4.34,5.48,29.71,29.71,0,0,0-2.47,6.61,50.29,50.29,0,0,0-1.18,7c-.24,2.37-.35,4.74-.39,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.83,28.63.17,4.78.19,9.58-.08,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,61.93,61.93,0,0,1-4,6c-.18.24-.37.47-.56.71l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.4.45-.61.67-.41.43-.82.88-1.25,1.3a52.09,52.09,0,0,1-11.45,8.71,56.57,56.57,0,0,1-13.37,5.33A69.12,69.12,0,0,1,479.91,640a88.45,88.45,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59l-2.61-.69Zm286.18-22.06a68.89,68.89,0,0,0-7,1.67,48,48,0,0,0-6.69,2.49,29.16,29.16,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,11.32,11.32,0,0,0-.23,1.75,12.91,12.91,0,0,0,0,1.76,19.89,19.89,0,0,0,.49,3.52,25.15,25.15,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,37.17,37.17,0,0,0,4.39,5.61c.21.21.4.43.62.64l.63.63c.21.21.44.4.65.61l.33.3.34.29c.88.8,1.82,1.53,2.77,2.25.48.34,1,.7,1.46,1,.24.16.48.33.74.49l.75.48c1,.63,2,1.22,3.1,1.76a35.65,35.65,0,0,0,6.61,2.65,24.5,24.5,0,0,0,7,1,16.45,16.45,0,0,0,3.5-.45,11.7,11.7,0,0,0,3.26-1.3,8.31,8.31,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,30,30,0,0,0-.88-7.05,46.16,46.16,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,110.82,110.82,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C736.79,613.3,736,613.44,735.19,613.59Z"/><polygon class="cls-3" points="738.16 613.08 737.93 612.78 737.36 612.89 737.6 613.18 738.16 613.08"/></g><g class="cls-1"><path class="cls-139" d="M447.51,639.53l2.55.66a108.54,108.54,0,0,0,14.06,2.56,88.37,88.37,0,0,0,14.27.49,68.46,68.46,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,53.51,53.51,0,0,0,5.95-3.91A52.91,52.91,0,0,0,517,627.2a56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,85.11,85.11,0,0,0,1.91-14.13c.26-4.76.24-9.54.08-14.3-.34-9.55-1.26-19.06-1.86-28.61-.29-4.78-.5-9.57-.43-14.37,0-2.4.16-4.8.4-7.19a50.92,50.92,0,0,1,1.21-7.12,30,30,0,0,1,2.54-6.78,19.68,19.68,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,20.65,20.65,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.81,0,.9,0,.9.05c2.39.13,4.78.38,7.16.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.76,3.89,13,6.08,8.52,4.37,16.74,9.28,24.81,14.42,4,2.57,8,5.2,12,7.86s7.92,5.36,11.82,8.12q11.73,8.28,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.64-.92,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.11.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.72s9.56.23,14.33,0c2.39-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.85-2.22-1.34-3.31-1-2.18-2.08-4.31-3.1-6.47-.52-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,0-1.81,2.92,2.92,0,0,1,.91-1.56,8,8,0,0,1,3.17-1.67,14.78,14.78,0,0,1,3.56-.51,26.82,26.82,0,0,1,3.58.17,49.18,49.18,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1,.58,1.56.89.25.16.51.31.76.48l.37.25.18.14c0,.07.13.07.14.22l-.07,0a1,1,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.51-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.16-1.68-2.14-1.08-4.3-2.09-6.49-3s-4.4-1.87-6.64-2.69-4.51-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.73,2.73,0,0,0-.55.67,2.66,2.66,0,0,0-.31.81,5,5,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.44,1.11.93,2.2,1.45,3.28,1,2.15,2.12,4.28,3.1,6.46.5,1.09,1,2.2,1.36,3.33a18.16,18.16,0,0,1,.9,3.48,9,9,0,0,1,.1,1.8,6,6,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.19-.13.19-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.61,13.61,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,45.52,45.52,0,0,1-7.05,1.38c-2.37.28-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114.89,114.89,0,0,1,7.8,12.06,68.85,68.85,0,0,1,3.14,6.47,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.54-.38.82s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49-.75-.5c-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.34-.3-.33-.31c-.21-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.65a37.42,37.42,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,26,26,0,0,1-1-3.47,20.44,20.44,0,0,1-.5-3.58,15.62,15.62,0,0,1,0-1.81A12,12,0,0,1,708,634a14,14,0,0,1,2.11-5,15.22,15.22,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.72-19.79s-14.5-12.44-22-18.35-15.2-11.59-23-17.09Q649.78,541,643.81,537t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.79-2.22a99.52,99.52,0,0,0-14-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.45,20.45,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26,49.71,49.71,0,0,1-5.13,13.46,60.15,60.15,0,0,1-4,6c-.18.24-.37.47-.56.71l-.56.7c-.38.47-.77.93-1.16,1.39l-.6.67c-.2.22-.39.45-.6.67-.42.43-.82.88-1.26,1.3a51,51,0,0,1-5.42,4.75,53.05,53.05,0,0,1-6,4,56.5,56.5,0,0,1-13.36,5.33,69.21,69.21,0,0,1-14.23,2.13,88.49,88.49,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59c-.88-.22-1.75-.45-2.62-.69ZM733.7,617.47c-2.34.45-4.67,1-7,1.67a48,48,0,0,0-6.69,2.49,29.43,29.43,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.69,12.69,0,0,0-.23,1.75,14.89,14.89,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,26.67,26.67,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,36.68,36.68,0,0,0,4.39,5.61c.21.21.41.44.62.64l.63.63c.22.21.44.4.65.61l.33.3.34.3c.88.79,1.82,1.52,2.77,2.24.48.35,1,.7,1.46,1l.74.49.75.48c1,.63,2.05,1.22,3.1,1.76a35.24,35.24,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,30,30,0,0,0-.88-7.05,45,45,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.33,109.33,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C735.3,617.18,734.5,617.32,733.7,617.47Z"/><polygon class="cls-3" points="736.67 616.96 736.44 616.66 735.87 616.77 736.11 617.06 736.67 616.96"/></g><g class="cls-1"><path class="cls-140" d="M446.06,643.28c.85.23,1.71.45,2.57.66a108.54,108.54,0,0,0,14.06,2.56A88.37,88.37,0,0,0,477,647a68.46,68.46,0,0,0,14.09-2.13,55.83,55.83,0,0,0,13.19-5.29,53.38,53.38,0,0,0,5.94-3.91,52,52,0,0,0,5.35-4.71,56,56,0,0,0,8.6-11.3,48.7,48.7,0,0,0,5-13.26,83.92,83.92,0,0,0,1.9-14.13c.27-4.76.25-9.54.08-14.3-.33-9.55-1.25-19.06-1.85-28.61-.29-4.78-.51-9.57-.43-14.37,0-2.4.16-4.8.4-7.19a50.92,50.92,0,0,1,1.21-7.12,30,30,0,0,1,2.54-6.78,19.51,19.51,0,0,1,4.52-5.7,18.27,18.27,0,0,1,3-2.1,20.27,20.27,0,0,1,3.33-1.49,28.39,28.39,0,0,1,7.11-1.42c1.2-.09,2.41-.12,3.61-.12l1.8,0,.9,0,.9,0c2.4.13,4.79.38,7.17.72a99.15,99.15,0,0,1,14,3.12c2.3.67,4.58,1.43,6.83,2.24s4.49,1.68,6.7,2.61c4.42,1.84,8.75,3.89,13,6.08,8.53,4.37,16.75,9.28,24.82,14.42q6.06,3.86,12,7.86t11.83,8.12q11.73,8.28,23,17.13t22,18.39c7.16,6.35,14.1,12.94,20.73,19.85,5.12,5.34,10.06,10.88,14.66,16.69,3.8-.58,7.63-.92,11.47-1.14,4.78-.27,9.56-.34,14.35-.29,9.56.1,19.11.64,28.66,1.24l14.31.9c4.77.29,9.54.55,14.32.72s9.56.23,14.33,0c2.38-.1,4.77-.26,7.14-.54a45.1,45.1,0,0,0,7-1.36,23.51,23.51,0,0,0,3.34-1.24,13.23,13.23,0,0,0,3-1.9,8.68,8.68,0,0,0,1.22-1.28l.14-.18.12-.18.13-.18.11-.19a4.48,4.48,0,0,0,.37-.8,6,6,0,0,0,.33-1.73,9.55,9.55,0,0,0-.09-1.77,19,19,0,0,0-.89-3.45c-.39-1.12-.86-2.22-1.34-3.31-1-2.18-2.08-4.3-3.1-6.47-.52-1.08-1-2.17-1.45-3.28a15.34,15.34,0,0,1-1-3.46,5,5,0,0,1,.05-1.81,2.84,2.84,0,0,1,.91-1.55,7.84,7.84,0,0,1,3.17-1.68,14.78,14.78,0,0,1,3.56-.51,26.82,26.82,0,0,1,3.58.17,49.18,49.18,0,0,1,7,1.42c2.31.64,4.58,1.39,6.83,2.22s4.45,1.73,6.64,2.7,4.35,2,6.48,3.07c1.07.54,2.13,1.1,3.17,1.68.53.29,1,.58,1.56.89l.76.48.37.26.18.13c.05.07.13.07.14.22l-.07,0a1,1,0,0,0-.12-.13l-.18-.13-.36-.26-.76-.47c-.52-.31-1-.6-1.56-.89-1-.58-2.1-1.14-3.17-1.68q-3.19-1.6-6.48-3c-2.18-1-4.4-1.87-6.64-2.69s-4.51-1.58-6.82-2.2a46.54,46.54,0,0,0-7-1.41,26.67,26.67,0,0,0-3.57-.17,14.88,14.88,0,0,0-3.52.5,7.85,7.85,0,0,0-3.12,1.66,2.53,2.53,0,0,0-.55.67,3,3,0,0,0-.32.81,5.19,5.19,0,0,0,0,1.76,15.16,15.16,0,0,0,1,3.42c.43,1.11.93,2.2,1.44,3.28,1,2.15,2.13,4.28,3.11,6.46.5,1.09,1,2.2,1.36,3.33a18.93,18.93,0,0,1,.9,3.48,9.83,9.83,0,0,1,.1,1.8,6.31,6.31,0,0,1-.34,1.78,4.8,4.8,0,0,1-.38.83l-.12.2-.13.18-.13.19-.14.18a9.61,9.61,0,0,1-1.24,1.31,13.84,13.84,0,0,1-3,1.93,22.75,22.75,0,0,1-3.37,1.25,45.52,45.52,0,0,1-7,1.38c-2.37.28-4.76.45-7.15.55-4.78.19-9.57.13-14.35,0s-9.55-.41-14.33-.69l-14.31-.88c-9.54-.59-19.09-1.11-28.65-1.2-4.77,0-9.55,0-14.32.3-3.76.22-7.52.56-11.25,1.13,1.26,1.59,2.5,3.21,3.71,4.84a114,114,0,0,1,7.8,12.07,67.5,67.5,0,0,1,3.14,6.46,46,46,0,0,1,2.28,6.83,30.26,30.26,0,0,1,.89,7.16,22.12,22.12,0,0,1-1.15,7.12c-.2.57-.41,1.13-.66,1.69-.12.27-.24.54-.38.82s-.31.54-.48.79a8.7,8.7,0,0,1-2.71,2.45,12.2,12.2,0,0,1-3.38,1.35,16.2,16.2,0,0,1-3.6.45,24.28,24.28,0,0,1-7.14-1,35.45,35.45,0,0,1-6.68-2.68c-1.07-.55-2.11-1.14-3.13-1.78l-.76-.49c-.26-.15-.5-.33-.75-.5-.5-.33-1-.69-1.47-1-1-.72-1.9-1.46-2.8-2.26l-.34-.3-.33-.31c-.22-.2-.44-.4-.65-.61l-.64-.64c-.22-.21-.42-.43-.63-.65a37.42,37.42,0,0,1-4.43-5.67,33.66,33.66,0,0,1-3.19-6.45,27.63,27.63,0,0,1-1-3.47,21.42,21.42,0,0,1-.49-3.58,15.62,15.62,0,0,1,0-1.81,13.65,13.65,0,0,1,.24-1.8,13.37,13.37,0,0,1,1.2-3.42,12.9,12.9,0,0,1,.92-1.57,13.71,13.71,0,0,1,1.1-1.44,19.28,19.28,0,0,1,2.6-2.51,29,29,0,0,1,6.15-3.74,49.12,49.12,0,0,1,6.74-2.5,69.6,69.6,0,0,1,7-1.66l2.22-.39c-4.55-5.7-9.42-11.15-14.47-16.42-6.62-6.88-13.57-13.46-20.72-19.79s-14.51-12.44-22-18.35-15.2-11.59-23-17.09q-5.87-4.12-11.83-8.09t-12-7.84c-8.06-5.12-16.28-10-24.78-14.36-4.25-2.18-8.57-4.21-13-6-2.2-.92-4.43-1.78-6.67-2.59s-4.51-1.55-6.8-2.22a99.08,99.08,0,0,0-13.94-3.08c-2.35-.33-4.72-.58-7.1-.7l-.89,0-.89,0c-.59,0-1.19,0-1.78,0-1.19,0-2.37,0-3.55.12a27.5,27.5,0,0,0-6.92,1.38,20.45,20.45,0,0,0-3.2,1.44,17.39,17.39,0,0,0-2.87,2,18.89,18.89,0,0,0-4.33,5.48,28.76,28.76,0,0,0-2.47,6.61,48.85,48.85,0,0,0-1.18,7c-.24,2.37-.36,4.74-.4,7.13-.07,4.76.15,9.53.44,14.3.59,9.53,1.51,19.06,1.84,28.63.16,4.78.18,9.58-.09,14.37a85.77,85.77,0,0,1-1.93,14.26A49.71,49.71,0,0,1,524.77,620a61.93,61.93,0,0,1-4,6c-.18.24-.37.47-.56.71l-.56.71-1.16,1.38-.6.67-.6.67c-.42.43-.82.88-1.26,1.3a52.05,52.05,0,0,1-5.42,4.75,53.05,53.05,0,0,1-6,4,56.41,56.41,0,0,1-13.37,5.33A69,69,0,0,1,477,647.63a88.45,88.45,0,0,1-14.37-.53,109.36,109.36,0,0,1-14.13-2.59c-.88-.22-1.76-.46-2.64-.7Zm286.21-22.06c-2.34.45-4.67,1-6.95,1.67a48,48,0,0,0-6.69,2.49,29.6,29.6,0,0,0-6.07,3.7,16.65,16.65,0,0,0-4.51,5.4,13,13,0,0,0-1.16,3.33,12.69,12.69,0,0,0-.23,1.75,13.05,13.05,0,0,0,0,1.77,19.91,19.91,0,0,0,.49,3.51,25.15,25.15,0,0,0,1,3.41,32.87,32.87,0,0,0,3.16,6.37,36.68,36.68,0,0,0,4.39,5.61c.21.21.4.44.62.64l.63.63c.22.21.44.4.65.61l.33.3.34.3c.88.79,1.82,1.52,2.77,2.24.48.35,1,.7,1.46,1l.74.49.75.48c1,.63,2,1.22,3.1,1.76a35.24,35.24,0,0,0,6.61,2.65,24.16,24.16,0,0,0,7,1,16.63,16.63,0,0,0,3.51-.45,11.76,11.76,0,0,0,3.25-1.3,8.09,8.09,0,0,0,2.57-2.33,7.66,7.66,0,0,0,.45-.74c.13-.25.25-.53.37-.8.24-.54.45-1.09.64-1.65a21.73,21.73,0,0,0,1.12-7,30,30,0,0,0-.88-7.05,46.16,46.16,0,0,0-2.27-6.75,65.62,65.62,0,0,0-3.13-6.42,109.33,109.33,0,0,0-7.78-12q-1.89-2.57-3.87-5.05C733.87,620.93,733.07,621.07,732.27,621.22Z"/><polygon class="cls-3" points="735.24 620.71 735.01 620.41 734.44 620.52 734.68 620.81 735.24 620.71"/></g></svg>\n'))));var i=this;n.onload=function(){e.drawImage(n,0,0);var a=new q(t);a.needsUpdate=!0,a.minFilter=s,i.onLoaded(a)}}onLoaded(t){this.geometry=new Mn(32,32,3),this.material=new cn({vertexShader:rc(),fragmentShader:oc(),uniforms:{uTime:{value:0},uTexture:{value:t}},transparent:!0,side:2}),this.mesh=new en(this.geometry,this.material),this.scene.add(this.mesh),this.addEvents()}addEvents(){window.requestAnimationFrame(this.run.bind(this)),window.addEventListener("resize",this.onResize.bind(this),!1)}run(){requestAnimationFrame(this.run.bind(this)),this.render()}render(){this.material.uniforms.uTime.value=this.clock.getElapsedTime(),this.renderer.render(this.scene,this.camera)}onResize(){const t=window.innerWidth,e=window.innerHeight;this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,e)}}).init()})()})();